(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1538122,      28541]
NotebookOptionsPosition[   1537592,      28523]
NotebookOutlinePosition[   1538023,      28540]
CellTagsIndexPosition[   1537980,      28537]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"#", ",", 
     RowBox[{"DynamicUpdating", "->", "True"}], ",", 
     RowBox[{"DynamicEvaluationTimeout", "\[Rule]", "Infinity"}]}], "]"}], 
   "&"}], "@", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pts", ",", "polyGraphics", ",", 
      RowBox[{"polygons", "=", 
       RowBox[{"{", "}"}]}], ",", "type", ",", "info", ",", "v", ",", "p", 
      ",", "f", ",", "e", ",", "v1", ",", "f1", ",", "p1", ",", "e1", ",", 
      "timeGrid1", ",", "faces", ",", "vertices", ",", "vertices1", ",", 
      "faces1", ",", "n", ",", "normals1", ",", "pos", ",", "allNormals", ",",
       "pts0", ",", "planes0", ",", "nodes0", ",", "vertices0", ",", 
      RowBox[{"l0", "=", "1"}], ",", 
      RowBox[{"V100", "=", "0.027880617022505615"}], ",", 
      RowBox[{"L", "=", 
       FractionBox["1", 
        RowBox[{"2", " ", "*", "0.027880617022505615"}]]}], ",", 
      RowBox[{"relativeOn", "=", "False"}], ",", 
      RowBox[{"infty", "=", "False"}], ",", 
      RowBox[{"opacity", "=", "1"}], ",", "boxed", ",", "planeChoice", ",", 
      RowBox[{"n1", "=", "1"}], ",", 
      RowBox[{"n2", "=", "0"}], ",", 
      RowBox[{"n3", "=", "0"}], ",", "cutOn", ",", 
      RowBox[{"drawCutPlane", "=", "False"}], ",", 
      RowBox[{"cutPosition", "=", "0.1"}], ",", 
      RowBox[{"previewNum", "=", "15"}], ",", 
      RowBox[{"Num", "=", "100"}], ",", 
      RowBox[{"tMin", "=", "0.0001"}], ",", 
      RowBox[{"t", "=", "80"}], ",", 
      RowBox[{"\[Alpha]1", "=", "3.2"}], ",", 
      RowBox[{"\[Beta]1", "=", "2.1"}], ",", 
      RowBox[{"\[CapitalDelta]100posz", "=", "0"}], ",", " ", 
      RowBox[{"\[CapitalDelta]100posx", "=", "0"}], ",", " ", 
      RowBox[{"\[CapitalDelta]100negx", "=", "0"}], ",", " ", 
      RowBox[{"\[CapitalDelta]100posy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]100negy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Beta]posz", " ", "=", " ", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Alpha]z", " ", "=", " ", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Alpha]negyposx", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Alpha]negynegx", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Alpha]negxposy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Beta]posy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Beta]negy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Beta]negx", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Beta]negz", " ", "=", " ", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Alpha]posxposy", " ", "=", " ", "0"}], ",", 
      RowBox[{"\[Gamma]1", "=", "4"}], ",", 
      RowBox[{"\[CapitalDelta]\[Beta]posx", "=", "0"}], ",", 
      RowBox[{"mult100", "=", "1"}], ",", 
      RowBox[{"mult\[Alpha]", "=", "1"}], ",", 
      RowBox[{"mult\[Beta]", "=", "1"}], ",", 
      RowBox[{"mult\[Gamma]", "=", "1"}], ",", "ds", ",", "ds1", ",", 
      "tiltAngles", ",", "normals", ",", "tiltedNormals", ",", "calcTilt", 
      ",", "calcSection", ",", "calcCutOff", ",", "calcCutOn", ",", 
      RowBox[{"printOn", "=", "False"}], ",", "exportCurrentState", ",", 
      "exportInitialState", ",", "stateString", ",", "dsCurrent", ",", " ", 
      "faceArea", ",", " ", "volume", ",", " ", 
      RowBox[{"showArea", "=", "False"}], ",", " ", "hideVertices", ",", " ", 
      "maxHeight", ",", "intersectionHeight", ",", " ", "largestlength", ",", 
      "largestwidth", ",", " ", "bottomWidth", ",", "bottomLength", ",", 
      "topWidth", ",", "topLength", ",", " ", 
      RowBox[{"growDown", "=", "False"}], ",", " ", 
      RowBox[{"showVelocity", "=", "False"}], ",", " ", "velocities", ",", 
      "areaAndVelocityString", ",", "showAreaAndVelocities", ",", 
      "polygons2D", ",", "cutZAxis", ",", "cutYAxis", ",", "cutXAxis", ",", 
      " ", 
      RowBox[{"timeStep", "=", "15"}], ",", "timeStepLines", ",", 
      "timeStepLines3D", ",", " ", "timeStepLines2D", ",", "timingTest", ",", 
      RowBox[{"\[CapitalDelta]\[Beta]posxposy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Beta]negyposx", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Beta]negxposy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Beta]negynegx", "=", "0"}], ",", " ", "Llist",
       ",", 
      RowBox[{"velocityA", "=", "2089"}], ",", 
      RowBox[{"velocityB", "=", "1.124"}], ",", 
      RowBox[{"velocityC", "=", "7.239"}], ",", " ", "velocityPlot", ",", " ",
       "ShowVelocityPlot", ",", "textX", ",", "textY", ",", " ", 
      RowBox[{"constantVelocity", "=", "False"}], ",", " ", 
      RowBox[{"constantVelocityValue", "=", "100"}], ",", "projX", ",", 
      "projY", ",", " ", "timePolygon2D", ",", " ", "timePolygon3D", ",", 
      "timePolygonColor", ",", " ", "exportShape", ",", " ", 
      "parameterConfigFileName", ",", "cadFileName", ",", " ", "exportConfig",
       ",", " ", "exportCutFileName", ",", "saveDirectory", ",", 
      "ExportCrystal", ",", " ", "exportCutImage", ",", " ", "cutFactors", 
      ",", " ", "rotatedVertices2D", ",", " ", "rotatedVertices3D", ",", 
      "calcVertices", ",", "downP", ",", "calcFaces", ",", 
      "CalcrotatedVertices2D", ",", "CalcrotatedVertices3D", ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]3z", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]pos1z", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]neg1z", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]pos3xposy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]pos3xnegy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]posxneg3y", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]posxpos3y", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]neg3xposy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]neg3xnegy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]negxneg3y", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]negxpos3y", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]posxnegy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]posxposy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]negxposy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Gamma]negxnegy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]pos1z", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]neg1z", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]5z", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]pos5xposy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]pos5xnegy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]posxneg5y", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]posxpos5y", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]neg5xposy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]neg5xnegy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]negxneg5y", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]negxpos5y", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]posxnegy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]posxposy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]negxposy", "=", "0"}], ",", 
      RowBox[{"\[CapitalDelta]\[Delta]negxnegy", "=", "0"}], ",", 
      RowBox[{"\[Delta]1", "=", "5"}], ",", 
      RowBox[{"\[CapitalDelta]100negz", "=", "0"}], ",", 
      RowBox[{"plateThickness", "=", "0.4"}], ",", 
      RowBox[{"cutLoss", "=", "0.1"}], ",", 
      RowBox[{"beginningCutPosition", "=", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"endCutPosition", "=", "1"}], ",", " ", "verticeTransform1", 
      ",", " ", "verticeTransform2", ",", " ", 
      RowBox[{"transformAxisSystem", "=", "True"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "f00neg1", ",", " ", 
      "f00pos1", ",", " ", "fpos100", ",", " ", "fneg100", ",", "f0pos10", 
      ",", "f0neg10", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "fpos1pos1pos1", ",", " ", "fneg1pos1pos1", ",", "fpos1neg1pos1", ",", 
      " ", "fneg1neg1pos1", ",", " ", "fpos1pos1neg1", ",", " ", 
      "fneg1pos1neg1", ",", " ", "fpos1neg1neg1", ",", " ", "fneg1neg1neg1", 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", " ", "f0pos1pos1", 
      ",", " ", "fpos10pos1", ",", " ", "fpos1pos10", ",", " ", "f0neg1pos1", 
      ",", " ", "fpos10neg1", ",", " ", "fpos1neg10", ",", "f0pos1neg1", ",", 
      "fneg10pos1", ",", "fneg1pos10", ",", "f0neg1neg1", ",", "fneg10neg1", 
      ",", "fneg1neg10", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "fpos1pos1pos3", ",", "fpos1pos3pos1", ",", " ", "fpos3pos1pos1", ",", 
      " ", "fpos1pos1neg3", ",", " ", "fpos1neg3pos1", ",", " ", 
      "fneg3pos1pos1", ",", " ", "fpos1neg1neg3", ",", " ", "fpos1neg3neg1", 
      ",", " ", "fneg1pos1neg3", ",", " ", "fneg1neg3pos1", ",", " ", 
      "fneg3pos1neg1", ",", " ", "fneg3neg1pos1", ",", " ", "fpos1neg1pos3", 
      ",", " ", "fpos1pos3neg1", ",", " ", "fneg1pos1pos3", ",", " ", 
      "fneg1pos3pos1", ",", " ", "fpos3pos1neg1", ",", " ", "fpos3neg1pos1", 
      ",", " ", "fneg1neg1pos3", ",", " ", "fneg1pos3neg1", ",", " ", 
      "fpos3neg1neg1", ",", " ", "fneg1neg1neg3", ",", " ", "fneg1neg3neg1", 
      ",", " ", "fneg3neg1neg1", ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "fpos1pos1pos5", ",", "fpos1pos5pos1", ",", " ", 
      "fpos5pos1pos1", ",", " ", "fpos1pos1neg5", ",", " ", "fpos1neg5pos1", 
      ",", " ", "fneg5pos1pos1", ",", " ", "fpos1neg1neg5", ",", " ", 
      "fpos1neg5neg1", ",", " ", "fneg1pos1neg5", ",", " ", "fneg1neg5pos1", 
      ",", " ", "fneg5pos1neg1", ",", " ", "fneg5neg1pos1", ",", " ", 
      "fpos1neg1pos5", ",", " ", "fpos1pos5neg1", ",", " ", "fneg1pos1pos5", 
      ",", " ", "fneg1pos5pos1", ",", " ", "fpos5pos1neg1", ",", " ", 
      "fpos5neg1pos1", ",", " ", "fneg1neg1pos5", ",", " ", "fneg1pos5neg1", 
      ",", " ", "fpos5neg1neg1", ",", " ", "fneg1neg1neg5", ",", " ", 
      "fneg1neg5neg1", ",", " ", "fneg5neg1neg1", ",", " ", 
      RowBox[{"individualGrowthFactors", "=", "False"}], ",", " ", 
      "factorSelection", ",", " ", "factorList", ",", 
      "exportIndividualParameters", ",", " ", "exportPlateCuts", ",", " ", 
      "plateCutsName", ",", " ", "averageGrowthFactors"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Panel", "[", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<Transform Axis System\>\"", ",", " ", 
                 RowBox[{"Control", "@", 
                  RowBox[{"{", 
                   RowBox[{"transformAxisSystem", ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Draw a box with axes\>\"", ",", 
                 RowBox[{"Control", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"boxed", ",", "True"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Hide vertices\>\"", ",", 
                 RowBox[{"Control", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"hideVertices", ",", "True"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Show Area and Velocities\>\"", ",", 
                 RowBox[{"Control", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"showAreaAndVelocities", ",", " ", "True"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Opacity\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "opacity"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"OpenerView", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Initial shape\>\"", ",", "Bold", ",", "Medium"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Grid", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Reference size \!\(\*SubscriptBox[\(l\), \(0\)]\) \
(mm)\>\"", ",", 
                    RowBox[{"Manipulator", "@@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"l0", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"l0", "=", "#"}], ";", 
                    RowBox[{"L", "=", 
                    FractionBox["l0", 
                    RowBox[{"2", "V100"}]]}]}], ")"}], "&"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "10"}], "}"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"!", "infty"}]}]}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                    "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Initial Height (factor)\>\"", ",", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "=", "#"}], ";", 
                    RowBox[{"ReleaseHold", "[", "calcTilt", "]"}], ";"}], 
                    ")"}], "&"}]}], "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01", ",", "1"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], 
                    "]"}]}], "}"}]}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", "}"}]}]}], "}"}], ",", "True"}], 
                  "]"}], ",", "SpanFromLeft"}], "}"}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Cut settings\>\"", ",", "Bold", ",", "Medium"}],
                  "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Cut at time t\>\"", ",", 
                 RowBox[{"Control", "@", 
                  RowBox[{"{", 
                   RowBox[{"cutOn", ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<cut normal \!\(\*SubscriptBox[\(n\), \(x\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"n1", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n1", "=", 
                    RowBox[{"Round", "@", "#"}]}], ";", 
                    RowBox[{"n", "=", 
                    RowBox[{"Normalize", "@", 
                    RowBox[{"{", 
                    RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}]}], ";", " ", 
                    RowBox[{"normals1", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"allNormals", ",", "n"}], "]"}]}], ";"}], ")"}], 
                    "&"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<cut normal \!\(\*SubscriptBox[\(n\), \(y\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"n2", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n2", "=", 
                    RowBox[{"Round", "@", "#"}]}], ";", 
                    RowBox[{"n", "=", 
                    RowBox[{"Normalize", "@", 
                    RowBox[{"{", 
                    RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}]}], ";", " ", 
                    RowBox[{"normals1", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"allNormals", ",", "n"}], "]"}]}], ";"}], ")"}], 
                    "&"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<cut normal \!\(\*SubscriptBox[\(n\), \(z\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"n3", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n3", "=", 
                    RowBox[{"Round", "@", "#"}]}], ";", 
                    RowBox[{"n", "=", 
                    RowBox[{"Normalize", "@", 
                    RowBox[{"{", 
                    RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}]}], ";", " ", 
                    RowBox[{"normals1", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"allNormals", ",", "n"}], "]"}]}], ";"}], ")"}], 
                    "&"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Cut plane distance from 0\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "cutPosition"}], ",", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["3"], "V100"}], "l0"]}], 
                    RowBox[{"(", 
                    RowBox[{"t", "+", 
                    FractionBox["l0", 
                    RowBox[{"2", "V100"}]]}], ")"}]}], ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SqrtBox["3"], "V100"}], "l0"], 
                    RowBox[{"(", 
                    RowBox[{"t", "+", 
                    FractionBox["l0", 
                    RowBox[{"2", "V100"}]]}], ")"}]}]}], "}"}]}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<Preview quality\>\"", ",", 
                 RowBox[{"Slider", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "previewNum"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "300", ",", "1"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<Number of steps\>\"", ",", 
                 RowBox[{"Slider", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "Num"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "1000", ",", "1"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], 
                   "}"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<tMin for section\>\"", ",", 
                 RowBox[{"Slider", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "tMin"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.0001", ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"Min", "[", 
                    RowBox[{"0.01", ",", 
                    RowBox[{"t", "-", "0.01"}]}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Time Step (hrs)\>\"", ",", 
                 RowBox[{"Slider", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "timeStep"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"t", "/", "100"}], "]"}], ",", 
                    RowBox[{"Dynamic", "[", "t", "]"}], ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"t", "/", "1000"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Growth settings\>\"", ",", "Bold", ",", "Medium"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Calculate Equilibrium Shape\>\"", ",", 
                 RowBox[{"Control", "@", 
                  RowBox[{"{", 
                   RowBox[{"infty", ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Time of growth (hrs)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"t", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"t", "=", "#"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"constantVelocity", ",", 
                    RowBox[{"V100", "=", 
                    RowBox[{"constantVelocityValue", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}]}], ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"V100", "=", 
                    RowBox[{
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{" ", "velocityA"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                    "]"}]}], "}"}]}], "]"}], "/", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                    "]"}]}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"L", "=", 
                    FractionBox["l0", 
                    RowBox[{"2", "V100"}]]}], "]"}]}], ")"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"cutOn", ",", 
                    RowBox[{"tMin", "+", "0.01"}], ",", "0"}], "]"}], ",", 
                    "1000"}], "}"}]}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"AnimationRate", "\[Rule]", "1"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"!", "infty"}]}]}]}], "}"}]}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Allow (\!\(\*OverscriptBox[\(1\), \(_\)]\) \
\!\(\*OverscriptBox[\(1\), \(_\)]\) 0) growth\>\"", ",", 
                 RowBox[{"Control", "@", 
                  RowBox[{"{", 
                   RowBox[{"growDown", ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Constant Velocity\>\"", ",", "Bold", ",", "Small"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Enable Constant Velocity\>\"", ",", 
                 RowBox[{"Control", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"constantVelocity", ",", "False"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Constant Growth Velocity (\[Micro]m/hr)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"constantVelocityValue", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"constantVelocityValue", "=", "#"}], ";", " ", 
                    RowBox[{"V100", " ", "=", 
                    RowBox[{"constantVelocityValue", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}]}], ";", " ", 
                    RowBox[{"L", "=", 
                    FractionBox["l0", 
                    RowBox[{"2", "V100"}]]}], ";"}], " ", "&"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "1000"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",",
                     " ", 
                    RowBox[{"Enabled", "->", 
                    RowBox[{"Dynamic", "@", "constantVelocity"}]}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Time Dependent Velocity:\\n v(t) = \!\(\*FractionBox[\(\
\(A\)\(\\\ \)\), SuperscriptBox[\((C + t)\), \(B\)]]\) (\[Micro]m/hr)\>\"", 
                  ",", "Bold", ",", "Small"}], "]"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Show Velocity Plot\>\"", ",", 
                 RowBox[{"Control", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ShowVelocityPlot", ",", " ", "False"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Velocity A Coefficient\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"velocityA", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"velocityA", "=", "#"}], ";", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"V100", "=", 
                    RowBox[{
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{" ", "velocityA"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                    "]"}]}], "}"}]}], "]"}], "/", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"L", "=", 
                    FractionBox["l0", 
                    RowBox[{"2", "V100"}]]}], "]"}]}], ")"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "5000"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"Enabled", "->", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"!", "constantVelocity"}]}]}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Velocity B Coefficient\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"velocityB", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"velocityB", "=", "#"}], ";", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"V100", "=", 
                    RowBox[{
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{" ", "velocityA"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                    "]"}]}], "}"}]}], "]"}], "/", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"L", "=", 
                    FractionBox["l0", 
                    RowBox[{"2", "V100"}]]}], "]"}]}], ")"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "10"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"Enabled", "->", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"!", "constantVelocity"}]}]}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Velocity C Coefficient\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"velocityC", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"velocityC", "=", "#"}], ";", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"V100", "=", 
                    RowBox[{
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{" ", "velocityA"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                    "]"}]}], "}"}]}], "]"}], "/", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"L", "=", 
                    FractionBox["l0", 
                    RowBox[{"2", "V100"}]]}], "]"}]}], ")"}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.0001", ",", "5000"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"Enabled", "->", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"!", "constantVelocity"}]}]}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"OpenerView", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Individual Growth Parameters\>\"", ",", "Bold", ",", 
                    "Medium"}], "]"}], ",", " ", "\[IndentingNewLine]", 
                    RowBox[{"Grid", "@", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<Enable Individual Growth Factors\>\"", ",", 
                    RowBox[{"Control", "@", 
                    RowBox[{"{", 
                    RowBox[{"individualGrowthFactors", ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}],
                     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Selected Parameter\>\"", ",", 
                    RowBox[{"Control", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "factorSelection", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((00 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(f\), \((00 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((001)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((100)\)]\)\>\"", ",", 
                    " ", "\"\<\!\(\*SubscriptBox[\(f\), \
\((\*OverscriptBox[\(1\), \(_\)] 00)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((010)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0 \
\*OverscriptBox[\(1\), \(_\)] 0)\)]\)\>\"", ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1\\\ 1)\)]\)\>\"", 
                    ",", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\\ 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1 \*OverscriptBox[\
\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"",
                     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ 1\\\ 1)\)]\)\>\"", 
                    ",", "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 0\\\ \
1)\)]\)\>\"", ",", "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1\\\ 0)\)]\)\>\"", 
                    ",", "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 0 \*OverscriptBox[\
\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 0)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ 1 \*OverscriptBox[\
\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\\ 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\\ 0)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\\ \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\\ 0)\)]\)\>\"", ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((113)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((131)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((311)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((11 \
\*OverscriptBox[\(3\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(3\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 3)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((13 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((31 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((3 \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((3 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)\>\"",
                     ",", "\"\<\!\(\*SubscriptBox[\(f\), \
\((\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"",
                     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((115)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((151)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((511)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((11 \
\*OverscriptBox[\(5\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(5\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 5)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((15 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((51 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((51 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((5 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)\>\"",
                     ",", "\"\<\!\(\*SubscriptBox[\(f\), \
\((\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \
\(_\)])\)]\)\>\""}], "}"}], ",", 
                    RowBox[{
                    "Enabled", "\[Rule]", "individualGrowthFactors"}]}], 
                    "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Parameter Value\>\"", ",", "\[IndentingNewLine]", 
                    RowBox[{"Manipulator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{"factorList", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(f\), \((00 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((001)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((100)\)]\)\>\"", ",", 
                    " ", "\"\<\!\(\*SubscriptBox[\(f\), \
\((\*OverscriptBox[\(1\), \(_\)] 00)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((010)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0 \
\*OverscriptBox[\(1\), \(_\)] 0)\)]\)\>\"", ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1\\\ 1)\)]\)\>\"", 
                    ",", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\\ 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1 \*OverscriptBox[\
\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"",
                     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ 1\\\ 1)\)]\)\>\"", 
                    ",", "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 0\\\ \
1)\)]\)\>\"", ",", "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1\\\ 0)\)]\)\>\"", 
                    ",", "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 0 \*OverscriptBox[\
\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 0)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ 1 \*OverscriptBox[\
\(1\), \(_\)])\)]\)\>\"", ",", 
                    
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\\ 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\\ 0)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\\ \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\\ 0)\)]\)\>\"", ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((113)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((131)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((311)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((11 \
\*OverscriptBox[\(3\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(3\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 3)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((13 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((31 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((3 \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((3 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)\>\"",
                     ",", "\"\<\!\(\*SubscriptBox[\(f\), \
\((\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"",
                     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((115)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((151)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((511)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((11 \
\*OverscriptBox[\(5\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(5\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)\>\"", ",", 
                    
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 5)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((15 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((51 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((51 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((5 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)\>\"",
                     ",", "\"\<\!\(\*SubscriptBox[\(f\), \
\((\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \
\(_\)])\)]\)\>\""}], "}"}], ",", "factorSelection"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"factorList", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(f\), \((00 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((001)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((100)\)]\)\>\"", ",", 
                    " ", "\"\<\!\(\*SubscriptBox[\(f\), \
\((\*OverscriptBox[\(1\), \(_\)] 00)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((010)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0 \
\*OverscriptBox[\(1\), \(_\)] 0)\)]\)\>\"", ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1\\\ 1)\)]\)\>\"", 
                    ",", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\\ 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1 \*OverscriptBox[\
\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"",
                     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ 1\\\ 1)\)]\)\>\"", 
                    ",", "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 0\\\ \
1)\)]\)\>\"", ",", "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1\\\ 0)\)]\)\>\"", 
                    ",", "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 0 \*OverscriptBox[\
\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 0)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ 1 \*OverscriptBox[\
\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\\ 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\\ 0)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\\ \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\\ 0)\)]\)\>\"", ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((113)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((131)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((311)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((11 \
\*OverscriptBox[\(3\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(3\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 3)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((13 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((31 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((3 \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((3 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)\>\"",
                     ",", "\"\<\!\(\*SubscriptBox[\(f\), \
\((\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"",
                     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((115)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((151)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((511)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((11 \
\*OverscriptBox[\(5\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(5\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)\>\"", ",", 
                    
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((1 \
\*OverscriptBox[\(1\), \(_\)] 5)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((15 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((51 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((51 \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((5 \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)\>\"",
                     ",", "\"\<\!\(\*SubscriptBox[\(f\), \
\((\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \
\(_\)])\)]\)\>\""}], "}"}], ",", "factorSelection"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "=", 
                    "#"}], ";", " ", 
                    RowBox[{"ReleaseHold", "[", "calcCutOff", "]"}]}], ")"}], 
                    "&"}]}], "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "4"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
                    " ", 
                    RowBox[{"Enabled", "->", 
                    RowBox[{"Dynamic", "@", "individualGrowthFactors"}]}]}], 
                    "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    "\"\<Export Individual Growth Factor Configuration\>\"", 
                    ",", " ", 
                    RowBox[{
                    "ReleaseHold", "[", "exportIndividualParameters", "]"}]}],
                     "]"}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    "\"\<Upload Individual Growth Factor Configuration\>\"", 
                    ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"factorList", "=", 
                    RowBox[{"Uncompress", "[", 
                    RowBox[{"Import", "[", 
                    RowBox[{"SystemDialogInput", "[", 
                    RowBox[{"\"\<FileOpen\>\"", ",", "\"\<.txt\>\""}], "]"}], 
                    "]"}], "]"}]}], " ", ";", " ", 
                    RowBox[{"ReleaseHold", "[", "calcCutOff", "]"}]}], ")"}], 
                    ",", 
                    RowBox[{"Method", "->", "\"\<Queued\>\""}]}], "]"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}]}], 
                   "\[IndentingNewLine]", "}"}], "]"}], ",", " ", 
                 "SpanFromLeft"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<General parameters\>\"", ",", "Bold", ",", "Small"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<\[Alpha]\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[Alpha]1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "10"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<\[Beta]\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[Beta]1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "10"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<\[Gamma]\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[Gamma]1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "10"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<\[Delta]\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[Delta]1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "10"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<{1 0 0} parameters\>\"", ",", "Bold", ",", "Small"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \(+z\)]\)\>\"", 
                 ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]100posz"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \(-z\)]\)\>\"", 
                 ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]100negz"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} + x\)]\)\
\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", " ", "\[CapitalDelta]100posx"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} + y\)]\)\
\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", " ", "\[CapitalDelta]100posy"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - x\)]\)\
\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", " ", "\[CapitalDelta]100negx"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - y\)]\)\
\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", " ", "\[CapitalDelta]100negy"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<{1 1 1} parameters\>\"", ",", "Bold", ",", "Small"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Alpha]z"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\((\(+x\), \(+y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Alpha]posxposy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\((\(+x\), \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Alpha]negyposx"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\((\(+\(-x\)\), \(+y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Alpha]negxposy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\((\(-x\), \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Alpha]negynegx"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<{1 1 0} parameters\>\"", ",", "Bold", ",", "Small"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+z\)]\)\
\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Beta]posz"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\)\
\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Beta]negz"}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \
\((\(+x\), \(+y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Beta]posxposy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \
\((\(+x\), \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Beta]negyposx"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \
\((\(-x\), \(+y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Beta]negxposy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \
\((\(-x\), \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Beta]negynegx"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+x\)]\)\
\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Beta]posx"}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+y\)]\)\
\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Beta]posy"}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\)\
\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Beta]negx"}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\)\
\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Beta]negy"}], 
                    " ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<{1 1 3} parameters\>\"", ",", "Bold", ",", "Small"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Gamma]3z"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Gamma]pos1z"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\[CapitalDelta]\[Gamma]\!\(\*SubscriptBox[\(-\), \(1  \
z\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Gamma]neg1z"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\((\(+x\), \(+y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]posxposy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\((\(+x\), \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]posxnegy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\((\(-x\), \(+y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]negxposy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\((\(-x\), \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]negxnegy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\(\((\(+3\) x, \(+y\))\)\(,\)\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]pos3xposy"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\((\(+3\) x, \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]pos3xnegy"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\((\(+x\), \(-3\) y)\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]posxneg3y"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\((\(+x\), \(+3\) y)\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]posxpos3y"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\((\(-3\) x, \(+y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]neg3xposy"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\((\(-3\) x, \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]neg3xnegy"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\((\(-x\), \(-3\) y)\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]negxneg3y"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \
\((\(-x\), \(+3\) y)\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Gamma]negxpos3y"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<{1 1 5} parameters\>\"", ",", "Bold", ",", "Small"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Delta]5z"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Delta]pos1z"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\[CapitalDelta]\[Delta]\!\(\*SubscriptBox[\(-\), \(1  \
z\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Dynamic", "@", "\[CapitalDelta]\[Delta]neg1z"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\((\(+x\), \(+y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]posxposy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\((\(+x\), \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]posxnegy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\((\(-x\), \(+y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]negxposy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\((\(-x\), \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]negxnegy"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\(\((\(+5\) x, \(+y\))\)\(,\)\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]pos5xposy"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\((\(+5\) x, \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]pos5xnegy"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\((\(+x\), \(-5\) y)\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]posxneg5y"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\((\(+x\), \(+5\) y)\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]posxpos5y"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\((\(-5\) x, \(+y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]neg5xposy"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\((\(-5\) x, \(-y\))\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]neg5xnegy"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\((\(-x\), \(-5\) y)\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]negxneg5y"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \
\((\(-x\), \(+5\) y)\)]\)\>\"", ",", 
                 RowBox[{"Manipulator", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Dynamic", "@", "\[CapitalDelta]\[Delta]negxpos5y"}], " ",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.9"}], ",", "0.9"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Export Options\>\"", ",", "Bold", ",", "Medium"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Choose Save Directory\>\"", ",", " ", 
                  RowBox[{"saveDirectory", " ", "=", " ", 
                   RowBox[{
                   "SystemDialogInput", "[", "\"\<Directory\>\"", "]"}]}], 
                  ",", " ", 
                  RowBox[{"Method", "->", "\"\<Queued\>\""}]}], "]"}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Export Crystal Shape\>\"", ",", "Bold", ",", "Small"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<CAD File Name\>\"", ",", 
                 RowBox[{"InputField", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "cadFileName", "]"}], ",", 
                   "String"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Export Shape\>\"", ",", " ", 
                  RowBox[{"ReleaseHold", "[", "exportShape", "]"}]}], "]"}], 
                "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Cut\>\"", ",", "Bold", ",", "Small"}], "]"}], 
                "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Cut Image File Name\>\"", ",", 
                 RowBox[{"InputField", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "exportCutFileName", "]"}], ",", 
                   "String"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Export Cut Image\>\"", ",", " ", 
                  RowBox[{"ReleaseHold", "[", "exportCutImage", "]"}]}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Plate Cuts\>\"", ",", "Bold", ",", "Small"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Plate Cuts File Name\>\"", ",", 
                 RowBox[{"InputField", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "plateCutsName", "]"}], ",", 
                   "String"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Export Plate Cuts Image\>\"", ",", " ", 
                  RowBox[{"ReleaseHold", "[", "exportPlateCuts", "]"}]}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Parameter Settings\>\"", ",", "Bold", ",", "Small"}], 
                 "]"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Parameter Config File Name\>\"", ",", 
                 RowBox[{"InputField", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "parameterConfigFileName", "]"}], 
                   ",", "String"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Export Parameter Configuration\>\"", ",", " ", 
                  RowBox[{"ReleaseHold", "[", "exportConfig", "]"}]}], "]"}], 
                "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Upload Config File\>\"", ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "l0", ",", "V100", ",", "relativeOn", ",", "infty", ",", 
                    "opacity", ",", "boxed", ",", "planeChoice", ",", 
                    "normals", ",", "n", ",", "cutOn", ",", "drawCutPlane", 
                    ",", "cutPosition", ",", "previewNum", ",", "Num", ",", 
                    "tMin", ",", "t", ",", "\[Alpha]1", ",", "\[Beta]1", ",", 
                    "\[Gamma]1", ",", "\[CapitalDelta]100posz", ",", " ", 
                    "\[CapitalDelta]100posx", ",", " ", 
                    "\[CapitalDelta]100posy", ",", "\[CapitalDelta]\[Alpha]z",
                     ",", "\[CapitalDelta]\[Beta]posz", ",", 
                    "\[CapitalDelta]\[Beta]negz", ",", 
                    "\[CapitalDelta]\[Beta]posy", ",", 
                    "\[CapitalDelta]\[Alpha]posxposy", ",", 
                    "\[CapitalDelta]\[Alpha]negyposx", ",", " ", "mult100", 
                    ",", "mult\[Alpha]", ",", "mult\[Beta]", ",", 
                    "mult\[Gamma]", ",", "ds", ",", "ds1", ",", "tiltAngles", 
                    ",", "growDown", ",", "\[CapitalDelta]\[Beta]posx", ",", 
                    " ", "showVelocity", ",", "\[CapitalDelta]100negx", ",", 
                    "\[CapitalDelta]100negy", ",", 
                    "\[CapitalDelta]\[Alpha]negxposy", ",", 
                    "\[CapitalDelta]\[Alpha]negynegx", ",", 
                    "\[CapitalDelta]\[Beta]negx", ",", 
                    "\[CapitalDelta]\[Beta]negy", ",", "cutZAxis", ",", 
                    "cutYAxis", ",", "cutXAxis", ",", "timeStep", ",", 
                    "\[CapitalDelta]\[Beta]posxposy", ",", 
                    "\[CapitalDelta]\[Beta]negyposx", ",", 
                    "\[CapitalDelta]\[Beta]negxposy", ",", 
                    "\[CapitalDelta]\[Beta]negynegx", ",", "velocityA", ",", 
                    "velocityB", ",", "velocityC", ",", "constantVelocity", 
                    ",", "constantVelocityValue", ",", "t", ",", 
                    "\[CapitalDelta]\[Gamma]3z", ",", 
                    "\[CapitalDelta]\[Gamma]pos1z", ",", 
                    "\[CapitalDelta]\[Gamma]neg1z", ",", 
                    "\[CapitalDelta]\[Gamma]pos3xposy", " ", ",", 
                    "\[CapitalDelta]\[Gamma]pos3xnegy", " ", ",", 
                    "\[CapitalDelta]\[Gamma]posxneg3y", " ", ",", 
                    "\[CapitalDelta]\[Gamma]posxpos3y", " ", ",", 
                    "\[CapitalDelta]\[Gamma]neg3xposy", " ", ",", 
                    "\[CapitalDelta]\[Gamma]neg3xnegy", " ", ",", 
                    "\[CapitalDelta]\[Gamma]negxneg3y", " ", ",", 
                    "\[CapitalDelta]\[Gamma]negxpos3y", " ", ",", 
                    "\[CapitalDelta]\[Gamma]posxnegy", ",", 
                    "\[CapitalDelta]\[Gamma]posxposy", ",", 
                    "\[CapitalDelta]\[Gamma]negxposy", ",", 
                    "\[CapitalDelta]\[Gamma]negxnegy", ",", "\[Delta]1", ",", 
                    "\[CapitalDelta]\[Delta]5z", ",", 
                    "\[CapitalDelta]\[Delta]pos1z", ",", 
                    "\[CapitalDelta]\[Delta]neg1z", ",", 
                    "\[CapitalDelta]\[Delta]pos5xposy", " ", ",", 
                    "\[CapitalDelta]\[Delta]pos5xnegy", " ", ",", 
                    "\[CapitalDelta]\[Delta]posxneg5y", " ", ",", 
                    "\[CapitalDelta]\[Delta]posxpos5y", " ", ",", 
                    "\[CapitalDelta]\[Delta]neg5xposy", " ", ",", 
                    "\[CapitalDelta]\[Delta]neg5xnegy", " ", ",", 
                    "\[CapitalDelta]\[Delta]negxneg5y", " ", ",", 
                    "\[CapitalDelta]\[Delta]negxpos5y", " ", ",", 
                    "\[CapitalDelta]\[Delta]posxnegy", ",", 
                    "\[CapitalDelta]\[Delta]posxposy", ",", 
                    "\[CapitalDelta]\[Delta]negxposy", ",", 
                    "\[CapitalDelta]\[Delta]negxnegy", ",", 
                    "\[CapitalDelta]100negz", ",", "plateThickness", ",", 
                    "cutLoss", ",", "beginningCutPosition", ",", 
                    "endCutPosition"}], "}"}], "=", 
                   RowBox[{"Uncompress", "[", 
                    RowBox[{"Import", "[", 
                    RowBox[{"SystemDialogInput", "[", 
                    RowBox[{"\"\<FileOpen\>\"", ",", "\"\<.txt\>\""}], "]"}], 
                    "]"}], "]"}]}], " ", ",", 
                  RowBox[{"Method", "->", "\"\<Queued\>\""}]}], "]"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Print Parameter Configuration\>\"", ",", 
                 RowBox[{"Control", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"printOn", ",", "False"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<Insert Saved Parameter Configugration\>\"", ",", 
                 RowBox[{"InputField", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "stateString", "]"}], ",", 
                   "String"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Apply Settings\>\"", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "l0", ",", "V100", ",", "relativeOn", ",", "infty", ",", 
                    "opacity", ",", "boxed", ",", "planeChoice", ",", 
                    "normals", ",", "n", ",", "cutOn", ",", "drawCutPlane", 
                    ",", "cutPosition", ",", "previewNum", ",", "Num", ",", 
                    "tMin", ",", "t", ",", "\[Alpha]1", ",", "\[Beta]1", ",", 
                    "\[Gamma]1", ",", "\[CapitalDelta]100posz", ",", " ", 
                    "\[CapitalDelta]100posx", ",", " ", 
                    "\[CapitalDelta]100posy", ",", "\[CapitalDelta]\[Alpha]z",
                     ",", "\[CapitalDelta]\[Beta]posz", ",", 
                    "\[CapitalDelta]\[Beta]negz", ",", 
                    "\[CapitalDelta]\[Beta]posy", ",", 
                    "\[CapitalDelta]\[Alpha]posxposy", ",", 
                    "\[CapitalDelta]\[Alpha]negyposx", ",", " ", "mult100", 
                    ",", "mult\[Alpha]", ",", "mult\[Beta]", ",", 
                    "mult\[Gamma]", ",", "ds", ",", "ds1", ",", "tiltAngles", 
                    ",", "growDown", ",", "\[CapitalDelta]\[Beta]posx", ",", 
                    " ", "showVelocity", ",", "\[CapitalDelta]100negx", ",", 
                    "\[CapitalDelta]100negy", ",", 
                    "\[CapitalDelta]\[Alpha]negxposy", ",", 
                    "\[CapitalDelta]\[Alpha]negynegx", ",", 
                    "\[CapitalDelta]\[Beta]negx", ",", 
                    "\[CapitalDelta]\[Beta]negy", ",", "cutZAxis", ",", 
                    "cutYAxis", ",", "cutXAxis", ",", "timeStep", ",", 
                    "\[CapitalDelta]\[Beta]posxposy", ",", 
                    "\[CapitalDelta]\[Beta]negyposx", ",", 
                    "\[CapitalDelta]\[Beta]negxposy", ",", 
                    "\[CapitalDelta]\[Beta]negynegx", ",", "velocityA", ",", 
                    "velocityB", ",", "velocityC", ",", "constantVelocity", 
                    ",", "constantVelocityValue", ",", "t", ",", 
                    "\[CapitalDelta]\[Gamma]3z", ",", 
                    "\[CapitalDelta]\[Gamma]pos1z", ",", 
                    "\[CapitalDelta]\[Gamma]neg1z", ",", 
                    "\[CapitalDelta]\[Gamma]pos3xposy", " ", ",", 
                    "\[CapitalDelta]\[Gamma]pos3xnegy", " ", ",", 
                    "\[CapitalDelta]\[Gamma]posxneg3y", " ", ",", 
                    "\[CapitalDelta]\[Gamma]posxpos3y", " ", ",", 
                    "\[CapitalDelta]\[Gamma]neg3xposy", " ", ",", 
                    "\[CapitalDelta]\[Gamma]neg3xnegy", " ", ",", 
                    "\[CapitalDelta]\[Gamma]negxneg3y", " ", ",", 
                    "\[CapitalDelta]\[Gamma]negxpos3y", " ", ",", 
                    "\[CapitalDelta]\[Gamma]posxnegy", ",", 
                    "\[CapitalDelta]\[Gamma]posxposy", ",", 
                    "\[CapitalDelta]\[Gamma]negxposy", ",", 
                    "\[CapitalDelta]\[Gamma]negxnegy", ",", "\[Delta]1", ",", 
                    "\[CapitalDelta]\[Delta]5z", ",", 
                    "\[CapitalDelta]\[Delta]pos1z", ",", 
                    "\[CapitalDelta]\[Delta]neg1z", ",", 
                    "\[CapitalDelta]\[Delta]pos5xposy", " ", ",", 
                    "\[CapitalDelta]\[Delta]pos5xnegy", " ", ",", 
                    "\[CapitalDelta]\[Delta]posxneg5y", " ", ",", 
                    "\[CapitalDelta]\[Delta]posxpos5y", " ", ",", 
                    "\[CapitalDelta]\[Delta]neg5xposy", " ", ",", 
                    "\[CapitalDelta]\[Delta]neg5xnegy", " ", ",", 
                    "\[CapitalDelta]\[Delta]negxneg5y", " ", ",", 
                    "\[CapitalDelta]\[Delta]negxpos5y", " ", ",", 
                    "\[CapitalDelta]\[Delta]posxnegy", ",", 
                    "\[CapitalDelta]\[Delta]posxposy", ",", 
                    "\[CapitalDelta]\[Delta]negxposy", ",", 
                    "\[CapitalDelta]\[Delta]negxnegy", ",", 
                    "\[CapitalDelta]100negz", ",", "plateThickness", ",", 
                    "cutLoss", ",", "beginningCutPosition", ",", 
                    "endCutPosition"}], "}"}], "=", 
                    RowBox[{"Uncompress", "[", "stateString", "]"}]}], ";", 
                   RowBox[{"ReleaseHold", "[", "calcTilt", "]"}]}]}], "]"}], 
                "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"Right", ",", "Left"}], "}"}], "}"}]}]}], "]"}], 
           "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", "cutOn"}], " ", ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"ReleaseHold", "[", "calcCutOff", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"polygons", "=", 
                 RowBox[{"{", "}"}]}], ";"}], "\n", " ", 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"infty", "=", "False"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"ReleaseHold", "[", "calcCutOn", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"dsCurrent", "=", 
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Norm", "[", "#", "]"}], " ", 
                    RowBox[{"V100", "/", "l0"}], " ", 
                    RowBox[{"param1", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"d", "[", "#", "]"}], ",", "infty", ",", 
                    "\[Alpha]1", ",", "\[Beta]1", ",", "\[Gamma]1", ",", 
                    "mult100", ",", "mult\[Alpha]", ",", "mult\[Beta]", ",", 
                    "mult\[Gamma]", ",", "L", ",", "t"}], "]"}]}], ")"}], 
                  "&"}], "/@", 
                 RowBox[{"Rest", "[", "normals", "]"}]}], ",", "0"}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"exportCurrentState", "=", 
              RowBox[{"Compress", "[", 
               RowBox[{"{", 
                RowBox[{
                "l0", ",", "V100", ",", "relativeOn", ",", "infty", ",", 
                 "opacity", ",", "boxed", ",", "planeChoice", ",", "normals", 
                 ",", "n", ",", "cutOn", ",", "drawCutPlane", ",", 
                 "cutPosition", ",", "previewNum", ",", "Num", ",", "tMin", 
                 ",", "t", ",", "\[Alpha]1", ",", "\[Beta]1", ",", 
                 "\[Gamma]1", ",", "\[CapitalDelta]100posz", ",", " ", 
                 "\[CapitalDelta]100posx", ",", " ", "\[CapitalDelta]100posy",
                  ",", "\[CapitalDelta]\[Alpha]z", ",", 
                 "\[CapitalDelta]\[Beta]posz", ",", 
                 "\[CapitalDelta]\[Beta]negz", ",", 
                 "\[CapitalDelta]\[Beta]posy", ",", 
                 "\[CapitalDelta]\[Alpha]posxposy", ",", 
                 "\[CapitalDelta]\[Alpha]negyposx", ",", " ", "mult100", ",", 
                 "mult\[Alpha]", ",", "mult\[Beta]", ",", "mult\[Gamma]", ",",
                  "ds", ",", "ds1", ",", "tiltAngles", ",", "growDown", ",", 
                 "\[CapitalDelta]\[Beta]posx", ",", " ", "showVelocity", ",", 
                 "\[CapitalDelta]100negx", ",", "\[CapitalDelta]100negy", ",",
                  "\[CapitalDelta]\[Alpha]negxposy", ",", 
                 "\[CapitalDelta]\[Alpha]negynegx", ",", 
                 "\[CapitalDelta]\[Beta]negx", ",", 
                 "\[CapitalDelta]\[Beta]negy", ",", "cutZAxis", ",", 
                 "cutYAxis", ",", "cutXAxis", ",", "timeStep", ",", 
                 "\[CapitalDelta]\[Beta]posxposy", ",", 
                 "\[CapitalDelta]\[Beta]negyposx", ",", 
                 "\[CapitalDelta]\[Beta]negxposy", ",", 
                 "\[CapitalDelta]\[Beta]negynegx", ",", "velocityA", ",", 
                 "velocityB", ",", "velocityC", ",", "constantVelocity", ",", 
                 "constantVelocityValue", ",", "t", ",", 
                 "\[CapitalDelta]\[Gamma]3z", ",", 
                 "\[CapitalDelta]\[Gamma]pos1z", ",", 
                 "\[CapitalDelta]\[Gamma]neg1z", ",", 
                 "\[CapitalDelta]\[Gamma]pos3xposy", " ", ",", 
                 "\[CapitalDelta]\[Gamma]pos3xnegy", " ", ",", 
                 "\[CapitalDelta]\[Gamma]posxneg3y", " ", ",", 
                 "\[CapitalDelta]\[Gamma]posxpos3y", " ", ",", 
                 "\[CapitalDelta]\[Gamma]neg3xposy", " ", ",", 
                 "\[CapitalDelta]\[Gamma]neg3xnegy", " ", ",", 
                 "\[CapitalDelta]\[Gamma]negxneg3y", " ", ",", 
                 "\[CapitalDelta]\[Gamma]negxpos3y", " ", ",", 
                 "\[CapitalDelta]\[Gamma]posxnegy", ",", 
                 "\[CapitalDelta]\[Gamma]posxposy", ",", 
                 "\[CapitalDelta]\[Gamma]negxposy", ",", 
                 "\[CapitalDelta]\[Gamma]negxnegy", ",", "\[Delta]1", ",", 
                 "\[CapitalDelta]\[Delta]5z", ",", 
                 "\[CapitalDelta]\[Delta]pos1z", ",", 
                 "\[CapitalDelta]\[Delta]neg1z", ",", 
                 "\[CapitalDelta]\[Delta]pos5xposy", " ", ",", 
                 "\[CapitalDelta]\[Delta]pos5xnegy", " ", ",", 
                 "\[CapitalDelta]\[Delta]posxneg5y", " ", ",", 
                 "\[CapitalDelta]\[Delta]posxpos5y", " ", ",", 
                 "\[CapitalDelta]\[Delta]neg5xposy", " ", ",", 
                 "\[CapitalDelta]\[Delta]neg5xnegy", " ", ",", 
                 "\[CapitalDelta]\[Delta]negxneg5y", " ", ",", 
                 "\[CapitalDelta]\[Delta]negxpos5y", " ", ",", 
                 "\[CapitalDelta]\[Delta]posxnegy", ",", 
                 "\[CapitalDelta]\[Delta]posxposy", ",", 
                 "\[CapitalDelta]\[Delta]negxposy", ",", 
                 "\[CapitalDelta]\[Delta]negxnegy", ",", 
                 "\[CapitalDelta]100negz", ",", "plateThickness", ",", 
                 "cutLoss", ",", "beginningCutPosition", ",", 
                 "endCutPosition"}], "}"}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"exportInitialState", "=", 
              RowBox[{"Compress", "[", 
               RowBox[{"{", 
                RowBox[{
                "l0", ",", "boxed", ",", "ds", ",", " ", "tiltAngles", ",", 
                 "cutOn", ",", "drawCutPlane", ",", "n", ",", "cutPosition", 
                 ",", "Num", ",", "tMin", ",", "infty", ",", "t", ",", "V100",
                  ",", "\[Alpha]1", ",", "\[Beta]1", ",", "\[Gamma]1", ",", 
                 "mult100", ",", "mult\[Alpha]", ",", "mult\[Beta]", ",", 
                 "mult\[Gamma]"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]",
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"Grid", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Dynamic", "@", 
                   RowBox[{"Show", "[", 
                    RowBox[{"polyGraphics", ",", 
                    RowBox[{"Graphics3D", "@", "polygons"}], ",", 
                    RowBox[{"Graphics3D", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
                    "timeStepLines3D"}], "}"}], "]"}], ",", 
                    RowBox[{"Graphics3D", "[", "timePolygon3D", "]"}], ",", 
                    RowBox[{"Boxed", "\[Rule]", 
                    RowBox[{"Dynamic", "@", "boxed"}]}], ",", 
                    RowBox[{"Axes", "\[Rule]", 
                    RowBox[{"Dynamic", "@", "boxed"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
                    RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], 
                    "]"}]}], ",", "\"\<\>\"", ",", "\"\<\>\""}], " ", "}"}], 
                ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Dynamic", "@", 
                  RowBox[{"If", "[", 
                   RowBox[{"cutOn", ",", 
                    RowBox[{"Show", "[", 
                    RowBox[{
                    RowBox[{"Graphics", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"polygons2D", ",", "timePolygon2D", ",", 
                    RowBox[{"Thickness", "[", "0.002", "]"}], ",", 
                    "timeStepLines2D", ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{
                    "\"\<Time of first appearance = \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Min", "[", "timeStepLines", "]"}], "==", 
                    "tMin"}], ",", "0", ",", 
                    RowBox[{"Min", "[", "timeStepLines", "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< hrs\nTime of growth completion = \>\"", " ", "<>",
                     " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"t", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< hrs\nTime Intervals = \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"timeStep", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< hrs/step\>\"", " ", "<>", 
                    "\"\<\\n\[Alpha] = \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "@", "\[Alpha]1"}], " ", "<>", 
                    "\"\<, \[Beta] = \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "@", "\[Beta]1"}], "<>", 
                    "\"\<\\n\[Gamma] = \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "@", "\[Gamma]1"}], " ", "<>", 
                    "\"\<\\nCut Plane: \>\"", "<>", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"ToString", "@", 
                    RowBox[{"{", 
                    RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "\"\<-1\>\"", "->", 
                    "\"\<\!\(\*OverscriptBox[\(1\), \(_\)]\)\>\""}], ",", 
                    RowBox[{"\"\<{\>\"", "->", "\"\<(\>\""}], ",", 
                    RowBox[{"\"\<}\>\"", "->", "\"\<)\>\""}], ",", " ", 
                    RowBox[{"\"\<,\>\"", " ", "->", " ", "\"\< \>\""}]}], 
                    "}"}]}], "]"}], "<>", " ", "\"\<\\nCut Distance \>\"", "<>", 
                    RowBox[{"ToString", "@", "cutPosition"}]}], ",", 
                    RowBox[{"{", " ", 
                    RowBox[{"textX", ",", 
                    RowBox[{"textY", "+", "1"}]}], "}"}]}], " ", "]"}]}], " ",
                     "}"}], ",", 
                    RowBox[{"Axes", "->", "True"}], ",", 
                    RowBox[{"AxesLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{"\"\<(mm)\>\"", ",", "\"\<(mm)\>\""}], "}"}]}]}], 
                    "]"}], ",", 
                    RowBox[{"Boxed", "\[Rule]", 
                    RowBox[{"Dynamic", "@", "boxed"}]}], ",", 
                    RowBox[{"Axes", "\[Rule]", 
                    RowBox[{"Dynamic", "@", "boxed"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
                    "\"\<\>\""}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Dynamic", "@", 
                  RowBox[{"If", "[", 
                   RowBox[{"ShowVelocityPlot", ",", 
                    RowBox[{"Show", "[", 
                    RowBox[{"velocityPlot", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
                    "\"\<\>\""}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"infty", ",", " ", "\"\<\>\"", ",", " ", 
                    RowBox[{
                    RowBox[{"If", "[", " ", 
                    RowBox[{"constantVelocity", ",", " ", 
                    RowBox[{"\"\<Constant Velocity = \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"V100", "*", 
                    SuperscriptBox["10", "3"]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
                    RowBox[{"\"\<Average Growth Velocity = \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", "0"}], ",", 
                    FractionBox[
                    RowBox[{" ", "velocityA"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"velocityC", "+", "t"}], ")"}], "velocityB"]], 
                    ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{" ", "velocityA"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                    "]"}]}], "}"}]}], "]"}], "/", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                    "]"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}]}]}], 
                    "]"}], "<>", "\"\< (\[Micro]m/hr)\n\>\""}]}], "]"}], "<>", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    "infty", ",", "\"\<The steady-state shape.\\nType: \>\"", 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "relativeOn"}], ",", "\"\<Type: \>\"", ",", 
                    "\"\<Sizes are relative to \!\(\*SubscriptBox[\(l\), \
\(0\)]\).\\nType: \>\""}], "]"}]}], "]"}], "<>", "type", "<>", "\"\<\\n\>\"", 
                    "<>", "info", "<>", "\"\<\\n\>\"", "<>", 
                    RowBox[{"If", "[", 
                    RowBox[{"infty", ",", " ", "\"\<\>\"", ",", 
                    RowBox[{"\"\<Volume = \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"volume", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< \!\(\*SuperscriptBox[\(mm\), \(3\)]\), \
Crystal Mass = \>\"", " ", "<>", 
                    RowBox[{"ToString", "[", " ", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"volume", "*", 
                    RowBox[{"3.5", "/", "1000"}]}], ")"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< g (\>\"", "  ", "<>", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"volume", "*", 
                    RowBox[{"3.5", "/", "1000"}]}], ")"}], " ", "*", " ", 
                    "5"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "1"}], "}"}]}], "]"}], "]"}], "<>", 
                    " ", "\"\< ct)\nDiamond Height:\>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"maxHeight", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< mm\n\>\"", " ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "<>", " ", "\"\<Intersecting Height: \>\"", " ", "<>", 
                    " ", 
                    RowBox[{"ToString", "@", "intersectionHeight"}], " ", "<>",
                     " ", "\"\< mm\n\>\""}], " ", "*)"}], "<>", " ", 
                    "\"\<Largest Rectangle Dimensions: \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"largestlength", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< mm x \>\"", " ", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"largestwidth", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< mm\n\>\"", " ", "<>", " ", 
                    "\"\<Bottom Facet Dimensions: \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"bottomLength", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< mm x \>\"", " ", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"bottomWidth", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< mm\n\>\"", "<>", " ", 
                    "\"\<Top Facet Dimensions: \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"topLength", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< mm x \>\"", " ", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"topWidth", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                     " ", "\"\< mm\n\>\""}]}], "]"}]}], " ", ",", " ", 
                   "\"\<\>\""}], "]"}], "}"}]}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", " ", "}"}], "]"}]}], " ", ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
             RowBox[{"{", 
              RowBox[{
              "l0", ",", "V100", ",", "relativeOn", ",", "infty", ",", 
               "opacity", ",", "boxed", ",", "planeChoice", ",", "normals", 
               ",", "n", ",", "cutOn", ",", "drawCutPlane", ",", 
               "cutPosition", ",", "previewNum", ",", "Num", ",", "tMin", ",",
                "t", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "\[Gamma]1", ",",
                "\[CapitalDelta]100posz", ",", "\[CapitalDelta]100posx", ",", 
               " ", "\[CapitalDelta]100posy", ",", "\[CapitalDelta]\[Alpha]z",
                ",", "\[CapitalDelta]\[Beta]posz", ",", 
               "\[CapitalDelta]\[Beta]negz", ",", 
               "\[CapitalDelta]\[Beta]posy", ",", 
               "\[CapitalDelta]\[Alpha]posxposy", ",", 
               "\[CapitalDelta]\[Alpha]negyposx", ",", " ", "mult100", ",", 
               "mult\[Alpha]", ",", "mult\[Beta]", ",", "mult\[Gamma]", ",", 
               "ds", ",", "ds1", ",", "tiltAngles", ",", "growDown", ",", 
               "\[CapitalDelta]\[Beta]posx", ",", " ", "showVelocity", ",", 
               "\[CapitalDelta]100negx", ",", "\[CapitalDelta]100negy", ",", 
               "\[CapitalDelta]\[Alpha]negxposy", ",", 
               "\[CapitalDelta]\[Alpha]negynegx", ",", 
               "\[CapitalDelta]\[Beta]negx", ",", 
               "\[CapitalDelta]\[Beta]negy", ",", "cutZAxis", ",", "cutYAxis",
                ",", "cutXAxis", ",", "timeStep", ",", 
               "\[CapitalDelta]\[Beta]posxposy", ",", 
               "\[CapitalDelta]\[Beta]negyposx", ",", 
               "\[CapitalDelta]\[Beta]negxposy", ",", 
               "\[CapitalDelta]\[Beta]negynegx", ",", "velocityA", ",", 
               "velocityB", ",", "velocityC", ",", "constantVelocity", ",", 
               "constantVelocityValue", ",", "\[CapitalDelta]\[Gamma]3z", ",",
                "\[CapitalDelta]\[Gamma]pos1z", ",", 
               "\[CapitalDelta]\[Gamma]neg1z", ",", 
               "\[CapitalDelta]\[Gamma]pos3xposy", " ", ",", 
               "\[CapitalDelta]\[Gamma]pos3xnegy", " ", ",", 
               "\[CapitalDelta]\[Gamma]posxneg3y", " ", ",", 
               "\[CapitalDelta]\[Gamma]posxpos3y", " ", ",", 
               "\[CapitalDelta]\[Gamma]neg3xposy", " ", ",", 
               "\[CapitalDelta]\[Gamma]neg3xnegy", " ", ",", 
               "\[CapitalDelta]\[Gamma]negxneg3y", " ", ",", 
               "\[CapitalDelta]\[Gamma]negxpos3y", " ", ",", 
               "\[CapitalDelta]\[Gamma]posxnegy", ",", 
               "\[CapitalDelta]\[Gamma]posxposy", ",", 
               "\[CapitalDelta]\[Gamma]negxposy", ",", 
               "\[CapitalDelta]\[Gamma]negxnegy", ",", "\[Delta]1", ",", 
               "\[CapitalDelta]\[Delta]5z", ",", 
               "\[CapitalDelta]\[Delta]neg1z", ",", 
               "\[CapitalDelta]\[Delta]pos1z", ",", 
               "\[CapitalDelta]\[Delta]pos5xposy", " ", ",", 
               "\[CapitalDelta]\[Delta]pos5xnegy", " ", ",", 
               "\[CapitalDelta]\[Delta]posxneg5y", " ", ",", 
               "\[CapitalDelta]\[Delta]posxpos5y", " ", ",", 
               "\[CapitalDelta]\[Delta]neg5xposy", " ", ",", 
               "\[CapitalDelta]\[Delta]neg5xnegy", " ", ",", 
               "\[CapitalDelta]\[Delta]negxneg5y", " ", ",", 
               "\[CapitalDelta]\[Delta]negxpos5y", " ", ",", 
               "\[CapitalDelta]\[Delta]posxnegy", ",", 
               "\[CapitalDelta]\[Delta]posxposy", ",", 
               "\[CapitalDelta]\[Delta]negxposy", ",", 
               "\[CapitalDelta]\[Delta]negxnegy", ",", 
               "\[CapitalDelta]100negz", ",", "transformAxisSystem", ",", 
               "factorList", ",", " ", "individualGrowthFactors"}], "}"}]}], 
            ",", 
            RowBox[{"SynchronousUpdating", "->", "False"}]}], "]"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"If", "[", 
         RowBox[{"printOn", ",", 
          RowBox[{
          "\"\<Saved Parameter Settings: \\n\>\"", "<>", 
           "exportCurrentState"}], ",", " ", "\"\<\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"If", "[", 
         RowBox[{"showAreaAndVelocities", ",", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"Prepend", "[", 
             RowBox[{
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"velocities", ",", "faceArea"}], "}"}]}], "]"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Velocity Factor Definitions\>\"", ",", " ", 
                "\"\<Factor Value\>\"", ",", " ", 
                "\"\<Area (\!\(\*SuperscriptBox[\(mm\), \(2\)]\))\>\""}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"Alignment", "->", "Left"}], ",", " ", 
            RowBox[{"Frame", "->", "All"}], ",", " ", 
            RowBox[{"Spacings", "->", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}]}], "]"}], ",", "\"\<\>\""}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{"averageGrowthFactors", ",", " ", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Growth Factors indices\>\"", ",", " ", 
              "\"\<Average Value\>\""}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"Alignment", "->", "Left"}], ",", 
          RowBox[{"Frame", "->", "All"}], ",", 
          RowBox[{"Spacings", "->", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"Grid", "[", 
         RowBox[{"cutFactors", ",", 
          RowBox[{"Alignment", "->", "Left"}], ",", " ", 
          RowBox[{"Frame", "->", "All"}], ",", " ", 
          RowBox[{"Spacings", "->", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"Initialization", "\[RuleDelayed]", " ", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"saveDirectory", "=", 
        RowBox[{"Directory", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"testPlanesParallel", " ", "=", " ", 
        RowBox[{"Compile", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"planes", ",", " ", "_Real", ",", " ", "3"}], "}"}], 
           "}"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"LinearSolve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Det", "@", "#"}], "\[NotEqual]", "0"}], ",", "#",
                     ",", 
                    RowBox[{"0", "#"}]}], "]"}], "&"}], "[", 
                  RowBox[{"Most", "/@", "#"}], "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Last", "/@", "#"}]}]}], "]"}], "&"}], "/@", 
              "planes"}], ",", "_List"}], "]"}]}], ",", " ", 
          RowBox[{"RuntimeAttributes", "->", 
           RowBox[{"{", "Listable", "}"}]}], ",", " ", 
          RowBox[{"RuntimeOptions", " ", "->", "\"\<Speed\>\""}], ",", " ", 
          RowBox[{"Parallelization", "->", "True"}]}], "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"verticeTransform1", " ", "=", " ", 
        RowBox[{"RotationTransform", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"transformAxisSystem", ",", " ", 
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "4"}], ",", " ", "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"verticeTransform2", "=", " ", 
        RowBox[{"RotationTransform", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"transformAxisSystem", ",", 
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "4"}], ",", " ", "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"normals", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], " ", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], " ", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "3", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "3", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "5", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", 
            RowBox[{"-", "5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "5"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "5"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", 
            RowBox[{"-", "5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "5"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "5", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "5", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "5", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "5"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"tiltAngles", "=", 
        RowBox[{"0", " ", 
         RowBox[{"Rest", "/@", "normals"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tiltedNormals", "=", "normals"}], ";", "\[IndentingNewLine]", 
       RowBox[{"allNormals", "=", "normals"}], ";", "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"{", 
         RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"normals1", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"allNormals", ",", "n"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ds", "=", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",",
           "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
          ",", "2", ",", "2", ",", "0.5", ",", "2", ",", "2", ",", "2", ",", 
          "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "0", ",", "2", 
          ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
          "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
          ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
          "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
          ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
          "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
          ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
          "2", ",", "2"}], "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ds1", "=", "ds"}], ";", "\[IndentingNewLine]", 
       RowBox[{"pts0", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#2", " ", 
            RowBox[{"#1", "/", 
             RowBox[{"Norm", "[", "#1", "]"}]}]}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"allNormals", ",", "ds1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"planes0", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"-", "#1"}], ",", 
             RowBox[{"#1", ".", "#2"}]}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"allNormals", ",", "pts0"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Quiet", "[", 
        RowBox[{"nodes0", "=", 
         RowBox[{"testPlanesParallel", "[", 
          RowBox[{"Subsets", "[", 
           RowBox[{"planes0", ",", 
            RowBox[{"{", "3", "}"}]}], "]"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vertices0", "=", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"nodes0", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{"Min", "[", 
                RowBox[{"planes0", ".", "#"}], "]"}], "]"}], 
              "\[GreaterEqual]", "0"}], "&"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Chop", "[", 
             RowBox[{"Norm", "[", 
              RowBox[{"#1", "-", "#2"}], "]"}], "]"}], "\[Equal]", "0"}], 
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pts0", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Most", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{"vertices0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", ".", 
                 RowBox[{"planes0", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "\[Equal]", 
                RowBox[{"Min", "[", 
                 RowBox[{"vertices0", ".", 
                  RowBox[{"planes0", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "&"}], ",", 
              "1"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "planes0", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ds1", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#1", ".", "#2"}], " ", "/", 
            RowBox[{"Norm", "[", "#1", "]"}]}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"allNormals", ",", "pts0"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"d", "[", "n_", "]"}], ":=", 
        RowBox[{
         RowBox[{"Norm", "[", "n", "]"}], 
         RowBox[{"ds1", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"tiltedNormals", ",", 
                RowBox[{"Complement", "[", 
                 RowBox[{"normals", ",", "tiltedNormals"}], "]"}]}], "]"}], 
              ",", "n"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"polyhedron", "[", 
         RowBox[{"normals_", ",", "pts_"}], "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "planes", ",", "relevantPlanes", ",", "nodes", ",", "vertices", 
            ",", "incidence", ",", "adjacency", ",", "faceNodes", ",", 
            "faceGraphs", ",", "orderings", ",", "faces", ",", "result"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"planes", "=", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Append", "[", 
                RowBox[{
                 RowBox[{"-", "#1"}], ",", 
                 RowBox[{"#1", ".", "#2"}]}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"normals", ",", "pts"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"planes", "=", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"planes", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Chop", "[", 
                 RowBox[{"Norm", "[", 
                  RowBox[{"#1", "-", "#2"}], "]"}], "]"}], "\[Equal]", "0"}], 
               "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Quiet", "[", 
            RowBox[{"nodes", "=", 
             RowBox[{"testPlanesParallel", "[", 
              RowBox[{"Subsets", "[", 
               RowBox[{"planes", ",", 
                RowBox[{"{", "3", "}"}]}], "]"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"vertices", "=", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"nodes", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Chop", "[", 
                   RowBox[{"Min", "[", 
                    RowBox[{"planes", ".", "#"}], "]"}], "]"}], 
                  "\[GreaterEqual]", "0"}], "&"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Chop", "[", 
                 RowBox[{"Norm", "[", 
                  RowBox[{"#1", "-", "#2"}], "]"}], "]"}], "\[Equal]", "0"}], 
               "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"incidence", "=", 
            RowBox[{"SparseArray", "[", 
             RowBox[{"Outer", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Boole", "[", 
                 RowBox[{
                  RowBox[{"Chop", "[", 
                   RowBox[{"#1", ".", "#2"}], "]"}], "\[Equal]", "0"}], "]"}],
                 "&"}], ",", "vertices", ",", "planes", ",", "1"}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"adjacency", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{"#", "\[GreaterEqual]", "2"}], "]"}], "&"}], ",", 
              RowBox[{"incidence", ".", 
               RowBox[{"incidence", "\[Transpose]"}]}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"faceNodes", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"#", "//", "Normal"}], ",", "1"}], "]"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"incidence", "\[Transpose]"}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"faceGraphs", "=", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"SimpleGraph", "[", 
                RowBox[{"AdjacencyGraph", "[", 
                 RowBox[{"adjacency", "[", 
                  RowBox[{"[", 
                   RowBox[{"#", ",", "#"}], "]"}], "]"}], "]"}], "]"}], "&"}],
               "/@", "faceNodes"}], ")"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"orderings", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"First", "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"#", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"First", "[", "#", "]"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "&"}], "[", 
                 RowBox[{"FindEulerianCycle", "[", 
                  RowBox[{"#", ",", "1"}], "]"}], "]"}], ")"}]}], "&"}], "/@",
              "faceGraphs"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"faces", "=", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Part", ",", 
              RowBox[{"{", 
               RowBox[{"faceNodes", ",", "orderings"}], "}"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"result", "[", "\"\<vertices\>\"", "]"}], "=", 
            RowBox[{"Most", "/@", "vertices"}]}], ";", 
           RowBox[{
            RowBox[{"result", "[", "\"\<faces\>\"", "]"}], "=", "faces"}], 
           ";", "\[IndentingNewLine]", "result"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"param0", "[", "n_", "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"k", "=", 
            RowBox[{
             RowBox[{"Nearest", "[", 
              RowBox[{"normals", ",", "n", ",", "1"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Chop", "@", 
              RowBox[{"Norm", "[", 
               RowBox[{"n", "-", "k"}], "]"}]}], "\[Equal]", "0"}], ",", 
            RowBox[{"Which", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sort", "[", 
                 RowBox[{"Abs", "/@", "k"}], "]"}], "\[Equal]", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], " ", "&&", " ", 
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", "1"}]}], ",", 
              RowBox[{"1", "/", "f00pos1"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Sort", "[", 
                 RowBox[{"Abs", "/@", "k"}], "]"}], "\[Equal]", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], " ", "&&", " ", 
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", 
                RowBox[{"-", "1"}]}]}], ",", 
              RowBox[{"1", "/", "f00neg1"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Sort", "[", 
                 RowBox[{"Abs", "/@", "k"}], "]"}], "\[Equal]", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], " ", "&&", " ", 
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", "0"}], " ", "&&",
                " ", 
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", "1"}]}], ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", "fpos100", ")"}]}], ",", " ", 
              RowBox[{"(*", " ", 
               RowBox[{"(", "100", ")"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Sort", "[", 
                 RowBox[{"Abs", "/@", "k"}], "]"}], "\[Equal]", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], " ", "&&", " ", 
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", "0"}], " ", "&&",
                " ", 
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                RowBox[{"-", "1"}]}]}], ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"(", "fneg100", ")"}], ")"}]}], ",", 
              RowBox[{"(*", " ", 
               RowBox[{"(", 
                RowBox[{
                 OverscriptBox["1", "_"], "00"}], ")"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Sort", "[", 
                 RowBox[{"Abs", "/@", "k"}], "]"}], "\[Equal]", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], " ", "&&", " ", 
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", "0"}], " ", "&&",
                " ", 
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", "1"}]}], ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", "f0pos10", ")"}]}], ",", " ", 
              RowBox[{"(*", " ", 
               RowBox[{"(", "010", ")"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Sort", "[", 
                 RowBox[{"Abs", "/@", "k"}], "]"}], "\[Equal]", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], " ", "&&", " ", 
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", "0"}], " ", "&&",
                " ", 
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
                RowBox[{"-", "1"}]}]}], ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", "f0neg10", ")"}]}], ",", 
              RowBox[{"(*", " ", 
               RowBox[{"(", 
                RowBox[{"0", 
                 OverscriptBox["1", "_"], "0"}], ")"}], " ", "*)"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "   ", ",", " ", 
              FractionBox[
               SqrtBox["2"], "f0pos1pos1"], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "   ", ",", " ", 
              FractionBox[
               SqrtBox["2"], "fpos10pos1"], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "   ", ",", " ", 
              FractionBox[
               SqrtBox["2"], "fpos1pos10"], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "   ", ",", " ", 
              FractionBox[
               SqrtBox["2"], "f0neg1pos1"], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "   ", ",", " ", 
              FractionBox[
               SqrtBox["2"], "fpos10neg1"], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "   ", ",", " ", 
              FractionBox[
               SqrtBox["2"], "fpos1neg10"], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "   ", ",", 
              FractionBox[
               SqrtBox["2"], "f0pos1neg1"], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "   ", 
              ",", 
              FractionBox[
               SqrtBox["2"], "fneg10pos1"], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]}], "   ", 
              ",", " ", 
              FractionBox[
               SqrtBox["2"], "fneg1pos10"], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "   ", ",", 
              FractionBox[
               SqrtBox["2"], "f0neg1neg1"], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "   ", ",", 
              FractionBox[
               SqrtBox["2"], "fneg10neg1"], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"n", "\[Equal]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "   ", ",", " ", 
              FractionBox[
               SqrtBox["2"], "fneg1neg10"], ",", " ", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"n", " ", "==", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["3"], "fpos1pos1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", " ", "==", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["3"], "fneg1pos1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", " ", "==", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["3"], "fneg1neg1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", " ", "==", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["3"], "fpos1neg1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", " ", "==", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["3"], "fpos1pos1neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", " ", "==", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["3"], "fneg1pos1neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", " ", "==", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["3"], "fneg1neg1neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", " ", "==", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["3"], "fpos1neg1neg1"], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "3"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos1pos1pos3"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", "3", ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos1pos3pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"3", ",", "1", ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos3pos1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", 
                 RowBox[{"-", "3"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos1pos1pos3"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "3"}], ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos1neg3pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "3"}], ",", "1", ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg3pos1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "3"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos1neg1neg3"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "3"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos1neg3neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"-", "3"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg1pos1neg3"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "3"}], ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg1neg3pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "3"}], ",", "1", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg3pos1neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "3"}], ",", 
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg3neg1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}], ",", "3"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos1neg1pos3"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", "3", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos1pos3neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg1pos1pos3"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "3", ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg1pos3pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"3", ",", "1", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos3pos1neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"3", ",", 
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos3neg1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}], ",", "3"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg1neg1pos3"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "3", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg1pos3neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"3", ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fpos3neg1neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "3"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg1neg1neg3"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "3"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg1neg3neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "3"}], ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["11"], "fneg3neg1neg1"], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "5"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos1pos1pos5"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", "5", ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos1pos5pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"5", ",", "1", ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos5pos1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", 
                 RowBox[{"-", "5"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos1pos1pos5"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "5"}], ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos1neg5pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "5"}], ",", "1", ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg5pos1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "5"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos1neg1neg5"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "5"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos1neg5neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"-", "5"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg1pos1neg5"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "5"}], ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg1neg5pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "5"}], ",", "1", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg5pos1neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "5"}], ",", 
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg5neg1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}], ",", "5"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos1neg1pos5"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"1", ",", "5", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos1pos5neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", "5"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg1pos1pos5"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "5", ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg1pos5pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"5", ",", "1", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos5pos1neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"5", ",", 
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos5neg1pos1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}], ",", "5"}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg1neg1pos5"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "5", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg1pos5neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{"5", ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fpos5neg1neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "5"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg1neg1neg5"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "5"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg1neg5neg1"], ",", "\[IndentingNewLine]", 
              RowBox[{"n", "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "5"}], ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ",", 
              FractionBox[
               SqrtBox["27"], "fneg5neg1neg1"], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{"Abs", "/@", "n"}], "]"}], "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "3"}], "}"}]}], ",", 
              "\[Gamma]1"}], "]"}], ",", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{"Abs", "/@", "k"}], "]"}], "\[Equal]", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
              RowBox[{"1", "/", "mult100"}], ",", 
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{"Abs", "/@", "k"}], "]"}], "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], ",", 
              RowBox[{"\[Beta]1", "/", " ", "mult\[Beta]"}], ",", 
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{"Abs", "/@", "k"}], "]"}], "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
              RowBox[{"\[Alpha]1", " ", "/", "mult\[Alpha]"}], ",", 
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{"Abs", "/@", "k"}], "]"}], "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "3"}], "}"}]}], ",", 
              RowBox[{"\[Gamma]1", "/", " ", "mult\[Gamma]"}]}], "]"}]}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"param1", "[", 
         RowBox[{"n_", ",", "d0_", ",", "infty_", ",", "L_", ",", "t_"}], 
         "]"}], ":=", 
        RowBox[{"If", "[", 
         RowBox[{"infty", ",", 
          RowBox[{"1", "/", 
           RowBox[{"param0", "[", "n", "]"}]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"2", "L", " ", "d0"}], 
            RowBox[{" ", 
             SuperscriptBox[
              RowBox[{"Norm", "[", "n", "]"}], "2"]}]], "+", 
           RowBox[{"t", "/", 
            RowBox[{"param0", "[", "n", "]"}]}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pts1", "[", 
         RowBox[{"infty_", ",", "L_", ",", "t_", ",", "normals_"}], "]"}], ":=", 
        RowBox[{"Module", "[", " ", 
         RowBox[{
          RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"result", " ", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"param1", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"d", "[", "#", "]"}], ",", "infty", ",", "L", ",", 
                 "t"}], "]"}], " ", "#"}], "&"}], "/@", "normals"}]}], ";", 
           "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"polyhedron2", "[", 
         RowBox[{"normals_", ",", "pts_", ",", "c_"}], "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "n", ",", "p", ",", "planes", ",", "nodes", ",", "vertices", ",", 
            "incidence", ",", "adjacency", ",", "faceNodes", ",", "faceGraph",
             ",", "ordering", ",", "face", ",", "result", ",", "edges", ",", 
            "colors"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"pts", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"n", "=", 
            RowBox[{"Last", "[", "normals", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"planes", "=", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Append", "[", 
                RowBox[{
                 RowBox[{"-", "#1"}], ",", 
                 RowBox[{"#1", ".", "#2"}]}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"normals", ",", 
                RowBox[{"Append", "[", 
                 RowBox[{"pts", ",", 
                  RowBox[{"c", " ", "n"}]}], "]"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"c", "\[Equal]", "p"}], ",", 
             RowBox[{"planes", "=", 
              RowBox[{"Drop", "[", 
               RowBox[{"planes", ",", 
                RowBox[{"-", "1"}]}], "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Quiet", "[", 
            RowBox[{"nodes", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Append", "[", 
                RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"LinearSolve", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Det", "@", "#"}], "\[NotEqual]", "0"}], ",", "#",
                     ",", 
                    RowBox[{"0", "#"}]}], "]"}], "&"}], "[", 
                    RowBox[{"Most", "/@", "#"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Last", "/@", "#"}]}]}], "]"}], "&"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Append", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Last", "[", "planes", "]"}]}], "]"}], "&"}], "/@", 
                   RowBox[{"Subsets", "[", 
                    RowBox[{
                    RowBox[{"Most", "@", "planes"}], ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}], ",", 
                "_List"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"vertices", "=", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"nodes", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Chop", "[", 
                   RowBox[{"Min", "[", 
                    RowBox[{"planes", ".", "#"}], "]"}], "]"}], 
                  "\[GreaterEqual]", "0"}], "&"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Chop", "[", 
                 RowBox[{"Norm", "[", 
                  RowBox[{"#1", "-", "#2"}], "]"}], "]"}], "\[Equal]", "0"}], 
               "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"vertices", "\[NotEqual]", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"incidence", "=", 
               RowBox[{"SparseArray", "[", 
                RowBox[{"Outer", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Boole", "[", 
                    RowBox[{
                    RowBox[{"Chop", "[", 
                    RowBox[{"#1", ".", "#2"}], "]"}], "\[Equal]", "0"}], 
                    "]"}], "&"}], ",", "vertices", ",", "planes", ",", "1"}], 
                 "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"adjacency", "=", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Boole", "[", 
                   RowBox[{"#", "\[GreaterEqual]", "2"}], "]"}], "&"}], ",", 
                 RowBox[{"incidence", ".", 
                  RowBox[{"incidence", "\[Transpose]"}]}], ",", 
                 RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"faceNodes", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"#", "//", "Normal"}], ",", "1"}], "]"}], "]"}], 
                 "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"incidence", "\[Transpose]"}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"faceGraph", "=", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"SimpleGraph", "[", 
                   RowBox[{"AdjacencyGraph", "[", 
                    RowBox[{"adjacency", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
                  "&"}], "@", 
                 RowBox[{"Last", "[", "faceNodes", "]"}]}], ")"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"ordering", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"First", "/@", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"First", "[", "#", "]"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "&"}], "[", 
                    RowBox[{"FindEulerianCycle", "[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], ")"}]}], "&"}], 
                "@", "faceGraph"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"face", "=", 
               RowBox[{
                RowBox[{"Last", "[", "faceNodes", "]"}], "[", 
                RowBox[{"[", "ordering", "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"edges", "=", 
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"#", ",", 
                    RowBox[{"RotateLeft", "[", "#", "]"}]}], "}"}], "&"}], 
                 "@", 
                 RowBox[{"Range", "[", 
                  RowBox[{"Length", "[", "face", "]"}], "]"}]}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"colors", "=", 
               RowBox[{"Total", "/@", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Abs", "/@", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"normals", ",", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Most", "@", "faceNodes"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"___", ",", 
                    RowBox[{"face", "[", 
                    RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{"face", "[", 
                    RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", ",", "2"}], "]"}], "]"}], "]"}], "]"}], ",", 
                    "___"}], "}"}], "|", 
                    RowBox[{"{", 
                    RowBox[{"___", ",", 
                    RowBox[{"face", "[", 
                    RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", ",", "2"}], "]"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{"face", "[", 
                    RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
                    "___"}], "}"}]}], ",", "1", ",", "1"}], "]"}]}]}], 
                    "]"}]}], ")"}], "&"}], "/@", 
                  RowBox[{"Range", "[", 
                   RowBox[{"Length", "[", "edges", "]"}], "]"}]}], ")"}]}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"result", "[", "\"\<vertices\>\"", "]"}], "=", 
               RowBox[{"Most", "/@", "vertices"}]}], ";", 
              RowBox[{
               RowBox[{"result", "[", "\"\<face\>\"", "]"}], "=", "face"}], 
              ";", 
              RowBox[{
               RowBox[{"result", "[", "\"\<colors\>\"", "]"}], "=", 
               "colors"}], ";"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"result", "[", "\"\<vertices\>\"", "]"}], "=", 
               RowBox[{"{", "}"}]}], ";", 
              RowBox[{
               RowBox[{"result", "[", "\"\<face\>\"", "]"}], "=", 
               RowBox[{"{", "}"}]}], ";", 
              RowBox[{
               RowBox[{"result", "[", "\"\<colors\>\"", "]"}], "=", 
               RowBox[{"{", "}"}]}], ";"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "result"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"polygon", "[", 
         RowBox[{"vertices_", ",", "colors_"}], "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"edges", ",", "angle", ",", "k"}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"vertices", "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{
             RowBox[{"edges", "=", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", 
                   RowBox[{"RotateLeft", "[", "#", "]"}]}], "}"}], "&"}], "@", 
                RowBox[{"Range", "[", 
                 RowBox[{"Length", "[", "vertices", "]"}], "]"}]}], "]"}]}], 
             ";", 
             RowBox[{"GraphicsComplex", "[", 
              RowBox[{"vertices", ",", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"k", "=", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ";", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Nearest", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "5"}], 
                    "}"}], ",", "k", ",", "1"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", "Black", 
                    ",", "1", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"GrayLevel", "[", "0.7", "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "1"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "2", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Magenta", ",", "0.4"}], "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "2"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "3", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Yellow", ",", "Green"}], "}"}], ",", "0.7"}], 
                    "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "3"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "5", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "5"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "7", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Yellow", ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "7"}], "]"}], "]"}]}]}]}], "]"}]}], 
                    "]"}]}], ",", "Dashed", ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
                 RowBox[{"Range", "[", 
                  RowBox[{"Length", "@", "vertices"}], "]"}]}], "]"}]}], 
              "]"}]}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"polygon3D", "[", 
         RowBox[{"vertices_", ",", "colors_"}], "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"edges", ",", "angle", ",", "k"}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"vertices", "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{
             RowBox[{"edges", "=", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", 
                   RowBox[{"RotateLeft", "[", "#", "]"}]}], "}"}], "&"}], "@", 
                RowBox[{"Range", "[", 
                 RowBox[{"Length", "[", "vertices", "]"}], "]"}]}], "]"}]}], 
             ";", 
             RowBox[{"GraphicsComplex", "[", 
              RowBox[{"vertices", ",", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"k", "=", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ";", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Nearest", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "7"}], 
                    "}"}], ",", "k", ",", "1"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", "Black", 
                    ",", "1", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"GrayLevel", "[", "0.7", "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "1"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "2", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Magenta", ",", "0.4"}], "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "2"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "3", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Yellow", ",", "Green"}], "}"}], ",", "0.7"}], 
                    "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "3"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "5", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "5"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "7", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Yellow", ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "7"}], "]"}], "]"}]}]}]}], "]"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
                 RowBox[{"Range", "[", 
                  RowBox[{"Length", "@", "vertices"}], "]"}]}], "]"}]}], 
              "]"}]}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"exportCutImage", " ", "=", " ", 
        RowBox[{"Hold", "[", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"saveDirectory", "<>", "\"\<\[Alpha]=\>\"", "<>", 
            RowBox[{"ToString", "@", "\[Alpha]1"}], "<>", " ", 
            "\"\< \[Beta] =\>\"", "<>", 
            RowBox[{"ToString", "@", "\[Beta]1"}], "<>", "\"\< \[Gamma]=\>\"",
             "<>", 
            RowBox[{"ToString", "@", "\[Gamma]1"}], "<>", "\"\< \>\"", "<>", 
            " ", "exportCutFileName", "<>", "\"\<.jpeg\>\""}], ",", 
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"polygons2D", ",", "timePolygon2D", ",", 
               RowBox[{"Thickness", "[", "0.002", "]"}], ",", 
               "timeStepLines2D", ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{
                 "\"\<Time of first appearance = \>\"", " ", "<>", " ", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Min", "[", "timeStepLines", "]"}], "==", 
                    "tMin"}], ",", "0", ",", 
                    RowBox[{"Min", "[", "timeStepLines", "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                   " ", "\"\< hrs\nTime of growth completion = \>\"", " ", "<>",
                   " ", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{"t", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                   " ", "\"\< hrs\nTime Intervals = \>\"", " ", "<>", " ", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{"timeStep", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "<>",
                   " ", "\"\< hrs/step\>\"", " ", "<>", 
                  "\"\<\\n\[Alpha] = \>\"", " ", "<>", 
                  RowBox[{"ToString", "@", "\[Alpha]1"}], "<>", 
                  "\"\<, \[Beta] = \>\"", " ", "<>", " ", 
                  RowBox[{"ToString", "@", "\[Beta]1"}], "<>", 
                  "\"\<\\n\[Gamma] = \>\"", " ", "<>", " ", 
                  RowBox[{"ToString", "@", "\[Gamma]1"}], " ", "<>", " ", 
                  "\"\<\\nCut Plane: \>\"", "<>", 
                  RowBox[{"StringReplace", "[", 
                   RowBox[{
                    RowBox[{"ToString", "@", 
                    RowBox[{"{", 
                    RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "\"\<-1\>\"", "->", 
                    "\"\<\!\(\*OverscriptBox[\(1\), \(_\)]\)\>\""}], ",", 
                    RowBox[{"\"\<{\>\"", "->", "\"\<(\>\""}], ",", 
                    RowBox[{"\"\<}\>\"", "->", "\"\<)\>\""}], ",", " ", 
                    RowBox[{"\"\<,\>\"", " ", "->", " ", "\"\< \>\""}]}], 
                    "}"}]}], "]"}], "<>", " ", "\"\<\\nCut Distance \>\"", "<>", 
                  RowBox[{"ToString", "@", "cutPosition"}]}], ",", 
                 RowBox[{"{", " ", 
                  RowBox[{"textX", ",", 
                   RowBox[{"textY", "+", "1"}]}], "}"}]}], " ", "]"}]}], " ", 
              "}"}], ",", 
             RowBox[{"Axes", "->", "True"}], ",", 
             RowBox[{"AxesLabel", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<(mm)\>\"", ",", "\"\<(mm)\>\""}], "}"}]}]}], 
            "]"}]}], "]"}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"exportShape", " ", "=", " ", 
        RowBox[{"Hold", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ExportCrystal", "=", 
           RowBox[{"Graphics3D", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Specularity", "[", 
                RowBox[{"0.5", ",", "6"}], "]"}], ",", 
               RowBox[{"GraphicsComplex", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], " ", 
                  RowBox[{"If", "[", 
                   RowBox[{"infty", ",", "1", ",", 
                    FractionBox["1", 
                    RowBox[{"2", "L"}]]}], "]"}], "vertices"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Opacity", "[", 
                    RowBox[{"Dynamic", "@", "opacity"}], "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"k", "=", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Abs", "/@", 
                    RowBox[{"allNormals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Nearest", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "7"}], 
                    "}"}], ",", "k", ",", "1"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"GrayLevel", "[", "0.7", "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "1"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "2", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Magenta", ",", "0.4"}], "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "2"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "3", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Yellow", ",", "Green"}], "}"}], ",", "0.7"}], 
                    "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "3"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "5", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "5"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "7", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Yellow", ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "7"}], "]"}], "]"}]}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Thickness", "[", "Medium", "]"}], "]"}], ",", 
                    RowBox[{"Polygon", "[", 
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "allNormals", "]"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.015", "]"}], ",", "Red", ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"If", "[", 
                    RowBox[{"hideVertices", ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"Range", "[", "v", "]"}], "]"}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"Axes", "\[Rule]", "True"}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], 
               "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
          RowBox[{"Export", "[", 
           RowBox[{
            RowBox[{"saveDirectory", "<>", "\"\<\[Alpha]=\>\"", "<>", 
             RowBox[{"ToString", "@", "\[Alpha]1"}], "<>", " ", 
             "\"\< \[Beta] =\>\"", "<>", 
             RowBox[{"ToString", "@", "\[Beta]1"}], "<>", 
             "\"\< \[Gamma]=\>\"", "<>", 
             RowBox[{"ToString", "@", "\[Gamma]1"}], "<>", "\"\< \>\"", "<>", 
             " ", "cadFileName", "<>", "\"\<.stl\>\""}], ",", " ", 
            "ExportCrystal"}], "]"}], ";"}], "\[IndentingNewLine]", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"exportIndividualParameters", "=", " ", 
        RowBox[{"Hold", "[", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{
           "saveDirectory", "<>", "\"\<Individual Parameter Config \>\"", "<>",
             " ", "parameterConfigFileName", " ", "<>", " ", "\"\<.txt\>\""}],
            ",", " ", 
           RowBox[{"Compress", "[", 
            RowBox[{"{", 
             RowBox[{
             "f00neg1", ",", " ", "f00pos1", ",", " ", "fpos100", ",", " ", 
              "fneg100", ",", "f0pos10", ",", "f0neg10", ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "fpos1pos1pos1", 
              ",", " ", "fneg1pos1pos1", ",", "fpos1neg1pos1", ",", " ", 
              "fneg1neg1pos1", ",", " ", "fpos1pos1neg1", ",", " ", 
              "fneg1pos1neg1", ",", " ", "fpos1neg1neg1", ",", " ", 
              "fneg1neg1neg1", ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", " ", "f0pos1pos1", ",", " ", 
              "fpos10pos1", ",", " ", "fpos1pos10", ",", " ", "f0neg1pos1", 
              ",", " ", "fpos10neg1", ",", " ", "fpos1neg10", ",", 
              "f0pos1neg1", ",", "fneg10pos1", ",", "fneg1pos10", ",", 
              "f0neg1neg1", ",", "fneg10neg1", ",", "fneg1neg10", ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "fpos1pos1pos3", 
              ",", "fpos1pos3pos1", ",", " ", "fpos3pos1pos1", ",", " ", 
              "fpos1pos1neg3", ",", " ", "fpos1neg3pos1", ",", " ", 
              "fneg3pos1pos1", ",", " ", "fpos1neg1neg3", ",", " ", 
              "fpos1neg3neg1", ",", " ", "fneg1pos1neg3", ",", " ", 
              "fneg1neg3pos1", ",", " ", "fneg3pos1neg1", ",", " ", 
              "fneg3neg1pos1", ",", " ", "fpos1neg1pos3", ",", " ", 
              "fpos1pos3neg1", ",", " ", "fneg1pos1pos3", ",", " ", 
              "fneg1pos3pos1", ",", " ", "fpos3pos1neg1", ",", " ", 
              "fpos3neg1pos1", ",", " ", "fneg1neg1pos3", ",", " ", 
              "fneg1pos3neg1", ",", " ", "fpos3neg1neg1", ",", " ", 
              "fneg1neg1neg3", ",", " ", "fneg1neg3neg1", ",", " ", 
              "fneg3neg1neg1", ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "fpos1pos1pos5", ",", "fpos1pos5pos1", 
              ",", " ", "fpos5pos1pos1", ",", " ", "fpos1pos1neg5", ",", " ", 
              "fpos1neg5pos1", ",", " ", "fneg5pos1pos1", ",", " ", 
              "fpos1neg1neg5", ",", " ", "fpos1neg5neg1", ",", " ", 
              "fneg1pos1neg5", ",", " ", "fneg1neg5pos1", ",", " ", 
              "fneg5pos1neg1", ",", " ", "fneg5neg1pos1", ",", " ", 
              "fpos1neg1pos5", ",", " ", "fpos1pos5neg1", ",", " ", 
              "fneg1pos1pos5", ",", " ", "fneg1pos5pos1", ",", " ", 
              "fpos5pos1neg1", ",", " ", "fpos5neg1pos1", ",", " ", 
              "fneg1neg1pos5", ",", " ", "fneg1pos5neg1", ",", " ", 
              "fpos5neg1neg1", ",", " ", "fneg1neg1neg5", ",", " ", 
              "fneg1neg5neg1", ",", " ", "fneg5neg1neg1"}], "}"}], "]"}]}], 
          "]"}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"exportConfig", " ", "=", " ", 
        RowBox[{"Hold", "[", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"saveDirectory", "<>", "\"\<\[Alpha]=\>\"", "<>", 
            RowBox[{"ToString", "@", "\[Alpha]1"}], "<>", " ", 
            "\"\< \[Beta] =\>\"", "<>", 
            RowBox[{"ToString", "@", "\[Beta]1"}], "<>", "\"\< \[Gamma]=\>\"",
             "<>", 
            RowBox[{"ToString", "@", "\[Gamma]1"}], "<>", "\"\< \>\"", "<>", 
            " ", "parameterConfigFileName", " ", "<>", " ", "\"\<.txt\>\""}], 
           ",", " ", "exportCurrentState"}], "]"}], "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"calcTilt", "=", 
        RowBox[{"Hold", "[", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", "infty"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"allNormals", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"tiltedNormals", ",", 
               RowBox[{"Complement", "[", 
                RowBox[{"normals", ",", "tiltedNormals", ",", 
                 RowBox[{"SameTest", "\[Rule]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Chop", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"#1", "-", "#2"}], "]"}], "]"}], "\[Equal]", 
                    "0"}], "&"}], ")"}]}]}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ds1", "=", 
             RowBox[{"ds", "~", "Join", "~", 
              RowBox[{"Table", "[", 
               RowBox[{"20000000000", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{
                   RowBox[{"Length", "[", "allNormals", "]"}], "-", 
                   RowBox[{"Length", "[", "normals", "]"}]}]}], "}"}]}], 
               "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"pts0", "=", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#2", " ", 
                 RowBox[{"#1", "/", 
                  RowBox[{"Norm", "[", "#1", "]"}]}]}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"allNormals", ",", "ds1"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"planes0", "=", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Append", "[", 
                 RowBox[{
                  RowBox[{"-", "#1"}], ",", 
                  RowBox[{"#1", ".", "#2"}]}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"allNormals", ",", "pts0"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"nodes0", "=", 
             RowBox[{"Union", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Append", "[", 
                 RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
               RowBox[{"Quiet", "[", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Det", "@", "#"}], "\[NotEqual]", "0"}], ",", "#",
                     ",", 
                    RowBox[{"0", "#"}]}], "]"}], "&"}], "[", 
                    RowBox[{"Most", "/@", "#"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Last", "/@", "#"}]}]}], "]"}], "&"}], "/@", 
                   RowBox[{"Subsets", "[", 
                    RowBox[{"planes0", ",", 
                    RowBox[{"{", "3", "}"}]}], "]"}]}], ",", "_List"}], "]"}],
                 "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"vertices0", "=", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{"nodes0", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Chop", "[", 
                    RowBox[{"Min", "[", 
                    RowBox[{"planes0", ".", "#"}], "]"}], "]"}], 
                   "\[GreaterEqual]", "0"}], "&"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Chop", "[", 
                  RowBox[{"Norm", "[", 
                   RowBox[{"#1", "-", "#2"}], "]"}], "]"}], "\[Equal]", "0"}],
                 "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"pts0", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Most", "@", 
                RowBox[{"vertices0", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Ordering", "[", 
                    RowBox[{
                    RowBox[{"vertices0", ".", 
                    RowBox[{"planes0", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "1"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "planes0", "]"}]}], "}"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"ds1", "=", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#1", ".", "#2"}], " ", "/", 
                 RowBox[{"Norm", "[", "#1", "]"}]}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"allNormals", ",", "pts0"}], "}"}]}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tiltedNormals", "=", "normals"}], ";", 
            RowBox[{"allNormals", "=", "normals"}], ";", 
            RowBox[{"ds1", "=", "ds"}], ";"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"calcCutOff", "=", 
        RowBox[{"Hold", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{"!", "individualGrowthFactors"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"f00neg1", " ", "=", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", " ", "\[CapitalDelta]100negz"}], ")"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"f00pos1", " ", "=", " ", 
              RowBox[{"1", " ", "+", "\[CapitalDelta]100posz"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"fpos100", " ", "=", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", " ", "\[CapitalDelta]100posx"}], ")"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"fneg100", " ", "=", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", " ", "\[CapitalDelta]100negx"}], ")"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"f0pos10", " ", "=", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", " ", "\[CapitalDelta]100posy"}], ")"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"f0neg10", " ", "=", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", " ", "\[CapitalDelta]100negy"}], ")"}]}], 
             ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"fpos1pos1pos1", " ", "=", " ", 
              RowBox[{
               FractionBox[
                SqrtBox["3"], "\[Alpha]1"], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Alpha]posxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1pos1pos1", " ", "=", " ", 
              RowBox[{
               FractionBox[
                SqrtBox["3"], "\[Alpha]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Alpha]negxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1neg1pos1", " ", "=", " ", 
              RowBox[{
               FractionBox[
                SqrtBox["3"], "\[Alpha]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Alpha]negyposx"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1neg1pos1", " ", "=", " ", 
              RowBox[{
               FractionBox[
                SqrtBox["3"], "\[Alpha]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Alpha]negynegx"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1pos1neg1", " ", "=", " ", 
              RowBox[{
               FractionBox[
                SqrtBox["3"], "\[Alpha]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Alpha]z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Alpha]posxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1pos1neg1", " ", "=", " ", 
              RowBox[{
               FractionBox[
                SqrtBox["3"], "\[Alpha]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Alpha]z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Alpha]negxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1neg1neg1", " ", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["3"], "\[Alpha]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Alpha]z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Alpha]negyposx"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1neg1neg1", " ", "=", " ", 
              RowBox[{
               FractionBox[
                SqrtBox["3"], "\[Alpha]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Alpha]z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Alpha]negynegx"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"f0pos1pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Beta]posz"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]posy"}], ")"}], 
               RowBox[{"(", "1", ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos10pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Beta]posz"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]posx"}], ")"}], 
               RowBox[{"(", "1", ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1pos10", " ", "=", " ", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]posxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"f0neg1pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Beta]posz"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]negy"}], ")"}], 
               RowBox[{"(", "1", ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos10neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Beta]negz"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]posx"}], ")"}], 
               RowBox[{"(", "1", ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1neg10", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]negyposx"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"f0pos1neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Beta]negz"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]posy"}], ")"}], 
               RowBox[{"(", "1", ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg10pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Beta]posz"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]negx"}], ")"}], 
               RowBox[{"(", "1", ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1pos10", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]negxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"f0neg1neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Beta]negz"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]negy"}], ")"}], 
               RowBox[{"(", "1", ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg10neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Beta]negz"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]negx"}], ")"}], 
               RowBox[{"(", "1", ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1neg10", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["2"], "\[Beta]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Beta]negynegx"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"fpos1pos1pos3", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]posxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1pos3pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]posxpos3y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos3pos1pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]pos3xposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1pos1neg3", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]3z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]posxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1neg3pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]posxneg3y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg3pos1pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]neg3xposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1neg1neg3", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]3z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]posxnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1neg3neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]posxneg3y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1pos1neg3", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]3z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]negxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1neg3pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]negxneg3y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg3pos1neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]neg3xposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg3neg1pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]neg3xnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1neg1pos3", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]posxnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1pos3neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]posxpos3y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1pos1pos3", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]negxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1pos3pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]negxpos3y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos3pos1neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]pos3xposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos3neg1pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]pos3xnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1neg1pos3", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]negxnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1pos3neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]negxpos3y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos3neg1neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]pos3xnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1neg1neg3", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]3z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]negxnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1neg3neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]negxneg3y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg3neg1neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["11"], "\[Gamma]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Gamma]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Gamma]neg3xnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"fpos1pos1pos5", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]posxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1pos5pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]posxpos5y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos5pos1pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]pos5xposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1pos1neg5", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]5z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]posxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1neg5pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]posxneg5y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg5pos1pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]neg5xposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1neg1neg5", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]5z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]posxnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1neg5neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]posxneg5y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1pos1neg5", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]5z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]negxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1neg5pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]negxneg5y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg5pos1neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]neg5xposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg5neg1pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]neg5xnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1neg1pos5", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]posxnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos1pos5neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]posxpos5y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1pos1pos5", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]negxposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1pos5pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]negxpos5y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos5pos1neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]pos5xposy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos5neg1pos1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]pos1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]pos5xnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1neg1pos5", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", "1", ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]negxnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1pos5neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]negxpos5y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fpos5neg1neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]pos5xnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1neg1neg5", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]5z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]negxnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg1neg5neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]negxneg5y"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"fneg5neg1neg1", "=", 
              RowBox[{
               FractionBox[
                SqrtBox["27"], "\[Delta]1"], 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "\[CapitalDelta]\[Delta]neg1z"}], 
                ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[CapitalDelta]\[Delta]neg5xnegy"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"factorList", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{
               "f00neg1", ",", " ", "f00pos1", ",", " ", "fpos100", ",", " ", 
                "fneg100", ",", "f0pos10", ",", "f0neg10", ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", "fpos1pos1pos1",
                 ",", " ", "fneg1pos1pos1", ",", "fpos1neg1pos1", ",", " ", 
                "fneg1neg1pos1", ",", " ", "fpos1pos1neg1", ",", " ", 
                "fneg1pos1neg1", ",", " ", "fpos1neg1neg1", ",", " ", 
                "fneg1neg1neg1", ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", " ", "f0pos1pos1", ",", " ", 
                "fpos10pos1", ",", " ", "fpos1pos10", ",", " ", "f0neg1pos1", 
                ",", " ", "fpos10neg1", ",", " ", "fpos1neg10", ",", 
                "f0pos1neg1", ",", "fneg10pos1", ",", "fneg1pos10", ",", 
                "f0neg1neg1", ",", "fneg10neg1", ",", "fneg1neg10", ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", "fpos1pos1pos3",
                 ",", "fpos1pos3pos1", ",", " ", "fpos3pos1pos1", ",", " ", 
                "fpos1pos1neg3", ",", " ", "fpos1neg3pos1", ",", " ", 
                "fneg3pos1pos1", ",", " ", "fpos1neg1neg3", ",", " ", 
                "fpos1neg3neg1", ",", " ", "fneg1pos1neg3", ",", " ", 
                "fneg1neg3pos1", ",", " ", "fneg3pos1neg1", ",", " ", 
                "fneg3neg1pos1", ",", " ", "fpos1neg1pos3", ",", " ", 
                "fpos1pos3neg1", ",", " ", "fneg1pos1pos3", ",", " ", 
                "fneg1pos3pos1", ",", " ", "fpos3pos1neg1", ",", " ", 
                "fpos3neg1pos1", ",", " ", "fneg1neg1pos3", ",", " ", 
                "fneg1pos3neg1", ",", " ", "fpos3neg1neg1", ",", " ", 
                "fneg1neg1neg3", ",", " ", "fneg1neg3neg1", ",", " ", 
                "fneg3neg1neg1", ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "fpos1pos1pos5", ",", "fpos1pos5pos1", 
                ",", " ", "fpos5pos1pos1", ",", " ", "fpos1pos1neg5", ",", 
                " ", "fpos1neg5pos1", ",", " ", "fneg5pos1pos1", ",", " ", 
                "fpos1neg1neg5", ",", " ", "fpos1neg5neg1", ",", " ", 
                "fneg1pos1neg5", ",", " ", "fneg1neg5pos1", ",", " ", 
                "fneg5pos1neg1", ",", " ", "fneg5neg1pos1", ",", " ", 
                "fpos1neg1pos5", ",", " ", "fpos1pos5neg1", ",", " ", 
                "fneg1pos1pos5", ",", " ", "fneg1pos5pos1", ",", " ", 
                "fpos5pos1neg1", ",", " ", "fpos5neg1pos1", ",", " ", 
                "fneg1neg1pos5", ",", " ", "fneg1pos5neg1", ",", " ", 
                "fpos5neg1neg1", ",", " ", "fneg1neg1neg5", ",", " ", 
                "fneg1neg5neg1", ",", " ", "fneg5neg1neg1"}], "}"}]}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "f00neg1", ",", " ", "f00pos1", ",", " ", "fpos100", ",", " ", 
                "fneg100", ",", "f0pos10", ",", "f0neg10", ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", "fpos1pos1pos1",
                 ",", " ", "fneg1pos1pos1", ",", "fpos1neg1pos1", ",", " ", 
                "fneg1neg1pos1", ",", " ", "fpos1pos1neg1", ",", " ", 
                "fneg1pos1neg1", ",", " ", "fpos1neg1neg1", ",", " ", 
                "fneg1neg1neg1", ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", " ", "f0pos1pos1", ",", " ", 
                "fpos10pos1", ",", " ", "fpos1pos10", ",", " ", "f0neg1pos1", 
                ",", " ", "fpos10neg1", ",", " ", "fpos1neg10", ",", 
                "f0pos1neg1", ",", "fneg10pos1", ",", "fneg1pos10", ",", 
                "f0neg1neg1", ",", "fneg10neg1", ",", "fneg1neg10", ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", "fpos1pos1pos3",
                 ",", "fpos1pos3pos1", ",", " ", "fpos3pos1pos1", ",", " ", 
                "fpos1pos1neg3", ",", " ", "fpos1neg3pos1", ",", " ", 
                "fneg3pos1pos1", ",", " ", "fpos1neg1neg3", ",", " ", 
                "fpos1neg3neg1", ",", " ", "fneg1pos1neg3", ",", " ", 
                "fneg1neg3pos1", ",", " ", "fneg3pos1neg1", ",", " ", 
                "fneg3neg1pos1", ",", " ", "fpos1neg1pos3", ",", " ", 
                "fpos1pos3neg1", ",", " ", "fneg1pos1pos3", ",", " ", 
                "fneg1pos3pos1", ",", " ", "fpos3pos1neg1", ",", " ", 
                "fpos3neg1pos1", ",", " ", "fneg1neg1pos3", ",", " ", 
                "fneg1pos3neg1", ",", " ", "fpos3neg1neg1", ",", " ", 
                "fneg1neg1neg3", ",", " ", "fneg1neg3neg1", ",", " ", 
                "fneg3neg1neg1", ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "fpos1pos1pos5", ",", "fpos1pos5pos1", 
                ",", " ", "fpos5pos1pos1", ",", " ", "fpos1pos1neg5", ",", 
                " ", "fpos1neg5pos1", ",", " ", "fneg5pos1pos1", ",", " ", 
                "fpos1neg1neg5", ",", " ", "fpos1neg5neg1", ",", " ", 
                "fneg1pos1neg5", ",", " ", "fneg1neg5pos1", ",", " ", 
                "fneg5pos1neg1", ",", " ", "fneg5neg1pos1", ",", " ", 
                "fpos1neg1pos5", ",", " ", "fpos1pos5neg1", ",", " ", 
                "fneg1pos1pos5", ",", " ", "fneg1pos5pos1", ",", " ", 
                "fpos5pos1neg1", ",", " ", "fpos5neg1pos1", ",", " ", 
                "fneg1neg1pos5", ",", " ", "fneg1pos5neg1", ",", " ", 
                "fpos5neg1neg1", ",", " ", "fneg1neg1neg5", ",", " ", 
                "fneg1neg5neg1", ",", " ", "fneg5neg1neg1"}], "}"}], " ", "=",
               " ", "factorList"}], ";"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"timePolygon2D", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"timePolygon3D", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"verticeTransform1", " ", "=", " ", 
           RowBox[{"RotationTransform", "[", " ", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"transformAxisSystem", ",", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "4"}], ",", "0"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"verticeTransform2", "=", " ", 
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"transformAxisSystem", ",", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], ",", "0"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"constantVelocity", ",", 
            RowBox[{"V100", "=", 
             RowBox[{"constantVelocityValue", "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]]}]}], ",", 
            RowBox[{"Quiet", "[", 
             RowBox[{"V100", "=", 
              RowBox[{
               RowBox[{"NIntegrate", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{" ", "velocityA"}], 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                  SuperscriptBox["10", 
                   RowBox[{"-", "3"}]]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "0", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                    "]"}]}], "}"}]}], "]"}], "/", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"t", "==", " ", "0"}], ",", "0.0001", ",", "t"}], 
                "]"}]}]}], "]"}]}], "]"}], ";", 
          RowBox[{"Quiet", "[", 
           RowBox[{"L", "=", 
            FractionBox["l0", 
             RowBox[{"2", "V100"}]]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"velocityPlot", "=", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{" ", "velocityA"}], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                SuperscriptBox["10", 
                 RowBox[{"-", "3"}]]}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "t"}], "}"}], ",", " ", 
               RowBox[{"AxesLabel", "->", 
                RowBox[{"{", " ", 
                 RowBox[{
                 "\"\<time (hr)\>\"", ",", 
                  "\"\<Growth Velocity (mm/hr)\>\""}], "}"}]}]}], "]"}]}], 
            ";"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"timeStepLines3D", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"pts", "=", 
           RowBox[{"pts1", "[", 
            RowBox[{"infty", ",", "L", ",", "t", ",", "allNormals"}], "]"}]}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pts", "[", 
            RowBox[{"[", "26", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"p", "=", 
           RowBox[{"polyhedron", "[", 
            RowBox[{"allNormals", ",", "pts"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]",
           "\[IndentingNewLine]", 
          RowBox[{"vertices", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"verticeTransform2", "@", 
               RowBox[{"verticeTransform1", "@", "#"}]}], " ", "&"}], ",", 
             " ", 
             RowBox[{"p", "[", "\"\<vertices\>\"", "]"}]}], "]"}]}], ";", 
          RowBox[{"faces", "=", 
           RowBox[{"p", "[", "\"\<faces\>\"", "]"}]}], ";", 
          RowBox[{"v", "=", 
           RowBox[{"Length", "[", "vertices", "]"}]}], ";", 
          RowBox[{"f", "=", 
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"p", "[", "\"\<faces\>\"", "]"}], ",", 
             RowBox[{"Except", "[", 
              RowBox[{"{", "}"}], "]"}]}], "]"}]}], ";", 
          RowBox[{"e", "=", 
           RowBox[{"v", "+", "f", "-", "2"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"downP", "=", " ", 
           RowBox[{"polyhedron", "[", 
            RowBox[{"allNormals", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"param1", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"d", "[", "#", "]"}], ",", "infty", ",", "L", ",", 
                  "t"}], "]"}], " ", "#"}], "&"}], "/@", " ", 
              "allNormals"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"calcVertices", "=", " ", 
           RowBox[{"downP", "[", "\"\<vertices\>\"", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"calcFaces", "=", 
           RowBox[{"downP", "[", "\"\<faces\>\"", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"rotatedVertices2D", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"RotationTransform", "[", 
                RowBox[{"45", "Degree"}], "]"}], "[", "#", "]"}], "&"}], ",", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", "L"}]], "*", "l0", "*", 
              RowBox[{"vertices", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rotatedVertices3D", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"RotationTransform", "[", 
                RowBox[{
                 RowBox[{"45", "Degree"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", "#",
                "]"}], "&"}], ",", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", "L"}]], "*", "l0", "*", "vertices"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"CalcrotatedVertices2D", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"RotationTransform", "[", 
                RowBox[{"45", "Degree"}], "]"}], "[", "#", "]"}], "&"}], ",", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", "L"}]], "*", "l0", "*", 
              RowBox[{"calcVertices", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"CalcrotatedVertices3D", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"RotationTransform", "[", 
                RowBox[{
                 RowBox[{"45", "Degree"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", "#",
                "]"}], "&"}], ",", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", "L"}]], "*", "l0", "*", "calcVertices"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"polyGraphics", "=", 
           RowBox[{"Graphics3D", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Specularity", "[", 
                RowBox[{"0.5", ",", "6"}], "]"}], ",", 
               RowBox[{"GraphicsComplex", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], " ", 
                  RowBox[{"If", "[", 
                   RowBox[{"infty", ",", "1", ",", 
                    FractionBox["1", 
                    RowBox[{"2", "L"}]]}], "]"}], "vertices"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Opacity", "[", 
                    RowBox[{"Dynamic", "@", "opacity"}], "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"k", "=", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Abs", "/@", 
                    RowBox[{"allNormals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Nearest", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "7"}], 
                    "}"}], ",", "k", ",", "1"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"GrayLevel", "[", "0.7", "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "1"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "2", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Magenta", ",", "0.4"}], "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "2"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "3", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Yellow", ",", "Green"}], "}"}], ",", "0.7"}], 
                    "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "3"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "5", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "5"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "7", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Yellow", ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "7"}], "]"}], "]"}]}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Thickness", "[", "Medium", "]"}], "]"}], ",", 
                    RowBox[{"Polygon", "[", 
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "allNormals", "]"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.015", "]"}], ",", "Red", ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"If", "[", 
                    RowBox[{"hideVertices", ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"Range", "[", "v", "]"}], "]"}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"Axes", "\[Rule]", "True"}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], 
               "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"volume", " ", "=", " ", 
           RowBox[{"Volume", "[", 
            RowBox[{"ConvexHullRegion", "[", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", "L"}]], "*", "l0", "*", "vertices"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"maxHeight", " ", "=", " ", 
           RowBox[{"Max", "[", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"2", "L"}]], "*", "l0", "*", 
             RowBox[{"vertices", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "3"}], "]"}], "]"}]}], " ", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"largestwidth", "=", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"rotatedVertices2D", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}], " ", "-", 
            " ", 
            RowBox[{"Min", "[", 
             RowBox[{"rotatedVertices2D", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"largestlength", "=", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"rotatedVertices2D", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], " ", "-", " ", 
            RowBox[{"Min", "[", 
             RowBox[{"rotatedVertices2D", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"bottomWidth", " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"faces", "[", 
               RowBox[{"[", "14", "]"}], "]"}], "!=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{"45", "Degree"}], "]"}], "[", "#", "]"}], "&"}], 
                  ",", 
                  RowBox[{
                   FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                   RowBox[{
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], " ", "-", 
              " ", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{"45", "Degree"}], "]"}], "[", "#", "]"}], "&"}], 
                  ",", 
                  RowBox[{
                   FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                   RowBox[{
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ",", " ", 
             "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"bottomLength", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"faces", "[", 
               RowBox[{"[", "14", "]"}], "]"}], "!=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{"45", "Degree"}], "]"}], "[", "#", "]"}], "&"}], 
                  ",", 
                  RowBox[{
                   FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                   RowBox[{
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], " ", "-", 
              " ", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{"45", "Degree"}], "]"}], "[", "#", "]"}], "&"}], 
                  ",", 
                  RowBox[{
                   FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                   RowBox[{
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", " ", 
             "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"topWidth", " ", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"faces", "[", 
               RowBox[{"[", "7", "]"}], "]"}], "!=", 
              RowBox[{"{", "}"}]}], ",", " ", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{"45", "Degree"}], "]"}], "[", "#", "]"}], "&"}], 
                  ",", 
                  RowBox[{
                   FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                   RowBox[{
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], " ", "-", 
              " ", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{"45", "Degree"}], "]"}], "[", "#", "]"}], "&"}], 
                  ",", 
                  RowBox[{
                   FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                   RowBox[{
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ",", "0"}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"topLength", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"faces", "[", 
               RowBox[{"[", "7", "]"}], "]"}], "!=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{"45", "Degree"}], "]"}], "[", "#", "]"}], "&"}], 
                  ",", 
                  RowBox[{
                   FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                   RowBox[{
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], " ", "-", 
              " ", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{"45", "Degree"}], "]"}], "[", "#", "]"}], "&"}], 
                  ",", 
                  RowBox[{
                   FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                   RowBox[{
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", "0"}],
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"averageGrowthFactors", "=", " ", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \({10} 0\)]\)\>\"", ",", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos100", " ", "+", "fneg100", "+", "f0pos10", "+", 
                  "f0neg10"}], ")"}], "/", "4"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<\!\(\*SubscriptBox[\(f\), \({11} 0\)]\)\>\"", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos1pos10", "+", "fpos1neg10", "+", "fneg1pos10", "+", 
                  "fneg1neg10"}], ")"}], "/", "4"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<\!\(\*SubscriptBox[\(f\), \({10} 1\)]\)\>\"", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos10pos1", " ", "+", " ", "fneg10pos1", " ", "+", " ", 
                  "f0pos1pos1", " ", "+", " ", "f0neg1pos1"}], ")"}], "/", 
                "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \({10} \*OverscriptBox[\(1\), \
\(_\)]\)]\)\>\"", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos10neg1", " ", "+", " ", "fneg10neg1", " ", "+", " ", 
                  "f0pos1neg1", " ", "+", " ", "f0neg1neg1"}], ")"}], "/", 
                "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(1\), \
\(_\)]\)]\)\>\"", ",", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos1pos1pos1", " ", "+", " ", "fpos1neg1pos1", " ", "+", 
                  " ", "fneg1pos1pos1", " ", "+", " ", "fneg1neg1pos1"}], 
                 ")"}], "/", "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(1\), \
\(_\)]\)]\)\>\"", ",", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos1pos1neg1", " ", "+", " ", "fpos1neg1neg1", " ", "+", 
                  " ", "fneg1pos1neg1", " ", "+", " ", "fneg1neg1neg1"}], 
                 ")"}], "/", "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(3\), \
\(_\)]\)]\)\>\"", ",", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos1pos1neg3", " ", "+", " ", "fpos1neg1neg3", " ", "+", 
                  " ", "fneg1pos1neg3", " ", "+", " ", "fneg1neg1neg3"}], 
                 ")"}], "/", "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \({11} 3\)]\)\>\"", ",", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos1pos1pos3", " ", "+", " ", "fpos1neg1pos3", " ", "+", 
                  " ", "fneg1pos1pos3", " ", "+", " ", "fneg1neg1pos3"}], 
                 ")"}], "/", "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<\!\(\*SubscriptBox[\(f\), \({31} 1\)]\)\>\"", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos3pos1pos1", " ", "+", " ", "fpos3neg1pos1", " ", "+", 
                  " ", "fneg3pos1pos1", " ", "+", "fneg3neg1pos1", " ", "+", 
                  " ", "fpos1pos3pos1", " ", "+", " ", "fpos1neg3pos1", " ", 
                  "+", " ", "fneg1pos3pos1", " ", "+", "fneg1neg3pos1"}], 
                 "  ", ")"}], "/", "8"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \({31} \*OverscriptBox[\(1\), \
\(_\)]\)]\)\>\"", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos3pos1neg1", " ", "+", " ", "fpos3neg1neg1", " ", "+", 
                  " ", "fneg3pos1neg1", " ", "+", "fneg3neg1neg1", " ", "+", 
                  " ", "fpos1pos3neg1", " ", "+", " ", "fpos1neg3neg1", " ", 
                  "+", " ", "fneg1pos3neg1", " ", "+", "fneg1neg3neg1"}], 
                 "  ", ")"}], "/", "8"}]}], "}"}], ",", "\[IndentingNewLine]",
              "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(5\), \
\(_\)]\)]\)\>\"", ",", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos1pos1neg5", " ", "+", " ", "fpos1neg1neg5", " ", "+", 
                  " ", "fneg1pos1neg5", " ", "+", " ", "fneg1neg1neg5"}], 
                 ")"}], "/", "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \({11} 5\)]\)\>\"", ",", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos1pos1pos5", " ", "+", " ", "fpos1neg1pos5", " ", "+", 
                  " ", "fneg1pos1pos5", " ", "+", " ", "fneg1neg1pos5"}], 
                 ")"}], "/", "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<\!\(\*SubscriptBox[\(f\), \({51} 5\)]\)\>\"", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos5pos1pos1", " ", "+", " ", "fpos5neg1pos1", " ", "+", 
                  " ", "fneg5pos1pos1", " ", "+", "fneg5neg1pos1", " ", "+", 
                  " ", "fpos1pos5pos1", " ", "+", " ", "fpos1neg5pos1", " ", 
                  "+", " ", "fneg1pos5pos1", " ", "+", "fneg1neg5pos1"}], 
                 "  ", ")"}], "/", "8"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \({51} \*OverscriptBox[\(5\), \
\(_\)]\)]\)\>\"", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "fpos5pos1neg1", " ", "+", " ", "fpos5neg1neg1", " ", "+", 
                  " ", "fneg5pos1neg1", " ", "+", "fneg5neg1neg1", " ", "+", 
                  " ", "fpos1pos5neg1", " ", "+", " ", "fpos1neg5neg1", " ", 
                  "+", " ", "fneg1pos5neg1", " ", "+", "fneg1neg5neg1"}], 
                 "  ", ")"}], "/", "8"}]}], "}"}]}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"faceArea", " ", "=", " ", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"For", " ", "[", 
           RowBox[{
            RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
            RowBox[{"i", " ", "<=", 
             RowBox[{"Length", "[", "faces", "]"}]}], ",", " ", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"True", ",", " ", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"faceArea", ",", "  ", 
                RowBox[{"ToString", "@", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"{", "}"}]}], ",", " ", "0", ",", 
                   RowBox[{"ToString", "@", 
                    RowBox[{"Area", "@", 
                    RowBox[{"Polygon", "[", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"faces", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], 
                    "]"}]}]}]}], " ", "]"}]}]}], " ", "]"}]}], "]"}]}], "]"}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"velocities", " ", "=", " ", 
           RowBox[{"{", "  ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \(_\
\)])\)]\) = (1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \(-z\)]\)) \>\"", 
               " ", ",", "  ", 
               RowBox[{"ToString", "[", "f00neg1", "]"}]}], " ", "}"}], ",", 
             " ", 
             RowBox[{"{", " ", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((001)\)]\) = (1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\), \(+z\)]\))  \>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "f00pos1", " ", "]"}]}], " ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((100)\)]\) = (1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} + x\)]\)) \>\"", " ", ",", 
               "  ", 
               RowBox[{"ToString", "[", "fpos100", "]"}]}], "  ", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
00)\)]\) = (1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - x\)]\))  \>\
\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fneg100", "]"}]}], "  ", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((010)\)]\) = (1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} + y\)]\)) \>\"", " ", ",", 
               "  ", 
               RowBox[{"ToString", "[", "f0pos10", "]"}]}], "  ", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\) = (1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - \
y\)]\))  \>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "f0neg10", " ", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1\\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\)) \>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fpos1pos1pos1", "]"}]}], "  ", "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
1\\\ 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(+y\))\)]\))  \
\>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fneg1pos1pos1", "]"}]}], "  ", "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \(-y\))\)]\))  \
\>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fpos1neg1pos1", " ", "]"}]}], "  ", 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(-y\))\)]\))  \>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fneg1neg1pos1", "]"}]}], "  ", "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\))  \
\>\"", ",", "  ", 
               RowBox[{"ToString", "[", "fpos1pos1neg1", " ", "]"}]}], "  ", 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
1 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(+y\))\)]\))  \>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fneg1pos1neg1", "]"}]}], "  ", "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \(-y\))\)]\))  \
\>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fpos1neg1neg1", "]"}]}], "  ", "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(-y\))\)]\))  \
\>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fneg1neg1neg1", " ", "]"}]}], "  ", 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ 1\\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+y\)]\))  \>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "f0pos1pos1", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 0\\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+x\)]\))  \>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fpos10pos1", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 1\\\ 0)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(+x\), \(+y\))\)]\)) \>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fpos1pos10", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\))  \>\"", " ", ",", 
               "  ", 
               RowBox[{"ToString", "[", "f0neg1pos1", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1\\\ 0 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+x\)]\))  \>\"", " ", ",", 
               "  ", 
               RowBox[{"ToString", "[", "fpos10neg1", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(+x\), \(-y\))\)]\))  \
\>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fpos1neg10", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ 1 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+y\)]\))  \>\"", " ", ",", 
               "  ", 
               RowBox[{"ToString", "[", "f0pos1neg1", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
0\\\ 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  \>\"", " ", ",", 
               "  ", 
               RowBox[{"ToString", "[", "fneg10pos1", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
1\\\ 0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \(+y\))\)]\))  \
\>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "fneg1pos10", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((0\\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(-y\)]\))  \>\"", " ", ",", "  ", 
               RowBox[{"ToString", "[", "f0neg1neg1", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
0\\\ \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \
\(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  \
\>\"", " ", ",", " ", 
               RowBox[{"ToString", "[", "fneg10neg1", "]"}]}], "  ", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)]\\\ 0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \
\(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \
\(-y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1neg10", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((113)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1pos1pos3", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((131)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1pos3pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((311)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos3pos1pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \(_\
\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1pos1neg3", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) y)\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1neg3pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
11)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg3pos1pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1neg1neg3", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) y)\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1neg3neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
1 \*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(+y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1pos1neg3", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) \
y)\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1neg3pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
1 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\
\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg3pos1neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\
\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg3neg1pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1neg1pos3", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \(_\
\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1pos3neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
13)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1pos1pos3", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
31)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) y)\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1pos3pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \(_\
\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos3pos1neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos3neg1pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 3)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(-y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1neg1pos3", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
3 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) \
y)\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1pos3neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos3neg1neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1neg1neg3", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) y)\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1neg3neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg3neg1neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((115)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1pos1pos5", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((151)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1pos5pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((511)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos5pos1pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \(_\
\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1pos1neg5", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) y)\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1neg5pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
11)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg5pos1pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(-y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1neg1neg5", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) y)\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1neg5neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
1 \*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(+y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1pos1neg5", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) \
y)\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1neg5pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
1 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\
\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg5pos1neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\
\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg5neg1pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1neg1pos5", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \(_\
\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos1pos5neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
15)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1pos1pos5", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
51)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) y)\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1pos5pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \(_\
\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos5pos1neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\))\)]\))  \
\>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos5neg1pos1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 5)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(-y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1neg1pos5", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
5 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) \
y)\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1pos5neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fpos5neg1neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1neg1neg5", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) y)\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg1neg5neg1", "]"}]}], " ", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\))\)]\))  \>\"", " ", ",", 
               RowBox[{"ToString", "[", "fneg5neg1neg1", "]"}]}], " ", 
              "}"}]}], "\[IndentingNewLine]", "}"}]}], " ", ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"cutFactors", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<\>\"", ",", "\"\<\!\(\*SubscriptBox[\(L\), \(max\)]\)\>\"",
                ",", "\"\<\!\(\*SubscriptBox[\(H\), \(Max\)]\)\>\"", ",", 
               "\"\<\>\"", ",", 
               "\"\<\!\(\*SubscriptBox[\(L\), \(max\)]\)\>\"", ",", 
               "\"\<\!\(\*SubscriptBox[\(H\), \(Max\)]\)\>\"", ",", 
               "\"\<\>\"", ",", 
               "\"\<\!\(\*SubscriptBox[\(L\), \({111}\)]\)\>\"", ",", 
               
               "\"\<\!\(\*SubscriptBox[\(L\), \({11 \*OverscriptBox[\(1\), \
\(_\)]}\)]\)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<(1 0 0)\>\"", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 FractionBox["l0", 
                  RowBox[{"2", "L"}]], 
                 RowBox[{"vertices", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], " ", ",",
                " ", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{
                    FractionBox["l0", 
                    RowBox[{"2", "L"}]], "vertices"}], " ", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], " ", 
                    "&"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], ",", " ", 
               "\"\<(1 1 0)\>\"", ",", " ", 
               RowBox[{"Max", "[", 
                RowBox[{"rotatedVertices2D", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}], ",", 
               " ", 
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{"rotatedVertices3D", ",", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"Max", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], ",", " ", 
               "\"\<(1 1 1)\>\"", ",", 
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"faces", "[", 
                   RowBox[{"[", "7", "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"pts", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "]"}], " ", ",", " ", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Max", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}]}], "&&",
                     " ", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "==", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"Max", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "]"}]}], " ", 
                    "]"}], "]"}]}], "]"}]}], " ", "]"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"calcFaces", "[", 
                   RowBox[{"[", "11", "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"pts", "[", 
                    RowBox[{"[", "11", "]"}], "]"}]}], "]"}], " ", ",", " ", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"calcVertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Max", "[", 
                    RowBox[{"CalcrotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}]}], "&&",
                     " ", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "==", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"Max", "[", 
                    RowBox[{"CalcrotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "]"}]}], " ", 
                    "]"}], "]"}]}], "]"}]}], " ", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<(\!\(\*OverscriptBox[\(1\), \(_\)]\) 0 0)\>\"", ",", 
               RowBox[{"Abs", "@", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  FractionBox["l0", 
                   RowBox[{"2", "L"}]], 
                  RowBox[{"vertices", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], " ", 
               ",", " ", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{
                    FractionBox["l0", 
                    RowBox[{"2", "L"}]], "vertices"}], " ", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], " ", 
                    "&"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], ",", " ", 
               "\"\<(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 0)\>\"", ",", " ", 
               RowBox[{"Abs", "@", 
                RowBox[{"Min", "[", 
                 RowBox[{"rotatedVertices2D", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}], ",",
                " ", 
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{"rotatedVertices3D", ",", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"Min", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], ",", " ", 
               "\"\<(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 1)\>\"", ",", 
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"faces", "[", 
                   RowBox[{"[", "8", "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"pts", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "]"}], " ", ",", " ", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}], "&&",
                     " ", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "==", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"Min", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "]"}]}], " ", 
                    "]"}], "]"}]}], "]"}]}], " ", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"calcFaces", "[", 
                   RowBox[{"[", "12", "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"pts", "[", 
                    RowBox[{"[", "12", "]"}], "]"}]}], "]"}], " ", ",", " ", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"calcVertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{"CalcrotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}], "&&",
                     " ", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "==", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"Min", "[", 
                    RowBox[{"CalcrotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "]"}]}], " ", 
                    "]"}], "]"}]}], "]"}]}], " ", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<(0 1 0)\>\"", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 FractionBox["l0", 
                  RowBox[{"2", "L"}]], 
                 RowBox[{"vertices", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], " ", ",",
                " ", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{
                    FractionBox["l0", 
                    RowBox[{"2", "L"}]], "vertices"}], " ", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], " ", 
                    "&"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], ",", " ", 
               "\"\<(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)\>\"", ",", 
               RowBox[{"Max", "[", 
                RowBox[{"rotatedVertices2D", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}], ",", 
               " ", 
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{"rotatedVertices3D", ",", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"Max", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], ",", " ", 
               "\"\<(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 1)\>\"", ",", 
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"faces", "[", 
                   RowBox[{"[", "9", "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"pts", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "]"}], " ", ",", " ", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Max", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}], "&&",
                     " ", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "==", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"Max", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "]"}]}], " ", 
                    "]"}], "]"}]}], "]"}]}], " ", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"calcFaces", "[", 
                   RowBox[{"[", "13", "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"pts", "[", 
                    RowBox[{"[", "13", "]"}], "]"}]}], "]"}], " ", ",", " ", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"calcVertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Max", "[", 
                    RowBox[{"CalcrotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}], "&&",
                     " ", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "==", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"Max", "[", 
                    RowBox[{"CalcrotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "]"}]}], " ", 
                    "]"}], "]"}]}], "]"}]}], " ", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<(0 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)\>\"", ",", 
               RowBox[{"Abs", "@", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  FractionBox["l0", 
                   RowBox[{"2", "L"}]], 
                  RowBox[{"vertices", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], " ", 
               ",", " ", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{
                    FractionBox["l0", 
                    RowBox[{"2", "L"}]], "vertices"}], " ", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    FractionBox["l0", 
                    RowBox[{"2", "L"}]], 
                    RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], " ", 
                    "&"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], ",", " ", 
               "\"\<(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\
\(1\), \(_\)]\) 0)\>\"", ",", " ", 
               RowBox[{"Abs", "@", 
                RowBox[{"Min", "[", 
                 RowBox[{"rotatedVertices2D", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}]}], ",",
                " ", 
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{"rotatedVertices3D", ",", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"Min", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], ",", " ", 
               "\"\<(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\
\(1\), \(_\)]\) 1)\>\"", ",", 
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"faces", "[", 
                   RowBox[{"[", "10", "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"pts", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "]"}], " ", ",", " ", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"vertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}]}], "&&",
                     " ", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "==", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"rotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"Min", "[", 
                    RowBox[{"rotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "]"}]}], " ", 
                    "]"}], "]"}]}], "]"}]}], " ", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"calcFaces", "[", 
                   RowBox[{"[", "14", "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"pts", "[", 
                    RowBox[{"[", "14", "]"}], "]"}]}], "]"}], " ", ",", " ", 
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", "l0", "*", 
                   RowBox[{"calcVertices", "[", 
                    RowBox[{"[", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{"CalcrotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}]}], "&&",
                     " ", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "==", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"CalcrotatedVertices3D", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"Min", "[", 
                    RowBox[{"CalcrotatedVertices2D", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "]"}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], 
                    " ", "&"}]}], " ", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "  ", "]"}]}], " ", 
                    "]"}], "]"}]}], "]"}]}], " ", "]"}]}], "}"}]}], "}"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"type", "=", 
           RowBox[{"StringJoin", "@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\"\<(\>\"", "<>", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"ToString", "/@", "#"}], "]"}], "<>", "\"\<)\>\""}], 
               "&"}], "/@", 
              RowBox[{"DeleteDuplicates", "@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sort", "[", 
                   RowBox[{"#", ",", "Greater"}], "]"}], "&"}], "/@", 
                 RowBox[{"Abs", "/@", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Nearest", "[", 
                    RowBox[{"normals", ",", "#"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"allNormals", ",", 
                    RowBox[{"Rest", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"faces", ",", 
                    RowBox[{"Except", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", "1"}], "]"}]}]}], "]"}]}],
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"info", "=", 
           RowBox[{
            RowBox[{"ToString", "@", "f"}], "<>", "\"\< Faces, \>\"", "<>", 
            RowBox[{"ToString", "@", "e"}], "<>", "\"\< Edges, \>\"", "<>", 
            RowBox[{"ToString", "@", "v"}], "<>", "\"\< Vertices.\>\""}]}], 
          ";"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"calcSection", "=", 
        RowBox[{"Hold", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"timePolygon2D", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"Normalize", "@", "n"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"n", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "!=", " ", "0"}], " ", "&&",
              " ", 
             RowBox[{
              RowBox[{"n", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "!=", " ", "0"}], " ", "&&",
              " ", 
             RowBox[{
              RowBox[{"n", "[", 
               RowBox[{"[", "3", "]"}], "]"}], " ", "!=", " ", "0"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"projX", "=", " ", 
             RowBox[{"Normalize", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", "n"}], 
                 ")"}], "n"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "@", 
                 RowBox[{"n", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "==", "1"}], " ", "||", 
               " ", 
               RowBox[{
                RowBox[{"n", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], " ", "!=", " ", "0"}]}], ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"projX", "=", " ", 
                RowBox[{"Normalize", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", "n"}], 
                    ")"}], "n"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"projX", "=", " ", 
                RowBox[{"Normalize", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", "n"}], 
                    ")"}], "n"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{"Cross", "[", 
               RowBox[{"n", ",", "projX"}], "]"}], "]"}], " ", "<", "0"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"projY", "=", 
             RowBox[{"Cross", "[", 
              RowBox[{"projX", ",", "n"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"projY", "=", 
             RowBox[{"Cross", "[", 
              RowBox[{"n", ",", "projX"}], "]"}]}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"timeGrid1", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"tMin", ",", "t", ",", 
             FractionBox[
              RowBox[{"t", "-", "tMin"}], 
              RowBox[{"ControlActive", "[", 
               RowBox[{"previewNum", ",", "Num"}], "]"}]]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"textX", "=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"textY", "=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"timeStepLines", " ", "=", " ", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"tMin", ",", "t", ",", "timeStep"}], "]"}], ",", "t"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"timingTest", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"constantVelocity", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"i", ",", "poly"}], "}"}], ",", 
               RowBox[{
                RowBox[{"polygons", "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"poly", "[", "\"\<vertices\>\"", "]"}], "=", 
                 RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"i", "=", 
                 RowBox[{"Length", "[", "timeGrid1", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"polygons2D", " ", "=", " ", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"Llist", "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"timingTest", " ", "=", " ", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"While", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"poly", "[", "\"\<vertices\>\"", "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&&", 
                   RowBox[{"i", ">=", "1"}]}], ",", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"poly", "=", 
                    RowBox[{"polyhedron2", "[", 
                    RowBox[{"normals1", ",", 
                    RowBox[{"pts1", "[", 
                    RowBox[{"False", ",", "L", ",", 
                    RowBox[{"timeGrid1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "allNormals"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cutPosition", " ", "==", " ", "0"}], ",", " ", 
                    "0.0001", ",", " ", "cutPosition"}], "]"}], " ", "2", 
                    "L"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"polygons2D", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", " ", "0"}], "&&", 
                    " ", 
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "!=", " ", "0"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}]}], "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "&"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}], 
                    "]"}], ")"}], ",", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}]}], "]"}], ")"}],
                     "&"}], "@", "poly"}]}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"polygons", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"verticeTransform2", "@", 
                    RowBox[{"verticeTransform1", "@", "#"}]}], " ", "&"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], " ", 
                    FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}]}],
                     "]"}], ")"}], ",", "  ", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}]}], " ", "]"}], 
                    ")"}], "&"}], "@", "poly"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"i", "--"}], ";"}]}], "\[IndentingNewLine]", "]"}],
                 ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Last", "[", "polygons", "]"}], "==", 
                   RowBox[{"{", "}"}]}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"timeStepLines", ",", 
                    RowBox[{"timeGrid1", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "2"}], "]"}], "]"}]}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"timeStepLines", "=", " ", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"timeStepLines", ",", " ", 
                    RowBox[{
                    RowBox[{"#", " ", ">=", " ", 
                    RowBox[{"timeGrid1", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "2"}], "]"}], "]"}]}], " ", "&"}]}], 
                    "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
             ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"i", ",", "poly"}], "}"}], ",", 
               RowBox[{
                RowBox[{"timeStepLines2D", "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"timeStepLines3D", "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"poly", "[", "\"\<vertices\>\"", "]"}], "=", 
                 RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"i", " ", "=", " ", 
                 RowBox[{
                  RowBox[{"Length", "[", "timeStepLines", "]"}], "-", "1"}]}],
                 ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"poly", "=", 
                 RowBox[{"polyhedron2", "[", 
                  RowBox[{"normals1", ",", 
                   RowBox[{"pts1", "[", 
                    RowBox[{"False", ",", "L", ",", 
                    RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
                    "allNormals"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cutPosition", " ", "==", " ", "0"}], ",", " ", 
                    "0.0001", ",", " ", "cutPosition"}], "]"}], " ", "2", 
                    "L"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"timeStepLines2D", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", " ", "0"}], "&&", 
                    " ", 
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "!=", " ", "0"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}]}], "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "&"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}], 
                    "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], "  ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}], ";",
                 "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"timeStepLines3D", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"verticeTransform2", "@", 
                    RowBox[{"verticeTransform1", "@", "#"}]}], " ", "&"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}]}],
                     "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], " ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}], ";",
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"While", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"poly", "[", "\"\<vertices\>\"", "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&&", " ", 
                   RowBox[{"i", ">", "1"}]}], ",", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"poly", "=", 
                    RowBox[{"polyhedron2", "[", 
                    RowBox[{"normals1", ",", 
                    RowBox[{"pts1", "[", 
                    RowBox[{"False", ",", "L", ",", 
                    RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "allNormals"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cutPosition", " ", "==", " ", "0"}], ",", " ", 
                    "0.0001", ",", " ", "cutPosition"}], "]"}], " ", "2", 
                    "L"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"timeStepLines2D", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", " ", "0"}], "&&", 
                    " ", 
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "!=", " ", "0"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}]}], "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "&"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}], 
                    "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], "  ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}], ";",
                    "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"timeStepLines3D", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"verticeTransform2", "@", 
                    RowBox[{"verticeTransform1", "@", "#"}]}], " ", "&"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}]}],
                     "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], " ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"i", "--"}]}], ";"}]}], "\[IndentingNewLine]", 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"poly", "=", 
                 RowBox[{"polyhedron2", "[", 
                  RowBox[{"normals1", ",", 
                   RowBox[{"pts1", "[", 
                    RowBox[{"False", ",", "L", ",", 
                    RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "allNormals"}], 
                    "]"}], ",", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cutPosition", " ", "==", " ", "0"}], ",", " ", 
                    "0.0001", ",", " ", "cutPosition"}], "]"}], " ", "2", 
                    "L"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"timeStepLines2D", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", " ", "0"}], "&&", 
                    " ", 
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "!=", " ", "0"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}]}], "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "&"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}], 
                    "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], "  ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}], ";",
                 "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"timeStepLines3D", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"verticeTransform2", "@", 
                    RowBox[{"verticeTransform1", "@", "#"}]}], " ", "&"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "L"}]], "*", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}]}],
                     "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], " ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"If", " ", "not", " ", "constant", " ", "velocity"}], 
             "*)"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"i", ",", "poly", ",", "tempVelocity", ",", "tempL"}],
                 "}"}], ",", 
               RowBox[{
                RowBox[{"polygons", "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"poly", "[", "\"\<vertices\>\"", "]"}], "=", 
                 RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"i", "=", 
                 RowBox[{"Length", "[", "timeGrid1", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"polygons2D", " ", "=", " ", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"Llist", "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"timingTest", " ", "=", " ", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"While", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"poly", "[", "\"\<vertices\>\"", "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{"i", ">=", "1"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"tempVelocity", "=", 
                    RowBox[{
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{" ", "velocityA"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"timeGrid1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], "/", 
                    RowBox[{"timeGrid1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]",
                     "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"tempL", "=", 
                    FractionBox["l0", 
                    RowBox[{"2", "tempVelocity"}]]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"poly", "=", 
                    RowBox[{"polyhedron2", "[", 
                    RowBox[{"normals1", ",", 
                    RowBox[{"pts1", "[", 
                    RowBox[{"False", ",", "tempL", ",", 
                    RowBox[{"timeGrid1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "allNormals"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cutPosition", " ", "==", " ", "0"}], ",", " ", 
                    "0.0001", ",", " ", "cutPosition"}], "]"}], " ", "2", 
                    "tempL"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"polygons2D", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "tempL"}]], "*", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", " ", "0"}], "&&", 
                    " ", 
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "!=", " ", "0"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}]}], "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "&"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}], 
                    "]"}], ")"}], ",", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}]}], "]"}], ")"}],
                     "&"}], "@", "poly"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"polygons", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"verticeTransform2", "@", 
                    RowBox[{"verticeTransform1", "@", "#"}]}], " ", "&"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], " ", 
                    FractionBox["1", 
                    RowBox[{"2", "tempL"}]], "*", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}]}],
                     "]"}], ")"}], ",", "  ", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}]}], " ", "]"}], 
                    ")"}], "&"}], "@", "poly"}]}], "\[IndentingNewLine]", 
                    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"i", "--"}]}], ";"}]}], "\[IndentingNewLine]", 
                  "]"}], "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Last", "[", "polygons", "]"}], "==", 
                    RowBox[{"{", "}"}]}], ",", " ", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"timeStepLines", ",", 
                    RowBox[{"timeGrid1", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "2"}], "]"}], "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"timeStepLines", "=", " ", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"timeStepLines", ",", " ", 
                    RowBox[{
                    RowBox[{"#", " ", ">=", " ", 
                    RowBox[{"timeGrid1", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "2"}], "]"}], "]"}]}], " ", "&"}]}], 
                    "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
                ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
             ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"i", ",", "poly", ",", "tempVelocity", ",", "tempL"}],
                 "}"}], ",", 
               RowBox[{
                RowBox[{"timeStepLines2D", "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"timeStepLines3D", "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"poly", "[", "\"\<vertices\>\"", "]"}], "=", 
                 RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"i", " ", "=", " ", 
                 RowBox[{
                  RowBox[{"Length", "[", "timeStepLines", "]"}], "-", "1"}]}],
                 ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Quiet", "[", 
                 RowBox[{"tempVelocity", "=", 
                  RowBox[{
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{" ", "velocityA"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                   "/", 
                   RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}], ";", 
                RowBox[{"tempL", "=", 
                 FractionBox["l0", 
                  RowBox[{"2", "tempVelocity"}]]}], ";", 
                RowBox[{"poly", "=", 
                 RowBox[{"polyhedron2", "[", 
                  RowBox[{"normals1", ",", 
                   RowBox[{"pts1", "[", 
                    RowBox[{"False", ",", "tempL", ",", 
                    RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
                    "allNormals"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cutPosition", " ", "==", " ", "0"}], ",", " ", 
                    "0.0001", ",", " ", "cutPosition"}], "]"}], " ", "2", 
                    "tempL"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"timeStepLines2D", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "tempL"}]], "*", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", " ", "0"}], "&&", 
                    " ", 
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "!=", " ", "0"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}]}], "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "&"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}], 
                    "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], "  ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}], ";",
                 "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"timeStepLines3D", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"verticeTransform2", "@", 
                    RowBox[{"verticeTransform1", "@", "#"}]}], "&"}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "tempL"}]], "*", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}]}],
                     "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], " ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}], ";",
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"While", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"poly", "[", "\"\<vertices\>\"", "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&&", " ", 
                   RowBox[{"i", ">", "1"}]}], ",", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Quiet", "[", 
                    RowBox[{"tempVelocity", "=", 
                    RowBox[{
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{" ", "velocityA"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], "/", 
                    RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]",
                     "]"}], ";", 
                   RowBox[{"tempL", "=", 
                    FractionBox["l0", 
                    RowBox[{"2", "tempVelocity"}]]}], ";", 
                   RowBox[{"poly", "=", 
                    RowBox[{"polyhedron2", "[", 
                    RowBox[{"normals1", ",", 
                    RowBox[{"pts1", "[", 
                    RowBox[{"False", ",", "tempL", ",", 
                    RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "allNormals"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cutPosition", " ", "==", " ", "0"}], ",", " ", 
                    "0.0001", ",", " ", "cutPosition"}], "]"}], " ", "2", 
                    "tempL"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"timeStepLines2D", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "tempL"}]], "*", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", " ", "0"}], "&&", 
                    " ", 
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "!=", " ", "0"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}]}], "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "&"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}], 
                    "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], "  ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}], ";",
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"timeStepLines3D", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"verticeTransform2", "@", 
                    RowBox[{"verticeTransform1", "@", "#"}]}], "&"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "tempL"}]], "*", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}]}],
                     "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], " ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}], ";",
                    "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"timingTest", ",", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", " ", "0"}], "&&", 
                    " ", 
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "!=", " ", "0"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}]}], "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], "}"}],
                     "&"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], "  ", 
                    FractionBox["1", 
                    RowBox[{"2", "tempL"}]], "*", 
                    RowBox[{"poly", "[", "\"\<vertices\>\"", "]"}]}]}], 
                    "]"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"i", "--"}], ";"}]}], "\[IndentingNewLine]", "]"}],
                 ";", "\[IndentingNewLine]", 
                RowBox[{"Quiet", "[", 
                 RowBox[{"tempVelocity", "=", 
                  RowBox[{
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{" ", "velocityA"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                    SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "/", 
                   RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]",
                  "]"}], ";", 
                RowBox[{"tempL", "=", 
                 FractionBox["l0", 
                  RowBox[{"2", "tempVelocity"}]]}], ";", 
                RowBox[{"poly", "=", 
                 RowBox[{"polyhedron2", "[", 
                  RowBox[{"normals1", ",", 
                   RowBox[{"pts1", "[", 
                    RowBox[{"False", ",", "tempL", ",", 
                    RowBox[{"timeStepLines", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "allNormals"}], 
                    "]"}], ",", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cutPosition", " ", "==", " ", "0"}], ",", " ", 
                    "0.0001", ",", " ", "cutPosition"}], "]"}], " ", "2", 
                    "tempL"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"timeStepLines2D", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "tempL"}]], "*", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", " ", "0"}], "&&", 
                    " ", 
                    RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "!=", " ", "0"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}]}], "}"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projX"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", ".", "n"}], ")"}], "n"}]}], ")"}], ".", 
                    "projY"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "&"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}], 
                    "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], "  ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}], ";",
                 "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"timeStepLines3D", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"polygon3D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"verticeTransform2", "@", 
                    RowBox[{"verticeTransform1", "@", "#"}]}], "&"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", 
                    "l0"}], "]"}], 
                    FractionBox["1", 
                    RowBox[{"2", "tempL"}]], "*", 
                    RowBox[{
                    RowBox[{"#", "[", "\"\<vertices\>\"", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", "\"\<face\>\"", "]"}], "]"}], "]"}]}]}],
                     "]"}], ")"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"#", "[", "\"\<colors\>\"", "]"}], "]"}]}], " ", 
                    "]"}]}], "]"}], ")"}], "&"}], "@", "poly"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"textX", " ", "=", "  ", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"timeStepLines2D", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], " ", ";", 
          "\[IndentingNewLine]", 
          RowBox[{"textY", " ", "=", " ", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"timeStepLines2D", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"timePolygonColor", "=", "\[IndentingNewLine]", 
           RowBox[{"Which", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{"Abs", "@", "n"}], "]"}], "==", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], " ", "||", " ", 
              RowBox[{"RegionMember", "[", " ", 
               RowBox[{
                RowBox[{"ConvexHullRegion", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], ",", "0.`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], ",", "0.`"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], ",", "0.`"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], ",", "0.`"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], ",", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], ",", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], ",", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], ",", 
                    RowBox[{"ds", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], 
                ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Last", "[", "timeStepLines3D", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0.01", ",", "0.01", ",", "0"}], "}"}]}]}], "]"}]}],
              ",", " ", "\[IndentingNewLine]", " ", 
             RowBox[{"Darker", "[", 
              RowBox[{
               RowBox[{"GrayLevel", "[", "0.7", "]"}], ",", "0"}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Sort", "[", 
               RowBox[{"Abs", "@", "n"}], "]"}], "==", " ", 
              RowBox[{"Normalize", "@", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "1"}], "}"}]}]}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"Darker", "[", 
              RowBox[{
               RowBox[{"Lighter", "[", 
                RowBox[{"Magenta", ",", "0.4"}], "]"}], ",", "0"}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Sort", "[", 
               RowBox[{"Abs", "@", "n"}], "]"}], " ", "==", " ", 
              RowBox[{"Normalize", "@", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Darker", "[", 
              RowBox[{
               RowBox[{"Blend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Yellow", ",", "Green"}], "}"}], ",", "0.7"}], 
                "]"}], ",", "0"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"timePolygon2D", "=", " ", 
           RowBox[{"{", 
            RowBox[{"timePolygonColor", ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{
               RowBox[{"Last", "[", "timeStepLines2D", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"timePolygon3D", "=", " ", 
           RowBox[{"{", 
            RowBox[{"timePolygonColor", ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{
               RowBox[{"Last", "[", "timeStepLines3D", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], ";"}], 
         "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"calcCutOn", "=", 
        RowBox[{"Hold", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ReleaseHold", "[", "calcCutOff", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"velocityPlot", "=", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{" ", "velocityA"}], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"velocityC", "+", "x"}], ")"}], "velocityB"]], 
                SuperscriptBox["10", 
                 RowBox[{"-", "3"}]]}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "t"}], "}"}], ",", " ", 
               RowBox[{"AxesLabel", "->", 
                RowBox[{"{", " ", 
                 RowBox[{
                 "\"\<time (hr)\>\"", ",", 
                  "\"\<Growth Velocity (mm/hr)\>\""}], "}"}]}]}], "]"}]}], 
            ";"}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"normals1", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"allNormals", ",", "n"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"p1", "=", 
           RowBox[{"polyhedron", "[", 
            RowBox[{"normals1", ",", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{"pts1", "[", 
                RowBox[{"False", ",", "L", ",", "t", ",", "allNormals"}], 
                "]"}], ",", 
               RowBox[{"cutPosition", " ", "2", "L", " ", "n"}]}], "]"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"vertices1", "=", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"relativeOn", "||", "infty"}], ",", "1", ",", "l0"}], 
             "]"}], "  ", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"2", "L"}], ")"}]}], "*", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"verticeTransform2", "@", 
                RowBox[{"verticeTransform1", "@", "#"}]}], " ", "&"}], ",", 
              " ", 
              RowBox[{"p1", "[", "\"\<vertices\>\"", "]"}]}], "]"}]}]}], ";", 
          RowBox[{"faces1", "=", 
           RowBox[{"p1", "[", "\"\<faces\>\"", "]"}]}], ";", 
          RowBox[{"v1", "=", 
           RowBox[{"Length", "[", "vertices1", "]"}]}], ";", 
          RowBox[{"f1", "=", 
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"p1", "[", "\"\<faces\>\"", "]"}], ",", 
             RowBox[{"Except", "[", 
              RowBox[{"{", "}"}], "]"}]}], "]"}]}], ";", " ", 
          RowBox[{"e1", "=", 
           RowBox[{"v1", "+", "f1", "-", "2"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"type", "=", 
           RowBox[{"StringJoin", "@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\"\<(\>\"", "<>", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"ToString", "/@", "#"}], "]"}], "<>", "\"\<)\>\""}], 
               "&"}], "/@", 
              RowBox[{"DeleteDuplicates", "@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sort", "[", 
                   RowBox[{"#", ",", "Greater"}], "]"}], "&"}], "/@", 
                 RowBox[{"Abs", "/@", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Nearest", "[", 
                    RowBox[{"normals", ",", "#"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"allNormals", ",", 
                    RowBox[{"Rest", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"faces", ",", 
                    RowBox[{"Except", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", "1"}], "]"}]}]}], "]"}]}],
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"info", "=", 
           RowBox[{
            RowBox[{"ToString", "@", "f1"}], "<>", "\"\< Faces, \>\"", "<>", 
            RowBox[{"ToString", "@", "e1"}], "<>", "\"\< Edges, \>\"", "<>", 
            RowBox[{"ToString", "@", "v1"}], "<>", "\"\< Vertices.\>\""}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"polyGraphics", "=", 
           RowBox[{"Graphics3D", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Specularity", "[", 
                RowBox[{"0.5", ",", "6"}], "]"}], ",", 
               RowBox[{"GraphicsComplex", "[", 
                RowBox[{"vertices1", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"Opacity", "[", "opacity", "]"}]}], ",", 
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"faces1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"k", "=", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Abs", "/@", 
                    RowBox[{"normals1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Nearest", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "7"}], 
                    "}"}], ",", "k", ",", "1"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"GrayLevel", "[", "0.7", "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "1"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "2", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Magenta", ",", "0.4"}], "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "2"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "3", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Yellow", ",", "Green"}], "}"}], ",", "0.7"}], 
                    "]"}], ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "3"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "5", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "5"}], "]"}], "]"}]}]}]}], "]"}], ",", 
                    "7", ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Yellow", ",", 
                    RowBox[{"0.5", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"k", "-", "7"}], "]"}], "]"}]}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Thickness", "[", "Medium", "]"}], "]"}], ",", 
                    RowBox[{"Polygon", "[", 
                    RowBox[{"faces1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    "drawCutPlane", ",", "normals1", ",", "allNormals"}], 
                    "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
                   RowBox[{"PointSize", "[", "0.015", "]"}], ",", "Red", ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"If", "[", 
                    RowBox[{"hideVertices", ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"Range", "[", "v", "]"}], "]"}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"Axes", "\[Rule]", "True"}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], 
               "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"ReleaseHold", "[", "calcSection", "]"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ")"}]}], ",", " ", 
    RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.914337461351198*^9, 3.9143375740273867`*^9}, {
   3.914337612788191*^9, 3.9143376180608687`*^9}, {3.9143377297945366`*^9, 
   3.914337780802039*^9}, {3.9143378166639686`*^9, 3.914337822548703*^9}, {
   3.914337867460787*^9, 3.9143378825507984`*^9}, {3.914337941362013*^9, 
   3.914337952968269*^9}, {3.9143390391452646`*^9, 3.9143390424394827`*^9}, {
   3.914339086357567*^9, 3.914339110740066*^9}, {3.9143394617033186`*^9, 
   3.914339466948883*^9}, {3.914339656648964*^9, 3.9143396568282833`*^9}, {
   3.914339720111389*^9, 3.914339736486391*^9}, {3.914339769696819*^9, 
   3.914339776393124*^9}, {3.9143401362485523`*^9, 3.9143401528481956`*^9}, {
   3.9143402485716305`*^9, 3.914340282844781*^9}, {3.914340731159753*^9, 
   3.9143407338732862`*^9}, {3.9143407947144065`*^9, 
   3.9143408555175204`*^9}, {3.9143408874316435`*^9, 
   3.9143409183982253`*^9}, {3.9143409579559755`*^9, 
   3.9143409864477005`*^9}, {3.914341021078092*^9, 3.9143410240473557`*^9}, {
   3.914341099581713*^9, 3.9143411160390368`*^9}, {3.914341185984357*^9, 
   3.914341206273542*^9}, {3.914341279016897*^9, 3.9143412864444666`*^9}, {
   3.914341321543566*^9, 3.9143413309964347`*^9}, {3.9143414362812014`*^9, 
   3.9143414415903482`*^9}, {3.914341477718281*^9, 3.914341477899732*^9}, {
   3.9143415383654633`*^9, 3.9143415391701617`*^9}, {3.914341611552868*^9, 
   3.9143416138426*^9}, {3.914341690615326*^9, 3.9143417696433315`*^9}, {
   3.9143419026648736`*^9, 3.9143419309765396`*^9}, {3.914342002773239*^9, 
   3.914342029598728*^9}, {3.9143420703557124`*^9, 3.914342092864708*^9}, {
   3.9143421621392803`*^9, 3.9143422487018843`*^9}, {3.9143422878770323`*^9, 
   3.9143423170095043`*^9}, {3.9143423498756237`*^9, 
   3.9143423741634145`*^9}, {3.914342407717903*^9, 3.9143424279803667`*^9}, {
   3.9143424676602526`*^9, 3.9143424919526253`*^9}, {3.9143425282553115`*^9, 
   3.9143426308491096`*^9}, {3.914342934730274*^9, 3.91434300730931*^9}, {
   3.914343108697878*^9, 3.914343152497534*^9}, {3.9143431898596277`*^9, 
   3.9143432463897038`*^9}, {3.914343299183758*^9, 3.914343433803314*^9}, {
   3.914343533842364*^9, 3.9143435547136955`*^9}, {3.91434360751252*^9, 
   3.9143436790611897`*^9}, {3.9143437181761336`*^9, 
   3.9143437541490593`*^9}, {3.9143438261674905`*^9, 3.914343847698204*^9}, {
   3.9143439268982706`*^9, 3.914343973407124*^9}, {3.9143440775620728`*^9, 
   3.9143440798824625`*^9}, 3.9143441557721224`*^9, {3.9143444013364563`*^9, 
   3.9143444113526363`*^9}, {3.9144117673796673`*^9, 3.914411774863695*^9}, {
   3.914411830821354*^9, 3.9144119425451183`*^9}, 3.914412088783143*^9, {
   3.914412213831581*^9, 3.9144122306872945`*^9}, {3.9144128910674562`*^9, 
   3.9144129007399483`*^9}, {3.9144129650596895`*^9, 3.914413063366178*^9}, 
   3.914413718904949*^9, {3.914413749801093*^9, 3.914413752720973*^9}, 
   3.9144138533164015`*^9, {3.91441402403528*^9, 3.914414034141265*^9}, {
   3.9144142209180837`*^9, 3.914414237470493*^9}, {3.91441818169324*^9, 
   3.9144182157050343`*^9}, {3.9144184760087023`*^9, 
   3.9144185516052485`*^9}, {3.9144185941860523`*^9, 3.914418645055417*^9}, {
   3.914418691471939*^9, 3.9144187106416063`*^9}, {3.9144188670477467`*^9, 
   3.914419063833085*^9}, {3.9144198789392653`*^9, 3.914419916083638*^9}, 
   3.914419949335205*^9, 3.9144199914467793`*^9, {3.914420045113783*^9, 
   3.9144200483601446`*^9}, {3.9144200858748918`*^9, 
   3.9144200879527626`*^9}, {3.9144201227669754`*^9, 
   3.9144201774902515`*^9}, {3.9144202757050095`*^9, 3.914420312480134*^9}, {
   3.9144204058512416`*^9, 3.914420443553688*^9}, {3.9144205084967885`*^9, 
   3.914420572611575*^9}, {3.9144206105296717`*^9, 3.914420612987607*^9}, {
   3.914420648989273*^9, 3.9144206671417303`*^9}, {3.914420697437316*^9, 
   3.9144207232237616`*^9}, {3.9144207857494736`*^9, 
   3.9144208032416773`*^9}, {3.914420841223389*^9, 3.914420859955188*^9}, {
   3.9144210049160404`*^9, 3.9144210822132664`*^9}, {3.914421135868388*^9, 
   3.914421257340158*^9}, 3.914421291433482*^9, {3.9144228399951878`*^9, 
   3.914422851987418*^9}, {3.914422907035174*^9, 3.9144229153642507`*^9}, {
   3.914423091210074*^9, 3.914423115750254*^9}, {3.914423308355826*^9, 
   3.914423337295251*^9}, {3.914423424120313*^9, 3.9144234392435646`*^9}, {
   3.9144235626294494`*^9, 3.9144237308890533`*^9}, {3.9144241743713317`*^9, 
   3.91442417575143*^9}, {3.9144243519583387`*^9, 3.9144243589103727`*^9}, {
   3.9144245044847937`*^9, 3.914424514975236*^9}, {3.914424625144846*^9, 
   3.914424760094863*^9}, {3.9144247929871454`*^9, 3.9144247939629087`*^9}, {
   3.914426855594006*^9, 3.9144269188809366`*^9}, {3.9144269804777174`*^9, 
   3.9144271050735617`*^9}, {3.9144271493331375`*^9, 
   3.9144271804759817`*^9}, {3.9144272185669975`*^9, 3.91442724035338*^9}, {
   3.9144273225355644`*^9, 3.914427377278776*^9}, {3.914427424607811*^9, 
   3.9144274587074656`*^9}, {3.914427520720961*^9, 3.9144275545695715`*^9}, {
   3.9144275851196012`*^9, 3.914427633610911*^9}, {3.914427697076852*^9, 
   3.914427717344781*^9}, {3.9144277578880825`*^9, 3.91442778616776*^9}, {
   3.9144279817641745`*^9, 3.9144279818665085`*^9}, {3.9144299850675945`*^9, 
   3.9144300026703653`*^9}, {3.9144300360741634`*^9, 3.914430055775941*^9}, {
   3.9144301880941877`*^9, 3.9144302175214458`*^9}, {3.9144303357278767`*^9, 
   3.914430389698882*^9}, {3.914430915839957*^9, 3.9144309496761312`*^9}, {
   3.9144309841004906`*^9, 3.914430987631155*^9}, {3.91443101825186*^9, 
   3.91443104082481*^9}, {3.9144911218558826`*^9, 3.914491123634878*^9}, {
   3.9144913020583124`*^9, 3.9144913384794426`*^9}, {3.914491379518799*^9, 
   3.9144914778363895`*^9}, {3.9144915233644686`*^9, 
   3.9144915435531416`*^9}, {3.9144930922637534`*^9, 
   3.9144931233920507`*^9}, {3.914493161367427*^9, 3.9144932218255186`*^9}, {
   3.914493258854133*^9, 3.9144932715304546`*^9}, {3.914494722763932*^9, 
   3.914494726943061*^9}, {3.9144954071856213`*^9, 3.9144954565309925`*^9}, {
   3.9144964126702967`*^9, 3.9144964290982056`*^9}, {3.9144964661457095`*^9, 
   3.9144964686296225`*^9}, {3.914496516052066*^9, 3.9144967393878193`*^9}, {
   3.914496775063877*^9, 3.914496819458952*^9}, {3.9144971031698003`*^9, 
   3.9144971249723997`*^9}, {3.914497197519101*^9, 3.914497200326337*^9}, {
   3.914497327449709*^9, 3.9144973297137628`*^9}, 3.914497377548586*^9, {
   3.914497679552699*^9, 3.9144977154732714`*^9}, {3.9144983296185217`*^9, 
   3.9144983435575294`*^9}, {3.914499317331895*^9, 3.914499332578185*^9}, {
   3.9144996487206683`*^9, 3.914499652810464*^9}, {3.9144996831007557`*^9, 
   3.914499687529602*^9}, {3.91449986339332*^9, 3.9144999818981524`*^9}, {
   3.914500020201544*^9, 3.914500021623376*^9}, {3.9145001521949196`*^9, 
   3.9145001549863176`*^9}, {3.91450025217073*^9, 3.914500266736292*^9}, {
   3.914500447489681*^9, 3.9145004506787405`*^9}, {3.9145004821686554`*^9, 
   3.914500485554406*^9}, {3.914500541448879*^9, 3.914500562388469*^9}, {
   3.914500638889552*^9, 3.914500639407445*^9}, {3.9145006733737884`*^9, 
   3.9145006738557053`*^9}, {3.914500719758669*^9, 3.914500737091626*^9}, {
   3.9145007880300484`*^9, 3.9145008624209013`*^9}, {3.9145008953828535`*^9, 
   3.914500896783844*^9}, {3.914501002255684*^9, 3.9145010084376974`*^9}, {
   3.914501075462325*^9, 3.9145010828623266`*^9}, {3.9145011170014877`*^9, 
   3.9145011265012536`*^9}, {3.9145011599690523`*^9, 3.91450117534678*^9}, {
   3.91450121540243*^9, 3.914501228148432*^9}, {3.9145013616256423`*^9, 
   3.9145013735004296`*^9}, 3.9145014084991884`*^9, {3.9145014419772234`*^9, 
   3.914501618694045*^9}, {3.914501671599074*^9, 3.9145016722113333`*^9}, {
   3.9145022330578356`*^9, 3.914502261844572*^9}, {3.9145025790809975`*^9, 
   3.914502580253216*^9}, {3.9145026325254774`*^9, 3.9145026392692137`*^9}, {
   3.9145039953653655`*^9, 3.914504027946143*^9}, {3.9145044513046265`*^9, 
   3.9145044581834507`*^9}, {3.91450450285738*^9, 3.914504514605545*^9}, {
   3.9145047639406195`*^9, 3.914504777133376*^9}, {3.914504811686184*^9, 
   3.9145048192949667`*^9}, {3.914504988265436*^9, 3.9145050117961273`*^9}, {
   3.914505067017743*^9, 3.914505096986124*^9}, {3.9145051393692513`*^9, 
   3.9145051667674723`*^9}, {3.9145052197126675`*^9, 3.914505274560713*^9}, {
   3.914505365091671*^9, 3.9145053780455475`*^9}, {3.914505427765294*^9, 
   3.9145054528750134`*^9}, {3.9145056083410063`*^9, 
   3.9145056093781953`*^9}, {3.9145056538757954`*^9, 
   3.9145056906701255`*^9}, {3.91450573514228*^9, 3.9145057420793686`*^9}, {
   3.9145057749870167`*^9, 3.9145057798448477`*^9}, {3.914505821860031*^9, 
   3.914505824928399*^9}, {3.914505876131471*^9, 3.914505895315268*^9}, {
   3.9145060186151676`*^9, 3.9145061229480686`*^9}, {3.914506309061599*^9, 
   3.914506344003126*^9}, {3.9145064424554358`*^9, 3.91450652060844*^9}, {
   3.9145066027691536`*^9, 3.914506644650811*^9}, {3.914506681744272*^9, 
   3.914506869314252*^9}, {3.9145069095428333`*^9, 3.9145069886125264`*^9}, {
   3.9145078516492167`*^9, 3.9145078595800705`*^9}, {3.914507903386733*^9, 
   3.914507920261557*^9}, {3.9145079640705357`*^9, 3.914507994799546*^9}, {
   3.91450843326723*^9, 3.9145084448812995`*^9}, {3.914508484311474*^9, 
   3.9145084973947453`*^9}, 3.914508617019717*^9, {3.9145087257821617`*^9, 
   3.914508738606448*^9}, {3.9145087725333166`*^9, 3.914508872971498*^9}, {
   3.9145089382296076`*^9, 3.914508944464389*^9}, {3.9145090268350253`*^9, 
   3.914509121862872*^9}, {3.914509211867077*^9, 3.914509228243202*^9}, {
   3.9145092858768663`*^9, 3.914509314793412*^9}, {3.914509351496987*^9, 
   3.9145094250334897`*^9}, {3.914509545131606*^9, 3.9145095612694283`*^9}, {
   3.91450997405892*^9, 3.914510056943404*^9}, {3.9145100913756227`*^9, 
   3.914510099440422*^9}, 3.9145102846282015`*^9, {3.914510669635847*^9, 
   3.914510913247505*^9}, {3.914511343924752*^9, 3.9145113567108054`*^9}, {
   3.9145114092678456`*^9, 3.91451141611506*^9}, {3.9145123489218655`*^9, 
   3.9145123515838947`*^9}, {3.9145123995572047`*^9, 3.914512399776576*^9}, 
   3.9145124311464863`*^9, {3.9145124629348145`*^9, 3.9145124645842094`*^9}, {
   3.914512496110037*^9, 3.9145125033988395`*^9}, {3.9145126622947273`*^9, 
   3.9145126650939927`*^9}, {3.9145127936975136`*^9, 
   3.9145128027274294`*^9}, {3.91451283805707*^9, 3.9145128823938894`*^9}, 
   3.914512913280676*^9, {3.9145130454562798`*^9, 3.914513045712431*^9}, {
   3.914513130238659*^9, 3.914513139101405*^9}, {3.9145132363727164`*^9, 
   3.914513345317725*^9}, 3.9145134694543943`*^9, 3.914513536439291*^9, {
   3.9145136455483437`*^9, 3.914513712795488*^9}, {3.9145137948495245`*^9, 
   3.914513805858072*^9}, {3.914513876782652*^9, 3.9145138941363072`*^9}, {
   3.9145141003671637`*^9, 3.9145141385128527`*^9}, {3.914515223635124*^9, 
   3.914515262537304*^9}, {3.9145153094611526`*^9, 3.914515337802333*^9}, 
   3.9145154022037992`*^9, {3.9145156961926394`*^9, 3.9145156963775887`*^9}, {
   3.914594756644882*^9, 3.914594760181258*^9}, {3.914597780204393*^9, 
   3.914597819389927*^9}, {3.9145978590745096`*^9, 3.9145979351834707`*^9}, {
   3.914598143923674*^9, 3.9145981469251237`*^9}, {3.914598363925892*^9, 
   3.914598365128544*^9}, 3.914598411522786*^9, 3.9145985294560723`*^9, {
   3.914598597528472*^9, 3.914598598312598*^9}, {3.9145988310606656`*^9, 
   3.9145989164746785`*^9}, {3.9145990977235737`*^9, 
   3.9145991001255455`*^9}, {3.914676739805328*^9, 3.914676766242632*^9}, {
   3.9149341517633066`*^9, 3.9149341518309546`*^9}, {3.915703201094519*^9, 
   3.915703423414634*^9}, {3.915704078371889*^9, 3.9157041067379236`*^9}, {
   3.9157041537160163`*^9, 3.915704153868117*^9}, {3.9157043333343625`*^9, 
   3.9157043744633837`*^9}, {3.9157044055175657`*^9, 
   3.9157044386568813`*^9}, {3.915704623227704*^9, 3.915704754270544*^9}, {
   3.9157049412580023`*^9, 3.9157050609214225`*^9}, {3.9157050950654135`*^9, 
   3.9157051347874637`*^9}, {3.9157876120486445`*^9, 
   3.9157876802809076`*^9}, {3.915789168732312*^9, 3.915789253666662*^9}, {
   3.915789307725012*^9, 3.915789331719448*^9}, {3.915789445220086*^9, 
   3.9157895629568806`*^9}, {3.9157896152660294`*^9, 3.915789615440651*^9}, 
   3.915789695640065*^9, {3.9157897291778665`*^9, 3.915789806424635*^9}, {
   3.9157898448402348`*^9, 3.91578984494316*^9}, {3.915789908675487*^9, 
   3.9157899476426334`*^9}, {3.9157900780394907`*^9, 3.915790088153147*^9}, {
   3.9157901560770025`*^9, 3.915790194526647*^9}, {3.9157902268640633`*^9, 
   3.9157902394278107`*^9}, {3.915790319573906*^9, 3.915790337224089*^9}, {
   3.9157904673107457`*^9, 3.915790484926657*^9}, {3.915790563020312*^9, 
   3.9157905712212133`*^9}, {3.915790901580125*^9, 3.9157909027765536`*^9}, {
   3.915790983991641*^9, 3.915790997576764*^9}, {3.915791087660939*^9, 
   3.915791095938266*^9}, {3.915791287793335*^9, 3.9157912945239563`*^9}, {
   3.9157914884230866`*^9, 3.9157915993866653`*^9}, {3.915791726727143*^9, 
   3.915791726777689*^9}, {3.91579178024609*^9, 3.9157917807413626`*^9}, {
   3.915791873164489*^9, 3.9157918755528975`*^9}, {3.9157919309313316`*^9, 
   3.9157919540302515`*^9}, {3.9157921863537383`*^9, 3.915792196502638*^9}, {
   3.9157922721007957`*^9, 3.915792273124304*^9}, {3.9157923671460767`*^9, 
   3.915792368311308*^9}, 3.915792443039361*^9, 3.915792485204057*^9, 
   3.9157925985543227`*^9, {3.915793100186577*^9, 3.9157931003127813`*^9}, {
   3.91579314220407*^9, 3.915793241963788*^9}, {3.916144645512887*^9, 
   3.916144645660841*^9}, 3.916222220589328*^9, 3.916222269451603*^9, {
   3.9162226149408636`*^9, 3.916222625227801*^9}, {3.9162227335699806`*^9, 
   3.916222737579401*^9}, {3.9162228553147197`*^9, 3.9162228563693237`*^9}, {
   3.916224230429127*^9, 3.916224362228905*^9}, {3.9162244074382377`*^9, 
   3.9162244092108517`*^9}, {3.916224643531954*^9, 3.9162246496987658`*^9}, {
   3.9162248136592684`*^9, 3.9162248145668864`*^9}, {3.916224848859157*^9, 
   3.9162248492750454`*^9}, 3.916224936884323*^9, 3.916224973839645*^9, {
   3.91622515194678*^9, 3.916225179763238*^9}, {3.9162252841333523`*^9, 
   3.9162252936187077`*^9}, {3.9162368754529667`*^9, 3.916236892832683*^9}, {
   3.9162369995759754`*^9, 3.916237026259981*^9}, {3.9162370728292694`*^9, 
   3.9162370834286704`*^9}, {3.9162371445405006`*^9, 
   3.9162371567218685`*^9}, {3.916911391177992*^9, 3.916911428551008*^9}, {
   3.9169115973821683`*^9, 3.916911599682218*^9}, {3.9169119471264076`*^9, 
   3.91691197321043*^9}, {3.9169120106993837`*^9, 3.9169121974057617`*^9}, 
   3.9169122443847694`*^9, {3.9170968161683426`*^9, 3.917096951034688*^9}, {
   3.9170975978332825`*^9, 3.91709763842999*^9}, {3.917111484826375*^9, 
   3.917111511460747*^9}, {3.9176878515066023`*^9, 3.917687913161232*^9}, {
   3.9176879775474267`*^9, 3.9176879814277496`*^9}, {3.917688016730734*^9, 
   3.917688032904652*^9}, {3.9176881156052213`*^9, 3.917688143630281*^9}, {
   3.917688188309145*^9, 3.917688240154948*^9}, {3.9176883003509192`*^9, 
   3.9176883038863125`*^9}, {3.9176926868743477`*^9, 3.9176926897861204`*^9}, 
   3.917692730501816*^9, {3.9176927660486817`*^9, 3.9176927780352535`*^9}, {
   3.917692878690775*^9, 3.9176928885295763`*^9}, {3.9176930436291075`*^9, 
   3.917693083254958*^9}, {3.917693378992366*^9, 3.917693433096179*^9}, 
   3.9176936798284206`*^9, {3.9176939288988094`*^9, 3.9176939330672016`*^9}, {
   3.9176939643153443`*^9, 3.91769396451108*^9}, {3.920282769539021*^9, 
   3.9202827707803574`*^9}, {3.9202828134894857`*^9, 3.920282813900021*^9}, {
   3.92028359734976*^9, 3.9202836605277762`*^9}, {3.920283714284803*^9, 
   3.9202837378989463`*^9}, {3.9202837707098074`*^9, 3.920283772812335*^9}, {
   3.920631800492118*^9, 3.9206318043481827`*^9}, {3.920631886145094*^9, 
   3.9206318981227446`*^9}, {3.920631969615297*^9, 3.9206319722084446`*^9}, {
   3.920632012582662*^9, 3.920632188454726*^9}, {3.920632424431428*^9, 
   3.920632451144123*^9}, {3.9206325065112495`*^9, 3.9206325094880285`*^9}, {
   3.9206339907260637`*^9, 3.9206339908189096`*^9}, {3.9206340284697533`*^9, 
   3.920634136974699*^9}, {3.9206341824539886`*^9, 3.9206342760263643`*^9}, {
   3.92063442520253*^9, 3.9206344893208933`*^9}, {3.9206345750909815`*^9, 
   3.920634605564784*^9}, {3.9206346408008327`*^9, 3.9206347505963955`*^9}, {
   3.920634897156339*^9, 3.920634898526503*^9}, {3.920635028818761*^9, 
   3.920635041138288*^9}, {3.920635112425704*^9, 3.9206351141045427`*^9}, {
   3.9206352791725883`*^9, 3.920635313378388*^9}, {3.9206459235847864`*^9, 
   3.9206459330538177`*^9}, {3.9206524792591395`*^9, 3.920652506715429*^9}, {
   3.9372159202877884`*^9, 3.937215935747777*^9}, {3.9372159910724487`*^9, 
   3.9372159924034204`*^9}, {3.9372160232197266`*^9, 
   3.9372160247046027`*^9}, {3.9372160897662964`*^9, 
   3.9372160921099873`*^9}, {3.93721616297182*^9, 3.9372161684138436`*^9}, {
   3.937216287564246*^9, 3.937216292498964*^9}, 3.9372164995384417`*^9, {
   3.937216653963628*^9, 3.937216676213118*^9}, {3.9372170053777103`*^9, 
   3.9372170298877096`*^9}, {3.937217253314458*^9, 3.9372172561037064`*^9}, 
   3.93721736219866*^9, 3.9372174107191286`*^9, {3.9372174991929564`*^9, 
   3.937217540336895*^9}, {3.937217650116599*^9, 3.937217650536827*^9}, {
   3.937217750649123*^9, 3.9372177573671355`*^9}, {3.937217796792389*^9, 
   3.937217803009136*^9}},ExpressionUUID->"8cdd1075-8fd8-4009-9d2c-\
7434864fab24"],

Cell[BoxData[
 StyleBox[
  DynamicModuleBox[{$CellContext`pts$$ = {{0., 0., -102.85592575175869`}, {0.,
     0., 102.85592575175869`}, {102.85592575175869`, 0., 
    0.}, {-102.85592575175869`, 0., 0.}, {0., 102.85592575175869`, 0.}, {
    0., -102.85592575175869`, 0.}, {38.0058352803745, 38.0058352803745, 
    38.0058352803745}, {-47.85592575175868, 47.85592575175868, 
    47.85592575175868}, {47.85592575175868, -47.85592575175868, 
    47.85592575175868}, {-32.618641917252894`, -32.618641917252894`, 
    32.618641917252894`}, {38.0058352803745, 
    38.0058352803745, -38.0058352803745}, {-47.85592575175868, 
    47.85592575175868, -47.85592575175868}, {
    47.85592575175868, -47.85592575175868, -47.85592575175868}, \
{-32.618641917252894`, -32.618641917252894`, -32.618641917252894`}, {0., 
    60.95116384699678, 60.95116384699678}, {60.95116384699678, 0., 
    60.95116384699678}, {46.1760281399205, 46.1760281399205, 0.}, {
    0., -60.95116384699678, 60.95116384699678}, {60.95116384699678, 
    0., -60.95116384699678}, {60.95116384699678, -60.95116384699678, 0.}, {0.,
     60.95116384699678, -60.95116384699678}, {-60.95116384699678, 0., 
    60.95116384699678}, {-60.95116384699678, 60.95116384699678, 0.}, {
    0., -60.95116384699678, -60.95116384699678}, {-60.95116384699678, 
    0., -60.95116384699678}, {0, 0, 0}, {27.702668849512804`, 
    27.702668849512804`, 83.10800654853841}, {27.702668849512804`, 
    83.10800654853841, 27.702668849512804`}, {83.10800654853841, 
    27.702668849512804`, 27.702668849512804`}, {27.702668849512804`, 
    27.702668849512804`, -83.10800654853841}, {
    30.389057159890314`, -91.16717147967094, 
    30.389057159890314`}, {-91.16717147967094, 30.389057159890314`, 
    30.389057159890314`}, {
    30.389057159890314`, -30.389057159890314`, -91.16717147967094}, {
    30.389057159890314`, -91.16717147967094, -30.389057159890314`}, \
{-30.389057159890314`, 
    30.389057159890314`, -91.16717147967094}, {-26.233434295934185`, \
-78.70030288780255, 26.233434295934185`}, {-91.16717147967094, 
    30.389057159890314`, -30.389057159890314`}, {-78.70030288780255, \
-26.233434295934185`, 26.233434295934185`}, {
    30.389057159890314`, -30.389057159890314`, 91.16717147967094}, {
    27.702668849512804`, 
    83.10800654853841, -27.702668849512804`}, {-30.389057159890314`, 
    30.389057159890314`, 91.16717147967094}, {-30.389057159890314`, 
    91.16717147967094, 30.389057159890314`}, {83.10800654853841, 
    27.702668849512804`, -27.702668849512804`}, {
    91.16717147967094, -30.389057159890314`, 
    30.389057159890314`}, {-26.233434295934185`, -26.233434295934185`, 
    78.70030288780255}, {-30.389057159890314`, 
    91.16717147967094, -30.389057159890314`}, {
    91.16717147967094, -30.389057159890314`, -30.389057159890314`}, \
{-26.233434295934185`, -26.233434295934185`, -78.70030288780255}, \
{-26.233434295934185`, -78.70030288780255, -26.233434295934185`}, \
{-78.70030288780255, -26.233434295934185`, -26.233434295934185`}, {
    20.83115588326512, 20.83115588326512, 104.1557794163256}, {
    20.83115588326512, 104.1557794163256, 20.83115588326512}, {
    104.1557794163256, 20.83115588326512, 20.83115588326512}, {
    20.83115588326512, 20.83115588326512, -104.1557794163256}, {
    21.925610380085583`, -109.62805190042792`, 
    21.925610380085583`}, {-109.62805190042792`, 21.925610380085583`, 
    21.925610380085583`}, {
    21.925610380085583`, -21.925610380085583`, -109.62805190042792`}, {
    21.925610380085583`, -109.62805190042792`, -21.925610380085583`}, \
{-21.925610380085583`, 
    21.925610380085583`, -109.62805190042792`}, {-20.232578842918272`, \
-101.16289421459136`, 20.232578842918272`}, {-109.62805190042792`, 
    21.925610380085583`, -21.925610380085583`}, {-101.16289421459136`, \
-20.232578842918272`, 20.232578842918272`}, {
    21.925610380085583`, -21.925610380085583`, 109.62805190042792`}, {
    20.83115588326512, 
    104.1557794163256, -20.83115588326512}, {-21.925610380085583`, 
    21.925610380085583`, 109.62805190042792`}, {-21.925610380085583`, 
    109.62805190042792`, 21.925610380085583`}, {104.1557794163256, 
    20.83115588326512, -20.83115588326512}, {
    109.62805190042792`, -21.925610380085583`, 
    21.925610380085583`}, {-20.232578842918272`, -20.232578842918272`, 
    101.16289421459136`}, {-21.925610380085583`, 
    109.62805190042792`, -21.925610380085583`}, {
    109.62805190042792`, -21.925610380085583`, -21.925610380085583`}, \
{-20.232578842918272`, -20.232578842918272`, -101.16289421459136`}, \
{-20.232578842918272`, -101.16289421459136`, -20.232578842918272`}, \
{-101.16289421459136`, -20.232578842918272`, -20.232578842918272`}}, \
$CellContext`polyGraphics$$ = Graphics3D[{
     Specularity[0.5, 6], 
     GraphicsComplex[CompressedData["
1:eJxTTMoPSmViYGCwAWJmIPbc1VfKs+rS/l/2e+Tq+HgO5H34U1Fwm80BKm6P
Li4CVR/SZ7NmvzbfAZFFNa/19rHAxO3RxU8Jbf9+a/69/SrpNU/lZHkPOJ60
2XT+DCtM3B5d3B7VPQ4we+1R3QMX10B1jwPMXg1U98DF56K6x8EFau9cVPfA
xZ0iJd11NggcSL9ulKnE/dFee6b7t5mVj+w5uX0j46Z+2s+xYpVeZC+nwwKl
xeV6yzDU78eh/gBMfXNOUIt/6Lv91rcCdMUjOOD+QhOHh78z1Pw4jsWJ2Xe/
21+7M0dUIeSwPQ/U/JYDj1bVfuNxUOLK/s1py+RQBzUHFg4MUAATD4aKB9sI
/jrOzohhPkw9mvh+mL18qPYeUMZu7wF0e2HiQdjt3Q9TDw0HexzhY48ePtDw
d8AR/vbo4Y+mHj1+7dHjF+pOBxzhb48j/O1xhL89jvB3wBH+DjjC3x5H+Nvj
CH97HOHvgB7+LysnGbV5CR5Y+dhv+Zb9n+wz59sxR9ZcsC/tyFj9TfvD/qRd
V7pNZHgcmmWmRjw9zeIAU78Mon5/IlR9IVR9KkT9gUZU9Q441NvjUo/DPfbo
7onr3CHXdFXA4bx1fdq8Bd/g/kITt0cTP4BD/QF09e6tBmIGfoIHToHFP+2/
/x8EztujidujiTvgUO+Arh4AQgJmAw==
      "], {
       Opacity[
        Dynamic[$CellContext`opacity$$]], {{}, {}, {
         RGBColor[0.7, 0.7, 0.7], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{1, 5, 3, 4, 6, 2}]}}, {}, {
         RGBColor[0.7, 0.7, 0.7], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{7, 11, 9, 10, 12, 8}]}}, {}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{13, 15, 16, 18, 17, 14}]}}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{19, 23, 21, 22, 20}]}}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{24, 28, 26, 27, 25}]}}, {}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{29, 34, 33, 31, 32, 30}]}}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{35, 39, 37, 38, 36}]}}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{40, 44, 42, 43, 41}]}}, {}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{13, 45, 19, 20, 46, 14}]}}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{15, 47, 24, 25, 48, 16}]}}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{1, 18, 17, 7, 8, 29, 30, 2}]}}, {}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{31, 49, 40, 41, 50, 32}]}}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{3, 27, 26, 42, 43, 4}]}}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{33, 51, 35, 36, 52, 34}]}}, {}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{9, 22, 21, 37, 38, 10}]}}, {}, {}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{21, 37, 39, 54, 53, 44, 42, 26, 28, 55, 56, 23}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{13, 45, 58, 57, 47, 15}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{7, 17, 14, 46, 11}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{1, 18, 16, 48, 5}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{31, 49, 59, 60, 51, 33}]}}, {}, {}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{40, 49, 59, 53, 44}]}}, {}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{35, 51, 60, 54, 39}]}}, {}, {}, {}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{24, 47, 57, 55, 28}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{8, 29, 34, 52, 12}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{19, 45, 58, 56, 23}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{9, 22, 20, 46, 11}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{2, 30, 32, 50, 6}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{3, 27, 25, 48, 5}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{55, 57, 58, 56}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{10, 38, 36, 52, 12}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{4, 43, 41, 50, 6}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          
          Polygon[{53, 59, 60, 
           54}]}}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
       PointSize[0.015], 
       RGBColor[1, 0, 0], 
       Opacity[1], 
       Dynamic[
        If[$CellContext`hideVertices$$, {}, 
         Point[
          Range[$CellContext`v$$]]]]}]}, Axes -> True, 
    AxesLabel -> {
     "x", "y", "z"}], $CellContext`polygons$$ = {}, $CellContext`type$$ = 
   "(100)(111)(110)(311)", $CellContext`info$$ = 
   "32 Faces, 90 Edges, 60 Vertices.", $CellContext`v$$ = 
   60, $CellContext`p$$ = $CellContext`result$2182602, $CellContext`f$$ = 
   32, $CellContext`e$$ = 
   90, $CellContext`v1$$, $CellContext`f1$$, $CellContext`p1$$, \
$CellContext`e1$$, $CellContext`timeGrid1$$, $CellContext`faces$$ = {{}, {}, {
    1, 5, 3, 4, 6, 2}, {}, {7, 11, 9, 10, 12, 8}, {}, {13, 15, 16, 18, 17, 
    14}, {19, 23, 21, 22, 20}, {24, 28, 26, 27, 25}, {}, {29, 34, 33, 31, 32, 
    30}, {35, 39, 37, 38, 36}, {40, 44, 42, 43, 41}, {}, {13, 45, 19, 20, 46, 
    14}, {15, 47, 24, 25, 48, 16}, {1, 18, 17, 7, 8, 29, 30, 2}, {}, {31, 49, 
    40, 41, 50, 32}, {3, 27, 26, 42, 43, 4}, {33, 51, 35, 36, 52, 34}, {}, {9,
     22, 21, 37, 38, 10}, {}, {}, {21, 37, 39, 54, 53, 44, 42, 26, 28, 55, 56,
     23}, {13, 45, 58, 57, 47, 15}, {7, 17, 14, 46, 11}, {1, 18, 16, 48, 5}, {
    31, 49, 59, 60, 51, 33}, {}, {}, {40, 49, 59, 53, 44}, {}, {35, 51, 60, 
    54, 39}, {}, {}, {}, {24, 47, 57, 55, 28}, {8, 29, 34, 52, 12}, {19, 45, 
    58, 56, 23}, {9, 22, 20, 46, 11}, {2, 30, 32, 50, 6}, {3, 27, 25, 48, 
    5}, {55, 57, 58, 56}, {10, 38, 36, 52, 12}, {4, 43, 41, 50, 6}, {53, 59, 
    60, 54}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, $CellContext`vertices$$ = \
CompressedData["
1:eJx1kV1Ik2EUx19MxbQyKBLNLnImzKsim2N68Te6EMmP6aph+JElBBLdKcoY
rhCCdhUR5CQdifhBRAzJCOqAlQMzsIsQhTZIV5BBJEoS+AF7nhfek+eF9+bH
j+ec5/ecbLtd355iGEb57r9v989uOz7QMZZHzthw0dFMD7WuBgKtDXVQHJxP
X0v6718VdEwEL9GILaPnQbhac3BOU37H49gp8n38Fm2Z9dDZrb439sJazcG5
Yd0Heq5h3cfkces+0HPj1n1MPmTdB041d8i6j8lXEnO+mS9XqKnvx5OXXif+
+MoijhvFGG6+uR2/76KiqtcPC1GPpdPz6f9Wa7hPgk/aDy6kf28cP0clG+FH
Fdfd5r0YN/sn1PmpPYd7n2ZV4KK/eLplIAuj6vz59v23os89uLNZcjlysAr3
1Dm6g6E+zd8pHnKnNP5qqPzvfO0zTnruhHUu3d17LvG5mvfvPdf0VQcIfcD7
qP4Q+oP3Zz5/X/D3VXtC6A+hP4T+EPpD6A+hP4T+EPpD6A/ef/BD5e8LES8d
Cju6rkZdWHw2d/5tMAczMd+Zn7mltPx1vTN2xIMM23iefbIa2s9M+vRJ+aT8
RNKnNKsPwYfkC/uA71NWbvucf8CLF4HsuiY7zHsxDsZJ8In7fx3dk71TXurM
d9vWQi7yh0rXTiwdA+NgHIIP7u8AB+58yw==
   "], $CellContext`vertices1$$, $CellContext`faces1$$, $CellContext`n$$ = {1,
    0, 0}, $CellContext`normals1$$ = CompressedData["
1:eJx1kNsJxUAIRM1dtpDUc/9SQgpI+ieEPGCHHAYdEFdHR9d53ZftFxH/x1p8
uB7oPQ3LuCi4CfbmsvgacI48c4TPyOKw2WGa3N91VUcd1lS7tMLTzqHtnjcg
x5so9l7l+N/3zT2o0xKePX77Zhz1hLPw3KkXnnaMevf8FznOUOy9yvl9uAd1
esKzx+/TjaOecBReWsINfMqM6g==
   "], $CellContext`pos$$, $CellContext`allNormals$$ = CompressedData["
1:eJx1kGEKgDAIha2xg3SdfnaEDlD3Z4xqMOnjoQ/E6dOnczvv41rNbP+s2I/n
g7+XaRFnCbfARi6KnwnlyDNH6IwoNpltosn9VdfrqMOabJeSeFqf2up5A3K8
icfa6zn+d7y5B3VKwLNHb1+Eo56jJ5471cTT2qxXz3+R4wyPtddzeh/uQZ0a
8OzR+1ThqOdoiR94Ad3pjOg=
   "], $CellContext`pts0$$ = CompressedData["
1:eJxTTMoPSmViYGDwAmJmBhj4YA+l96PR6OL2BNTj0kfIPAx1GR2Mxof3XSLW
HcS6Ey6OZj7Z7iQyHMh1D6nhT2m8EPI3qeYTHb844htX+JAbbsTGC7X8S2o6
whkPBPID0ekeh3mkpjdK/UlxOI+mH5LcM5p+oHwAWgNoMw==
   "], $CellContext`planes0$$ = {{0, 0, 1, 1}, {0, 0, -1, 1}, {-1, 0, 0, 1}, {
    1, 0, 0, 1}, {0, -1, 0, 1}, {0, 1, 0, 
    1}, {-1, -1, -1, 2 3^Rational[1, 2]}, {
    1, -1, -1, 2 3^Rational[1, 2]}, {-1, 1, -1, 2 3^Rational[1, 2]}, {
    1, 1, -1, 2 3^Rational[1, 2]}, {-1, -1, 1, 2 3^Rational[1, 2]}, {
    1, -1, 1, 2 3^Rational[1, 2]}, {-1, 1, 1, 2 3^Rational[1, 2]}, {
    1, 1, 1, 2 3^Rational[1, 2]}, {
    0, -1, -1, 2 2^Rational[1, 2]}, {-1, 0, -1, 2 2^Rational[1, 2]}, {-1, -1, 
     0, 0.7071067811865475}, {
    0, 1, -1, 2 2^Rational[1, 2]}, {-1, 0, 1, 2 2^Rational[1, 2]}, {-1, 1, 0, 
     2 2^Rational[1, 2]}, {0, -1, 1, 2 2^Rational[1, 2]}, {
    1, 0, -1, 2 2^Rational[1, 2]}, {1, -1, 0, 2 2^Rational[1, 2]}, {
    0, 1, 1, 2 2^Rational[1, 2]}, {1, 0, 1, 2 2^Rational[1, 2]}, {1, 1, 0, 
    0}, {-1, -1, -3, 2 11^Rational[1, 2]}, {-1, -3, -1, 2 
     11^Rational[1, 2]}, {-3, -1, -1, 2 11^Rational[1, 2]}, {-1, -1, 3, 2 
     11^Rational[1, 2]}, {-1, 3, -1, 2 11^Rational[1, 2]}, {
    3, -1, -1, 2 11^Rational[1, 2]}, {-1, 1, 3, 2 11^Rational[1, 2]}, {-1, 3, 
     1, 2 11^Rational[1, 2]}, {1, -1, 3, 2 11^Rational[1, 2]}, {
    1, 3, -1, 2 11^Rational[1, 2]}, {3, -1, 1, 2 11^Rational[1, 2]}, {
    3, 1, -1, 2 11^Rational[1, 2]}, {-1, 1, -3, 2 11^Rational[1, 2]}, {-1, -3,
      1, 2 11^Rational[1, 2]}, {1, -1, -3, 2 11^Rational[1, 2]}, {
    1, -3, -1, 2 11^Rational[1, 2]}, {-3, -1, 1, 2 11^Rational[1, 2]}, {-3, 
     1, -1, 2 11^Rational[1, 2]}, {1, 1, -3, 2 11^Rational[1, 2]}, {
    1, -3, 1, 2 11^Rational[1, 2]}, {-3, 1, 1, 2 11^Rational[1, 2]}, {
    1, 1, 3, 2 11^Rational[1, 2]}, {1, 3, 1, 2 11^Rational[1, 2]}, {
    3, 1, 1, 2 11^Rational[1, 2]}, {-1, -1, -5, 6 
     3^Rational[1, 2]}, {-1, -5, -1, 6 3^Rational[1, 2]}, {-5, -1, -1, 6 
     3^Rational[1, 2]}, {-1, -1, 5, 6 3^Rational[1, 2]}, {-1, 5, -1, 6 
     3^Rational[1, 2]}, {
    5, -1, -1, 6 3^Rational[1, 2]}, {-1, 1, 5, 6 3^Rational[1, 2]}, {-1, 5, 1,
      6 3^Rational[1, 2]}, {1, -1, 5, 6 3^Rational[1, 2]}, {
    1, 5, -1, 6 3^Rational[1, 2]}, {5, -1, 1, 6 3^Rational[1, 2]}, {
    5, 1, -1, 6 3^Rational[1, 2]}, {-1, 1, -5, 6 3^Rational[1, 2]}, {-1, -5, 
     1, 6 3^Rational[1, 2]}, {1, -1, -5, 6 3^Rational[1, 2]}, {
    1, -5, -1, 6 3^Rational[1, 2]}, {-5, -1, 1, 6 3^Rational[1, 2]}, {-5, 
     1, -1, 6 3^Rational[1, 2]}, {1, 1, -5, 6 3^Rational[1, 2]}, {
    1, -5, 1, 6 3^Rational[1, 2]}, {-5, 1, 1, 6 3^Rational[1, 2]}, {
    1, 1, 5, 6 3^Rational[1, 2]}, {1, 5, 1, 6 3^Rational[1, 2]}, {
    5, 1, 1, 6 3^Rational[1, 2]}}, $CellContext`nodes0$$ = CompressedData["
1:eJzMfXncX9O1/vtmDpmIzAkZDI1IiYQawvegUbTmDJq6qlWkhlYrlA68QdEi
9GpziaqI3lIuzS1tzWcb05b0F1RKTKm5ahZJkOHH96x10vM83+ddb7j387nv
P9/Pe56z1l5773PWWs/a+5wz7KvfPOjIdk1NTU/+vampQ5P/vVmD3zw4Tvi1
Xzjk5e/+fv1M4ZM232r6Lk/0kbjJp0Be4hMvnbfw3eOWS/sj+0w+6p9sf8HO
px/1izk9pP5p5zaPvefOh6V+k5f6Z39n9YPjd1sl5Q2X/Y/si/TDcZb/w+q9
d/zsMKl/wdJrvvqFec0SH/fNVRd/+9wNJT7t6fe3eKFXx0h/at2+zSL9Uv7N
Xa8e+PrvVsj+R/aP2Gf1H67s2DmwT4+f2R/JR/bL6yMaH7M/Gj+J2/gE9uv+
RddPNH9R+227fvT4tuy4+6ef/ONW0r7Z85s3mzenSeJNJ5516M0/GRDgG0T6
pX1p8LB+3/jaNpF+PT6fuvy59xa/r/1DYP+C98cd8twj7aX+aPzM/kg+sl9e
/9H4mP2Er17z0d8bteZgfmx8pH1R/9T1A+1L+aj96PoJxret/6vrJw/ygzyI
33mQH+RB/A71B/lFqD/IL/IgPucvXl4bu/8BH8j2g/whxIP8oa247F/0fxB/
8iD+hPJBfM6D+BzKB/ElD+JLHsTPTywf2RfE3zyIv3mQv3xi+ci+ID7nQf4T
ygf5RR7kh6F8EH9yFX/aKh/E5zyIz6F8EF/yIL7kQX4j5S3+5UH8De0L4m8e
5G95kL98YvnIvig+B/lPKB/kh7nKD2F+SB7iLtkHcZVwyBsULuUhritcxq9P
aj/EfcKhbkA4xOV11g95gdIftS/x6H/w+4RD3GX7q3GFx68aF0X7m0kc4u46
2xf1D+KCsk/iEHcIh7xmnfvftvEr46Yan8h+ef1C3rfO4xONb3T9RPZH/Y+u
H/D7fL9U4y63X40rQn4DiUPeoPRL+yP72ta/Mi4o+yQOcYfxal6zzv2Pxg/i
phqfyH7tv6t53zqPTzS+bbt+tP1R/6PrR/B+xJPCBW9H/H9NXtQFEMfja+e3
Me8vccH7145vY17eZlzUBdqMC96P96O2rzFvbzMu6gLovz82LuoCKj6uMy54
eZtxURdoMy549zrixMvbjIu6QJtxwdvbjIu6AM6flI9wURdQ8WedcVEXQP/9
sXFRF1Dx8WPiZXxZZ1zUBdqMC97dZlzw8jbjoi7QZlzw9jbjoi6A8yflI1zU
BSA+NLUUcZ7rN9Xj/sfxRdXvI34+fY+vdf72lOfl+rgf9/MQ3/jZ3x18/8+G
Zqq+7vH3qV6Pz3iyD9dnx9977NXnj+qe3Trst+1vGfUK6Xc5VX//i7XrdiB+
s+n1dhq3PyBT9fuf23E/D/EH2p/zxwldO2d3/mRu7Zip75F9d9hxPw/xC04Z
evuPO/Ux+X9Q+3fYcT8P8Xv/vFGHx8b0yrrcclLzlFmLqf1Crnf2/RETTv/r
Tbz/opfJuR7Ez6/Lb5YVeH+a35NM70xrp7F9/ZPraYwPzp7Z66FNtru+A+kv
xq2n2f8s9e9pk3M9iD9Yl19u7XQh3PV6O4jfZ3Kup7H+Naa/g5DvkPl5jcd3
hI3vRtT/++z4BXYe4hPr/qFjdl39Puf1MT9+sJ2H+OCxF024+tS+2ZD679t0
fQy240PsPMQL/9I7O+TIu3f/241Pkfz8p3Z688BN+2QX3nbSkqv2eoXwA0zO
9SBe+L+hWYH3pPGZaXq9ncb29UyuB/HJ9eMjssli/bQY3642vu/Q+Do/m2R6
EL+/btcqGwcef9fr7TQev47ZfaaH+j/gj3MfGd+cFfPUjuSH2HE/r/H4bJKp
9Vs/7uc17r/HP/+j+CTXl6P6sMUduT5s/j+T/v8HN+93cI/V+V+6r8wO/A3f
nyaXVPwy/19T/t/iU1LxyfWq+Gl6k4o/flzFz2L8m+364/k1/5gF/jFX/tHi
T03FH4sfeRA/koofFh9zFR/NPyblH82upOKn+fc88O8p8O+58u9md1Lx3+Jj
LYiPWRAfUxAfk4qPFj8yFT9s3lKQPySVP1h8Syq+eX0r8I+58o8Wf2oq/lj8
qAXxI6n4YfExV/HR/F5S/tHiZ1Lx0/x7Hvj3FPj3pPy7xf+k4r/Fx1oQH7Mg
PqYgPiYVH93vq/hh85aC/CGp/MHiW1Lxrfgt+RXZH9U/4TySB/5D7QN/Iv0e
l/5gcQpx4GfUPvArwoHf0PwAfyJ54F9kH/Ajkve45HEKccj/afyAHwn/Vubn
ZB/wI8KBvwn5kr+Q/cBPSB74B8lDfk848D/Cgd/R+AB/o/EFfkL2A3+l9oF/
EQ78htoH/kXywE8JB/5FOPBTwiH/J/uAH9H4Qn5O4wf8iOSBvwn5kr+Q/cBP
SB74B8lDfk848D/Cgd+J+F/yNxpf4CekH/gr4cC/RP9KfkPtA/8ieeCnhAP/
YrzKT+X4w3GMP3J/LfAX6h/wI5IHfkU48B/Crb5m/r874cBv6PoAfkT9d71W
HyQc+BfhwJ/IPuAnNH6Qn5M88CfCgV+QfcCfhP6SfxAO+buKb0nFN8jflf/P
A/+fBf4/Kf8P/IZw4Hci/pf8htoH/ko48BvSD/yN5IF/0fgB/yR54CfUf8jP
SR74E+HAL8g+4E8kD/yDcMjfVXxLKr5B/k76gZ+J8Sv5pbCv5G80vsBvCAd+
R/0DfkPtA38V81PyG9IP/I3kgX/R+AL/JPnit6mlsJ/3V1eP+99afM+n9125
51/flfU5P+7nIe78JOI3rdfPOmb9T/3MW4MOnE/6XS7iP6q+N9T0ejuN29+g
jfyI1/fmnL3JG3v+7c5c+T8/fo6dh/jAt7JT+nTvYfxpKeF+3M9D/Ec/G9ll
3hFdJH8p5NaT61OnmNy5pgfxAXX5jeX6xu2md5C1g7jLuZ7GeH/rfzfSv1XP
wcP7bfZqTdXnnjY5Ff9b6uN+g6z/OT/ydhB3fnWu6UF8m7rck9YP3h9/nx0f
bec1Ht+Bmcof7rPjA+08xLO6315gfpDrJ358dzsP8ed7PbDde5f3zE4894XZ
K//C+c237bifh/ik+v6wntlk8XzYDkcNPW+/d7rJ9SnfXzbR9CBe+K9+cn3D
9e5o7TSWd37UT4zPMOOPnB8fVLfrpZqqz00yuUmmB/Ell8zYaqcF99RU/c/1
7m/tIO5yfzM9iN87bNaxb+/8TO25+vxw/daPJzuv8fj0sfHl/NCP+3mNcd9f
438UX+T+BOc3yn+f8MEJl/9q8Kv5zwetmDH3ML7/nZ+0jf+w/3beEvGb1uPf
BiF/UfHvWovv14r6q/k3Wf8x/ybXry1+1FT8MP9fC/y/XL/xdQ0V38y/JeXf
zK6k4p/zl8A/p8A/58o/W/yuqfht8a0WxLcsiG8piG+5im/m/zPl/y3+S/5i
8V+ur1l8Sio+mX/LAv+WK/9m8aOm4ofvPw78v1y/sfiWVHwzv5WUfzO7kop/
zl8C/5wC/5wr/2zxO1fx23lLEN+yIL6lIL7lKr7ZuGXK/1v8T0H8l+trNi65
ik/Fb8lvyH7gH2Qf8BfSf7nFlW9YnEEc+BG1D/xGxYdw/UbV54D/kH7gJyTv
ceVawS8h/6bxA36i/K/nx4QDPyEc+BPZD/yBcOAH1D/I/0ke8mvCgX8RDvyK
+gf8icYX+AHZD/xR5QdyfwbwC2of+A+1D/yQ9AP/IRz4IeGQf5N9wE+U//X8
mOwHfqL8bxlHEAf+QDjwA2of8n+hv8yvCQf+RTjwK+G/+8n1E+AHZD/wRx7f
Kv8R/Sv5BbUP/If0Az8k/cB/SB74IckDfyD7gJ+QPPAbwoF/EG71Ka+DCfs2
CNdfVHxzvVZfIxz4D40f8BfCgR/Q+EF+TP0D/kI45PdkP/AXkof8n3DIn1V8
qqn4BPmz8t8p8N9yfzbwJzG+Jb8gHPiViN8lv6D2gT8SDvyC9AN/InngPzR+
wP8IB35A/Yf8mNoH/kI45PfKP9UC/5Qr/wT5s4pPuYpPkD8r/50C/50F/jsp
/w38gnDgVyI+lfyC2gf+SDjwC9IP/Inkgf/Q+AD/I9zjhoofi4975sGTV3SR
8cX9euv8ZWDEb6R+tFO0H63/SP37PXTH4SN26Cfta3r0jPWXLdTyRx930KLH
91kq7Ttg0YSXL/7gj9K+nTb85vqHbDxWtm/6pfzA7rvMv+uxIVK+0D9G4maf
tN/sk/0/9cz9pxyWPSftu73LaVvPuEiP3wVn/+K5w1/dUtrXcsxdHb83rV80
f/r6KeZP6jf7Zf/Nfilv9sv2zX49vzd+avGonbtK3OZX6rf51ddnoV+P/zFz
f3rT0C30+M+95apH1mws5W94qv2wieNWyPE7amLv//xlx/ckPnTuNv0eOndX
2b7pl9fXiV2end/+W8OlfKF/vMTNPqnf7JP93+s7l9/62oK3pPyFj9x03Nen
av+5U4e3npuxg77/s4eefOgfp4+I5k9ff8X8Sf1mv5wfs1/7l8J+2b7ZL+UP
nTNjx+236Chxm1+p3+ZX4qZf4n7c45zCFT9q4/udZP2sqp/r4yAfxW9pn8c5
hXscU3izxUGFe5wL9Evc42CgX9rncUjhHicV7nGqdfvGSHmPk8H4S9zjkMI9
Tgb2S9zjqMJtfqW8xzmFexwL2pe4x7lAfzQ/Evc4p3CPYwo/3eKgwqdZnAv0
0/Xp9ZlhFgcD/fL69jikcI+TCvc4pXCPo4H90fhL3OOQwj1OBvZLvGZxVOE2
v1Le45zCPY4F7Uvc41ygP5ofwg//Yc+mIzbdMNzfdtPjd1762pt8/aT1Nmm6
f6+VxgPfJNzlovqe24G46/V2GrffQcY/P+7nIT7/5gtGf6Zbp3TrOaPnH3YT
11dus+P323mIL/z37VdNPqN9Vsgzv77Njj9k5yF+/eQFh599aHM2veeXZt4x
jdcX52x2/PvXd1hTK/Tz+tbJJneD6WlsX+9synVHbbPHDbw/4TbT6+0g7nKu
B/HJdXyj7Kl7Zh2x9WKu/8781qAvfaP/yrywn/v/tMlNMT2I/7E+7svyAuf9
DbeZXm+nsf1N2XzTg/hFdblXbfzYP19vxy+08xC/sj5uPbNCnuPP9Xb8CjsP
8TmvTT900vFr8nsmLP7cw4exf/DjV9p5iP/5oDHTD3upffabziN+d/xp3P8b
7PgDdh7ip06dOPLBI7tkZ59304W/vIPrg0OvOftPN45vzr742wVf7j+Sr89z
TO67pgfxbVbufUP3J7pnu4y+dqMXt+X4MdX0ejuIu5zrQfwXfSetd+KAoVkx
TpwfFOO73MaX9d9tcq4H8b57X7XLzHeW5qed+K2bXx/G15/rvdLaQdzlXA/i
Z7x02cJvjX8jv/onFww693V+/++v7PiZdl7j8e1q48v1ez++tZ2HONTnSN7/
D/iD3J9mvEXiUJ9T+mV8gvoQ4VA/IxzqN4RD/YzHp1r/U/olDvU/wqG+peyT
ONS3CIf6D+PV+iLhUB8V4z8mmj/ZPtQXlf26f9X6q7I/aH+MxKE+SDjUTwmH
+p/SL8cf6kOEQ/2McKjfEA71M7a/Wv9T+iUO9T/Cob6l7JM41LcIh/oP4VBf
JBzqo2L8x+v7o1ofU/MncaiPKfvl+EJ9UNkvcagPEg71U8Kh/qf0h/vT4Djh
in9U4x/zD5CP9Eu88DP8fgnHe/db1XLWu6vJvsvc7lE/WNp1a85fXH77CcvP
uGAJ8yPQT/ZdYviJmz7dd954rh+Bftk/Vb9zvIhTvL+ylBf1G+//9Lp9m5M8
2E/yMP4SV/VNx4s4xe2D/YS7/V3mPfy5K968O5pfaZ+1L/ENDnvkrEUvcH4P
7UfzE+mP5kfbX/czo+T49fnsMefcOpuv//K+ve38mw9paiflx137o4MePoP3
h4B+6v/lhhf1qXGRftk/Vb9z/MVe917Y+Vl+v5Xjqn7jeOGHtyV5sD8a/8h+
Of5FnOL6Ntgv8W6PHXnvfe0WRvMr7bP2JT7y+P06tV+q/aO1H81PpD+aH8I9
rkT1L+dJiEM7yn6Lj/z9qOL4Mv8l+Zl1v9Lf1h+4/lXkv70M5+d3Cr/UIWue
uP6nH9vjAdJf+JWu2XE/fr3joLseJ/kVB38k94T5Z/Yvhf6N0o51O/j58jV/
/YjfLKtdNvd7d+15AvevqbDL7RT6e6UifvD871v0O7dxILzwe92yov0XqX+F
3FBbH+H6VnG8KSt42otkf9H+h3693o8nBL5+KvTw/rrCvsHWPu+vs3HzcST9
04p5y20eSb/Z7f0g3MYlt3EivLivh1v9n/dX9T1u6K1LOm6Q3b7DmYP2XLSM
xnf51N1+2G5Zu+zaTm90fWYiv59rep0f9MoK/83xvWnCiZ+7es0L5h/5/i74
RbdU+NcBhBf84u3awEc/O/Lru/H3leYVdrmdQn+XVPgPXn+7reh3buPA7Y+e
9ae+X+mZHf3c6PvfbOH1kULvAFs/4Pi477xZi6d8vilbM3ru1gMn8fNTNi7Z
ms/Wx4n9RzFvyeaR7LN+WftcH7RxqxXrK/z8zLbFvOWFPN9/TZ+u2+39IPyo
YlzyGcU4Ee7+9+N+X9H978fFnRfI9i3vV7jzBoU7L1D4dMv7A/3Sfs/rW9e/
ucSdVwT2yflx3iFx4xUK97xejr/l7cH86evH8vrAfqnfeUVgv27f8n6FO28I
5lfq97w/0K/H33iBtN/yfoU7b1D4WOMFCh9qeX+gX46f5/Wt699W4mafHB+z
T+LOOxTuvELhntfL8be8PZg/ff1ZXh/YL/U7rwjs1+1b3q9w5w3B/Abzs63E
nTdE+T8cV/FJ4sH+tRTsD0rB/qAU7L9Kwf6pFOyfSsH+sRTs/0nB/p8U7D9L
wf6zFOyPSsH+qBTsj0rB/qgU7M9Lwf68FOxPS8H+tBTsT0vB/rQU7L9Kwf69
FOzfS8H+sRTsD0pqf5A/vxzsv0rB/qkU7J9Kwf6xFOz/ScH+nxTsP0uqfuV4
sD8qBfujUrA/KgX7o1KwPy8F+/NSsD8tBfvTUrA/LQX705LafwXzI8c/2L+X
Wt8/tmH4/hb/v7H8stzrSIhb/cHqC/z+Fqu/5F4naiz/TllnQtzqD2UdCXGr
rySvEzXW3z5Z/YTst/pI8jpQY/29zP/x/iuvO3kdCnGvO1l9jPMTq/uUdSDA
rT6W7+d1oIbtv1jWoRq3v1Fm9TPCrf5n/eP3j3hdyOtEjfX3yqx+Rvq9bmT1
Pxo/rwt5naix/g95vdWZyH6rG3kdCXGrv+ReJ0Lc6itlnQlxqz9YnYavT6uv
JK8Tkf1WV7L6icgf+yWvAyHudR+rf9H4eN3J6iek3+tOVh/j66+on+ReByK8
qI/lXgdC3OorNauvEO51J6ufEe51I6v/Uf+tvpZ7naix/i6Z15kQt/pfsvof
jZ/Vz5LVzwj3upLVx6h9qO8o/yrr91B/EPfHlhKH+gBfH9X6DOFQX1L6ZfyA
+hLrr9ZPlH1SP9RPCIf6AuFQvyIc6m9i/PX8QP1FzV9kv9QP9T1lf9C+tg/q
T2p+5fhBfUnplzjUHwiH+gzhUB8gHOozbH+1vqT0y/GD+hLrr9ZPlH36+q/W
TwiH+gLhUL/i67dafxPjv63Eof6i5i+yX+qH+p6yP2h/W4lD/UnNr56fan1J
6Q/fPxKtHwT7T3JVP7D9MXmwvycP9ufkwf6cPNiflAf7S3K1v8TxYH9TrvY3
uX3B/ps82H+TB/tvcrX/xvFg/1ce7P/Kg/1PebD/KQ/2P+WqfgTtR/Mjr29V
X4P5kfLB/pNc1Q9sf0we7O/Jg/05ebA/Jw/2J+XB/pI82F+SB/ubcrW/yfFg
/00e7L/Jg/03ebD/Jg/2f+XB/q882P+UB/uf8mD/Ux7sf8rV/h6Yn0h/ND+E
F9+X75Hsl/rvx8faeY3x1f4r9K/O/TzEi++nr/JfIb/Mfwl3Odej7B/Xqv3L
cm9Hjc9YMT7F9+V7Z/Yr9Hey8e2k5JPrWdfxc71jrZ2PNz9R//X4e/vjWm2/
k40f97/4PnmnZL8Kz2bYeYhPWt7u4s2+stp/yT4/PsXOQ7z4fvmHfr34Jf1N
c6/fZeH67/kv52cu53qE/S3Cftfb7O2I8ZnR6vhsbPobvB+ufrydjW87JZ9c
jxq/SWL8XK+3o+ZnipifclxF//14sxj/qP2o/8V9R98dLfEP1nz090Z+aePz
TH64HV/C9tvx6nl4f/h7N3h9qJAr3xst9HfJqnpQflvzT/x+MtFOiV9qcpea
nsb6fV3A/xD3dRXeP2XHW6p6UL6P2c/1U9dbbQflN8hcT2O8X6bi33Z2/DI7
r7H8GJPn+2+sHb/UzkN86N9eu6jXEcOzbcT7w8facT8P8X8u73rCxMUjsqHr
Tbvra/fw92n9uJ+H+EB7v+64lad85tZlXJ/N9v3yfb/eekR23RePueKsC3/J
8cHkBor3ty95p8c1p80fnanvTy0wvbtZO4i73DOmpzE+0r7fyO8nL8ZtRNYi
3m/vcq4H8a2m/3vfvmf1zzZY9uj7N3fh/Pgo0+vtIL6hyY0yPYi3/OmlY499
fEB29OdHHdDjMObXR9nxGXZe4/HdKrtAfJ/Lj/t5iI+1/GB7kV8svP3d/f88
zOvifH3YdW/H/W8tvvyQr538qeNX5Mvqv+zfCvnyuSiRfwzMJtX/HhX2vZKr
/Oq20352y5CrX8sPzf/85MxHGI/yX/DvnF8XfiUF/qnllCsO7r58Kq9PFuP/
dq3wL8xvltu42ThS/82/J+W//XfB0mu++oV5rH/k+f/x6y/NaZ9tWf/l99cX
4zLcxoe/P10c72L5Hd8fO60as3DWhLF2f/L+2C6/euDnW7yypnZJ5x4/OW9D
vv4W7P7tpn9OWl1rPm3RN/e5lPEXl87PvtR3g2zaire+Mf01Xh8/oMslX17W
Z3hW6H+a5u/E94+YM/q89/PCv/D12f23X33lqP/Xz/T/vbH+nw01//0g6X+5
bl9zGii+f1HYt7v8fl9h39K8uH/5/aEnPdL7/+30fOe0985TD/rdgTz+nb44
5qQbX9pSft/2jH9s+9KP3u9t9vP3QYr5G2H+keNfU33+njE/w/Wpvo/O2vsH
311e2+ehnjM+8y32H4V9HbLshieGDbuf19861/GdrH2O7y11+9+x9vn6LvQ3
Z7vV9XN9r0d9freQ34cq5jez+eH8afbgX71z5skdUvOvt+s6YjQ/31L8NmUP
V/yovL85Py7+Wqp+lvnXI+YHEf8383u3mx9srJ/8MPpHyZ/dL7eef5b5F8lf
an5ve/ODje1bkqv82f2iii9Vv+t/lN9mlt+SfaPML7qfRBz8Kudv5jfHmh9t
PL7dMvejiPt3M3c0P4q4+8UHzU/S+JtfbW9+FvGjzW++ZH4U8SXmF91PNtb/
dO5+FnH/7o/7wcb6O2fTzc8h7n7X/TDi7vfcDyK+ufnlA81PIz7T/O5B5ocR
d7/nfpDaN7/mfg7xBeZ3O5sfRtz9Xmfzg4i7X3Y/3di+9lmz+eHG+BZZJ/Oj
jdtfae2z/3S/6n4Wcf8+Rjfzo4g3mV+81Pxk4/EfVoz/h34WceGX0H/lyn8V
dUF/r4//oX7fd8P5nQm0VPVQfmT3L3/ftL3pHVtph/yD5U/Dhf6yPkD6C7vK
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
l9XPJf+2vDSp+i3s7yb7gb9x/4q/FvV+Bcj/qX/Aj4R/K/NzwoEfkX7gd2Qf
8BfCgd8RDvxF5Hdlfk/2AX8h/ZDfEw78kXDgv4QDf6TxBf5D9gN/JBz4D+kH
fk3ywP/IfuBHJA/8j9oHfkz6gd8RDvyY8GmNn8sscXi+g+Rh/78Y33L/O8nD
8wmEw/59sg+eTyB52N9POOyPp/GH/f8iPyv3x3N+Un3+gXB4fkOM7yD5fkl4
foBweH6C+gfPD1D78HwI4fD8AOdX1ecjSB6eb6Dxgec7SB72x5I8xG+Sh/yG
xg/iK8lDfkM45GeEQ/5B9kN+xvqr+QfJQ3wmHPIPYV8Zn0ke8j/CIX8V4z9e
rt9B/kI45H9R/kLtQ35MOORvov3Bcn8+5G+kH/JbGj/Iz6L8lnDYP0z2w/5q
wmF/L9kP+6tJHvaHkzzsf1bxLw/iX67iH+wPJvtg/zPJw/5glR+kID/Igvwg
qfwA9k8TDvvPyT7YP03tw/58wmH/OOGwv5rah/3jJA/76wmH/eF0fcP+emo/
DR7W7xtf2wbH7V/8Z/G/OK826vlXHzv7xNH2/jP+/urBdnxLO4/6V/8uhc/b
RgIv18VJv8tV9azFh17338P/s+/2hqv929QOtD8wbWJ6GuOftuP+B+P7vI+b
fr9xVc9afPLmW03f5YnNskn1X/V+9RV5tR2U3yBzPST/0KKNX/7h5lnxy88H
l8f9vEbjO2s7G1+uD/pxPw9x+D4Kz++LXW45YYQ/d8X7/wv9bpf/rcV7jz3y
spfWW5nv9+J5N43uwv6t+G5NuS9C6N80m33pR39/Ivya1ztu/vm7O6SiHxwf
frFwl81++Ny7+cmHvv7EVcdw/Tr6/s+W1fuLrp+Jxbym1q+PppaxX7nszr13
akf4tV845OXv/n557br6Lz9ft7+NW59iHAm3+8vs5/0J/jt7fvNm8+ZwfXuj
7U459ftLm7P79pzzhQ8m8PersslHTNhn9AjTz9dn4X/ap0Uz/+PMMRvz+BW/
K2rNletI9i+4P/n6n2zz/l92HSDu8+7XgRofuA7x+pDfT/LrUvk/uP9J3uf9
OrsOEDf/nSv/bfdXTd1f1evO/8i/ZuZfyT6/LnrbdUL9r15X4v7tldXsOkL8
UbtutrTrCHExLxQf1fwVx70uzf2/bsjWnY8Y31/e3ybQUtVD94ddH1z/m2x6
r7V2xPgkGx+Bl/FZjE/pd1R8Tur6vK64bzLlP1fb81vN1XbU/Uf4pEvnLXz3
uM5ZcX1z/ujHp9h5jcd3uH0fjd+/5cdrfl7D8Sv9O8tX4xvNP/g/li/+3L8T
Dv6RcIiPhEPeF8VHsh/iA+kH/0/y0ffTIP6RfohvJA/xW4xv6WcIh/hOONxf
hJv/SdL/1P9W5EH8Sip+Va8L/5P5LbXv86L8r/8qfhB9f9CvmyB+pSB+5Sp+
mX9IQXxOKj7DvLN/a+yXlH+j9sF/MO7/F/GF+1+NHyp/ylT+BP5PtF/mTwIv
/Tvh4D+pffDvQn8Z/wgH/044xD9lX5L+3f5X9z98X5FwuH8IB34o/OvwrBwH
wI1XJcW/dr5u8Zy3Jzdn+z9/yqJLNub6MeR/nH8UvC8ZD+TxCb5PeYhdV2p+
yn4durDv6B7s3/czu60fLN/4vsDrKw/yhxTkD0nlD02V+4Lnz66/WpB/ZUH+
Zfpl/pXK/xvi3TOVn1TvK/8j/5JUfurzqvIni+8piO95EN8zFd+NlyTl/4y3
ef9aELf8KAvyo1qQH8nx9/lT+ZHFnZrKH+D6InnLb3KV3wi/BfaV9RlqH+6/
jOwr7Kqp+hPYx9en/VX9HPqfXqn0Q4gH3w+G65Pk3a8o/1j1S/5H/Li8DhGH
/I76B/kN4ZDfBePXYHzsF65Tlf9E+ZnQX+anhEN+Jq4/qrtW49va+i2ND9Qn
Vf9z1X8fPqu/Eg71TW7f+m/Xv9Bf1qcZr9Zflf0+Tko+yfqt/a/qbxC/af6h
fkU45B+i/TK+kzzkJ4RDfkb6o+9bi3mn8Qnq/1lQ/zf9/kf5neHsv33cVH0c
4r/Ay+uC/UPVf5I8xB+hv6w/Eg7xl/oH8ZXkIX+L4ifhkF+w/2p83avxT4hb
/KvJ+Fe5rv1P5l+kP/p+O9RfCYf6JdvXeJxLHOqrhEN9WdhPfkndXyQP94eI
bytqyr/C+FH/IX8V15fPi//J/IDkIb8n++D6IdwabKnaIfN7Gl/gNyxfzY/U
/LT1V8pNrOdXy6V8kQeWzz8qeanf5FOAS/0Ff+gj8Ui/yUt89ndWPzh+t1Wy
/9PObR57z50Py/6Z/MfGF+x8+lG/mFPuL/y4uOyf/cr2xXcYy983d7164Ou/
W6HHJ5CH90Mo/Xr8AnnxHoe149P4O0AgT9+J+x+Tj+wT7+HG9qV+8R36/zH5
yD7xHoDyd8Q+q/9wZceyvrDO8uI9xaj/Y8uLdbC14/epy597b/H7dFysb9F5
Yh8M6pfXfyQv8si1/W9cBy9/xTrR/5h8ZJ+og2H7Ur/YB/KJ5UV9W8lLfMH7
4w557pEyv1tneVGnQv0fV15ed4Cr8/IgfudBfpEH8TsP8os8yA9C+4L8ILQv
yB/yFy+vjd3/gA8kHuQHeRDf8yA/CO2L9IvjJR7ED3x/HNvXenzPg/iK3xci
PMhP8iA+5EF8Ce0P8ptw/IL4i99XU/ZH+iP79fUbzE+Q/4T9a9v1o+cvaj+6
fqLxDeIP1u8ID+I77t9V+sk+sX6m9OvxaT2+hPYH+Y0cP8GPlXxkv7QvyP9y
lf/B+En5IP/Jg/wnvH6i+YvaD/I7Ob5R3aCNdQHVr09cN2hjXUDK/2/XDT4p
7/8fqjvI/tmvlI94/yetK7SR90f69fi0ibd/fF7/SesSER7x9k/K6z9pXaKN
dYeofxKP6goR7/+kdYWobvBx6wr+20beH+mX13/E2z8pr/+kdYkIj3h/2/CI
13/8ukQb6w5R/yQe1RWiusEnrStA/KXrDOIv4ZA/KDxXOMRvhcv2P6n9EP8J
B95POMT3ddYP8V3pl/ZHOPwSrt6rXton3gtdti/eK1+Vb/RemuJXfL9cxc91
tq9t/VPfpZDvn1DxhXDIX9a5/9H4Bd9tlt+tAPulfsjv1nl8ovFt2/Wj7Y/6
H10/8rkh+1X7Ukr71L4e+1X78qvtq+cG9XMPbbUv6l/r+7IofvL4VuML49X8
ZZ3737bxGxCNT2S/1A/53TqPTzS+0fUT2R/1P7p+it+mlmur+6shfvpx/+O4
onh8FJ+n7/G1zt+e8rzk4X7cz0N8/L3HXn3+qA0yxZM9Pu/59L4r9/zru4QX
8h2z/qd+5q1BB84n3OUUj/+5tet2ID7U9Ho7jdsfkCke/xc77uchvpW9F+jO
n8ytHTP1PRqfO+z4VtX3B5W//n6dQv4f1P/b7fig6vt9SvzeP2/U4bEx/bNn
9npok+2uL99fCfp7GL6U9D9tcq4HcX+/a4H3Iv2uF97vVOL3mRy8v73Ef/Sz
kV3mHdEl+/6ICaf/9aZnyb459v6Hop0OJH+KyZ1rehD37x4U9jOPcL3nVN+v
AvY3ZaOr309Y6x/s/SOFfrbvPjt+bvX9OjC+G9v4ls83wPxulAZU339T4gfV
8/uXbJ8xr4/58f3tPMR3OGroefu90y0bMvaiCVef+jbZ58d3tPMQL/ZtD7Pn
q0s/WOLP93pgu/cu75mdeO4Ls1f+heuYk0xukulBvPBffbLil+sI3za93k5j
+c7J9VD79XHpmU0WddbsyLt3/9uNC6yfXIdxfjXR9ND8DZt17Ns7P1N7rm7f
Ghp/17u7tYO4yyXTg/iSS2ZstdOCe2qD6/PUjtr343+z8xqPT79M1Xn9uJ/X
GPf8w/+Y/wTxydtV8Umuv5r/ryn/f8IHJ1z+q8Gv5j8ftGLG3MPYP5tcUvHL
/H+m/L/FJ1lndr2tx88BScUfP67iZzF+71j8f4f0m3+sBf4xV/7R4k9NxR+L
H1kQP5KKHxYfcxUfze8l5R/9u+Aqfpp/T4F/T4F/ryn/bnbnKv5bfKwF8RG/
b4LxMQXxsabio41bpuKHzVsK8oek8geLb0nFN69PBf4xV/7R4k9NxR+LH1kQ
P5KKHxYfcxUfze8l5R8tfiYVP82/p8C/54F/z5V/t/ifq/hv8bEWxMcsiI8p
iI+5io/u91X8sPwhBflDUvmDjUtS8a34LfkV6Y/WP+1X7l8C/kPywJ/I/sst
Ln3D4hTiwM8IB36l4kvWRv5E/QP+RTjwIzG+75RxCnHI/8l+4EeEQ35O+oEf
Uf+Bvwn/VvIX6h/wE8KBfxAO+T3hwP8IB34n4mfJ36j/wE9IHvgrjQ/wL7IP
+A21D/yL2gd+SvqBfxEO/JRwyP+pfeBHyn97fi78f8mPqP/A30R+V/IXsh/4
CeHAP4T+Mr8neeB/hAO/E/Gz5G/Uf+AnZB/wV5VfOP8i+4DfUPvAv0g/8FPS
D/yLcOCnwj69vyY6D/gLyQE/InngV9R/4D8kb/U1r+MJ+0p+Q+MP/Ijad71W
H6T+Af+i9oE/Kf+YWvePZX5O+oE/EQ78gvoH/InkgX8QDvk72Q/8RMS3Mn9X
/j8P/H8t8P9J+X/gNyr+JxX/gd9Q+8BfCQd+Q/qBv5E88C/CgX8q/5iUf4T8
nPQDf6L5AX6h/FsW+Ldc+TfI38l+4CfUPuTvyv/ngf+vBf4/Kf8P/EbF/6Ti
P/Abah/4K+HAb0g/8DeSB/4l5qfknzR+xW9TC7w/Fa4PP+5/a/Gnej0+48k+
HUP+4+ch7vwk4jet18+6Z7cO+237W0a9QrjLtY3/8PV7s+n1dhDf+NnfHXz/
z4aG60d+HuL2/TrJf/y4n4e4fz+rOI/3yZ5kx2dWv98F/nNwpvyXf/9G1dee
NjnXg3jxfvkRcn3jDtML36+C+LSRfz9Y2N8r63LLSc1TZi2m8XvAvs+i6nO9
TE7Ff/uuh6z/OT96oPp9JoyvmetprH+56ef67H123M9rPL6byfzBj59f/T7V
Wv9Zv7+72vvjuH7sx/08xOc/tdObB27aJ7vwtpOWXLXXK3R9zLTjfh7ihX8a
YfyI41sRH/rK9SnfnzbJ9CBe+OVN5PrGYNM7xNppLO/8aBOB984OqfvXpzg+
1e3qmKn63AEm53po/Ab8ce4j45szVf9zvQdbO4gPMTnXg/j99XlZZfPI8n78
Pjuv8fgPtfFV8bdn8vMayzsv8T+KL23kNw389w9u3u/gHqvzv3RfmR34G75/
nZ9E/Ef5b+ctEb9R8c/0hus/Kv5Nsvg+SdRfzb/lgX+T69cWP2oqfpj/zwL/
L9dvfF1DxTf/Ponybxb/kop/zl8C/5wC/5wr/+zfn1Xx2+JbLYhvWRDfUhDf
kopvXv9U/t/mLQXxX66vWXxKKj6Zf6sF/i0p/2bxo6bih+9fDvy/XL+x+Jar
+GZ+Kyn/ZnYlFf+cvwT+OQX+OVf+2exOKn5bfKsF8S0L4lsK4ltS8c3GLVP+
3+J/CuK/XF+zcUkqPhW/Jb8h/cA/SB74C8l7XPmDxRnEgR8RDvyGcOAXNH7A
X8g+4D9sf5WfEO5xZZLgl5B/k/3AT2h8IT8meeAn1H/gT8I/lfyB7Ad+QPKQ
/4v+l/k14cC/CAd+ReMD/In6D/yA7Af+SO0D/yEc+AW1D/yH5IEfEg78h3Dg
h4RD/k3jB/yEcMiPST/wE+o/8Ccaf+APpB/4AclD/i/6X+bXhAP/Ihz4lfDf
m8j1E+AHIv6V/JHaB/5DOPALah/4j5Av+SHhwH/E+JT8kHDgDzR+wE9IHvgN
jR/wD5K3+pT5/+6EA7+g8QN+IvrXPVl9jewD/kPywF9IHvgB2Qf5MekH/kI4
5PfUPvAXob/M/wmH/JnsB34Q5c/Kf+eB/84D/y33dwO/UPE7qfgN/ILaB/5I
OPAL0g/8ieSB/5D9wP9IHvgBjQ/kxyQP/IVwyO8JB/5COOT/hEP+TPYDP4jy
Z+W/88B/1wL/nZT/Bn6h4ndS8Rv4Bc9PlT8SDvyC9AN/InngP2L8Sv5H8h43
VPy46fE7L33tzbfk/mf3663jG0b8Jny/VdC+jH+R/u0nLD/jgiUr9XtA5j38
uSvevFviRx930KLH91kq8f0euuPwETtsIvs/fdOn+84bv7nETb+0/4Kzf/Hc
4a9q+UL/lhI3++T4mX0S791vVctZ766W9m1w2CNnLXqhvZQf2H2X+Xc91kfa
1zTqB0u7bt0scZs/ff0U8ydxs1/On9kv2zf7Zf/MfokffeOnFo/auavUb/Mb
zM+WkX6Jj732Rwc9fEY3Pf6PHXnvfe0WyvG54an2wyaOWyHxC46Z+9Obho6S
+ofO3abfQ+duK3HTL+dvpw5vPTdjhzGB/nF6fAv75PiYfRLv89ljzrl1tr7+
Rx6/X6f2S/X8v9jr3gs7PztYj/9t5998SFM7idv86euvmD9pn9kv58/sl+2b
/br9wn6JHzpnxo7bb6HX721+g/kZF+mP4kMZ5xSu+FEb3+8QPZ9TxslAPn1c
+zzOKdzjGOKXGd7F4qCS9zgX6Cf7XL/HwUC/7L/HIYV7nFS4xynELzH8RIuj
gf3SPo9Tgf1yfD1OBvZL+zyOKtzmV9rncU7hHseC9qW8x7lAfzQ/Un6cxTmF
exxTeDeLg9J+i3OBfjm+HgcD/bJ/HocU7nFS4R6nEL/c8GEWRwP7o/GP7Jfj
63EysF/iHkcVbvMrx8/jnMI9jgXtS3mPc4H+aH4IT+tt0nT/Xh3C9Z/Fxz3z
4MkruL5UyK+sFTjHN5eL6ntuR2P5N3NvB/HDf9iz6YhNN5T72/y4n4f4zG8N
+tI3+q/Mbz1n9PzDbmL/eJsd9/MQn7PZ8e9f32FNrZDn+sVtdtzPQ3zydUdt
s8cNG2VP3TPriK0X8/rfwn/fftXkM9pnhX7m70+b3BTTg/iV9XZ7ZjdMXnD4
2Yeyf7zN9D5k7SB+vcldYXoa483Z9J5fmnnHNK4Pzr/5gtGf6dYpFfZz/epk
k7vB9CB+UX3cXzWc9w/cZnrvt3Ya2/de7ULTg/gf63LL8mL8+PliPz7fzms8
P72z4jyub/pxPw/xOa9NP3TS8cvzeyYs/tzDh3H//fiVdh7iQ685+083jm/O
vvjbBV/uP5LxqXbcz0P8F30nrXfigKFZ0c4Qsv/PB42ZfthL7bPfdB7xu+NP
4+v/bpNzPYhvs3LvG7o/0TXbZfS1G724Lde/bzC9D1g7iLvc1qYH8VOnThz5
4JFdsrPPu+nCX97B/rMY3zU2vux/zzG575oexM946bKF3xr/Rn71Ty4YdO7r
/B5H13ultYP4r0zuTNODeN+9r9pl5jtL89NO/NbNrw/j68+P+3mNx7e7jS/7
Zz/u5yEO9TnS778Bf5DP5xhvketHUJ+T8VXhUB8iHOpnhEP9hnCon/H4VOt/
Sr/sH9T/WH+1vqXsk/qhvkU41H8Yr9YXCYf6qBj/LaX9UB9T86ftq9bHlP3S
PqgPKvtl+1AfVPOr56da/1P6pX1QH+L4UK2fEQ71G8Khfsb2V+t/Sr/sH9T/
WH+1vqXs0+NbrW8RDvUfwqG+SDjUR8X4j5M41MfU/Ekc6mPKfjk/UB9U9ksc
6oNqfvX8VOt/Sn8QX+L3q6vzqji/3wTk08fFD1g04eWLP/ijtP/UM/efclj2
nLS/5Zi7On5vGj+/5XjhZ/j9FaBftr/Tht9c/5CNmf+Dftm+qt85XsQpro+V
8qJ+U7VvrJQ3+6Pxl+Or6puOF3FqSGS/xJsfPWP9ZQv19WHzK+WtfSl/e5fT
tp5xkb6+rX2J2/xE+qP5kfi0ib3/85cdmb85vtd3Lr/1tQVvSbz20JMP/eN0
3n9Q2l/3M1vI/pl+eX0Wfm68Hp9Cv2xf1e/K8anHKX39qvqN768q6je7Snmz
Pxp/aZ+qbzp+Ypdn57f/1vDIfomfPveWqx5Zw88/w/xKeWtfyl/4yE3HfX0q
8zdoX+I2P5H+aH6E/EAZfzyuOU9C3H7D/WvWjsCX+S/Nf+FXumbH/fj1joPu
epzmv8h/u2WXzf3eXXue8CLhhd/4kLfW/cuLpH9mHe9v8YPrP2v++pHcslqh
n+0r9PdKRf2e66srDl7/04/t8YTl2Q3eY1/Y5XYSXhzfKO1Y91+8P8f6nds4
EF74vV7WP36+oZAbbP6Vn28qjnfImid+1I8HqP82Lj5OhE8r5i23eRT2DbX2
uT64bzFuWVO9/SdIf4Gvnwp5fr6pkHvA+0F4If9ObuNE+PT6fd0rK+r/HH9b
Rs/6U9+v9MyOfm70/W+2cHzYd96sxVM+35StGT1364GT+Pmf4r4ebv6bn79r
qfuFt2sDH/3syK/vxt/RKPxOl1T4V85/miac+Lmr17xgeW6D77h8um6X20l4
ob9bKvzHAMKPKvqdzyjGgfC+xw29dUnHDbLbdzhz0J6LltH4mN3mP9k/Lp+6
2w/bLWuXXdvpja7PTOTnZ2xcaoX/5Odbti3mLS/08/wW7Q+w9nl9zcYtW/PZ
+jiy/yjmLdk8kv55hd3eD8JvK8Ylt3EivOp/1/07TVX/u+648wKFe96vcOcN
CndeoHDP+wP90j7P61vXP1bizisC+yTuvEPixisU7nm9nH/L24P5k+PveX1g
v5R3XhHYL+0z+6W884ZgfoP5GStx5w0KP8p4gcIzy/sV7rxB2m+8QOGe9wf6
5fXleX3r+nfV42u8IrBP4s47FO68QuGe18vr1/L2YP5k+zZ/Ur/zjsB+Ke+8
ILBfyjtvCOY3mJ9dJe68Icr/8Tjiwf4uuX/P8WB/UB7sD8qD/Vd5sH8qV/un
XH+wfywP9v/kqn7keLD/LA/2n+XB/qg82B+VB/ujclU/cjzYn5er+pXtf8qD
/Wl5sD8tD/an5Wp/GrQfzY/E1f49mB8pH+wPyoP9QXmw/yoP9k/lav+U48H+
sTzY/5Or+lF5/7S+/ywP9p/lwf6oPNgflQf7o/Jgf1Qe7M/LVf3K9j/lwf60
PNiflgf703K1Pw3aj+Yn0h/ND8l7XSiqH9n/pN/rRl5HQtzqD2UdCXGvC5V1
IsC9ruR1JsSt/mD1C34+0OoryetEjfUvy73OhLjVR5LXgRrr75a8DtTYvg/j
WlE/If1l3cnqUDQ+VvfxOhDiXvfxOlDj9t8p61CN2++VWf2McK8bWf2P+mf1
NfPPnB94XcnqZ4Rb/S9Z/Y/G1+tCVj+j9r2uZPUx6r/VHywP5P5b/SX3OhHi
Vl+pWX2F7be6kdeREPe6kNeJaHytrmT1E7Lf6iPJ60CIW/0rWf2Lx8fqTlY/
4evD6k5WHyPc6ie514Gofav7eB0IcauvlHUoxL3u5HUoxK3+l6z+x3lwUV/L
vU7UWH83q79zfc/rRlb/o/H1upDVz6h9rytZfYz6D/Ud0h+tD0P9gXCozxAO
9QHCoT5DONSXlH6JQ32JcKifKPskDvUTwqG+QDjUrwiH+psY/7HR/Mn2oX6l
7Jf6ob6n7Jc41GcIh/oT4VCfIxzqS0q/HF+oPxAO9RnCoT7A/a/WZwiH+pLS
r6/fan2JcKifKPskDvUTwqG+QDjUrwiH+psY/11l+1B/UfMncai/KPulfVB/
UvbL9qH+RDjU5wiH+pLS38b1W71+EOw/ScH+kxTs70nB/pwU7M9Jwf6kFOwv
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
6g9i/Ev+TuMP/JP0A3+n8QH+Se1DfYNw4N+i/ZKfUvvAv0k/1Cd4fqr8Wox/
WZ8gHPIbwt0vKf5T/DZlAX9Oij9X/aL/Ef9LAf/LFf+z9aG89fWhZbmqr7rf
DPhzCvhzrviz5WcpqA8kVR8Av0e4+7WA3+SK3xh/rCn+aPwvC/hfUvzP+G+u
+K9/tyngL0nxF+PPWcCfk+LPxu9SwO/ygN+lgN/lit+5XwzqC7mqLxi/rgX8
Ogv4dQr4da74tfHHTPFH92tB/SGp+oP7PcV/ZwteVMX7yf0RwF8Ir+ph/gP8
VdhX8lOyE/iXaL+sXwq85JfCvpK/UfvAL1X7zr+F/pJfCvmSfxMO/IZw4H80
vsA/SB74H/Uf+CnNO/Az0g/8i/1zlV8J+0r+QjjwW8KBv5L9wE+p/8C/SD/w
c8KBXxIO/I3aB35J8sC/CQd+yfNT5d+E2/2R1P1dzoPgH7C/jHDIXwiH/RlC
v/uNppbG+PCk9j8sP+RrJ3/q+C5Z8cv7E6H+L+x7JVf8eaztT9u+1f2BfVLr
/qGp5ZQrDu6+fCq/X8rtXlb0g/Ai7+mXTVvx1jemv/Z3av+ALpd8ednPhtr9
+SDNaxGXm43fcfwp8C0ztX/hjH9s+9KP3u8t9z/MHvyrd848uUNq/vV2XUeM
bvB8ZD0ujjX9/Hxil1898PMtXllTU/yx4Hc72f3B8aGlbt87NcUfTnqk9//b
6fnOae+dpx70uwP5/in4xVLjF8wvi7xlAxt/3p9cH/8+wyW/LvjdFsavOH4V
85dJflXMTwfjd/x+r76Pztr7B99dXtvnoZ4zPvMtvr8Kftec1P6Ywv7dM7W/
ZsHu327656TVtebTFn1zn0t5for5HWHz0+D9YvX5fcbmh/PnYvzfz4v4wNd/
5LcsvteC+nEK6sep9fqxX3c8vsXvkjyov2dB/d30yvq7t0vjb/ldpurT1bzG
/yi/M5zXJ9yvqfq55zVB/TWp+qvF/1zVtz2vCerTSdWnLb7XVP3d4resT1h+
llR93uJ7HtSPU1A/Tqp+7HmJqu95XhTU37Og/p6C+ntS9XfPe1R92vOaYH0i
qfUJy9+Sqp9bfTcF9d08qO/WVH3X9mfZceY/1bxE5S/dsqA+Xgvq435ctD8w
qfq41Y9rqn4M/o3G1+rbSdW3rX6ZBfVL6R+sPpyp+rDVd7OgvltT9V2rCyVV
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
kAf5QVL5AeyfJhz2n9P1B/unqX3Yn0847B8nHPZXU/uwf5zkYX894bA/nMYf
9tcTXnz3gtdV/He15TfN4rzrhmzd+Yjx/e39Zy+Q/sl2/Fo7D/Hi+xRe1+Xv
Axf2lc8lsv0mV9XzL9f/5CMm7DN6uH0fhPd3lnqr7UD73VPN9TTEPe/wv3/B
X+xyywkj3G9x/cIEWqp61uKTLp238N3jOmfXfeGQl7/7+wbPb5ne5ko7/zI/
JjfF9BD+esfNP393h6z4zgjXVyfb8f+y8xqP7wj7/givT/jxmp1H9le/j0Lj
kwYP6/eN57fx8aP5L/QPz5oqf2vx/Z4/ZdElGy/Pd75u8Zy3J7N/KOTL506F
/k2z2Zd+9Pcnvv4eWrTxyz/cPBW//H7m+/ac84UPJqzKe293yqnfX6ra19+3
gfuLxueQYl5T69fHh9fXoQv7ju7B9YtCbo398vqpj9v+xTgSbveXfT+Hv1/i
4zp7fvNm8+Zw/evkQ19/4qpjOmS/WLjLZj98jvc/DL3uv4f/56ztbHzYfzw6
8z/OHLNxp7Tl868+dvaJ8v7Iq9eR7J/wL00t1esM5//DeffrAPCNbN79OlDj
A9chXh/y+0l+XSr/B/c/yV9r8+7XAeLmv2vKf9v9VVP3V/W68z/yr1nNryPA
/brw64T6X72uxP3bP/PrCPFRdt0ssuuosTzPS1vPK45/OlP9L9ofLe9vE2ip
6qH7w64P5tcHm94trR0xPsn1NMbL+Ex4/b76WnlfqficqevT7ptM+U/XC+2o
+4/wyZtvNX2XJzbLJtV/OX+ZbMf9vIbj23d7s5/5sR/fxM5rjJf+neQhvkX+
j+SL39K/0/iDfyR5iI+sv5r3RfExig+kH/w/Xz/B99Mg/pF+iG9R/BbjW8Yv
wiG+Ew73F+Hmf5LyP8XviloQv5KMX5Xrwv9kfkvt+7wo/2v8IFf8IPr+oF83
QfxKQfzKVfwq57X1+JxUfIZ5J1z6pUr7pX+j9sF/EF49j+vDED/IPogPZCf4
P9F+mT8JvPTvhIP/VOPk/l3oL+Mf4eDfCYf4p+xLyr/7r7r/4fuShMP9w/qr
/FD4V49r/P4W419J8a/9XzzvptFdOmZ9xh552Uvrcf0U8j/Cryl4XzJ+SPqj
71NOtOtKzY/3a+xXLrtz7504PvY2u/cr+iHGn+8L/A3yhxTkD0nlD9X7gufP
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
F+tDpbxYf6DxgfUjun5g/Yvsg/UjMf7l+kspL9bPSlysz5B9sD5DOKwfkf2w
fkQ4rH+JvLFcX6H+w/oD6Yf1H7o+YP2EcFj/IBzWdwiH9Q+yD9YXSnmxPlTK
i/UHGh9YPxLxt1z/Ivtg/UiMf7n+UsqL9TPCYX2G7IP1GcJh/Yjsh/UjwmH9
i+YP1keofVhfIf2wvkH6Yf1Gxg8/D3FYHyIc1k9o/mB9huRhfYdw+5X1L1gf
ofZh/YDkYf2GcFj/UPxErj/D+oxov1y/IBzWB0r9Yn2nlBfrBzQ+sP5D1x+s
X4nxL9d/xPiX6yckD+tfYvzL9RUaX1hfIfth/Yf0w/oP6Yf1K5KH9RHqP6wf
kDys3xAO6x+Ew/qFiB/l+gzJw/oF4bA+QPphfYfkYf2AxgfWf2j+YP1K6C/X
f8T4l+snpbxY/yIc1lfIPlhfkfFP8QtY/5HxH/kP/kb8Y/Fxzzx48gpeHy1+
m1oK/9vgO6314xvK+pUf9/May7te/2P/HtW3/LzG+MBw/7LSv+avZ6y/bOGy
2mVzv3fXnifwd479uJ+H+PRNn+47b3y3rDjvRbLPj/t5jeUHZxec/YvnDn+V
/Z8fP9HOQ3ynDb+5/iEb98r2e+iOw0fswPf/vnbcz/PjHh9m1vX3N/m18dXj
y752/AI7j8b30Y/G5UWzk/fflcftPMRXHLz+px/b44la0T4/v7avHf/AzkN8
YPdd5t/1WNfsmB+/3nHQXY9Tfnu4HR9g55H9Ez/S+4DZ2SA+2vGVBxfnNR7/
oTZ/vD/Dj+9o5yHeMveWqx5Z83Zt4KOfHfn13fj5ST/u55H86Fl/6vuVntnR
z42+/80W/o7TUXbcz0N86Nxt+j10br/sxC7Pzm//Lc4//Pgmdh7ifY8beuuS
jhtkt+9w5qA9Fy2j9m+z436eH3d+sWOHt56bscPw7Pxj5v70pqEDyvZ9/mba
8Z3sPJq/T8/deuCkf9T2nTdr8ZTP8/Xnx5vtPJKfcOLnrl7zQu2Ceju8v8CP
t7PzEJ9eH59e2bhrf3TQw2csLfvv/dvejvt5KD+v0xtdn5n4VG351N1+2G5Z
O8L9+A12XuP5G2Dz1+A7YHbcz0Pc48PHfT+C+3+FQ/wQeI8A31Dyo8i+pnkP
f+6KN++W8fHo4w5a9Pg+SyX+mQnLz7hgyUqJF/57c2m/6Sf7VlX86yZS3vTL
/m9w2CNnLXqhvcQL+S2l/t79VrWc9e5qOX6F/+L+gf16forxl/rNfmlf06gf
LO26dXNkv5yfIj70kfI2v/r6KdqX/Tv6xk8tHrVzV6nf2o/mJ9IvcZsfPf6P
HXnvfe0WyvG54an2wyaOWyHx7er+q5vsX+FXtpW46afxdf9e+NdR2c9b1y/7
N/L4/Tq1X6rnp5AfJ+3r89ljzrl1tr7+i7gzhuwD+5Oy38Zf6jf79fV/2/k3
H9LULrKf5s/5y0u97r2w87ODpbzNr75+ivYlfuicGTtuvwU/PwntR/MT6Ze4
zY8cf49vab1Nmu7fi/M7iH+UvwB/SgpX/ALaj+Qlvu96/9515GW8//ZYw/94
8wWjP9Nt7fMZzYBP7/mlmXdM4/wP9FP/jzT8ys2Of//6Dmv3hzo/OMrwp+6Z
dcTWi3l/p+vfZeOjF/3b9/g93aBf9v/7Uzde/I/hzH+r8oMi+0p5HJ8p1x21
zR43DI/sj8Y/sp/0u/zXnrx/1qB/+U6vmD+y/+uGT71+9l3dbuH3O3j7058/
N+twMfMraD/SL/tn+qP5icZf6n947j21Iav5Pdc+vwtP3umGa3+/dn+25ydH
GH7ueTdd+Ms7eP8t6Kfr8xjDv7zi4kMH/cv+X9f/VcPvnrD4cw8ftrXU/+k+
T702fmP2L6Bf9v/nHfo8sttvuT54vOFbr9z7hu7/sr9a2Cf17zL62o1e3Ja/
Uwb2R+Mf2U/6q/Ijo/mT+r87deLIB4/k+r/jf75j2LUH3s38DtqP9Evc9Efz
E40/4cB/6PqJ3jtb1aPra15Ha4x3Mrv8D/GB4fMzMr8o6kK5qh9Z/ayG9TOo
79RUfcfqa0nV16y+l2N9D+pfmap/mV1J1f+sX0nVv6x+lFT9yOpfSdW/zO5c
1S+t35mqH1r9K1f1L6sf1rB+6L9Wv8tV/c76lan6l9XvEtbvquPTK6n6ptmd
sD4H9c2E9c3yt6gL5ap+ZPWzGtbPoL5TU/Udq68lVV+z+l6O9T2of2Wq/mV2
JVX/s34lVf+yulBS9SOrfyVV/zK7c1W/tH5nqn5o9a9c1b+sfljD+mH5W9iV
q/qd9StT9S+bt4T1O/+1dpOqb5rdCetzUN9MWN/0X6ifST+ucKifKfnw/aIK
h/oW4VC/IRzqL9x+tT6n9Mv4B/UppV/2D+pzLF+tP7F8tT5T4qK+p+yX/YP6
n7Jfjh/U/5T9Eof6p5rfwP4tJQ71O9V+ND+RfpIX9UuSh/oW4VC/KXFRf2H7
q/U5pV/aB/UppV+OH9TnWL5afyIc6jMlLup7yv6kcKj/Kfvl+EH9T9kvcah/
qvkNrp9xEof6nWpfykN9Tumn+RX1S5KH9f3UOs78AtoN9DN/cNzjDOKX+f5n
i1N+vBnkPQ4F+ql919/F4hTilxrucUjp9zgT6Jfj43FGyTdbnArsK+Wd37h+
j1OB/dR/GH85fx5nEL/E8BMtTgXzlxD3/m1ncUq173EmaD/SL+fH40wwP9H4
y/HzOKNwj1MK9zgU6Jftr/hbEaf8eDvAPQ4peY8zgX6Je5xR+OpbizgV2FfK
e/z/heHnWZwK7JfXl8epwP5g/sZF8yf1e5xSuMeZoP1Iv8Q9zgTzE40/6Yf9
XdS/6LtKxW+5v430229bv99AOOz/ovZh/5PIn8v9SyQP+9NIHvaHlfaJ/V08
TtX9W9Q/2L9GOOzfIhz2P4nxK/e/kX2w/47zx+r+NzH+5f4tIV/u36L2Yf8Z
5U+wv4z6B/vLCIf9eSUu9t+RPOz/ov7D/ifqP+xfInnYn0bysD+stE/s76Lx
hf1b1D/Yv8bjW92/RTjsfyIc9r+RfbD/jvoP+99o/GD/luAH5f4tah/2n5Xy
Yn8Z9Q/2lxEO+/NKXOy/I/nq+oHyzwPl8yH2K/lDyzF3dfzetH5S/tQz959y
WPYcxYGVNj5DF014+eIP/ij1F/fdGGm/6Sd596+F3+kn5U2/tN/z+tblx0r9
zisQ/8D6f37db2xJ8mC/bN/GX7dveb2c33p86aH7b7xC4UV8HEL6YX51HlC0
L+27vctpW8+4SOPWfjQ/Ejf9hMP8SPnsoScf+sfpIyS+13cuv/W1BW9R/90/
HDex93/+suN75XNYKF/4n/Gy/6Zf3j+Ff9pCypt+ab/n9a3L7yr1O69Q/S/i
j75/zP5o/KW85/Xy/qnHjY2lfucViLv/LeLC8AznD+Y3V/Nr7Uv7LnzkpuO+
PrUL4dB+av362VX2z/QTDvMj5WF9OrWOc37uuMcJhXucQdz7fbjFkUC/xD3O
+PFmwD2OKHlV/wH9Elf1p6r82Mg+0v+g4RdYnAnsl7jHmcB+OX8FP+D5h/kr
j2P/PM4o/R4ngvbl+HkcCfRL3ONMMP5S3uOEwj3O+HGvb/v4HWlxJNBP19cD
hm9icUbJexxRuKr/gH7Zf1V/ctzjTGBfqd/n18dnJ4szgf0S9zgT2C/Hf4bF
mWD+coVPtzij9HucCNrPAv1yfjxOBPMTjT/Jgx6FB+vf5f4h6j/sr2H91f1N
hMP+IGof9vcQDvuXCIf9PaL9cv9MKS/2P9H4w/4aGh/YH0XzAvu7yD7YHyXG
v9xfVMqL/WGkH/YfkX2w/4hw2B9F+mF/FOGwv0vUB8r9Q9R/2F9D+mF/E7df
3R9E7cP+HsJh/xLhsL+H2of9M6W82P9Uyov9NTQ+sD+K5g/2d5F9sD9KjH+5
v4jsg/1hpB/2H5F9sP+IcNgfxfNf3R9FOOzvYv9R/Mr6N9RPCIf6AOHA7wmH
+o/ST7iofyj9Eof6D49vtb5BOPD/Ehf1I2W/1A/1JWW/jH9QX1L2Ey7qa2p+
A/vH6vmt1odU+zq+V+s/Sj/ZL+pjJA/1E8KhPlDigt+TPNR/lH7CRf1D6Zc4
1H8Ih/oG4cD/CYf6kbI/Gn+JQ31MyO8q+w/1EbIP6mtqfpOaX6ifEA71IdV+
rvRD/Ufpl/ML9THC7Xedvz/v+aX143/t+/P+feX/q9+fB/tK+Q7V3/yy/2Pf
nxfzR/q9f0f/L31/HvTL/q3r9+fF+Ev5df3+vPNj+7Xvh//Pf3/ex+f/6vfn
wT6S9/H5v/b9eTF/sv9qflz/un5/XuiX/fu435+H8Se8uG+W1bazX8TdLzfD
8aq8P5fpf2vxi95e1fPuTm/nxW87Gp/CL3jdkPtX6O+U7Jfki+MDs0n1v0fp
+h91/n/8+ktzPshH1n/5+oC4RvIF3s/aV+vfTS0Tfvr/Sbvy+C3Kav/7/Vjd
ECUQUJDFJUVSRCxRm1HD0nJBwYUs9apoaqvo1RYF07JEtExTqCSsNM2yslwq
Z9xzwTCT3KXErdRcARXh3t455zzM9/t+GW73/ef9zJznnOc8y5z9mVn+2T3W
4fosH7fNA8Er+p15RZ/h1f2+Nv+LcN2zqa31edPkH8+vj0vJ508U9zw+68Ge
+Y2nX3TjkCteEv0PK5X+q+6va3COb1TjG2Nw/n55x7JDdzjq4ZOLS3r1+da5
G/L8XfnWU4/98La3shv++cstbpiWvs8S9dtv3JV/fED//Ejxfti5fbcrXhy1
SV7Rf5LW96S3j5o7+twlxaLX+1x5+l08fzu9O2bBxRN2yJ+ZscfieWfx+fYf
tujvkg8W3yeZ+M0ZV706sVt54fzT53z4FNafFX+b2vv1+f2wFX/Ljb+0f338
PQ8dc/Kvn9sqf7bFX5Lfvj/Gt/jfrFTfz+romPK/8z/Zvh/C81/R78h3+/lj
w4ffyftz+Tazx7y4dm97vybbH7/49Sfu/vp+HfkWdx33nQtHvU7rt96v/usf
U//UPz9CfF/lmdb69igr/vj57xj97/6ft/fP8/6u+O9m/LP8WrfV/+b2fRk+
X16tb5ZX9Nl+2Ga3f519ZdGzfOLwyxc/Mpv569Xqf6dyFnx/zO0v9zOUfQXy
Q+j3jul1OZzgVT8ri7qcJfmau5xFuMvNrU2OItzlrsthv99Zo98nn2NyFPFd
P6F/UR//a5nSH3W5678EH2tydY7J2fbj78pdjiLc5a7LYYS73HQ5inCQu0Wd
rvO3YT7W5Gx7/nrn40zO+n1///iOJlfnmJxFfJebLkcRPtvkbmfXlJYchnXJ
9ja5+rzJWcT/m8nNaSZH29N/snA57Pd93z9rcnW8yVnEd7npchThG5vcnWdy
uD1/3XKXowi/1+TuD00O4/q43HQ5ivPjctflMNJ3udnL5CjCQ+52VXIY4S43
XY4i/H6Tu91HV3K4Pf2e+bMmR5F/l7t9TA6359/lWJvz4SZ3u0wO+32Pbww2
udrH5CziP25y0+UowmeZ3L3c5HB7+Oa5y1mEg/2knu9CPd9m/+ToX8LzW9rz
K/DDbqL+Xf6t3r5yucrr6/eV/DW5lin7EOQf2Zfzf//mfvcMd7+M95/pl+xP
tXYJv9Jr/l1a/yW436m3S/CK7j9snnsS3O8vsHYO72H/27fgI0y+pveP+P4c
Z/fHWTsc35mHXb/H7jM78/vE9z3n2/0Z1g7pnzn75m8eePiG+TFT1vptr+tf
Jvk/1e5Pt3YIL54bsv+7szbOB8P3Hxzu34UorR3CH/pXv0VXXtcvP6drynaP
XPsG7b+v2/2F1g7h59n3jSo5x/rb758H33f1+H7PLS77xTXHLM2O/eio/fus
8n37GL/d77J2CO+68TNfP2vgOxl+v9bhft/bOdzlW6UfNsy3F9//2M7uD7Z2
ft/jR5cv2GvKIX1fyzZY8tDbN/Tm92tsaPd/Zu0QXq3LEPv+Roq/uv3n92+x
dogP/i/Nv7Kb6v/hn9L4wT8n+uDfif7Dfyc+wP8T9CP+QPyBf0/jA/+V8CF+
IeiHfyvGF/45P791/5vw7V/GLyE+IfqP+APBwb9t8t/IvgP/i/2Lun9OcPBv
S6QP/mnO81PzP4k++Oc0fvA/CQ7+GcHBvyf+wH8jfPD/CR/iFzQ+8P/F+oX/
SusH8Q+iD/6t4D/8W+If/HeiD/450Qf/nOAQ3wi4iF8Qvs/D6v3HrlL5z3W5
6D/yv8oG/6tU/pfbR6v3v5cUKv7qck35ly4Xlf0H9mnwB/EHmd8x/7lo8J9L
5T+7XFPxA5CLJF9d7qn4gcs15V+Z/5mh/wn+T6H8H5dryv80/7lQ/rPLPeUf
mv9cKv855KLwD81/KpX/ZP5hqfxDl2voP4F/niv/3OWaii+Yf54r/9zlmvIv
zT/P0D8H/7JE/xLiF4WKX7hcU/61+Z+58j9d7qF/XV/fbqWKP7hcRP8Z4g8l
xh/83+yrHO0rIZ+I/wp/BOUX6nwsinbt8d3u9x/Znx31dmTf5JhfEfFDgb85
2Xdd9X+TX1w/AP41wf0+ylfff5e26PbPKz5SftD5n2P3Z1u79vxvn6v8vt/3
dtj/sL++dEHfo0bm08F+c/jn7L63Q/522+fwO3667cj86kOPv+ys83+UIf50
u59bO4fH9w9b+3ubHL8vVd+//Upvh/gvLl3rc5MeHZkPXfu4W46+7c/0fGxq
9/9p7RD//Bb9rXJl//n3oc6zdn7/JRvfF+9+7oQTHhmUV35oOt/i+vFYuz/d
2rWf/xG5fZ8Snhv/PuXj2XBr5/C6fzo032H5qe+/aUkH0R9r9zcG+zLoT/v2
gAFnDcwr/zTVt7r/vb7dH2XtHO71iU+11mV0ruyrmXZ/kbVDONgv7D/Yv/J/
zK4plf8G8oHwG+piPD9t8I7pCIf8AtEx/zdH/1fE1wR+31LFH02ulMq/Nf8w
U/6h1zUp/9b81xL91zrcz8Ww/jP/plT+jdlFOfp//m/+R678D/P/MuX/mf9a
ov/q/2a35Mo/M/81U/6r2S2F8s/Mf8mU/2L+WYn+Gfgv9HyBf1wq/9js1lL5
9+YfZ8o/Nv+uVP6d2Y258o/Nv8vRv4P4QaniB+bflsq/NbsoQ/8P/NtS+bfm
/0v5b3ZdqfxX8/9L5f+D/0X0G+rS0D+NdsK/of7BfyX6HfaryznpvxJ9yH8I
/PDvqH/w7wgO/mnQF/4n9Q/+J8HBvyY4+G80fvBPAl/4F4QP/if1D/4bzQ/4
X0Qf/CuW33X/k+iDf0X8gf9B+xb818AX/gnxD/4t8Qf+OfEH/i3RB/8s8IV/
L9Yn/DfBf/hvxD/4p9Q/+J/UP/ifBAf/PfgT/jnhu3xZvf20uazvM7+jVHYW
1FeI/t1uYPtr6SFHn/LeT/fOl7T+U/22yD8GfcjvlZjfq/e/wv+JvuUXi7Ei
v+J8n3rZgestncLnL5ca3xX/yT4E/9Dmj+s79+99yeFLLhqWV3mo+2j+q+eu
0+K/KX5Q178b5ccse/Uz0176G8mHM1/Y/rlvvN0v307kv2Zv8pPXv3pK97Lz
p+PWGjma369e9b91Ph/yb/4/vUX/dWkfVc/NGxbfZf3c+yf3fm/Lf6yU9tkp
D/b70/jFvcqP7jzlgN9MbHO+tLXvx+bVc5Le7/66zU/3Fv/jy3Nb/LF+qOY/
l/HvAQ9dvNdXvrg02/uB9We8//P8fLbw+49oyL90z/PW+qX6bN8flVzYwNbv
VYKv31rfLctKT/H7M6r+d88x/+r/83f/Qsc/J6/IOk9f+Nm9L11B9F9o9d9Z
Yn45/lvr85StL+uPan3ftvVN+/9to/+B1vqMLCs/kuO3EN8IOMRvMhW/Af+G
5h+eT8LvsB/Wp4r6AOLf7I8C6x/83+WOyyG/D/ULpdUv0P43+ViifPT/ulzy
H8WfbH5Z/+QmV3qZnEH4WJNLLqeQ/qdM7qxrcojm1+TKpSZnEO55+Rkmp/y+
r/v9Jnd6mRxCfJcrLmcQ7nLpDJNTCN/L5MrJJmcQ7vbVih9Xcgr5O8/kSi+T
Mw73+NQDJpd2NjmF9F2u9Dc5g3C3byaanGq/fm/b+nF9gttXLqf8ft2+HWz2
bZKPrl+OMrnkcgrpu1y5z+RMe/5H5geYnEL6LneeNznUfn17ly5n2q9vt3L5
jys5hfTPM7mzk8khmp96/JzG58+38i8gfk72BcR/BX7Ef6N/Eb8m/Oo/4tMB
F/Fpwof4vqAf8fuyjkfx4xi/iJ8Gvoh/Ev8Q3yb5CfHlwBfx4ZhfEf+l/iH+
LfiL+C/tT4ifEn8QP8+RPsTvCR/i59GviP8Gvoj/Rv8ifk3jh/g07Q+IT9P+
gvg+wSF+T3CIX9L8QH00zS/Y5znS9+d69fmvzRvir8NzzN/4f/25VednRnj8
mPY/6HeB7/PqP9r/JeY/YP8XmP+B9S8xPwH7u8T8EOzvDPNT/m/rn2P+BuRP
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
c7lc8bVJvugjD2w67poUn19pz+9Tdv92a9ee/5XGP8VvjX73HN+vUl+/kbZ+
FN8t/P7M9ucfi0mt579HXuXf6f0yhd/3dgjfZOwFE644bUA+pPVP558Lv+/t
EF7Jn2F59XxQ/LTw+5OsHcLvemL8KxM365+f/7uTF13+EXo/YDHL7ns7h7t8
rcbXL//4Mbfu/tdfP1Eg/Ai77+2Q/p0tuu9mFX2eH79/l7VrP/9r2fzT++UK
v+/t2s/fSMuPs//l970dzc+gP857cJfOvFqfLoIPsfverv36bJor/83vezuE
QzsB75h+Vfv6d8Sj9a/j+S/B93xyn+V7/uVN6R+6/np8yd/G77PT87Q+w057
/6sbT7zL9IDWD036y9u1x++RD7R+EO76t0l/ebv29Ddo1F/K/59r30c0OUf8
+/3L2n//1d6b1iev2r1BcL8/GN5f4PBB9t2KJvnn7dr3v7bUn4XdHwTvr3D5
/o2Ltup97VG9XX8EvusHv3+OtUP6/t2JJvk/t/33eYtt7L0Lyn74g93fBt7P
YPkv1+/5k615Tuc/7Xxj8Te7f6e1Q/rb2XcrKjpsv99h98X3LWxeB9v6Uf1b
4fcHtn//bJG35PN8q2Nh+eT3P2btEL64773j3vr++vlJ5zwze/n9HF/6gt3/
u7VDeCVfNmqUfz+1dgj/wNRh5+77+rqN+nMna+dw109VXef6+SEQH3P4oXbf
2yH9RZfM2Gb8/NsyJf/9/pPWDuEHtOg+lzXZD97O4b7/Kr00PK/026CYP/9u
1sF2/yBrh/RvH37xCa/t/FT2dGt92D7y+7dZu/br09/Wj+Nbft/bIXxyrS7N
f7z+cD/g5v8Uyv8xuS3102LTT/evtzyf+At+Ps0vKpX+8ftKP5jfUyr98j27
v3r9tV6p/C/DK5v0j4pv+3t9lP1v/k+G/g/Y57myz83vKZV/ZP5Zofwz818K
5b/4d4uU/rFxlcp/Mbu+VPrP9Q/6Lw7373Mp/eH6Qfl//v4dpb/M/8uU/2d8
lcr/snHl6L+A/1Wi/1Wf336l8k9Nv5bKv7J1K5V/avZ/oex/k9+Z8n/MPs+V
fW7+Uan8I5OvBfpn4L9kyn8xvkqlf2xcpfJfzK4vlf4z/6VQ/ovxXSr9YePO
lf9nfkmp9Jf5fxn6f/X+1yqV/+X+hfJfbN1K5X9Zv6XyT82/KtG/Av+0RP8U
+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
L+rDAi7qj4g+1B+x/qnXRxH/UB/F+rde30VwqB8i/qC+hvqH+iaCQ30Q7596
fQ/hQ/0S49frewgf6mcCX9Q/ET7U19D6QH0UwaG+i+hDfZSY/6gvCnxRHxZw
UX9E9KH+iPiH+ijiH+qjaH2gvkvKRyU/IX5CcIgPEBz8e+6/Hv9R9GX+GOIf
ir7Eh/gP49fjGwQH/5/gED9S/Et8iC8p/hvWT88/xEfo+YT4mlrfBv41HOJD
qn9df1yP/yj6Eg7xMSGfd5Djh/gAwcG/Z/7r8R9Fn8Yv4h+Kvpw/iP8wfj2+
QXDw/wkO8SPFv8SH+JLiX/IH8SXFP8FFfE2tb6ngED8hOMSHVP+SPsR/FH0J
h/iY1A8N3y/P8Pvv3Q1u/9mc1X+fPGv4vnumvl9vdl527Oq/3541fN8+a/i+
etbwffNMfX8d+Av6br+anKP5E/xLeMP37bOG779nx8H8ifUj+j4+tT5+3bR/
1Pffgb4c35rtn8S/mH+NL75f7vyp78ObnMsavk+eNXzfPVPfr/f+G77/nqnv
2wN9CW/4vrkcH/AX9F3++/xU3z9vk5+u8y/p2/w38S/3v5o/WD+i7/2r9fFr
tX+g/yb6cnxN+wf5F/NP+NVzsSLzf4T7c98J/dXxve7Lf6v4p4ccfcp7P72s
WNL6T/5X1Of9/s397hnu68bzV9HvU9q/gA/OJ7d+DxH/N55+0Y1Drnip+ERx
z+OzHuT3Ywm5HPz9qcXfP4qxrXaMb3xPP/WyA9dbOoXPvy21cVfjZ/lc0X3N
5G+b+Fzr/gibfz7fe2kL/r/+Ret/NfJByOetZn73px+f2y3fuvXP36+p6G5f
Kv1XzV/vclzrP8U3ehh8+9b9EWU1Tv5+Xu+f3Pu9Lf+xMrukV59vnbsh77/5
u3+h45+TV2Sdpy/87N6XMnz8u2MWXDxhbH6/eD/s/r0vOXxJ/xF5Rf9J2r8n
vX3U3NHnvl0ser3Plafflfanz+/zb9yVf3zABvkxy179zLSX2H+v6O+enye+
T3LKg/3+NH5xr/KjO0854DcTOf7Twr9oWF69R/I+wd8bxl+yD/z5Xu9X//WP
qX/ayPj7W/Dn/L/Q4r+zHCy+n9XRmv+n7P28LH97Hjrm5F8/1z3Pf/7Y8OF3
snw984Xtn/vG2/2Mf/4+2ICHLt7rK19cmu39wPoz3v95fr4r+lvn8+H9ym8b
/x9ore9I+/4L199Ob/X/uvHP+7ui35nv1uI/5edeN/rdW/Dx5bktfK6/rNYn
t/Vl+2j2Jj95/aundC87fzpurZGjU/zR53/91vpsWW4M3x9z+9//5wj7CuSH
0M8d0+tyOMErO2hl9qeanCX5mrucRbjLTZejCHe563LY4S4/XW4uMDmK+K6f
lH1s+iND/eHwutz1H8qvThtfOv/o/M0xuTnb5Cjiu9x1OYzwUSY3XY4iXMhd
4G947nK2/fqsm7ucdbjvr3EmV8eZnCX+TW7eZ3KU+je5u+LHlRx2uL/f9QGT
qzubnEV8l5suR9vTfzLksMNdfh1lctXlLOLvZXLzZJOjCJ9lcvcAk8Pt+euV
uxxF+FiTuy6HkT+Xm8+bHHW4759Pmdxd1+Qw0ne52cvkKMJd7i7/cSWHEe5y
s7/JUYRvb3J3hslh5P88k5s7mRx1uMud+03u9jI53J7/5cZ/m/cbmtw9w+Qw
0j/P5Govk7OI32Fy81KTo+3Xd3g50eSww9+trc/gvI/JWcQH+4nmz++r59ue
yxz9yzp8eOntBBzvk/xbvX3lcpXln99H+Qv2YY72oZB/gn/Xi+x/mH6Bdojv
5wb8R/qro94O8TfK0f53/v3+HGvXHn+M4afzLy7fdrT7c6wdzt+wv750Qd+j
RuT4fU/vfxu7P9zaIf0Xl671uUmPjsyHrn3cLUffxt+v3tTu/9PaOdzP5z7V
kl+j89V//6F/ucjaIX+77XP4HT/ddmR+9aHHX3bW+T8i+3C63c+tncNdfmxs
3zfaYfmp779pSbLfHH+s3d8Yvu8a8zPt2wMGnDUw32DJQ2/f0DvZv35+d327
P8ratZ//kfl0+H6twz9n970dzv/5rfnZyr7fx/rDvx9ynrVz+EtG/4t3P3fC
CY8Myqd+dNT+fT6Z6p88vnSs3Z9u7bD/v7XWZZscv3/h8+P3vR3yB/4v8Q92
k7QPzU4ifPDPBf3w74h/8N8DLvw/QT/iD8Q/+PcEB/+V7Y96/KLJvyX+wD8P
uPC/Cd+vVfwS4hM0vxB/IHzwb2l84L/R/ID/RfjgnxM++LfBn/BPeX/W/U8a
H/jnBAf/k9e/7p/R+oF/T/IF/Dcx/+H/5wiH+AXxB/6/WL/wXwkf4h/Rv/Bv
2/Of/FviH/z3wBf+OdEH/1ysb8Q3aH0gfkH4vs9W7z/2LpX/XJeL/iP/q2zw
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
NMT/O0r0L8E/L5V/Dv4d9Q/+HY+/+k2vP6cU3/X8MMHBfyL+wD8Q9k/Y97R+
4P9R/+A/ERz8H6IP/g3hg/9HcPBvaH3B/g984T8GXPgHxD/4lwQH/5jg4F/S
+oF/FHDhX4v1Cf+J+gf/ieDgH9LzAf4f9Q/+H8HBf6b1Af+Y8ev2JfFv/lmG
/pmwvwgf7JPAF/ZhwIV9FXBhH5F9AvZf4Av7KODC/qD+wX6k+Qf7JODCvqT9
C/Yx4YN9GfMv7DNaf7CviT7Yb0Qf7LeYf2FfivUL+zJDONjHxD/U75L8gvof
goN9lCMc9D/1D/qb4GDfERzsI+IP7BvCB/uF4GDfEX2wX5r0O8HBPoz+hf4n
fLAfhf0U9i+ND+xHWj+wfwJf2M/EP9hHRB/soyb7j/gH+47og31H8wf2ccCF
/UvxE6jfJ/6gPpz4g/pnwof6ZcKH+nbCh/pwkg9Q3030oX6b6EN9u+Av6rcJ
H+qbSb9DfbzAj/pn6h/q52l/Qf0/0Yf6eaIP9d+BL84PBFzUhwv+oz6c+If6
96Av6ttpfFDfTs8HnA+g9YH6f6IP9ZExPn9+oH4w8EX9JtGH+keyX6B+keBQ
nxlwUb9I6wf1gTR/UN9J+wPqB8k/gvpPWn+oXyX+oP4zRzjUT9L8Qv0rwaG+
MuiL+koaH9R/En2o/6T1g/pVwp+8tOvCzY9ckfk/wuG7F7R+1Xcn/Lu7/kvw
fmOPmfPc2suL/Z4997rRvVn+dD7b+8bPjVw/r/Y7v3+pot+ztH/Cr+5vls++
9N+/uwn/Bwt23fzsp98sTjns5ccuP57rVzraf5ck5u+ql3ts8dFbu5fV/Ojv
P4w9cs7Ne43vIvi+Nm6bB+Lvqo8d8vwXf7s0u7r1z+9PGLX4xYe/dtJoe/9l
+j6jy6+Dtthm2q6PbV5W//r7D+r7JO8Zd+ppX36jM79jz7kfe2dCm++DX/3L
ET8esKPNP79fruKvW7lw1ne/OmZomh/nLzvoqAl7jx5p+Fw/7/Osvq8C89fG
vqzmv74PMf6zNOuyfYZw31e+zxDu++b7to8Q7vvO9yHCfd/8zPaRw9f0+zi+
b9TzU993/ktw31dX2z7D9fF94/vI4S6fDrB9t7XtQ6Tv+8b3Ec1P+30Xz9cZ
tq98nyG+7yvfZ4g/w/ZVbvsM8eH5IfvOxpep8Rlftj/4fJXxX3o7xBffTcL9
L7+vVN9X/P1iv4/7D+RDjvJBrD/Rbz2Xi7dz+Syev2XRrj3/77P7/qPnt6Pe
bhX4AwuHPn/2/z7XrX+WH3Hf2wG8tS4Xj7P5SfEdjy+dYfc3tXbt+Q/9UyIc
9IeUT/acEj7oR4KDfCU46E/SDyB/CR/0v9DvoV8JDvqD4EKuK/1C/IF+bNJ/
vD52rb6fBfZBwIX+DzjI70LJb9NfpdJf9X3hP5J/ZYP8K5X8M/1XKP3n667s
P19XKd9tX6D8EfKR+HP5p/S/r3uD/ipRfzm+r6vU3+33BervEvU3PF85Pl9i
fWJ8vm+uHrJtr6N2GUj2neunSXb/Z9YO8at953Fx/yW436m3o/2dK/sW7BfR
P9mdtL7q+3ug33AdXL+VuL98fg699NoFb57YK/9Za39w/OFqu3+QtXO4n3/a
vbUuI/JqHOl8s4+vy+7vZu3az088P0L+y33mz1WJ8lOsD89P/bt+yj8zOL9/
B+xLom9yJ0f9I+wLgT+6RPurzt9mpdIvJp8zlM8OF99NRP1RoP5wuOnPUtk3
IP+of1jXwBf6gfBBvuQIB/1B4+uwX32dpf4I+sL+DXwhX4k/kK/EH+gH4g/k
P8FB/tP6gH4j/KrfrtL/cX1AfgV9kA8lygfgL1P8Vf2OyH2ZEL7z1Y/Ofe2g
zny/xacuvGQo44P93d5+unhcifZtjGfeNbsuWOetzP5ZPlV2c2l2NOM734ct
GDC6D8u3fY1vG0fgg3wuTT7T/IN8pf4jryb0BzzfND/AH+F3+ABr6yT9AzE/
yzLl/8S8+zq0nf++ZawDwH1e1f6or4v/SP+Vpv+CvrBfiH+InwS+sF9ofKB/
A1/oX+of7Acx/2EfBFzYBwQH+4rG5zNq9hP1D/ojxi/iEzn2D88HwY2/bPX2
H80LPl+5sl/q85bsL1jfEu1TWN8S7SuwT8uO2k/G34g//1fxS7APCA7xG4KD
3qHxgf1D+GDfCPkf9g09H2D/sXxobzeg/s2l/q3PG9s/7edBxedo/BCfC7iI
H+I4MH5IcIivBnxNv28N+k/YnxF3a9KPNP7qP/Qj0Qf93qS/iT7YLwEX9gnz
V4+P0fx01vrh+KPpz0zqz9q4/Uf6M1f608el7DOQX4QP8T2xPhGfJHzn2OKP
DK/HH9X8ye/HV/8RnyW484X+h5g/Gl+d7zT/dTjxpewPQT/0g4DH+gl49K/s
Y8k/2D+k30A/0fhgf+M84P4muDE0vc6n1M+ED+vL89/6hf3I/dftx5g/of+l
fG9vPyV/5CoRP6nD0/s/2rf3H7dHetP2OLrXFw5eHPMx+79X3LfLbkn/HXdO
59jbbk7nYa7/yg37Htgn6d89n9xn+Z5/SfG8+TufMfUHc1P9xC63n3DFzFEp
XzbwtPe/uvHEu6L9fdAe6VX4yd8w/gI+DOhhf9+D9kivuk7xYuO/XNP53wbq
IW7+1rzs+ClJv/0BrrE91jtU+C9Ef7+36y7RfjDUqzz1kQc2HXfNG4F/+z3v
6f7wmIEAT/W3g+B9O1X7JF+fhPZI7w5r7/p/MNBDfpDfuVCvVrVP9uM5F23V
+9qjUr3Wl0dOOOMv1/092m8H56Uq/pJ9eiq0R3p3QHs8f4X8XAD84nmpqv/u
QB/xU/uBUM9Y4Sf7H68HQfsDWvZ+qqes/IB35PV+0P4DU4edu+/r6bzekLEX
TLjitFSf5NemB7Px0P7pvveOe+v76+e+P08655nZy+9P+nNyK1413OIm/7Lr
ZB9Wz1OKh1fXyT/F9k6vPr5epfN3NdD7AvCz2Pj16+2OuXX3v/56vvvhWRVf
S/bVpNZ8pfaVf5Xo3T784hNe2zl9D66ajxT/mATtkR62L4Ee8rOH8evXiy6Z
sc34+bfF9Sat9erK1fXD0L6a71QPZfKtXP01nQ8FeqSfyno7/zF9+0f9FNeo
n0z+xzXK/8+B/vrexstmzFvl/X6mbwIf9df9bfXZILhO+hz1E16jvjV6gY/6
x8YT16g/cb5svwX97eC8hJCP0R7lo+mfTOmfQfC9H6E/8jo86Q/Tj8Ef6seB
cN4C5SG+LxL1p8n3gAv5HnAh30G/JHm+DbxPEfW/6ce8QT+CPUD6UeojW6/g
H/WjzResV9Ifg+F9oMJ+AHiyB0y/wfytog8reRbXQj7CdZKPpn8ypX9Mf5T1
a9Ifef0a9Ueqp0X9aPIO6Cd5ZfozrlF/2njjWsj3wBfyPfBRnpv+D3h7/d8r
b9CP0V7ox6JBPwb/qB/b64OkP8x+KBvsh1LZDzYfcY36rfpP/tVkqL8S/lGm
2nfUfq9kT/R9ZMbj/ZO+Qf10oukfj088/sHDrtiqVzr/gfqgvf+U4kk3Df9V
txtH/UO2F/oF+Yv5vQHoYX/t/adEb+jff3Pgnat8D7bJf6rmM+2/e+F7Yl8G
fXSaXfv+uA/a43m4Cj/p+5Pheha0x/OMqD8q+ZfeV4T6Yia8bxn105PQHund
Ae3x/c1/MH5cfyC/98J5PdQ/po8D3vvGkzsPvvjRgOP7klG/9YX2SM/9m05B
D/1f5Bffl1zRR/+st2w/E87To766w659/5wH7Se19mN6X0YlH1/P8LpTtL/r
ifGvTNwsrcf5vzt50eUfSd/HngXX2L6SX+l9Bqg/Knk7Mua3ukZ9l973hfpp
MrSfbPRUe6S3ifHj/Q8Bfqv5SPIP9U9Fr1/wv39LnzyR5mfQH+c9uEsn9NcV
19je6dXnqyvoIz3k50Dg987WeiR5Xa1PguP1HdC+ms8k/yr+kj70687Vtif/
B/UPwP0X+ifgqH9MvoP8TvId/aP711ueT/xFer7R/2ryj1AfoH/T5B+hPjV6
gd/eP0r1IKgf7V/aI3jeSsg/gKf5Mf0S/aF+mQnnkYR+yOvwpB9M/xVK/82E
88go//B9RKgf3X5vkN/RXshvmJ8kr++F912jfr8D/BOh/7IG/Rf0hf4LOOo/
0w+50g94XljYBwFH+8D0V1yj/jJ5FXAh/0ieBn6lX0B+YTwtnRcV+iGvX6f5
N/1XKP1n8gzop/U2fuIa9aPJ77JBfkd7Ib9Bvya48VvW6b0O84n+Cem/rEH/
AX3Sf6XSfzZfudIPZh8EfWEflMo+sPmIa9Rf1T/ln8o6nORnwEV+RsbjBkK8
TuSXgD7lZ+Ja5I+CvshvpXhg+/xQCfRQ/wVc5J/WeP5E/kfG49rLT8pfyHja
zSDPRX4or9On/E7wL/I3ARf5mYCL/FZZb0/5D5g/yn9l9faU34prkZ9D/Rjt
L4B4oMjfxLXIPwX/Ir8U9EV+KfBFfg7oU/4t4CL/I+NxB0G8TuQvoj+Rn8L4
DuaH8np7yu8E/yJ/k+ajfX4G9A/ltwJf5D/KOj3Kf4H8p/wWjI/yczLe9zDE
A0X+Jq5F/in4F/mlaC/yS4Ev8nNxLfJvAcd/oV/iGvWLyO8AfuIP9YfIH0V7
kf8JuMhPSX2A+k/kh+Ja5Kdw/mB903yL/EyMR+Qnor3IH5V1fMqvRHuRP4n2
Ij8UcJFfQf0V7VF/ifwS+T9+LeQ7zB/Jd9TX0V7kp2R71O8i/yb5EfoR5ifp
R5F/ivYi/1Sqa9RfIj8T/Ir8RBpf+/yRvEb9I/InQV/khwIu8iuovzA/kav2
Qr5Hf0K+w/yRfEd9He1Ffkq2R/0u8m+SH6EfMb8T9EX+KfBF/inx2z5/FvNX
/VP+J9qL/AjoA8q/BH2R3wn6Ij8ir1H+i/xSg/9C+knqD5H/Cbj9w35Pz6fI
v2D8JeC9IZ4m8gcQb6L8EMZfAo72tMivlHX6lD8J+iI/EvgivxRwkX8Afij/
FP2J/FJci/wY9E/5k6JOn/IncS3yP0Ff5HdK6A/wk74T+TGgT/mvgIv8C8XL
IP4C8o3yB0Ff5Icw/oL5mbzeP+VXgD7lT9J+ap8fCXyRX4L+KP9Q1ulR/gnm
j/JLOB+YH4P1ofwJyBPKn8S1yP8EfZHfCbjI7wRc5Mdgfij/FXCR35D+ieVX
or3Ib8T4Rf4m2ov8S8BFfkjSQ/0m8jPRXuSHAm7/Mv4l8iMxHpEfiPYif1PW
8Sm/AfKd8heBL/IzARf5DdRPAUf9JPI7wD/lD1B+w/yR/AZ+0v4T+SEp71F/
i/wX8E/5Feif8itBT+R/YP4p/1PU8Sl/Fe1FfiRf/XVqL/I3cS3yGwEX+YuA
i/xMwEV+A/UT5gdybN8gv9N6tpffMH8kv1EfA33KD1F7pb9F/ov4adB/sF5J
/4n8D8w/5X+kv4j6Cf+bzt8gvJK36XuT7eF9JNz+JX2Rr8f+y/+Ufse1f/7w
Za/cKsf/gQlLzzxv0XI9PycesPCRvd+Q8GmbPTng2l3SeTqE7/vAH44Y+YFN
JdzoS/4r+ltL/PO+9oOnj3hR92/8yfkz/iR8g08+eNbCZ7pJeL+N3p1+1psr
9PyP+soba22b7EuED15v17tuebi/hNv6Sfq2fhJu/Ev6xr9cX+Nfjt/4l/Bj
f/3eR0ftnOx7sb4S39a3ib6Edzx8zO13dC2Q49vhqm8c8OczUzwT4T9/otvw
STssk/jD5m230QPnbC/xzzt+3neuGzaqib5cv4r+DhJ/fPdXn57xgTESbvzp
+a34k/CtPr1vz25v6PXv/6Hjv37T7NXs/9/NvOGQji7J37N9bz+/1983kXBb
P0nf1q+Jf0nf+Nf7v+Jf0jf+JfywuTN22nFLXb9s6yvxbX2b6Es46rdHT3zq
vlOW8fvZ/bp9/AzfB+E/bt+eHunPot4+xQ+xP2yP9KrrwXCt/SPkd+Vfzlxn
yYL0PvU58750y56f09fYvpJfSX5U7Z8t1DW2H7/hZ9c5ZGiK31X6KNmXs1ry
b2DYVxU8+XcVvfT8VPIy+RP7QPvzjJ5qfxLQ2wf4QX6XHbjO+x7e4zHQp0nf
VPohyf/jv/lyj41veSSt/0P/ns9nQd6neosjrL2PfxDQw/ZIbx/gp2NSnd/q
+l7ov3uurjuhfTUfw6D9KvFQuN4J2k+fd+PlD65M9vDghz601ad2e1tenwHt
p4+++O4BRyZ/4NinR9/5yvRXY36nwvUMaD/gxGE3LeqR6ot+/4GvbrznwvT9
l0r+jAj/clZLXwyK8VTyK+XHT+r997u6fT750zOtvb1HINvJ6Kn2SO93wA/y
2zHhpA9fsTK9D6HSZ0neT2vRT/t1XEtfJHuz433zth08OfnD+1x78aMHfzTt
p+2h/UlAD9uvHF2nh/ys/FCd32t7/mutpyYlf2vplN3O7lrSlavrq6B9NV8p
v1Lxl/QhXg+H9qgfUD4K/VEqOMprhJdrb9px50e6S/oovwW+hO+z9rfX2mpO
yicgfNr6H5/1h+PS/j8B4H+84bzR71836RNBX47vidsuPmrbVb6/+inIX83d
/NNvX9O9n6T/5SlDH31hRNLngr6E7zr02IWf+NJyyd/BV0/dbo+fj2jiL+hj
fPWyFnzjJv4l3Oa/iX+5foddM/uWdW9M9Xxi/YI+ju/ox++8eONVvk9F/C0+
J+9+YTcJt/6b6MvxGX0Jt/Vpmn+J/+d5t2VDVqyQ8/e1c687/0d/SPmITwP8
gVPG//yq36Z8laAv99dtEx798J8/uW3gH21wjy8euezCwzZeJd+B+N/r3v/B
3X6V7G1BX8Lf1/+Jl3YZquXPrqOves+z26f3rwv+gv5UwN9u+V4/X2+V+m3B
v4Tb/DfxL9fvi1MmbXXfMSleL9Yv6B8L41vQgqfvPyP9e/4w/KqJt3ZKuPXf
RF+Oz+hLuK1P0/wHXNj/a3yN/yKe1+AfJXmzZv5Qgk8//pYeXzpuI4m//8IJ
z1/4zh8l/mlf3e/gT+ZPS/4r+zTFBxBe2esbSbjRl/1X9MdK/Mr+3VrCjT85
fuNPwjH+Q3CIL9L6tPyFPhK/8l+GSP5t/STc1k+uD8bHBP8S3/iX+Ma/HN/v
e5++7YwLNL6tr8S39W2iL+H5A48/8MIZ+DyvYn9O6vfjH/V4S47/I//9/Zte
mv+qhFf28S5yfJV9vqWEG325fyr6H9Tz1/J39PNh/On5rfiTcIz/IBzji7R/
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
ipc+O2OPxfPOSufLp7191NzR5y6J70Mser3Plaffldajop/yLdX7GdP7vXse
OubkXz+3FdBP8vmHLfwUnxkM72+v+NssrvF9wft/c8ZVr07sVna362/PP33O
h09Jz/NJLf5TPqPiP+3f5dvMHvPi2vh+yWR/rPer//rH1D/h/P98lf015X/X
b3LQr/hP6/d8a/2Svq/g6fmq5ifJy91+/tjw4Xem/fuLX3/i7q/v15F3s+vN
7zruOxeOSv5Yx+h/8/98sn9b85P2d58W/8meqPpP8qrqv1vs77zV/yuwf7K8
Tj/ZF71a+DvB+iT7aJvd/nX2lUXPgD9++OWLH5mdxu9+lV8fD/JYyJcCr1fW
5FdfwNf2JsrX6j/tB5MPSK9cfftEb6y1d/7GAj3npy5/E78Lfv/mfvcMfxvk
WdovlfxcD+j5L+Qr6KsuaF/+3tf/WKDn7R1+PNCrxrUy8/H9Bfit+P8H9N8z
x2vHf6ht+xHQPp3P9+t3avOX2p952PV77D4zPQ/4Pu75du3jmw7tZ8y++ZsH
Hp7W45gpa/221/Uvx/6ZCtfTof3Cf/VbdOV16X0i53RN2e6Ra9+A5zXFZyv5
mPR1+dyQ/d+dld7ngd+/wPZIz9v7/kJ6yA/y2/3Gz3z9rIHp/dL4PviKfhrv
dvB9kY4tLvvFNcek+T72o6P27/PJTtke6U2F9l1Ab77x4/sH+b12wV5TDumb
5OkGSx56+4beqX5qQ7i+BtpX8zUE5nOV/Itd+/4poL2wX0B+dZR1/4/sxel+
jfam22O+vluDvTbO7D2nP6etPdgzB/sv4PYf8gntTbRHUf65Pbasho/2F8mX
oGf2cabs4+p/Uaw/yn+0NztqP7bnDjN7z69Nfod8Ggv24prFi3oDPbQHh8b5
RLQn0Z5De8+/N+Pz9wzYi7PBnux8t25voj3n9p5fP2f2YNQngL3o9uQbNj/z
wN50e6urRn85yL/+6XwF2HsXmj3n+G7vOfwZsyd9f6K9OcTsSYf/COzNe8Fe
/SHYs25vef/Xmj3m8I3NnnP+nwV7z+05x0d7b67Zk46/LtibaE92tNYv2Zvz
wV7tHF23Z3cDe87tPb8eBPbgumAvoj25cpu6vYn23Ciw9/z7Gj7/PcBenAX2
5OVgbwr/Fu0J9F/LOj7JU7ye7tcmL8B/Jv8uroX/Du3J/4Nr8u/BP9bxSuG/
wjXFLwJf+LcBF/45zC/536DfdPxSxCfiWsQfAi782xiv8N/APyX/K/Hf3j9v
8m/jWvinwb/wP+Na+OdxLfzPuBb+WVwL/z7gwn+D+Sf/vyl+AfKW/P+4Fv5r
XIv4B6wP+bcBF/5tXAv/Pa6Ff572T3v/PPBFfCOuRfwi4P6v7LPqekReb5/i
cxV8JMD9F/Iv4Cj/rOF0Rc/bdwl6lV31VFa3fxO/TfkW4b8Dfqr/wvgntm9v
v5L9TPyo/FB13R+uN6Dr+vph++3hOulLv+4m2g/760sX9D0qrQfKv6lwje3z
fQ6/46fbrvI99EOPv+ys83+U7E+79jgOtv/n0rU+N2mV920OW/u4W46+7c/w
PCT5ifKv2u8p34Lfa8H2SM/bO39PAb3hxo+vH/Hbmo8RcY3fc0Z5tcPyU99/
05KkT6bf/dwJJzyS8j2V/7uWbI/0plp73x9Ibyzwg/xuM+3bAwaclc47Vf5v
ysdvCNejoH01/6NhPvH7d/3Df8X2aO8I/wflQ8DRnhL+c678Z7TnOmo/tneE
/4fxO+A/2VOYH3oX8oMY30R7T/jPRYP/XCr/2e2lhvhAqeIDTflmt5ca/JtC
+Tduryn/0fy/ssH/y5X/NxvsNfR/0Z4R/kup/Be0l4T/nCv/Ge014d8FfeHf
kb3j14PAXkL/Du0lEV8oVHzB/Ou8wb8OesK/Lhr861L517PAXkP/0e2lhvhD
qeIPaK+h/yvsE/nf3v/ZHq6TfhfyKeDuL3XBdR2e9En1n+w1kV8A/BFwnfaT
iO8FfOkhR5/y3k8n+6q6TvVFlh8Aey6Nr5K3Kf6xY3WN8jzGc+plB663dEqq
1zR7Cq5T/cEy48fnb0nFb8D3733J4UtW+X5tpf/vC36q5ynZg59a9upnpr30
N3geO8H/SPvvzBe2f+4bb/cD+i8Cfjo/gfH32Zv85PWvnrJKfepPx601cnQ6
H9v7J/d+b8t/pPbov1b7fSzQT+dbp7f4S/lGfB4q/3J8WYeneuXKf0n5hep5
TPLs5Af7/Wn84l7hH++985QDfjMx2Qet+e8/IvhB/76SR8meruY/1atX65cH
HP27yr9M/OL33zd66OK9vvLFpfH9570eWH/G+z+fno9qfVL+oFrft+v9998d
+k/2ZeVfpvnE/M783b/Q8c/Jq8RvT1/42b0vXWX/t9b3KVifpB+r9U3nEyr4
KvW2rfV5u/D5r9Yn7X/hPwXc/8H/BHzyTwA+Iq/TWwTylfxPaE/5E6BP/hXA
yb8C+uQf4vhl/Z7w/wCf/OeAC/844MI/g3gQ+SeBL/yLgAv/EfYb+W95HU7+
F9AfEe3Nvwr+hf8U+ML/LOv9k38ScOGfxviE/xnXwn8O+sK/Kuv0yb/C9Ypr
rI8R/l/Ahf8XcOE/x7XwjwMu6k3BnyH/COPPsT4i/gz0ML6e7JHqH/OlfQGe
5IvILwL9tH4ifh/XIn6P8xP9W3w72mN8G+WZjS+vwztj/jD+bvHVwBfx1bwO
T/Np/lau4tcWf4Z4CMWfgz7Gn81fjGuKv1fxU2l/mL0O9JN8t/i9tH/MX4z2
GL83fyjai/hyWbfvKL4c9EV8Gea/Z1nHT+etRH4j4BjfM380a4jvR/8ivh/X
Ir4P/af4vsWvQZ6m/W35j7xOn/IfsD5J/lr8vVTxdxHfCHz/b4jflvVrjN/S
8xnXIr8f+KbfwX4YAfT1eYD29gjGv4fnKj6M9kT1T/kBHF8HzEep4tdoT4j4
Z8BRPpl+L1R8eRHYEyI+nNfhyV6ZCvYM2jtoL6B8QXsD4+NmX5UN8VuwH0YE
fBuwFzB+i/YGPv9urzTEvzPQ70A/7Q8R/w442itY34H2DtoTIj+A6xnXG4I9
g/FrEb8Ee4Li03m9HdWXRnsRnyZ7RdVPdtR+bM+I+G1TfDnwRXw54CK+DPNF
8fWAi/hszJ+IPwZcxA+jvYgvB1zEZ4O+iK9mdfoUPw36Ir4ccBE/bYovBn8i
Pi3tHYs/BlzEr4O+iL9HexG/Dvoi/hr0Rfw+6In4LPRP8dmm+HPgi/hywEV8
OeAiPh9wEX+P8Yj4YcBFfXLQE/Z7jKeSOytD/mB9dUftx/GRsRAv3RHiqR5v
dfoPQTx2KcRDMX4r9H+0x3gs8ovx0F4WL/XrEyyeWt+/yX7bAuKxEyFe2wHx
0EshXurx1Hdqz3eKt25v8Vgf3wyI1+5l8Upff49nOtzjoc5/T4iXejw03u8F
8dJ7LR7r8J0gXuvywdcP47UoX7pBPNjjlctq40/xzIEWD3X+14F4qcdDHd/j
pQ4/xuKxzv/zEK9F+XAAxGsvNvni/udEiAdjPPQ+iJduDPFUjLfOsnis83cA
xGsxHurx0vr8bxTr1z7emvRJJ8RrxfmUpvxRtBf5k4CL+vCgJ/IrKF+m+7U9
z3m9P8oPBVzkf8C/oPwX0Kf8VsBF/qQpPxBwEd+P9iL/05Q/ifGI/EedPuc3
mvI/TfmN6F/E/6O9yB8FXOQHAi7yS3Et8mMBF/mlaC/yIwEX+bX0vLTPn6T9
3T5/EvRFfgj6p/xP0BP5n6An8mfRXuTHAi7Op8W1OF9X1tvT+SuQJyOAPp53
pvNjQd/slwzsl6AvzoeVdfo63mr/eH4u4OL8FvivdH4J/Hc6fxT8i/NloB/o
fFdci/NZwb84f5X8mfbnqwJfnE8r6/3T+aWAi/Nr0Z84nxbX4nxd0Bfnr4o6
/SFAP8l/cX4s6IvzYdFenA8LfHG+Lq7F+bmAi/g/7nc8fxXjE/mBvI5P+Q2g
T/kLuKb8Bdj3+n0iIn+zyjjb5gfiWsS/41rErwMu8htxLfIDcS3i+8GfiN/H
tchv5HV8it+D/UDx7bgW+ZHgT8S/0/y3z58EfyL/E9cif9IU/0/6r33+KOiL
/EDARX4grkX+I+iJ/AasD+U3wP6i/BCsD+V/wL6m84Npfu2/4fx3UW9P579L
gHf4tetrdT666X1AIr9Q1uEUP0j7D/SlOP8r9fFU0Nd4vhr1pTgfHe1RH5t+
KkA/Af0hQD/Vv8wAfUrnw0Efi/PLBeingF8L+hDPL58J+hTPt7s+bjj/He3F
+e+iTp/Of0f/7fVxOj+B56NRX4rz8biecb0h6Gs8vy3O54J+pPO50J7OF0d/
4vxwWcen89MBF+enAy7O52J8Fs+fRntxfjSuxflimH86nxv0xfna4F+cnw24
OF8ccHF+NuDifGnwJ84nB744fwrzT+eXMT6N568DX5xfDv7E+du4Fue3pT4X
+YGAi/wAnj8O/sX54rgW54sDX5zPDrg4fx1wi69nDfF11G+Bj/GqjtovxZNU
/bTInwfc40UN8c9MxT8tvpyp+LLHixriw6WKD28B8SqMj2M8R8Q3cxXf7IB4
kYivFyq+js+fiP8WDfHf5B+3j/9Ge4wnYbxI5B8ylX/w568h/h7XIv6eNcTf
cxV/x3gVxpctP5E35CdylZ+w+Hip4uPCfgT9Ss8X4NN50o6Yv/b1KbE/RX4K
44uwnym+GNcYv7D4LfgnEL+9KIf5pPhrXoen/WPyolht/Ln/7kCf4odAf8s6
/kXpvJqIXwcc49cWXy0b4qtBT8RXYf4pvgrzn+KrFt8H/im+H3CM71t8O+iJ
+HbWEN8O/kV8G/pP8W173nIVv7X4f1mnT/F/WJ+VAE/yFuPP/q/io8K/DLjF
b8M/wfit8L9yvFbxTeEfBlz4Txi/Q/8o2gv/L+DCf2ryP4Ke8B+jvfBPML4J
80fxTelvCf+zyT9L8e32/jXx0xAfjmv0J4V/Ge2FfxnXwj8OuLAPg36FR/WV
Aa/+sV486SNhfzXZF3Et7IPgX9iPTfZX0Bf2U1wL+6jJfgx8YR8FXNgPwZ+w
PwNf2Bcw/2SfNtnXaX3b26dxLeyrgAv7HMZP9lda3/b2V7QX9mXQF/Zj0Bf2
Y+AL+zvgwr5O/bevP4b4JtUXxbWwj2L8Qv+n/tvr74AL+y7gwj4KuLBvkj5s
b78EvrDvAi7slyb9HvMr7EPgn/R/ff7Zfgx+hf1b1vDZfmyyf6J/YT9He2Ef
1ftn+6jJ/oP+yb6L9sK+a7KPY76E/Qv2FJ0vCHqifj3Ha3V+TtTXx7WoPw+4
qC+H8VL9fMBF/Xmm2iM9UX8f7UV9N8wf1ecHfXG+IK5F/X6h2iM9cT6B+Gk4
f5jmE84fivp8mH+qzw/+xfmCaC/qI2P+RP1fwEX9Xprf9vWdMD9UH5nX4VTf
iPoP6xeDvqjvDLioX0T7C+v7gj9RHwrjo/o/tA+wfjToi/rXoCfqR9E+jfYo
70X9bLQX9ZHQP9VHon2G9Z/RXtR3pvlqX9+J9ivWxwa+qH9N8rn990TS/7xr
dl2wTnofSidcV9+bGAH4/rPvWSzG72Wk+un9Fp+68JKhS8P+Gn/1o3NfOyit
T0V/lfMCl/77d3dRh+vvrXQ8sHDo82dvUdav0/txK/yuqE+364Dfsefcj70z
IX0vrt+4U0/78irf3716yLa9jtolnbep8lnPwDwm/6rjsAUDRvdJ9uz+l167
4M0Te8Xzf9XHDnn+i79N9vTOMB82X4FftU/P989a10txHYN//D7JBw86asLe
o0dE/9X3SdL7z0857OXHLj++e8jvHyzYdfOzn075smFX/3LEjy8eF/NbzV+a
j4dmfferY4b2DPjWi198+GsnpfH5vvVr/L7NVe3nN8ZzEFxj+zX7Xs9mAH9P
8JtX85PD/JSqPdJbYe1dvtl8S36I32d73/i5ketD+1W+79Rq3x/g/nslm1Tt
r1ztL2s43dehE+hdbe0dfojRQ35ifp6p8/uzl3ts8dFbkz6dvLTrws2PTPm3
g+za8a+G9tX8r/L+hdb8rvL9Nrt2/Azai+cn5nt5a1zJvyjayqv0/KK8e4/J
A8dHeeHyxvnrBHnk8gbkT8DtP8XXQN61l4dp//3U5IHL15+ZvHC4WN/o3+WN
ks8Hgbyj5w/kXUftx/LE5Y1f2/OTw/MT/DV9r2sUyJuFII/OMHnl879pW3lG
+gX0H+mPwBf6r0k/JHu1vXyNa6E/Ay7kL9Aj/QryRX8vS+iPoC/sh8AX+iX5
7+31Y9AX+g/9T9R/ib/29kFcC/2f2vu4avOZ9ku1/9J5X7QPqvbvg/n1X6x/
Xm+f1t8aTlf0bH+XsL8D7s+vP//Ib9P3zoT+TNfV/MI1fs8mtSd67eUn8eNw
5PegLbaZtutjqZ5kcut6A4BvEPSxfWv+B+wI/KX4nF+vWHV+V2k/Cp43IX9w
fQK+MzzPQn9lUn+BPOmo/fh5E/IX7ZfgpwOeZ/QPmr5fiPJG6K+iQX+VSn+Z
fi4b9HOp9PP/9XuNTf9Iz/ZXXOP+EusD7XvG+Ri/rsPxeVlF37S3L1N8obKn
gF6Sj8K+SP7ds+deN7p3qsfrP/aYOc+tneIhV1b2XtAz+xCuk/1wcHWN+znG
M/bIOTfvNT7p30nV85zoVc97XPczfnx/7FvxG3AhvxLc/kH+w3yRfAi40A+o
//M6vWRfCfs16Av5Vtbos3xL4239SD7j+OX3K4X8BXzSXwm/vX6C+aXvXWL8
AuUTPU8N9gf6T9C/zqdafCDguL7Cvo72Zr/F/An7La6F/YbzE/2bPIz2aN+U
sJ+q/2S/mv1VSPurvXzN6/TS8yP0d5o/0N+Cv+hf2PeJvq1Hg/0j56/984DP
y+B89fZB2s/CPgT6/ovnu1T2i9Bf8S/sE5ofv74K9rOwT5r0c9DH8eDzJPR3
k30R+MK+CLiwL5rsq8AX+iOv90fxicAXzw+s07JCxVfaz196viaDvjwY9KnF
X0qIv6T1BH2I+lvsv2iP+hj5FfG5Jvsp2gv7IeAiPpPV25N9If1zG0/QF/ZR
wIX9U4+fsv2X16/JvoP+KT4ZcBFfjf5E/K2s06f4W1z7/ED8sKzDKT4YcBEf
BHyKrwJ8Nd8Hb6//MH6D8bfgR+jHgAv9Hu2F/ob5JP0N+kV/z1vYL0k+to+f
5UAP7AWKP0P/FH8GuP/SflHx2abvuQv9GtdCfgV9ER9E/Rdwof+SvQPrLeKX
NB7lH4j4bcBNv2QN+gXnN/BRXnXUfkmerN5/JPslja/9+mUN9IH/LQA/8bd1
e/sI/cuAo3ylf+S3/f4u8FrJL7E+ARf2JY53upoPYX+i/kL9XmA75Z9B/wXa
1/BfVPZKqieE9tav/9y+WQfgie60PY7u9YWDFwf9+TufMfUHc1P977Pfz8bu
t3+cBy2u/8oN+x7YJ+2fJ/o+MuPx/vE8FLP/e8V9u+yW5PUut59wxcxRoQ+L
m4b/qtuNo9L5XGhfAL1s6N9/c+Cd6byQ8xfzd0OdXgH9ZffX2xdAz/gLeev8
0zyp+b+3Xk9U3PytednxU1L87Q/16+LetvVM/QH/haKO/4Lv3wLri6Beq/jy
yAln/OW69P7K2+95T/eHx4S9UPS+8eTOgy9+NPjz84sOr9on+dq33r4Aetkd
1t70W4HvHzi5zk8xC+rL7q3Xsxn/fw/+qv7iezzFUx95YNNx12B9zVLgL9Xr
PllvXwA94z/aF3h++TTjp6sGT/Y/1Esa/e5AP/IrBdZXzqzXQxp+0q931K8L
rJ+s4mvp+av8vXR+G66LA+vts03GXjDhitPi/GcxpHWdzgdsYtedNXg6L3rX
E+NfmbhZ2r/n/+7kRZd/JL2/p3pe+sX49z/m1t3/+usnAl7Jr/R8V+2TfIf2
hdOr01/f7Y8C6GWz6vwUwK/NX7wP2OYvnZ+r/KmRwX91neytO1v0kvyq6K/y
fa16e+MvrR+0L+6o08ucH+8f+M1mDfrjvAd3CXu4qNarK+BD7Nrxob3NX3wP
yeVbWYfHdQHt0V5U+qmst/Mf0we6rp+CPuonk/8BR/m/GPTX/estzyf+IsVv
Td9E/6i/vgf6CfSF66fAR/0E1wXoW9c/2H9Rh0c+l/Qn/Nv+SvsbzhMp+ZjX
4Uk+mv7JlP7x99/W8Ul/QP99gX7Eg0k/zqyffyL5CO/DJv1p8j3gQr4XDfId
+E/y/d76+1lJ/5t+zBv0Y6yf0I9BX+jHgKN+NP3h9Eh/wPvKlf0QcLQfTL+V
Sr+ZfAT5S/Ix+EP5aPonU/rH5H3wJ/QH2G9pfk0/Bn+oH03eAf0kH01/Bhz1
p4034EK+Fw3yPfBRvpv+Dzjqf5uPvEE/gv4i/Qj0ST+WSj+i/4H6w/oL+sJ+
KJX9YPqtVPqt+k/+FdbfCf8I+u8GcP+9ku355D7L9/xL5Ksa/afHl/xt/D47
pfdjoP/V3n9K9sHA097/6sYT7wr+0H8S+iXwUT8Nq9MroD/yn1D/VdfJ/2zy
n6p6yCR/59a/1+HyK+jDdXEBfN8Dzqsa/htFHT+uCzzfCueFSX+cc9FWva89
KvkHJn8DPrD+vQjST6fW2xdAL4P2xSD4/sTvjR/XH3i+eZv6eVrSP6aPYX7S
eRb4XgPptyfr7QugF/5NfX3S9x/Q/wV+8XsORr8D6Md1MRq+/zCofl6/AH1l
+H09//U/1H0HtBZF1u0lgxEQECVIBsUAggkudptGwFEcBUygqCOGcUxg+I3X
7CjqmDD9M4OYSCqjKOliN0mMCKioiMpIEFSSIhl5ztdnn6J2fWf6+sJ677FY
61u3d9ep6gr7pKruhM/3dyjwyQfq32X8tcP+Sv/v5Bi5H/ji2u8dsulvu6t+
H3TP0qe2znb516v8v5Mlcj/wwwc2u++kn/Q8fqA/svXi/OO+2fohftLz4IF+
6u3fn5A8w75358vRHomvJV389kanFOTp++8D/ZPpm+Y4fyz6x8X/Fj1x6/5d
Ppiu5Vm/0f0J5AGn+5PPfHmB/9vLb280o/nQP/3YVd9XkmTjuZ3G1/n3qX+/
9J+zX7K/3f6n0fI3+m+0f7/l/7D+IRz/VP+Y8Tvhd/JfHL8X94+cfc7+V8X8
Ixe/ZP+G9c/7pF9In0K/KF7cP3L2D+tH+g38UzovaPFf7OOO/0S/aHnWLw39
83uWftDyrB/Ing/0317+eeWA/+h9gYF+hP3uyw/4W8ff4G/SH/z9bX0fZ6Df
Z5B/Yui/KEf/af2G/qPnd/pP9ENs6Qc6j2zZB4qzfSD6S3HWX8J/2n6D/7R/
mP9Ev2j/sn4RPtf6Df1A9pkrL/pPy7P+E/4j+Y7/RD+mln6U59XyBn9r/xj8
rTjzt+j3xNLvxf2TQP9FOfpP6zf0X2rpP9EPsaUfxD7Q/jHsA8XZPpD+0Pax
/sp+g/xT6uMBfypu5Ge0/Ub+R9tn5JdSv3yQn9F2GfkjLW/ktxQ38kOKG/kt
bb+Rf6pw/xn5H47vKM78aeQvtH1GforjO4rX9ON1Vn4n9eUH+Rstb+RntLyR
30r9+oP8B/VfkP/S/jPyW9p/Rn6O6g/yN4kvP8jfqHwj/6TyjfyS4kZ+SXEj
P6e4kX9T3Mj/cHyH8x/6fEb+wvFT8fwUx3c4P0T6JcjvpL78IH+j8o38DD1/
kN9S3Mh/KG7kv4j/g/yW9p+Rn1P5Rv6G2hfkb1S+kX/S8kZ+SXEjv6S4kZ9z
5Yvn3xTHdWq/4kZ+RZ/PyO9oeSO/ouNj5I+0vJH/UdzIT1H9Qf5G56eRH1Lc
yE+Z/g2Nt5Wf0f4z8hNa3sgfpX75IL9C/B/kT7S8kR9S3MivsP5SnPWXkV+i
9gf5C+Z36r+A32Mfd/xu5KdYvyvO+t3Iv1H7g/wO1R/kd7R+I/9E/R/kn7R/
jPyZljfyM/p8Rn5Cyxv5I8WN/Iq2z8ifaHkjP6S4kV9h/cX5CdN/Mfid8xep
Lz/IP2n/GfkzLW/kp1i/c/4m9ssH+TdqX5DfofEJ8jtav5F/ov4P8k/a/0b+
TMtnv0H+R3EjPxL7eJB/0fYb+R2OX2n5PP+F+d/IL2n7jfyM4kZ+SeUb+R/q
vyB/o+WN/AvHXwh3/rORP9DyRn5I22fkZ6j+IL+i5Y38iT6fkR/R8kZ+SXEj
/6C4kX/S9hv5Je0/Iz+m5Y38CccPSb6L/xr5H22/kd9R+UZ+R8sb+THFjfyX
4kb+heMvnH/Q5zPyB679xfNDWr+RnyH/JcivaHkjf6L1G/kRLW/klxQ38g+K
G/knan+QX9L+M/JjHH/S9qd+vM7Kn6h8I/9Dzxfkd5x9WDy/Q/GzID+m8o38
l+JGfkPbb+RXqHyQ39D+N/I3Wt7Ivyhu5Ieo/iB/ovUb+RnFjfyQ6Z+wf2fk
R7T/jPyAljfyN4ob+Q1tl5G/0PJGfkZxI7+huJEf0PqN/A7zt+IGf1P/Bfwd
+7jjbyM/xPqbcKe/jfwX9X+QX6H6g/yK1m/kf7S8kf8x/T/WT0Z+JPbxID+g
9Rv5G8WN/Abzk5Y3+InsL8dPRn4j9csH+QGy/4P8DvO3ts/gb+q/gL+1/5i/
jfwQ62/On6h8I/+l8o38iuJGfkXrN/I/Wt7I/5B/EuSvmB/ZvtfnY/+C8exv
Z78xzv4F49yO4vIdPxj1m3ie/JJPbtt5/Rxb/klzpwxoebizPxi/8NJT5n/e
c50pv0vdy3c+vWkns/zJ849b/siWt83+F/kmnsnvaMrfe9dus6Z+1sTEpX3m
80v7zOcrr3nzQbf+1e6//7q912lnx4vN9pddMrXaDRftaZa//66/Lx7wg34v
yRo/E5fxM+VL+83y0n7z+aX9Znlpv1n/ha+1W9C+ay2zvIyvWV7GN0++iZcN
n/jsR9ubmvj9lwx/dFwzfd9xgL/8ZZXmvTtvNPun2fAOe86950iz/EW993j+
uWqbzPIi35w/mfxSU/6gmt/MqnJlCxOX9pnPL+0z63/wo3GXXnxmTbN892v/
NmnlB2vN8vHchXNX3NLSLN+l6trFtx5u84eMn4nL+Jnypf1meWm/OT7SfrO8
tN+sv9+wW484tG01s7yMr1lexjdPvomzfhv3+ZtPrlyzlvUGx6/0eiZPz6PK
OONfqP9YrqE/U/8+Fz+k+gz9uDfh+r3YXP+In2/jqTsf+NkxXyie8anbv36i
/3dS0tu7X/jL5fez8i5+eqL/d0L3R4NbfdVgbKnzH54efsPU312xzMX/Cvzn
+POSe1dVazT1c8UzeS7/mfGx2/82QO5H/HYvX15E9ydH+PIiak9C7Y22f/xv
/aTfK5X2u++XPlCQ31DzD1n/OP8068/3tHzWHpefOdG/X3CXX6P7k0q+vIja
k1B7Rb8uo/pLSL6L79H9Mn5u/0h2v4s/0N/JIP/+qOS4Qce/uH2pq7/AZzt8
X8j/O9l+rHd/1ODSZpMWVXPx7/LDb2/0u/nrdX5M9v9O6P6o7ICh7zQ418XX
Llx8wFtrytz3NQYX+MfN70NG/eWUebe5/Y0Zfzn/I+MrZ78f7N8vuJv/dH/S
3JcXDfTbk9zqt1f0g/oTyd6fHLvvxUe599Nn/NxC45cPFPpT40nR2Oqra33d
2+WnNpx51J2V11dW+UPkfvn+Q3KEyANO9yejfHkRtSe5xW9vVHLg8IP27qP+
eHLi2KELTjvBzT/6O9l+gHe/9L+zz7L+3OF9/f7fCd0f6AfmR0N/JBbO/M74
gDt3Lzm/lfu+t1G/KV/Km/JP3OnhWvs+vd1s/6S7D5h19jh3Pupbwh+4stFZ
lzV0/GPIN9u3vOkbjW+Y696vtFRwxGfmPHzotr637WvKf/acb8++ec26PPkm
/s4RXz12xnI3/oy/3PeDAXf1c/lHo31afjmVn1vA3flKo/15/W+2T9pvyj9t
9MAOx7zs3v9ljF9q4Ye/9edLJ567yGzf4CX3xFUfcfrfqD9Pvjk+Ij9vfPL6
3yw/b/j0qMkvv5jPN/24BcfPO7u9+XxHf7FiwqgF1U1c5JvPt8ueF+/T44Zd
g/LQ/w1/afXpXSs7mfL/VNr/8zce35gnX5//O8Hl/TvJL2t6f3nHzzt8H5LK
X39m733fv8DpX6N9ZvkM7xiUp/bn9X9e+1U+8hvQP39v0GenQXvZ9cv4qfyl
hO/+5xcXj7rke7N9705pPuoP0yrl1Z8n3xw/kZ83Pnn9r7hh/+vzsX/COK5b
OPsfxfG6Js71BHj7m9bVOsjZd4xn9vI+Jr7HntvK7vj5F1N+Zp/uZ5Y//LgN
t92/aKtZXuSb/ZPJb2PKz/yX+iYu7TP7T9pn1s/xH8Yvovhi0P9j5x3/jzXT
zOfP7Hf7+WT8zPpl/Eyc42NG++35k7XffD5pv1l/nbM/umP+UuffGuNrlpfx
zZNv4iWTh0w4vaSyWX/m/7Q38frHXnL3pKfs+Z/Zu53N8p0L/skuefLN/s3k
H2yWX1Z7xoM1vmls4tI+s3+kfSbO8R/GOb4Y9P9nF8yYWXmO2X+Z/+Ti78b4
mfXL+OW135TP8Vej/ebzSfvN+vf980nVq6yz+VfG1ywv45sn38SN+JnqT76e
9/4byhdZ+ofkB/G3Cpc34l9azoj/4H4rfqPyjficts+IjxH/BfEtLW/Er1z/
FI9PaXkjvqe4Ef9R3Ij/uflbPL6n/WfEJ7X9RvxKcSN+RfKD+Ju234ivuf4r
Hl/T8kZ8kuQH8UfFjfgXrf8g/qPPZ8RvXPuLx+fc+BWPj2n9RnxLyxvxK63f
iE9peSO+p7gR/3H1F4//Ef8F8T3tPyM+qe034leJLz+IX6l8I/6m7Tfia278
isfXtLwRn1TciD8qbuT/c3AX/zL8kySnvMp/UnCsH/IHgvLkT0RPs/7x/RFL
vtm+Q31/InqC8EG+PxKUp/0AlnwTJ38gwMkfsdqn5dE/iI+Rv2O1P6//zfaR
PxDg5I9Y4xe0H3hN398J5JM/YNWfJ98cH/IHrPHJ63+zPPkDun8T/DHE9ydC
+8v3Ryz55vORPxH9jfDmvj8SlCd73ZJvPj/5AwFO/ojVvpRx9H9z39+x2p/X
/3ntV/lYn9Df5I9Y42fK38X3dwKc/AGr/jz55viRP2CNT17/K27sDyM82L+k
OP3+ZtzY/6W4sb9JcWN/kqu/+P41xY39XyzfLG/sz1Lc2L/G7TPrN/YvKW7s
f3N48f1N1P/B/jjFjf19VD7Yv6K4sb+L22/OD2P/F7fflG/sb1Pc2L+muLF/
TXFj/x/LN8fH2P/lnq/4/ibFjf1Jrv3F968pbuz/YvlmeWN/luLG/jVun1m/
sX9JcWP/m+LG/ibq/2B/nOLG/j4qH+yPU9zY38XtN/vH2P/F7TflG/vbFDf2
rylu7F9T3Nj/x/IrHH+iXys/Qnh1Ko9/Fdjf7MeLrP1DsY83JFzjVcH+rC5+
vMjaXxVZ+6tO9ONVwf6xwX48KNg/RPGkYH8ZxaOs/U/aP8b+J+o/t/9E4m+K
8/44ikdZ+8e0f439Yyrf2D+WWvvHKF4V7K+ieJG1v05x3l9H8apg/9dYP15k
7R+Krf1Dk/14VbA/q5kfL7L2V0U+7uYvxauC/WMUDwr2D1E8KdhfRvEoa/+T
9o+x/0lx3v8k8Tc3P2l/HMWjrP1j2j/G/jGVb+wfS639YxSvCvZXlfnxImt/
neK8v47iVcH+LyM/nVi49quBkz0e4GTPKw7/hPwBS35q4WTPB3gl3x8IcI7/
GPLt8hR/Ypz8Aat9ZvvJ37Dan9f/ee3X8cX7C3z+3DOQT+Nnyid/I8DJHrfq
z5Nv4mSPW+Njzm/yBwKc7PGg/WTPB3hz3x+w5JvPR/Z8gN/i+wMBzvEfQ76J
c/yJ8YG+P2C1L2g/5lfk+xtW+/P6P6/9ZvvIH7DGz5RP/kaAkz1u1Z8n38TJ
HrfGJ8Cp/7X9KIffCp6fcPqr+P4isp+C/TOKG/tfXP3F90eR/RbsL2L5qSm/
+P4fxY39Udw+U76xP0ZxY3+V4sb+Gep/u3+N/WM8fqZ8Y/8Qt9/sH2N/Ebff
lG/sn1Lc2B/F42v2r7G/jOWbuLG/SHFj/4zixv4X1/7i+6MUN/YXsXyz/4z9
P4ob+6O4faZ8Y3+M4sb+KsWN/TPU/8H+Kzd/i+8f4/Ez5Rv7h7j9Zv8Z+4u4
/aZ8Y/+U4sb+KB5fs3+N/WUsv8L6oXh8N4ifoD+s+IGWN+I7qV8+iH+49hWP
b2h5I36juBH/UNyIH2i/GPGfvPgC8WMQH4p9+UF8i/o/iB/lxVdIfhAfo/4P
4i+KG/EXik8F8SEtb8SHEr98EN+i9RXET/T5jPiB1m/EdxQ34h9u/hWPb2h5
I36juBH/cP1bPH6g/WvEf/LiC9R/QXxI+8+Ib2n7jPhRXnxF5RvxMZVvxF8U
N+IvWr8RH3Lli8eHnH1XPL5l8+O6Eef9fix/P2sH+3r8Lz2OOLa5iXe+fNsj
V91T18RFfmrhF321ue3S2tWC8lj/Wf2tAxzl1xz54t6rXufvRwfyzfpb9vxl
/DPVapi49XzUPrN8Xv9J+/k6l89rvyk/r//k+Uz51vgAr9j8sfsnb3zy5k9e
+/P6L+d79Yl8P97E5fvm9vNn8rX+Sv5vsv2qf5cPv/8NXL4fbsr/oN3fFm9a
4Na/Id98/g82dz598UdVTNx6PmqfWT6v/6T95vyX8nntN+Xn9R9/nx7fjQde
aVDx8QGeN3+4fwz55vPx/Mlrf17/ER8k9Bt1Kqwn5z8c6v8dZeutKZXHvzXR
nPKfe73b3O1/FUD7Z+Ppf7ym3Z836vvL1hf+dvo7k+/ez9Gn8O8Tqt+dr+Pn
zup373fP7q9O8ndT/S5/Kz755scmNnlxpZbvl7y78IGPXPms/1pQ/YuoHe78
wnX/OHXXDWdWpfI7xF8Kf7v5tcHvjyT72+mHQwrt/THaKPZNVt7mX+bn7P4d
/DvST/sOeXzkWcOq6Pv79iv8vYX63+2fyP5232fN/nb7O7L55Ozbmi+8999t
v3PvB32ixm4P3VfXza8u2zrOGXqc25/C7xf/4OirSr7v4+ZnpZvnX97zSVf+
5JpPnLO+vhufTP5XOj5L182Kz2rg9udfvHHtZYNXOvtr0Obzhx1w3+YE518X
/bTbiJtnuflZkL/D92+y90m+r/J3efW87wZ+uCfJ/xe172jF+f3tywvtc/Yx
f//q6o/2+LDLkhop2tez65mnvP6HHfyHQvtdfChrv7MPbltx8Ld/2ey+n9KB
vu9V/YyOV7/2rYuf8vvxSwrj596vmrXf8W82fm7/Toa7/EYm352viV/+onnz
txz/7/nJ0B43Xb9B37/XY+7utx52peOPskL7f6L63fyuUZDfhep38fWs/kp6
/ierf6s/Po/FND7OftitML5u/wt/P+ypxi/8dPs1O/j/Iw+p1fIA57/qdfll
+8zgF21f9l7Er8n+bEHlm1P5NbR+9ya8JpXfIX5V1H5y/ETyUH9axSvv9ufi
9xePv5pTebc/Kvt1+i/DWzJe4uM7xN+JX+XGMh93+Qfc77evPpdP/f5vS+Xd
+mf9coj8jfJP+/dL+Y5U3uXX8Df0F90fNft05V9rn99Cy9P7uKNO9H5uuj/6
fkOtK3ovcP3bbKeLpv5xuvs+eHP5G+2n+6P4xHNmjjzIlR99xiX/uOPB57T+
ven95p23XnfYpPVufWd8dYDi/P0Luj8hefr9DbSP5EV/lfYgPkDtlf5z7af3
wYt8fV+K8KPzH/cf/HCDBne499/XWf/J5gk1HT/T/QnJi+r69yftfXnRQHo/
PbU3Knvn2z/96XN3PurCE9qfvNvZLn8/UP7G/Kb7pf/VXk/oeyL6fRH039f+
/Zb9ov2X8df2CO93/di3F4P1SfZm1F/sMYwv2WsR7D3I/8S3B2H/xWT/6fPh
F/3D/j/Zowb/Of0Ce83HA37R+sU+jiz7WPg/sfif7M2AH9v79lwCe89vX/OY
+FvbR/akoV/c/CV7MIK9uMXrXxefI3sued+39/T7NOi/I3x7MXrKtyeTKr69
GZE9l8DeA36B2IOQv9y3F6OhYk/C/vqDb29GsLf0fJBvj0WN6PsPZO9FPcSe
w/jD3gP+J7EnMf5kb0YPiD2J+k/x7c2ojW+vZu139mwEewv+Bewx4LDndH+O
b+9FsOdQnuw9/T7UFg93+7fInkwq+fZmdLDYq6j/Vt+ejcieS2qIvefLb6vr
s7pvL0awJ8EfZG9GJb49lzzp23vyfvu9Vf7Ovr0o46P2VDY+zt60/FvmL/Zf
Vb7hfysuf5cBF75Q3PDvFDf8dyof+H+EB/69Pp8RnyD+DPxXlW/EL1SO4d9S
/YF/rvIN/5v6145fGvEJxY34g+KGf5vnvxEe+F/6/IZ/nuffKm74p9p+w//M
88/z/E+Vb/hnihv+veKG/+b3f+j/58UvYq986P8rbvivWr8R/9D+MfxbxQ3/
Vus3/Het3/DPFTf8c8WN+AaNTxC/UBzXLfss+9vlf7NfF5/L8g27Eo5/yn+K
M/9lv2k5+vdCXx7sm5Tsm9gvvyjZ7uEuf075lor679o+4ReyT138ku4P7FfD
ftb6t1H8+hLKD2Xt/5nqr0zy3fdNL/HvF9ytL87vdJK/0b5O/v1R1YmX3X1H
Q2ffMv99IH+jPN0fzV+9x6IR4xw/3VP5zA6fj3X2G/2d0P3RrU+9ee+p5zj9
fcGZtd6oMX6Vls/mu8OZ/9Jvm5y87YEmivP3Vej+hOTp913Qv4kvLxrotycp
89sb3dZv/DFHD3H2PX3POSK+SpbdesyS4Xc4fhg7p8eZp9d27w/J/N8d3l/q
3x/wX13//uQlX56M3wa1f8v89kYlbf7xyksXuO+DZP6vwwf6fyeV/ful/xtR
/zt+wt/gH7of/o8+n+H/MD8ovsG3pyz/WfmD/Wey5yz/T8ff8P84fqft6+Tb
U0F+CL9WfJPsPct/TnP859TynyU+kObEB5Q/OD5A9lrAv7CXcvybyPJvxH+M
LP9R/L80x/9LLP/vKd9eC/zfEt+esfyX1PJfyF6y/OfE8p/JXrP8uyTHv9Pn
M/y71PLvyF6y4guxFV8Q/zrO8a+Vfwz/Os3xr1PLv37At9cC/xH2Uk78Qfuf
4w+w1yz/17BPeJ3odfZ/RL9r/azfDX6i8tVT3/6rTrj7vn32q/6ulV+Ifdzt
r+X4uxHf0+f/64/bdp9WvbLKz/52uOQHSL7T79nfbn9ZJn899a/z3497dOvl
x+zs7H+xv4hf3f7Ah6Q9mH/SXsWH1e6Q/NDe7c/P+Ey/Vyn+hYt/Z/rc6Y8M
r0L+h5sfW/d/quMPO/H3wx2/7VrgG5e/4fj7/ketvnNEUl3LLzzn2SWfP6V/
RyUbz+h8/mdX6/Oz/7qsMN9Z/puufw/4d/v0e76B/5L5l+776pk94PyDjA8d
P2Xr0c3fk++9ddTaP1RR//jhD25++vhr3P6nrP/d/nn27zM+cPv7s/53/JiV
jxRn/y7jyyNSH3f7s155rf87d/cq0fhv61kXPfpIe3e+Oxtfl385qjC+bn4/
U6jfvf+A8zNZ+1tR/U5/j9j09RfPTHfvd5jw/T/bTBj88w7z/8xfx7cP2b9u
fDM+c+cLMry6ys/4cL3GH7PxcfPf8J8Ux3XyPxU3/BPFDf+U/J8WivP+CrH/
1H8R+4/sm8C/Ijzwr1R+9hv4h9p+w/9T3PD/qP8C/5nwwD9W3PDP8vwTfT7D
v9D+MfzHPP8t8vHA/9L2G/6Vyjf8Jy1v+J+KG/6J4oZ/Sv5P4H9q/xn+s7bf
8K/Ivw38K5Vv+IfafsP/U9zw/xQ3/GfFDf9YcVrvgf1j+EeKw57JiT9r/3D8
mewRw75pQbjjFyO/SPJdfsyI36t8I37P/aP1iz+m48Px7Tk+n+H5FIe9ZcXf
Jb6q9Rvx1djHnX8j/lZsxa8l/kz2QRB/VvkcfxZ/UdvH8Xext037Q+x1ku/i
ExK/N+0f8Re1fo7fS3xZyxvx5TQnvkz9H8SXqf9d/EjyG1reyG8ozvE98Uej
nPi+1m/E91W+Ed+n+l18X+LXOr85fi35D5If5D9ofFz+Q/zFxIq/G/ENbT/2
bUC+Eb9l/0FxY30qbuT3Fc9+F0Wk36l+Z7/55UL+yX7d+Ir9pfFrjg+TPQF+
JP9pV8LxT+2r1Ipfj/XtCSv+ib8DfiJ7Jogvp749YcWHIx939p3ob7WvOP5N
9kLAL2RvBPHxur69YsVvk5z4rfYfx2/J3gjWP+yVnPi39o8R/059+UH8W3GO
f8OeseLDt/r2hJUfUJz5YaBvzwTxayN+SfZ/EJ/W9mXzIthfqs9nxKe1fiM+
q/JLvH9hfMWI30Z+efv8lRFfVtyIL2v/iH+l64P9KyM+q89nxB8VN+KH2j4j
vqy4EZ+l+oP4auLLD+KnKt+ILytuxE9VvhFf1PYZ8Wktb8QfnR4oHr9W+Ub8
XdtvxK9pfQfxV5VvxO9VvhGfpfqD+KzWb8SftbwRX1bciC9r/xnxeS1vxN8V
N+KH2j/G/mQtb9jvWj77LYn99d2W8RI8f/HzJ+789SF+PBX7r3X9PO3HYyOK
hwbxW0P/K07x2MB+OMqPhyaIlwJfKvHUX7z56/YHv+fHY5Nn/HhtRPHQpL0f
L42GSTzVX9+Onz+g/cmVDvDitdEjEq/E+CKeCXwvPx4q8h0/Ix6K8oP9eGn0
V4nHon1L/XhtRP5Qsn1/L14b8EulbV48OEK8EvVTPDMaIvFQ9H81P14aIR6K
8mMlXgr8W4nH6vu5/XhtwA/P+vHaCP7OOql/uB8PjigemlC8NNj/TvHWqInE
Y/F8z/nx2ojioQnipcAbSTwV8pf58daI4rFJSaH/+7jxKX4+he18vV78/FqQ
P1Hc2B9O/kOQXyH7IsivkH0T5Ie0fiP/Q/UH+a/Yx4P8luJG/kRxIz+g42PE
97V9Rv5Hx8fIn5D/HeQ/Yl9+kN9Q+Ub+h9oX5Df0+Yz4v9Zv5I8UN/IDihv5
JYpPBPkxbZ+RX6LxC/IjsS8/yK9p/Ub+ZIf5XTR/oriRH6L6g/yPljfyP/r8
Rv5M5Rv5McWN82lufOS65R8Y569SX35w/orkB+fHUsL5fBjJD86HUfngfB3h
wfk5xY3zW6QfgvNL+nzG+SOVb5wvI/81ON+l5Y3zWSQ/OH+l7TfOV2l543wa
1R+cX1LcOL+mz2ecT9P+M87XqXzj/FXqyw/OX6l84/yYk1/8fJjixvkwxY3z
dYob5+cUN+L/ZD8H56/0+Yz8QOzLD/IbJD/IX8Q+HuQvSD8H+R3FjfyN49fi
+QGt34h/K27ErxU38hva/0Z+QMsb8f3Ikx/G71W+kd+g9gXx+7z4NunPID+i
uBH/1vqN/IniRv5HcSN/ovUb8X/tHyN/pPKN/IDiRn6A+ifIfzj7unh+wx+f
ML+h5Y38ENUf5H/IPg7OD2r9kJtz/lvrz36D89+MlwCHvrbOR5O+DNa3kV/Q
8kb8QPH9fX1pnf/F38H5X9FfEekvxUlfWuejFef9N518fR2c/17k68Pg/C/p
0+B8eF1fH1vnl0k/BueXtTyfXyZ9Gpxvhz7OOf+d5Jz/VvnG+W/Fef8a9LV1
Ppr0pXU+XnE+Hy/2Q0r2g+LG+VyO/ytuxP/5fLE+n3F+WHH8WvujjPPTihvn
czk+y+dPYx8Pzo/q8xvnizl+reU5fm2cr9X2G+dnOf7K54u1vHF+VnHjfKm2
zzifrOWN86fU/8H5ZY5P8/lr9/zFzy/T+ATnbxU3zm9zfoDP53J+QMfPyA/w
+WNtv3G+mMYnOF+suHE+W3Hj/LXiEl+PcuLrrN+0PMWrDP1YPbb2Txv5c8UR
L8qJf6ZW/PMD0n8cX0a8KCc+rP3L8eH3/HhVEB+neI4V34yt+CbFi6z4Oo2/
ax+vPyP+m+TEf3V8jfivtp/jv0f58SIr/5Ba+Qeyp634u4vDFI+/Rznx99iK
v1O8KogvS34izslPaPs5PyHx8dSKjxv2I+nXYH3FPt6AyuOfuT9Fx9fITzn/
M4svav8Y8cXYx938lPgt+Sccv41Sv3wQf1X5HH+V+HNqxZ8lfpj65YP4Icl3
8UOJX2t5I36tOMevZT2QfxPEV3Xcjfiq9p8RX6X+d/FVie8rbsT3tf0c35f4
tpY34ttRTnxb22/Et6n+4HxDbMVvJf6f+vKD+D+Nz8tUv/NvOP6M61Z81PAv
Y798kH/W8ob/peUN/8ONT3H/UHHDf1Lc8I8UN/w/xQ3/ieO3inP81vAfFTf8
E+q/wL/U/jP8Yy1v+J8c31ac14/hX6d++cB/U9zw35x9Uty/pP4P/Ettv+Ef
a3nDPlQ8+w32VxLO79dy55cM+yvPvoh9PLAPtLxhP2r9hv2l8g37Scsb9lGe
/ajlDftIccN+0PYZ9qeWN+wL6v/KKh98Ddywr7W8YZ9q+wz7SnHDPlfcsL+0
fYb9peUN+1Lbb9iPKt+wH7W8YX8rbtjXihv7j8m+C/YXKW7YR/r8hv7X+g39
rbhh3ylu2EeKG/bNDnHQovaL4oZ9p/IN+0VxQ7+rfMM+VNzQ/4ob9qP2v2H/
avsM+zHP/lH5hv2s8g37iOoP7CPKPwT2n9Zv2Hcq37Dv8uxjxQ37V3HjfIHW
b+xf1/Yb+7e1vLG/XnFj/7mb38X3l2t5Y/+84sb+c7Kfgv3bOn7G/nstb+zv
VtzYn6/9Z5wv0PYb+/dJvwf721W+cT5B5Rv73xU39r87+6f4/nwtb+zP1/4x
zhdoeWN/pD6fsf9PcWP/nso39ncqbuyPVPnG/kbWf7x/UeUb+zsVN/YvKm7s
79P2GftDFTf2/7F9wPtHtbyx/1XbZ+wfZfuU9z+qfGP/rMo39kdS/cH+SLbP
eP+nljf2dypu7O9k+5X3x2p5Y/+rto++hxHYN302VH6k9bnO/jrN/zvKvifR
hsrj36/8uqzmxCta7k64Ox+yR6cLnv52p60afz9p2X3jDqjp5lcm3+nnp578
9793nH/vf49kB7sl+x2xqlqbE6Y5/s+epzrJr677y+Rvxf8+p1vrOxe7/r+m
36ovnr3E5Q/2W/LDZ3cNcvt/snzWUmqH8686nfv0mz26VNbyvdvsP7jbF25/
TJ/C3+79OL38/kjqZ/2lzzfy96cvv/6NDbo/ZEzh7x3e7+P/Bt8naTb6ny2e
b3Co1p89v9u/Ue+Q6/7rxnWV9PzezN8N+/2W47ap3Ljv+cf1PKAllXfn99oX
+sedP5n/wOO3d2zK759z+/P4+yzti/ev1t9X/sb6pPsj+t5MMD94fmW/7vt/
0j+KS/+kvpx6hDt+wf1o3z6+PG1HJa+8yw8X+mMJr0/3/q/s/gMJx79f+yeb
X67/aH7JjWV++1WelK+j9hfJi7YWnsvtv0n89kYlc+c3XX7nDvxQ+Ls24bVV
fiX//qz/hx5C/eviX7fI31t27F93v7V+aB5sdN9HWurxldE/rn3gA5Qnvoj6
Ct8AH+3zEfgnJv5RnH6D7y8RHwbzb5TwAfpnjPCFtq/4+Gr9ws+Rxc+y/hJr
/RHfBfOT+CTZQ/jG75+9Y1o/2j7is2B9f+LzTbKfz0cR+ArPH/l8ZukXWn+B
/nDli+u/PP2g5Q1+VdzQn4ob/EvPH+hX518Utw+0fw39ofIN+0HlGPpFcUM/
qnxD/wXt1Oej72cZ9oHihv5PWa7+0voc1eSgGueXuv3JgX1QuN+dbyjx/un4
K87jLzeWYX1U8uVhfqc0vxXv67cnofZK+9z7l7lfDf2p7RuT9a97frK/6P6A
vwz+VDzv+2y9nxw75+dLa2j5jA+dfzFa/kb/nS73+/3fQstn389z7yf6Rf6G
fX+k3A/8E3+9WfzD46N4L389W/orsfQX8YnFvzr+Bv+y/aLt6+Ov58A/wK9l
3xHfWPorydFfqaW/sF5z9HNq6Wfii5BXiq8Pvk+vM//IfEmt+WWMj+JZf1VW
+wd/+3gLap97P5BhX/r8PvQQfX62vwz7Qp+/6+gFw37s6/I/vZZcN/+Jpg4X
+9D1b2YPqvyS4S91m7OzO79UKfvb1J8l/eY0OGA3p19OztZzSutf5aM90B9d
svYqbvCXa5/Xb0W+H1mcH1z/FdcP7F8pzv5V9hvYryrf4LfUlx/wG8kP+Nk9
X3H+VdzgX+q/QH8pbugnV97vbyt+wfzE9keaY3+48SH7Q/wBqt+tL4kPKM7j
a9jXKl/sN63fsN9UvmG/cf9o/cKHOn6BfbPMm0+B/Sr2V2LZXwa/4nnUb4d8
Q3/z+lXcaB/ZJ4F9r+X7+uNh2T9m/3H/Z7/O/pH1H1v2Ac1nyz4k+fin6zu1
7BdDf6l8wz4J+of8O30+wz7J08+uf/3nSWg9Wfo7z77Q8oZ9obhhX+TZV+75
i+sPfT4jPqHljfWjzyXxlciMrxTtvxYO9/Ul9KfrP9G3FH/R9nX19WGgv435
p+VJHwfz14jP5dlP7vmK2w+KG/EZ9/zF7QuaX4F9kWcfaf2G/aPlDftPyxv2
neJGfNL1D55LfoPvcxePv6We/DD+RvKD+KGWN+KDVH8QH0x9+UF8lfAgfqq4
of84fsPxN30+Qz8qbuh3lW/oby1v6G/yLwL7RnHDfiH9FMTPYpKTUP8pnvrj
Feh/Gu9gfQv/xVZ8lsarovrVtb84fyluxAdZ/ylu6D+Ob6I9VvxSce5n9g+M
+K3i4Isc/cL96+r3+crg38qx5T8a9kvqlw/GL8mRH/s4n9927Rtd3D7SfjX0
U9Dv/5Efwvmdp3/zxkdxw75UXB60DDj1h2V/unVSXL8rbtjXRv0lZZk9xN+n
zsf96/hXcXzwMX+scdVpS6IPut4y8O/DOD5YUvZ+4fqyaPxNE046dbcQv6JQ
/uOodMafXhzSvlaAZ9f3ikV+8Pyz5TruK16+VjxY6ile/5JottF+XMd9Vvtm
G+0r3o8OHyr7JN98aHh0yZmh/YLrQ2n/PvBsn0SdOLtvBfHw2HJcx31cfojs
g5nxbr2qn3V0/g/wmXKd9z/65evE5UXrLymbINeHUP0ZH7xeKvLjJHtOZ5+O
+ve/d0unyfW35D6Wn+3DWBVl7a8a4Lg+VO4rXv6XqNzof1zn8xPS/vKc9pf/
72r/E0b788ZvulwfYoxf5sdsEX9gSyAf10caeONOfz3uxf+qGzcp/P7I868U
13Efl8/WRaNY1ge1Py0dKddHyn1W/Y2L1g88rF/0d+kYkfsK1T+w8O+tUlwf
8x/r/zHKfisbeOW4kdxX/Pm3RKN+Y/9L+8tz2l/+v6v9jf9j+63xU95LRxn1
y28J82NxvYN/+fhgj69LSlg/QS8BZ/2UV97XVyUlrF/8+4E7/eHrK5WfAr/C
k1dSwvrR1zfAnf7Lky+Xy4Bz//v6pqSE9dMU7+8RpY8TP/r6BuWdfpji/e30
WEXLz/D4VNunuM93JSXMj+Xe/Ypr/TO9+98uZ/1H7S/h9uf1X177fb5H+5x+
oPaXFW9/VZX/OOkPGr9yHr+8+kl+GcvP63/q31LuX5/vSkpYP40mfAThPt+X
lLB+gl6AncH6Ia88+CyzA54vZ/7z+U7XF+H4G7jjR+BoH+s/an85tz+v/6h9
omdc+3y+Lylh/UDtL+P2+/eXlLD+o/ErKz5+dv0kv4zlV7T/0X/cv77e2jm2
9BPfBxx8L7+JgSe477fi4Hf5DerP+H49foP6UQ5yGIe/c4XR/tkiV35/c/vy
6gcfgjcZF3sbv0H7RF/gN8DB36ncxzj4COfiGQcfym+AC/+p3c04/Ipyo/2Q
C541nj9JjP4R/ZNADxWXXy+F3mAc/g7OFRVv/4qk3Og/yEU9Rv9HqTE+eP4Z
xvPj+kyj//Pqz3t+4acEPGXg0UtyH+OiL/Br4UlTua+4/Pax/Abt9+3yygE+
yivX3uAv9TuC9kFuE6nH6p+XjP7x/TaTP01+HSN/jzH41ffrwv7L42eMT1Nj
fPD8jY3nx/Um/7H/7frznj/7teNvFfV/2A8Bjuvs5wAvHnf7reU57lbx9hWP
6zm8eNyw4u3Pk188Ludw2M9k55cBLx6X4/Icl3PlwUtvkp9SUfnQK+xnAC8e
N/rN7aO4UsXbn9e/ee0vHjfj9tvjA73q+y0Oz5OfVz6vf/P6r3hczpXHdd9u
duWLx+VcefBnE9/P0fKwn32/gMvb8ovHfRjnuNFvbV8gv8Ltz+vfvPYXj5s5
vGLjw3FBxm35eeXz+rdi/ef0EvtP15FfAn8FuMTTVL9xfI39Ao5fvU9+BfwY
4F3Jb4A84Ox3cfxtNvlF8GOAX0HPdwU9X179efr9TbL7OT7Edj3Hh9hvseJr
hFP8ydnVsLeBP0B+C78frJzaV07tG0J+E+cf2G/j52e73o83Of702+/iX0PJ
b+H8WTn1Tzn1zxPkN/H7Fabk9D/yQmO89rv4F/uNVnyNnl/LTye/xYqvUf0q
H/Y7ynN8iO36MXI/cLa7rfga8KYeTzn+Ag57218/7WPff2iv+Bhq3yhqn+//
aPmYni+h5+P2pSP89sW+fHt9jyR8JOHcP5xfGemNS8i/3P9Nqf9xfYRfP5V3
fosVXxvxH8fH1g/4e4Tx/HgujpOxfOgR1h+sFz4g/ma9xPxf0fo5jsY4x7GA
j/DxQD/k4RX0H2OOk/H8wXXWH6wXmL+Y11h//Db5YfuY91j/sF5ifnxJcOgp
ep8Y4ym97yP3+SraPxxH4vHlOBTPP8m7BO9nJDxi/ZPXP3n9m9e+vOcjvZEU
zy84vYL7GOc4mYEnzI958kdT+zh/zrxn8RvHgXh+jRG9Mob0E+Ep7rOer4nx
fI1z+sfiBzz/SP83eL48fsnhd7N/Ktq/efKt9hFvR2v2e2HJ1HsrBXg67dON
5/V4Ndh/RnGrMs7vw785+7WHW4+tXy8W+SnjuI77WL4V3wIucpLRxvPh+nWk
n+CfQH9w/q6C+ado4dKz7p+37Kdg/xlwXMd9/Pyliy5cf/iGXQL79xqv/IoE
9xUv3zjue3S76StecPsbgeM67mN81EW9D2t72+7x5DNGPVNnuvu+OvByuY77
GO98aqXj3ipvED91ye0tV31WXev/L8Gfluu4r3j/LZZ2hvMP13Ef493vOXWP
TtcsjrL2h+VxHffx+M8ZdG3VDYftFu+yaNG15/V335++WvAacn223Fe8/o+C
/WfAcR33cf1Zv+4T6I/rvPK/+mlyH8tfXVg/a4P9Z1d583+L3sf19+tzfK2r
vtw98D8w/3D9LLmP21e17Oe76i/bU+yvWkH7cR33cf3tPjt+79dm1Y6rrWj2
3w9++XOwPqvKddwH/GbBZ77c8PX2A5vFzydrD615ozs/eZPgz8l13Mf99+gD
X3Z46fxvpR0lAY7ruI+fr1nnp2a+u2J5NKMg35UHPl2ut5b7gF8m+LnCez8T
PwLH9XMNfpzRovz2hU8vCvafAcd13Mf9S/njlHFcZ/scegH1GPrBzL/n5T/y
/AvoC9Jf2v7sNy0HzvuT18r9wM+h/sXzUvtVft7zge9ZDwBHfJ31CPBuwvd+
eacfEH+5kfSI9p/wNcqXE7+Dj4E/SfzdTfQF5gHrl6FyP/CDid9x/zVe+5z+
mSLtuQE8RfrlWOFrv/2O3z8UPgZek/h7kegLv/2ufFW5X+cH8ftpcj/wL0n/
oD3Af0f6BXzPegA44lNXe+WdfgDf++XD+BT6j/UD+N63g8L9X4MEX0X6AXyP
8qwf8Df0TD/SD+BrlGd+nyF8DPwZ4u9qoi98nnL6Zbjcr3qS+L2r3M96Cnh1
aQ9w1i+thK8He/Idvw8g/llL/POE6Atfz7nyuB/9z/yD+yH/EdI/aA/mT3PS
L+B71gPA8TfKTyX9kMd/+Psyb3ycfkD/iZ5IWD9MW/j0gutOaxB3//m9XS+4
fY8gPpXutE/JW923Rgsu/fr9azauCcqjHOQwvkjqbSftYPwLkTtV6jHyK7HI
D9qH67iP8bHfzmx4aL0fNG7DOPj/ZbmP8ZnLap96x7YNyvvFy69IZsh9Ewgf
VuvK0ZWO2Cdu0+KZr1b+sXHQ/iNfXTLn+2o14hMWH3vYjP6VAhzlIIfxrN4a
8dw9r5zYr0/loDzkoh5uH8pNFzmMtzuo66hxs75Mxl48u3/ptB+D/nt2w4qP
B+yxa5rVUydo36tSroPIYXxMod8XJlk7QvmQO1zqYXyelHtF5DCelduWgPeD
8ZXrz8p9xcdnT/ULgv6X693kPu6/zN5do3ElLo/rb8l9jFeZ++F169/ZpjzP
OOLvuI/xjhfc0+jCb9rFg69sdkj/69oG7b+47smV9oyqx9ccM/bC1UNLAnyQ
lOsgchifWlh/1ePZu26N//BKWB5yL5F6GEe5aSKH8WEF/fJzAvs9GJ+hy2+N
ulRJs+esGeAoBzmMZ37N0uSiQvvWB/13sMhFPcX7b31UU+Qwfsrbi07bPnxT
Ap5nHPvSest9xfuntvoFxefPzumHch/jsB9uPvayux+btTmIP0K/Dc30WsL6
8eRX7hx39D7vRbH8Th0666GHT3HvV75F5CLux/5p3v6lzB5oq/xd5599Vq7s
1kLL59n3E9d33v2VrTUlLvFTEJ//V9k7U+4/tmqK62IPa3nwf2a3fpW8v8/t
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
O999zdTalH9y5/P9fc0bI55/mC+Ir0t8QeV3//bEZQ/8rY7w7rpE+pnip4cK
3krjgMAPuPihdzu22FfOn9UXO9nl1zM+qZK+XVifleKRtD4XHNlgpxMO2poc
3vLhE79vti26/syn3hrVzfHvN9l+d5y70PPcwOd5+6Lrxbz/Afuzsn3H/wKf
KT4tJ/8t7Y9/Ep6clvFNRO2Pht534+U1O78cNb6m6e07/d6NL8YLcXn2b/L8
A/DHvaJHMj/J1c/zO/h+RmF8m1P+ycXHcP0w4Xfev1cm6178s5jz3+XEK+AZ
4OAH8MIntP8c/AJeuYv2d4MfwAvMH9lvWorrj1J8CPwB3lgqPAJc7G49v8v8
AX7B9eL5p3o6/3j/DvgBvGCdD8H1i+h8A66DN44XHgEOfhAeD/LX4Bdc5/wl
roM3zhIe8edPHTn38XEEngAOfgGv8P4B8MNjwgvgCeDdhF/gn3P8G/wAXugi
PAEc/AJeeUd4Bjj4AbzA9i34BbxyEZ3PxP4U2D1djP2f4JXxwjPAvxB+aCS8
8ILwBLU/Bq+spPgz2/fMH+AXXOf8n5/3+FnOf71H/N88Bi8wf2B9jDLWh58f
qhNzfm+NrHfsn+b9i1j3dxLPAH/CW8+Iv7r1v0jWs5+f2eH9unJd7NJ0LtkX
nb38z4Gx8XyUn3HzR/ffUj8Bv07W8yRa58CvkPXs52c2B+sfPNKJ7AvEzU6h
dQ4c69nPz7B9+mMCHrmV7AusR9gBrP+x3mbKOuT4nh9XdDwBHOuZ17lf/7qk
h/DQ12SfiN2bgmfY/iiX9TiB1inw5V58xa1Df3zmyTxbF9gfJUOy9fw5rXOa
H3qui+0T2B26j5DsD+TfymidA/f9S7fO/fG192dgXo835i/8Pj8/4+wDXD9e
eOQxsi+wvrGuWb/763dd4B88UdRvwD+n32EfwF4APoLsel7f7DeAB7h/xD9A
nE5xrF+sW17f15HfMKlofBn6fSfZH+z8W9j1fvzKre9LyW/g+DjiC7fI/Lla
1jlwrF/kD6FP/edvpXk56GudH2S3Yx0Dn0t+B8fPYQ88Iut2f1nH/viuS76R
dQ97BPhyssuxjoGXk90/ifZfLxJ9jHULe94fX+d3fC08AJzPD2G/Ks0f7FuT
/WnufGcZ2fW8vjeS31BW1P/Dvtlwf1op2fW8vnF+ys+zuvk9mvwG2AvAYfdP
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
eFMDnyjjTvL1+fA3+g/3A8e51e9pHQNv6pWrnfL4oPxwGReeP2hXG+IB//kw
bpgXbn41pnnXhOYP5Hekdcw4rh9M49OYxoXnT97363heLKb5BfmLiYe4PPNA
8forB/mDJjSu7H/5ftHOKY+/b9/Afnf6s/lOL931WPvqcUv5fWpWpdZjh7n4
Mr7XgHn2cKsev/4frvr7qSf//W9k6Ri6D3hmXzRKM7u0o7SjUSDffy73/p/e
MxsduHn07nHfwu/qqOTjR4dvSTeQ/VY1rn/MifeNjmqK/eLyB1n7JpaPKVrP
GpFXI+571tx+N75XRerZTvqlrdhlrYL4TTbv3fvjOmTzj9ZHZd3fIn+7+uV5
uZ+t/u9T+Pe89v9Lcn3PwvO3k3Zy/LJRnJV7vZzPv2H8n5RxbyF/U3l8t0P4
oaPiWf8+WYp+5e8TYfwwbjqOgo/22vd86Rhqn/g3Oq71ZJyD8ZNx6yPjyP3r
f3/RtQ/jh3Hj8V0s46/7L2UeAK/Y9xP1+cp5fLPfVPuP20d2Y1pfxhk4xgPj
U3x9wa7GPqvvA/sC9X7xxp9//T+6nNuPdvL84fLobx1/jIeMU29aX6fLfDhF
5kklWt8NZLzLaB4Ax3jwOFH7YrLTgvFrLfPgIFq//Fw8fvVkPCgOkdM/Y8n/
Ud4r4fWD8cPvreQ/FOeH10u5/7XfZRy4fvAD19+AeJX9M+blU7Hei/d/+H4k
4lWMI48PxqWVjBPw+sR7efxZ4v3L7/+niBeZH9Ev0EMNiJ/AS9s/yvr9NOYn
6bc+rOdo/owe9e9/k0qZH7jd/PzgNcxvtj/yvo+L66wHtX8y/Vpq6VfwFq4z
f/G48POh/84gHgH+nfR/feIJls88BrwS6aU+NH/9doX6Df2H92Nw/7JeaU3z
twnplSU0/8uI97l/ffsrbJ/BzyXA/XKIY+7gvxTm+7KolfzKelA84++vhVc2
RKx/YVfxfX77tkTZ/H63nOO/GC+83435A3Gtxt48dfMD/XtQod8/E//X7Z+H
/kT/V4w/xur8wXi8YvRfb3lu9EvGA+750a9if8XN5G/uH79fpqn+6Outiw3R
mehn6h/0C/cf+hfX0c/cf22k3/aTfuT+Qb9w//n2CfSj4w9/fobfjxa55X4c
jeN3O8fS/8H7f9Ev/WgcgPvvI0UczPVPK3lef/1uDPoH/czxXeg37gfg9F3x
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
SfDn5Dru4/offeDLDi+d/22UjU9JgOM67uP5UbXs57vqL9sz9vPNO8xPuY77
gJec8e4Jn5/7RFRSmB9Lo8Yvfvvagssd/3d45c5xR+/zXjIg+42mDp310MOn
uP3xefGnPP/i5mMvu/uxWZujs/z5E+R/ZJ5RPn9NtFb4/ByZF1Z+JHvutmmd
f/ZZubJbCy1/uDyf/EbT6fn6PRY/f9SRH0cXXHrK/M97rota7vtpx/kNHb8h
flIu+uHsx4fOr9LTjd9H360+6YZeVeKjBi188OIF9eNP7r6+vOFfFmj7mj1Q
dcHD16xKBmbykz7nlDQ55sjdSP6mZFHZO1PuP7ZqKjyi+BjRB1f2Xdr+w/M7
BPrj4ALfVVf/o+z4tM+rLzv+O1L0AeSw/hha4M1lqj8GNxiw+vO+Tn+c3GLx
/tNe/jbZv9J5p9St/n1ybtUJa08asgMufL9IeJv1Q6Z33PdDxk2Z1vOo1s5/
+UrKTVrfefdXttYM8h81C3rpK9Ub7+9z+54/flxZ5Q86fdHLh/1lQ9Tr4okd
6v1jl7jdPk2bVpuww/djBlw+Y9WP70TzNn0wbvCINdHbxx1+/eWV3Pnle4f3
Or1X63XRha+1W9C+a6249icvD17ZKMjfx1t2u69Vr2tbi/53/HXsjEr9av7h
l+SirHy6cbe450NLXH4W/hT0Q48qPQ/perE7n/2jzO8BMr+voPn9w7XPdjm0
zsLopS+rNO/deWM09/39/nFtU7d/HnGHLcdcPOv2B2vEN8l6A16tsC5qxINq
fjOrypV7i/wZOv5vbD/z4eod1iYvZ/KTFyaPeeWZwx1/wy6dI3HguoX15Z4P
6z2Tv1+gX0Tfqf/Q/ef3dr3gdvd9U+iVpav2at2hc/NAv8zvfXSPAc//oPql
ytwPr1v/jvu+UTdZ/9Vk/del9Z/p1TXJXIlrdHhk56PGfeTW39uiL8qk31i/
ZNe/0+tZe7dr/64VfQH7l/VLNr7/Ur2T8VNlav+maK9Pjt334qN2izM7d4fv
ZxXaXzve8uMDnwwf3TzO+N59/6FDwV74TPPcPQr96+bHLQ+OGH9GnV/7edit
RxzatlrcaHmf+osPct+XgN+W1d80hj4BfmShffvGZyx74bDus4+IM/ktdXwP
/+eZk+t225yI/PSQng2+eeRrx1/w5/pn45xePb7G/Bb3O/2eFvp/TjSnMM4L
o4vuevHynoe472vNWPj0gutOa6B6pc+UldWXfOTeL5/utE/JW923Rgsv/fr9
azauSVj/vLF29yl3Vd2czJ7VduMloyrHW/4x+aqn/+nOZwyb9unG83q8qnn4
bzYdd/OKg935kS9EbiL1WPrn9dFdBw/b3iie/dyUjza86PqnamG+bksGF567
anzAif1HDFnl7O9jv5nSdkvlz5NrGhy0bdeH1kYn7vRwrX2fdvML+fgBr+z9
ztmzX09OWHzsYTP6u/69fGq64qeVldNz/zrg9kZDa8ZSXuWP6TT1srFbV0dv
r769dqsJ85JZ9+0yvU91t/6gf+bteeXEfn0qxwcOO/nu8QMWaPm/17pydKUj
dk97XHrP8EevqBvon9JXl8z5vpp77/HouQ8/V/aX/VV+uxbPfLXyj1uT6gPW
3PP3BVXC/Pqy2qfesW2Dxm2OFHnAdz3onz3Gtt2Q3DDwuje3d60UX13/vlc+
fGyqlo8P6jpq3Kwpydhn3try6BnfBfrnuQ0rPh6wxzb1T8Z+O7PhofV+0PKv
Xjy7f+m0b5Ip89qc9+d/rgv8k3FyP66X7zH6jitqrlF8r6uP2jDnyuXRnEdb
7rLvHi8lzf97/6V/a+nGp927N1553YLpySmXfXVb6ePfR4OW3BNXfcStz+m9
1t4fn/dT8uLKDlMffPWX6PnLj6g+dMAnKh/fS+mZjXva4btpn176uvu+RL1/
Dps1ek7VtGZZfO5H1+0Ui3wdH+if8U+O+9v2z2vFMs5u/Arrd0HSqbBu10bz
hk+Pmvzi9PNbwt+yLyZ+MYszaP/BnvsqW7/JJae36rntGLe+H2574oaxb1VO
b1v/w18/u6xmLPK1fFpY3+slT7osKT1gVL1lBzv7BfoHvDY/2y+q5TtecE+j
C7+pmbbs3O71B+7dLdA/iKurnVqQ30bl/+7xsrVtTtiePLb3gLqTTwzfT7R9
TmH9alynX9sZi1v94PilQ6H+jcmQSn9se9ZeleNPs3MUCdWvem+q8BnwRYV+
ez8pKfDEykD/9H570Wnbh29S/2aR9LM/PouS3xXk/xT4N7NE/+n7mb39tmh/
w3h8of8bpH+749DVWy5w32/5sND+NdELhXH/JJl+3ILj553t+GNCwX6YmzxX
sBtWR+9OaT7qD9Ocfx0PXX5r1OWnpFVhfH6R+ucH+me87LuaVpDv3l86tcmf
bzxleZX0tR92aXD9X2vFIp/Gt1ncvCC/aXpHk49GNbqyk5bHvufdK3f4enbz
mjH4GLj4DerfsP9AcTFzf5d1fkXiViniVtb+Yiv/Ln5TKn5UEJ/tLv5Nd8N/
E7s3GZDZwckssn/bZXY97PxoANn38H+eyPyEiP0D6A+x0xO2z6/I/BbEtYL3
O4tdrdfZvh4t5SSulbL+EL9Mr7N/JnZ9+pfMzk/qkH1/ofhl/TM/MGlB/p/4
J4h/Bd/H6CP+msa/yL6fmPk1qcS1gvzCvzK/T/0e9v/Er4jFz4jYv5D2R60y
PzPqS/4l9nN1yvzEmP3DozO/NRU/Np1D/uvJmV+Vip+VsH8F/fJh5uclr5F/
h/2JWfzrs6Q72aeCi527JjqQ7HPM908zP0DsKWf/983s0jSzw/YVnnX2l9jN
qdjRsv6c/Qz9kq3PfyVsn4tfw+fLVL7YzXqd86Pi16Ti5wTvl9uc+W16/Wby
32BXix2fsP0Ov21Z5icmH5J/CN6QuFhwvvNM8b9wfTDZ5+8LL0lcLMi/zCa/
pw75h/A7xE+I2D+Q9sMPjUaQ/wn+XC38eR3xZx5/g7dnSny1B/mf4henmZwa
It/5xw0zv0zGf1NyDvln8G8yv/u75EzyD+GP8jlI4Hyd8zusdyz9Qc+v87NE
/gGfXfT8iitfl8ojLg48i/Ms1v7J+L6uls/iO021PM5FAhd+Vvycwt+1Sb6L
/2f6Zn/FM/5y9hv2B4sfFsTnJ4h+QHnWP9AXwFm/fCn5AMg/LesPLT8G+knw
LL7TWnHEe/z6d3h/j/C9X7/TD1+K3vD7z+0PGS35JrRP8lBavmfWHpU/hvJL
GV83VVzGU3HEvyCf82fIe/nyd9f2yXhp/8h4Ko79W37/ufj6NLFngMdi5wDH
fAWOOBBw+CfAJT6m45vF3aqqfP+82q/1F+z1Q/X5M/3i7EvsD+7qrZ+6Wn9e
/gVxJ+CsH34n9h3kS/zaza+Mz/T5DyroT7f+EG8BzvyPeJ7PP47fr5fzbMD7
Z/2l8rP4yk7aPycU2uu+r5fF29z8Yv6tKH9DPvN/Nh++0P4dn7WH+qdT2g39
l40nzY/K2n/SXym3rw7xOLcPvMw44kN1aJ7y/MW8ZRxxPfkN4lsfCP+CdxkH
f4O3GYd9D14O/BvhX/Au4+Bv8DbjOO/RB/lRwicJP4OXGQc/a36b+1/4t7vw
LuNf+nnfAAc/g5eL918d5eXi9e+uvMs47P7+wtuMg3/Bu4yDv8HbjMO+By8z
Dv4F7wbjI/wN3i4uvyryFr95/oK/wduMw74HLwflhX/Bu4yDv8Hbxfc3bhG7
vm7Qvrz89y3Cz+DlYP4I/wrPBeXB39IPAQ5+Bi8X79+6ysvF49s7xScJ7zJ+
nfA3eJvxPH4Df4O3Lf673uA/GbdUxjGov7vwN3i7+PyonF4jvBzwg/gHtP8n
BZ53vo7Od5fx+W7Jy6fIzz+W5eeTCuMSX0FcpZfEWYAjPoO4DOI0wMHPiLs8
JXEY4LB/EXepJXEY4IivTCaeBS555ZT2HymO+ArzsI6/3E/7j7Q84iuIq0i+
XcsjPoO4DOI0wBFf6U48DRzxGdp/pOURX2EeB474DO0/Sqj9GldpKXEW4IjP
IC6DOA1w2M+Iu0i+XtuP+AriKoizAJd9BRqXQZwGOPgZcZfZEocBjvgK4iqI
swCHXYG4TBuJ0wAHP1eWuMsCicMA3yrxFeQlEWcBfprEZxCXKZU4jc4f4efa
Enf5SeIwwBtKfIXeb6Tlr5L4DO9DAY74yk3E48ARn6H9S1oe8ZU5EleRfLyW
R3xmb4nLIE4DHPGVwcTzwP24ru5fcvkDia/UIT3gj2/1lPYvJdT+6EWJqyDO
Ary/xGcQlzlC4jTA8/RDf+Ff2OWriX/Bu8h/TKf9b5L3TpH3RpwF+GCJz1wt
cRnZz6DyoR/OkrjLLRKHAc5xd4v/SU+o/Lzzb3n7T2F3Y18H7z+smu271Hbx
/kvkf2+EfqX9nd2y/YapL9/FP7L9PdV1X8nBtD8S8XvUz/svoQ/+B2vvAWVV
kXWPN02ThEFAEBVEMigGEMYAje86JsD4qWAAlHHGNGMWlZ+itGmGEXXGhGkC
MqMCrcIoSmq8RcYwCIgJUVEQMRBFERrl7/dq7ypr17vzcH1/Fmu91e+8qlu3
wj7n7HOqinLVH72B95SrfiBfQvkHkl9J/UL58ZJ/SzwPn/+T+7mB1+HzPb4T
968P+s/nZ86E3X4T5JWSv3usbY+rv0r4D8t7N3Ttryv5tbTPWb/m9+J5Jqzf
r1/kszr5o5L/Svy/Lug/n3/7COwRjr/mHzK/7lrIz5f8S/InyJN0+TqU2/XY
3M0/zU8ca/Mind8+V/Ijif98/nrJvyy2PonXlCu+0z6j/AHJr2R+EvuvjeTf
Eo9ZXvGbeEu54rP1/+u599f8zNo2b5d5nDnN321v2+Pnv+DnELF/N2Xg7xUZ
9jme58prfjHGy8mfkPxX4i/7b5bk32rc5OfuD9N9byonfhI3VY58bpffrXLi
K3As4pceBn4SNyP9Afwl7qqc9jlxNXp/iYsWrt/HPVVOu564qXLiL3FX5RrX
LNx/Pm6pcuIncVP7j/Y7cVflxE/iptZP/CXuqtydfwFc1fq7Az+Jm1qe+Evc
LVx/mTkBuKpy2DvJeRn5ycjndvndKie+Ij8uyv8kfhI3o/kP/CXuRu8HfCWu
Ztk/WetT45ZR/wA/2wI3VU78Je5G5SUuWbh/fdwxen/g5/7ATe2/3sBf6KlI
Dn1nNmXkZxB/ibsZ+CXxA+2f1oa4Wbh/GhnirsqJr7OBq0Xif8XOR43ig+Sn
yZ+qfdKT9eL7PhLfYnnynxMk/tMrKL87eAiv31k/+csovxByyQ+J3o/8tdqf
lEt+iKuf+cPkzxdJ/Ityfv+CxDfD/msW7a/tGbTf5YdE70f9ofZr2P5tkX3P
9t0Gfl7ja5Rfh+9vk/hpr+D5NcwKie/y+aJHo/YzLqn+A+WIY+Y0fsnnHwz+
VPPD2X/8/iCJb7H8aeA/X5T4D58PntQcJ/GpYvZlMXzk88lfq/1JueR3OHmx
/HU+n99rfJP1g1+I9tey/yS/IypPfryw/bq3kfwOVz4H+Yng5+dKfO0ozn98
30/ip3w/8uMnSny3PBhfl98Wzz/w28Mkfks5vz9P4pfF+FvsB0kvAs+n/CT5
2UrGZ4T/PNDyeukp2J+i/N5Wyxsa1G+OEf6Q/jl4ykT5SdpF3J+i+Ane0eGn
8o/EQ9aj+Ane2eHno8I/g7c2S7C/ZrDw14wbEbcUH7EfyNmfyl+yHHjcCB/B
e7vv6wr/jf1YKfLcEuVPsZ/JcH/TacLPg7c25IEHCn9N/577s5Q/B2/M8mkb
4Y/pvxMfjxf+ulh8raXlHbn/IlH+kfuD1mB/zSDhN63/uCVFnlOi/FsPywsa
8pw9hR+kffkaeMr1wj/SHgKPG+U/ANcdvqp/Oxx4CR43yo8AL+3w9W3hpxGX
SgfBPl8v/jF4b/Ma/Mu2wn8TL8kzKL5iP5CzX28R/pF4uUh4WsrBe7vvNwn/
bds/l3lqifKf4NUT8OyJ8us2H6ShIc+v/D94bUOeeK3w27Qnub9L+XXkUzLP
MlH+H/vJDPavpS8I/0z79ibw87OE/54+8bz6gxusTvGZ+8+WcRecNOkn+UfA
38nAJz1/pWpMxZO/eaG2wWeC8q59w1+aNWLTmpX8TLc80HLZtqbe/qP/DhzO
XfzOs8fduXKpa//dOJ8KnxH+6rkx6z844OXr9/PnS9jzrWrgfPkYf6fLuSb6
foMaXl2r9brt6UD7mVv5ymeDBnWZ5vm//HkwH+LcmA8j/lTPhdHzOUfj/DF8
RvyqnpsyRPrnFvQvPtNvpH+Lje9Aeb+35P20f9dJ/xYbf+Ivz9WcKe+P+2zS
1hn3bxU7/0XO53f3iFOO++zc/XZ6/+ukfH1f4hwif48k5cw/47mN9n6iJXJ/
ZPb5LM/I93p/iZ7bovhL/ZJ1//UEaZ/9fnZ0/yLboeeP2OfyXvhPMu5HKpXz
Y3z7xqPf8Bnxs4XPlTHR/Zs8J0zv15mAevEZ3Q9ZbP4UPj9xko5fknW/TLH5
w/voxme0X+8f1PNHN9r1lp6L9cd1SLme/8t8X8qLnc+4/a7ca2+N2JGGOOb3
fxJ/17Q4fH2fsVuAw/7+gB5Xfv/ANSP3STp23a/23H4H/+zzuU5ZN23iGzVr
JqxH8bfXuCvPXnn+N25//I6W9U7qMFjvt9uc3nlj37X1b38/veyCR2fX/cLv
r5Hz6SsUf1fm32uZ3KPi88s5Hx/E+V6Kv5fk8Xa2w189P8ji7sbcidP79Dl8
4+5JBfDYjQ/wd2oG/o6075W7HO+l53fT/p066rDr99/SKeP821KD8qb6pl9f
uKKjjx9R/2BczZJ6X9/3hyt/cn6J1Sep7actOT3/rOTu4VfW7fFc+t5Re+52
4iE7ci2ub3X7bif5+Un8Hfp4/T9eP6tRciveh3L7vJJkSr79zRPqS8p7trv/
5C9bf58ut/WnN5772PwJveP7UThPu+fn0W7yfk1Rf9w/5fn5VcvZv3fL/QKc
T6evXvFU5RX7Rvg7cN9Tf7/38d853mHUO8PeOnqx3//F86rte7Y2nOc6v1PM
72qZ39+Nqx69sNtnaQX6Ldofn//+Nfe9ba/fHzQM83M65qfirx3f5x3+Hppv
33bR71tyfT87ec29f2ucfIT1Era/WXLQpfe92q3t/jjfuqHr36qXy68ecOHH
6dTgHFQ/v9dOnLfpzVsX5+Zf+d3c6fvXTGZ36HbMN0f69hPXTsg/v03ykJyv
Z9vXPjmqssPMkj0Oi86/fmVaenzF3jXMPFu/ear0votenO/3L+1bZH3Qvk3J
Mwi/S/wkbtJeCssXuz9km8PVVcBZyoudf8j5xO+Jw+H8/sbhpuIr8ZfntOv8
5LzmOvgDcJbyED+3RPZtsfNziZ/ETcVX+2mq+P2Dgj8jgK8jgKv9gLOU34F1
Q9y8XPQD8Ze4SxwO51fT5GmMw0vAEcpbYf5sx7zhPKKc9u1S4OrLwFnXf6Ms
fhI3gXOyPpe6cyc/Ag5TzvywEXjP64CzbvyBn8RN4ijlxF/iLnGYcuIrcdWI
fU78JG4qvnL/PL+fIv13LvCTuKn4ynnH74nDlBM/iZtG5jfXRXfM68XAYcqJ
n8RNxVfiL7+vEP1F/CRuKr4Sf/n9dJnfPYGfDwA3DwSOhvNnS+4TrLM+wGHK
iZ/ETeKom9/AX+LudLEPiWc8R7oPcJZy4ufTwE3U7/qP+MtzunsDhyknvu7I
WB+0X8c/sc+Qbn9tgvF7L+J3Z+J7/o7yGUH5ttH9ECzP7/m7DDnv33DPpz3N
eaX4zecTN0+2eOqeT/3B7xVfqVfof+j9EmnQPt5D4eeXy5+w6zCpkvnlzs/i
/gn8TuVyPnmJyvmN3r80M3j+Nzm1zynn9/yd9t88zCP7u+bR+H2P7/k7ff/v
UX+51M/ywAn3O5V/denI6+4c3TSpzutzfz4J+5/f83c6Pz75+0ldF37cKvKf
xT8z/J3Kz7zzjnu2/KtZ5D+zf6C/0v74nT6f83q+zH/K5xeZ/9bu2enua9X+
5fc78LtdnZ/F5jefXw4cnJbHq02pPn86vufvtDz8V4xjXD+/HyT+M/t352/a
/W5Kr9aJHR9vv84Mxreh4e/C9/P34yh/JfezVaj9Ni4/HoeKf+zvP7afi6uo
XwvfP9behP6xXz+wi9K+sIvgj7rysHcd/3CZ4HP3wL9vFeX/Fzu/2tqXe4h/
H+k/E/rPfv3cDLuOvCX8Z9d+6pV78vbDXtH9NcT1jXleskU0P2eCn5yRwU9a
u2Qvd74w+yusvwx2TZ0E9pTK4Z/sSTsrij9llaf/vPGWpf9K++8B++M1z0/n
10UNUwX/Qc8f/yE/XxParbDTurn6yX/Z/qmPcfL+C/w7Q/2h9t3K/Lo4WPxn
73/RfqJ9rPadxb0OJvSf93LlX83bH5tS2h9zrJ3j/Zfn/9lxzOS6ZnPzDb+d
93ytZPTNPf/5xSR/vhLqc/672ndol2mZMf85fzZg/qh9x/uvQv95N20/7LI9
ks+svabtT9pc+Mq857s3Tz5c+q9fvN3Q579avD4Uz++S6P2E1u7tZKYBd+zz
95Hxre/4ldHBPR0baTcY2s+Mh1AOfQV+6D3aaTI/Sw3td9ufO8V+c/Ebh5OU
h/jXPtofVez+F5Yj7ik+2s+FVfxe+R2uZ467zg/iJ3FT/cti5/t3D/zzMoej
lBP/9Jx8yk8FfsLvyqn9SPzbBzhxN+Y75cTPERnxH85v4iJxknKuR64T5R8Z
3yFuEkfD+ssMcW0qcC4cPy+fInLi50PATeJoOP825/4AXCROUk78I+7B/3Tz
i/hJ3CSOUs74zmHAxXXASco/Bv5xnio+Ej/5vdrnxD/2c3Q+DfCT328Xfor4
9zBwjzhIOfGTuKn81/Yi839UoFdLE/W/iX/EPcVHzi+3P0rmF/HvA+Bea+Cg
tD9H3CSOUk78I+5NF/sL+OJwc4PEJ0P/d31O+Q/i3zjg3nTgYDi+tRg/NoXj
E+SHdkb8MOO9jBOp/0r7kt+H9+h4fEU7klTwj3LiX6+C/l90P1aJyvmN3l/I
9n2a5ydWp4p/LM/vV+N3Wr4/4tZG1gfL855GjW+TjyIuAi+j/uP3ip+s/zTL
00T8DeWMnw7B71ROv0T9P/EPTE/xX9j+r9Avhf2jbe77VdJ/nD+Wh24Q8c8s
z+/5Oy1PHl/xS/S26VXQ/9qWWh4v5u8o5/f8HeXMX5hqcTi5HHynyi/D9/yd
1v9H8NKKX+HzS5M7hL928wPjqvcvhu9fnesv4z8jmN/tkyXCL7I8v1f+guVb
v2rzKizPsCNaX9vw/QLJv6DdV2fATY0e6NEkoT2n5cnT1sTvKEc+jMZnXXmL
e22N5L84+fjAvuwUxSeIW7jnJcI365c0F//xJ89H3Jx2kconQj9vgl5R/oP9
TTtan494CXEhen/6TeMDOy96P/iXXaLnl+Af79/T8rb/WxjGPwrXXwa7qXlU
ns9l/EvlyKcy9P9VHvqX7SI59Svsouj9L3m51w3/KDkIdlXzSD5Bxqfw+Hcy
mifg3s+2y9lFKg/547ZR+2Gvm29h9+rz7wr8+9Ko/DqMT2XG+DCvyj5nv6h+
2hPop6h+jJvZIOvQzX+sv+kZ62+CrD99Pu1ZjGP0/D623YZ5eIXnR6mhX5HV
Pn5fmJ9qakL75Sf+H/7m7zS+pvOqMP/UQp6v9we0d/XTHqSc9wmzfer/0F9g
eeWniB+U9xD/m/gwP6jf25+wh6V+r3/s5+IqyvV+buID5Wq/cv1T3lf8V7aH
739UwfjNZjeOxAnKuf7l+e79dwA/KCeOUF4p/a/+gfa/2ifEB8rV/uD6Z/1R
/iPwI5wfbZ2cfhnlal+sl/FT+3GK4DZxgPLbgB9s30nAEbc+ZH1Nl/VF/Jgb
9J+/X61S9O5UWV/ALVd+uOQnIV7tymM8ZX6UuvKjhH+YF6xLd3+g8vvuXjX1
XxCvMYzrqJzrl7hQOH+sltw/6OUzQl4riv+BV0qIIyrnekceRYR/xe5HZDyR
807r5/27JfgX3a8Iv9R+/17Uv8QH2rXaf3Pk+VqeeYGMn6ic+MD4lbZ/so3b
uDi3lkc8xTC+Ep1vhPGdkzG+9M/1nkrK0S6HC1n5hdUZ+TF4b8P8S5UjHub8
jsLjW+ZwQeXWH/vKxR+1/1bZfkkYd1I57B6j6yycv379ZMzP5GPEJbV++LWG
8bfC/dPUMD6q8pYh/xH3H9rnzq+S+C3bw3lb+HzeavfcaP9nsP4/j87/5voO
7Svvn5H3Rpwwyj8odj8q8YHyUyQ/wOVvBvW3dfWH65v1vxfhQ9b93Jx/Jug/
r5/IC7C8xk/ZPpPRPuQr52ZBfobEp7m+Wb/GV18EPlCu/AjHd2bG+HL9s7za
B1z/lKt9wPXN+jW/WvOPNT8TcXMnV/uA/f9yRv9zfXN+aXyZ+DAzGB+ff1Bs
/YwX/139A67/6cH4+PgE17d7f8mPIL/N+TFF4vdc/5Rvk/wBxg24/2S65N8h
H9nMCPxPnZ9b3LywPKTfH5ii3KfIqySP6PonzB+O+D2uJOpp8imUM5/pNvBK
er8e19egjP0z1L8dkLep/gPySs2ggL/z/BD1O9v5sMT3EH9y+cd8nns+4gLM
G/tC4pOMe58B3l/zt5D/mTI/GHmgnn+38QbDvDHkk7nnc30zL+4K6X/mezL/
V9c38c+dPyf89iiMy7XIi9T1b/3auv78OZuP6J7PuNCHyLu8Uvhn8v70I2z+
ysdOzvji7zPiK7Y/v3H85J0S3/8l4iqcd8pPdkdcivzkAJuP6OSPIW5G/mip
5Bfwvu8Eft8CxFMpp/1tMvAFeavMz8/NtPmsTq78hPJjtn8bJgcj75F4QvlN
Nm/VrEDeKvYDuPqJL8ORl7nVxstkfWzB/pVlkf4gvvB77oOgnPgwAPOycHyi
nvMvNH+7BP/I82v+IPHhdeCC5idxvYVxTs9fcz0TNzpI/vcg4Ad55UESHyB+
hLjBfx4f1gXxN59fSnyZjXZofi3bzfc4Q+KHxIdXgQuaX7oa48Zx1PxX4sdl
GB/NryU+EBcUPx4Gvrj7ESX/lfhAXFD8uCPE/XSo5F8TH4gLmn/7GPAFed65
DyW/m/gwErig+FFdJH+F+HAacEHxg/jC7zW/m/iwELiQCD/EfKYwvu/5J+LD
VODC+5Lfrv695m8TPxZk8BfEB+LC+5Lfjrzq5EjgiuZXk79AnlJuuOR3h/vn
XH6bK494ptu3UBhfSpJpyGvQ+B5/Pz7gabzcfnL/2fqofvIz3F9Q2D7i/rDm
Uf2dbD6KxD+8HPkahnoja/9yiG9ezvjiyoz4MPcn1//o4pEvD98avR/9i2vy
66okej/Lf3WU+JOXW71SD+u6RgZ/XM39SVH7gDcSn/jJ/eu2XRKfiPtvWUb/
NbDvnd4EHlDlui+h8Ph/ngvjE15u+b2d6N86UXn0S3KA7adIvgLze3rG/Ma8
SJjXk5EfmvQJ7EPtn07gnTtm9E8dY/dP7oz6h/r/KuBk1voM+UGND5S5daHx
Ca5fyjV/ieuP9SyV/ZP201RR/qDY51yfrF/5e86fsH5vvyGfzMkLxx+y99ff
EsR9yhKuQ8qrZF2vlPwD6nfWfx3WKeVcfyzPdUh5b6zfucH7e3ynfqdc9QPX
59xw/Fz9XJ+Uq/7G+7r6Nb8Y+Wiu/7T/uT5ZXvUz1yfl6v/3xfpj/YdgHVLO
9RuOj59/XH9zM+bnCpn/ah9xvofj4+0rrj/KuQ7D/unk5FzHlHN98v1oz1CO
fB7Hy+n6pF8u+fVO7u6nAW+k+XWjg3xo8udejn3tbh0Xxoem3L8fPT/k//eI
4o8hP7gt4h+5PtdgXSk/cQnsQua9aHmcN5J+B/te5fTfmXej/QNewMU3tHyp
zRcxPSWOEvZ/ddoV9re2v6fkP2p5tEv4eS+fj/5hfpTK8d7paPhP+vyRsm9a
y58t+/NUPhj+GPOmdPyZT8e8Gu1fjJu5ROY55WuxPrk+Cvevn9/6fOS3wD5r
HfWvzRtq4PgjldP+/Qv8mKzn870y8r/cp/Lz4fra5taZrs/wufzn9WNVUL+P
D2veNNcZ5b/E+mT7TpH8QK4/ltf8RK4vyr8T/m0Q1ifrnyL5aVx/yPPCeQE+
/43ri/X3lPwtrs/QD/HxiTD+sS3XR/gz3V+j+vEcrD/KVT9yfVE+RfhL7b+1
0n9cf5Srfjxbzs9Q/Ui/nf1XJvlrjMtRXi35jWvFP1P/h+uT8ksk/7BS9I7O
f64vlld+BePl5t/SgvyIPz9vlPA73JfO85OqJL+e+9nZr3p+AfELPFCyQ+Zv
yEf5PDXKeR4N91dl7X/qjH0Nan+CPyLPkzCfm/JuyMedgnW7vWB+wWa3z0H5
vS+D8yP2YP0SH22SMG9b4xuan6b85KM4v4D+s+b3Mq+c5wPZ+j3/xv3lm7Av
Qfd3Mq+K+zuxH8CVH419+dz3QH1IOfgZ8zXyeCqxn4Zy7usM99eXRvNn34z5
A/4ox/1hun+uB84FCPd3en6T5xbwfIvpgo/cl74j2L/r+Xvsa0i+xr4G7heg
fIn4n7q+uX6JD7p/dKXdd5By/xX3U7jxsftGEuYpYj+JK0/7lrzmPbJ/jfFE
6g09X4n9Xx3sj/Pjw/UZrkv+c/qF+0KM7v/h+uS67Cz7j7g/iXk9un+C65fr
dpzsH6F+47rU+cP190mQX+D3T3yO9fsK1q3u7+D+G/J/mp/H9Yd9ONH65Pkj
1HvKTzJf6QysO12f4fk6m9NNsr+I628C1t1mye/DviW0v8zo/iWO//aM8dd9
2XfL/hGuP84TXZ9cv8wr3Cj7l7j+uO50/wrX7zSsWz3/qxg/wvXLdav7kyaI
fct1GravG/JfkkT3b32M9Xsq1m0b2T9E/cp1qfEH9tvTYR6qyk1oV/Kfzy/E
OTTpCMmfC/07F8eI8lumIj6g5yPNBn+QdX7BvoF/911O5wfzA+kn6PlIOLeJ
+1KMnt9E+/JExA84nygvlp+JeIr7frTsT8Z4mCvCOJeTI57ivh8p/DzjRV8j
PqXnR/G8m9GIP7SU88lQX7oF+FU4PpttX5EfuyRj/1Aqdi3Xq7Q/WYj413jB
V8ZVj0B8Q88/+wTxRvIEej4b7E3mbya6/4nr73Csf90fC7x0/L+ez0b+TeKs
kX95F+JXej5ZyH82je5f5/q6JdjHulHsa9prY6qU3wz5zy05zQ/h+RLEvZ4Z
+Wdcl1Mkvs/1x3Wn+QNcXw9hXfWU+DbOyzHhPmcffw/PX9qeO0Hi+1xfXFe6
/ortr+D64jlZuv64Pvm95n8w3sbzq56S+D/XJ9flOskvUftH199I2de1Rex/
ri+uq6z9e/z+EvGPub64rjS/gOuT61LzV7i+uK7U/uX65Lq8RPJHuP54rk5P
sX+5vhAHd/kMlHN9cl0qP831x3U3SvJL2F7uj9L5R/kcfK/7J8LybRPmqal8
Cr7X/HrKT0Te+80F9WfT5MbgfDefH099zbiB2n+hXRSfP0Y59zWo/Uc5v9f9
D8x7KEdcfL3k3zM/g9/r+VisH/uQIvuP78/vNb+e5TdknG8S8tfV3K8QlZ+G
PJZq8b/Zfvrl/B3lsMuTbdhXcaLsL2H9PDdBz/fm+/0e+yKmyf4RPp/7BC+W
/RPYz0H9QPsrwn+uszBfzu1/wblIhxo9XwN+pzkZ9queL8LzEPrDf1D/j/kN
5In1fA3sdzf0O/X8D/o/s9AP3eR8EcbdmTer+M/9OKH95eOP9BuZ/6D4j/MU
xP76yfkz5N0wP7oL/8P4GfP3Fws+Ub/cLfvwKGf+TWh/+fgT908xr1Xx3873
+ia0v3R/9HvpKvin4+R8E+5Ho9+v5+fAn2N8y+j5Pk8H+U2bcnp+TZh/f3Ci
5+cwv4z+l57vA3/Z0H/+UvRreP5A9vmU5JWeEfsL/prhvFf+hbhGfmKc8E+t
AvvoR/9L+C3Of8575V+Y33w31o3qR/J3PH9C/TfOf857XR9cP1n78zn/78C8
1/WxIzg/a3Oq9gnn/5KM/I+XsH54fsU2wV/O/2rZZ0I5zuNw6+NuwR/Of857
XR8bZH+r5oe/iPk/CvP+e+G/5FzG6Hw7zv+5mPfK/3L9cN0oPof2UZuIX+X8
xzmYqfK/PG+V5wa/VDA+48//3Sb+nZ5fo+fTMP+J36v9xfKM2/eV+Dnl/F7j
+5QzLq/zV/Sb0fg95ciDiPIfKA/zF33+Bt/vA8R1NH+Acn6/QuI/rB/2ZzR/
Kef3mh9AOfM+NH9R97dpfki4f75TlJ9AOb/X/ELKb4Vd0UDyYyjn95o/Qjny
YJK+kv8Sjm8N9zvK7eekcq5Pte/Iv3Kd6P6D8N4J2n38tzF35sAlg4a/VtOc
Oa/Fwdsrf5yXyx4cW238/KP/+VL+k/dfePwagfsQeK+Bzk/GZ/m9+ve8j4P3
Kuj87NZ/47WzXv3B4e6YXp2XrLunlrSvvpmIT9Vf9n22poPy7/dR2t++r5OH
9n5Jhc7P9seaQT3Gvut4oQ75v71/j/GpGodxUXxlT/P7aH+3bV+uf759uycD
8p8bioyfKae8M+632Cvjfgs7rh/l+N4737TPy6rf3l8yxdVv79MoM1/mx7eG
aXrMyaMqc17/077gPlx7/0jMT+4r81TnH+edm4fh+Cb98/9erNL4P+cn5+Xz
mKc6/yqD9/Tz81bMO8bvvpT7OQ7G/HsC807nJ+cvv9f7QTj/2P/nYR7q/OW8
fUbax/nHeVf4/pXNgqv85+ff+P86P00Vv39a5Byvygn/+296uZ4/VQPzl/OW
85jyszH/3DyX9dce8/dRzFve06LPf/dPf/vx/8Ly8fL8EZifzTAvOU/D/ik1
nJecp5TTfxubH99mSad8P68V+3lzriO+fwK/U/m0Az8cdM0BrSP+gXJ+z99R
TvuY9/Yo/yDrJ7rfh3LOO8jl/V390f01LB/eL1Qayfm9zj/KV6N/VT9Rzvn3
qeBDy6B+8gJ+/obnuZaUhL/z9UNP5J4Q/UA5vz8Uv9Pxt/OmTWLHx9+f1ioY
30a4v8fzA9B7PJcNONPClaf/Pi5Y337+TQh+X1Kh+GTxtrPTn7h/ysnZLy3R
L4pPaK+z76bK+9n1uSE9HesW69mV39OuK0N81fUVzrtO0fxgu8P7oTx/wn5n
PYpPn+fljZ1/wvUe1v9ljvdyPSP4r/rt/Zcu//F/pd4vhfpMuZ7vUlj/+vuh
2uP+p9YZ9z+xfuovrZ/9YfG9bnII9A3l1G+cN6o/m2F+cF7o/OHzw+/5z88P
zm+dP3xfft9S1h/nB+eF2ofQCyn14BmiH2R+xOevYl7we86zsP2NDeeFzh/O
L/oHin+hPUo7rYW0L/t+Me1fjHP5z6vfl7+/fd8f/49186sN5hf0o7tnTOcP
5017zKOw/up0BNqt86MynFdmhLwf5dSfOj8oD/VT7D+MC8bFzz/K+c04GT/K
W+fr/yTyHynn923wu8L1L6tS/7HY/X2Uc95gPkX9x+8Lzy//fjo/J8jz7fcL
q1Ru628MnCyLns/vsR7c89EeN790/GGPuHWv8u75f3Pg37SI5g//pn5TOfDC
rWuVY765davyxx7933/TMG4tIvuKuA8cjOTUz9oPYfuJ/5PKM95P9JOXc1wn
/Nf+If4/WVW4f0pxrnKTqPxUjA+/1/Wn46r64aL8v/lO73AcdXxUT+v4hP67
n7/EC/YLxyEcv/FVzwTls/GP46DjF9o/Pj7J9826n7EwPj/p1pf9pP/D/vPt
o3/L/msh+o92NcdFx6dluK4i/LR+Ry3idxR/KXb/5ycWb924qNzaFWtz9FvU
v5hu9T5xLc5/Q3+vlvfU+Rfa8ZE8wTyO6uf8wziUa3m0G/bR2oz+9fdnZvUv
vz9E7H8dN10/Yf3qZ3P86zi5rg/YVa5d6j/Ar3TzRP1LXffK73F8KF8t/h/f
h/Wr/8n+ZXn1fzk+Yb/yn++fVhn9Q3uYfr369+w/6jktb/vnO/f9QZYPce0j
P0XeR/V7Mf3KN+G6V/5lAPips8nbLCvEn2Xfr8v+Jz+q+AX9Vp6l38CLmQHg
xQrzl/SnSkr0fH7234HoN+3f1cH8Lc3wT6tTy/+8GtlPFWJ3Pyf+F9v1TAa+
Fqt/QMAPbs2dK/yZ6Ofofl3Xf+i3AcIvFmtfqJ89DxHKPX+i/WvXxSeOd1M5
+MVcZ9jthfmX0oTnJ6vcfpqqfaQdlLM/yc8Utp/r497hJlH9tlwnp3cLr8+6
piv8j6z7odtm4AP7h98rfiovpfiM5wo/7/2fZ6TfV4t/wv6jfB9ZPyF+cny9
/uf7U95V/Hf4q06u67+Y/kL7XPwnw3+Qe8Sj9ZnQf1D5+GC9x/4J1rOrp/Dz
uf7i/HO+L/2jjPL8PtKftL86w69TfAD+u/ymr8T/qQz6x/kXib4ff6f8xfiC
7eI/v35Yv/rPajeH/qCLPzi5+pecH5TvJ/4t4z3kBZQfAC+TgB9J9pT4DfAw
Z+NCdZKzRL+E/eX1pHt+YN9n+j+Z97dzfIEz0fpg+85huyQ++QXej/y/jl+x
+Oez+P4rtEv5W/t+jzr/QP0Xtj+0kz0/xXVZKZ86fyZmyENeOebvbLxsd+rH
VOOHbN8h0P+dJH4Z9k/9CF9Zv6tX+GH2F/yqcrWf+HzYIbkDxH6jXmsOv1H5
bbaHfqj6lyF/QPvP2x9hfNLpT1e/4G/kP6OjhZf3/b+r8quO+W2da85alpbP
/f3Td3fR+H5JxdC8fHX6n14jLvr7mNqRfGH++zW5Rb/YkfzPRD1fpKTC1ru3
QXmjcn6P52h8Gu1bnS7KeD6/x3Mynl8P9S+L6mf7FmW0jz2W1f+F75H2/DTP
2dD7SWlXzkZ+ynzJD2P9he8Z83Lu/9H7b1B/ebH6C5/T6uXMo9H8zF1tH/eh
6P4Pygvvs/dy5uFq/uuu9X9JBe931/0jYXnerxU/n3m+uv+YcRPmpen5m2H/
NDZ6frH27yPSv+Tri9VfOM7u83PCOKq3D8m/Ed+fEf3B+gvzYF5Ou0HzR1B/
ebH6C/vxKlc/5//ePsoL21HevuX5Zxrf37X+d/Ko/8P2M84Rt6+wnUD9/wrt
G5dnlNW/ym9p/7aU/kX95Vn1i/1VURL8i/R3Br9dP7H4/22On5TT3qD+4Sfl
7n6fm6eeckbD2oafWj/1iuqXXZVTr6h+2VU53ivlJ+XjwvKGnz+3/+T8/qj9
WXL2L86ZTDV/e3xQ3p0PtMty2k88p/FewU9pX3Q+ezG53s+i+qeYPKw/Pt9p
V+VZ5y/+PHnTaH9vMbmMX7S/Up7v7gHdVbmMn7lX8v8lbpBT/lflii+7Or/F
/47mR5ac7bf41cV9ZrQv4u+Vn86SZ7Wf48P4TFb+RhZ/Uily1V+F+Z/S6P2K
ybP8q/+/5BInit4/Sy7jZ/hJuf3M9m+Ix6Hf4uX8PtQrXm79mRLol28jOfVF
6Nfsev3F2kd/JNQLu/78YuVpb9D+UDnxJuv8K/ozoV7xcp67gPObWX/FrtZP
fybrfAPiud5jv6vlaW+HuLfr9XM/qdyD4+TF+kfu3Ut+bv/x3CY5R9DJw/Mx
4/upiz3//1p/sf4t1n+0dzVPiXLJK4z6l3jXIsDtXa9f8pKj+RPivs+T3NXy
Ep+J+qdY/aFeapIhz+4fyQuJ3r9Y/1EvjQvfT/o3av8uP///Wn+x/i3Wf8RN
Pkfte/JdlONvQ/kw4DPl6r+8Dn+HcvUP+Hsp7/R/L7RH2ueevwj1ufaJf1Xs
/Yo9v5j9o+euqP1KXoe8rO7v03Nz1T7V/WV6vhb2W8k5p95/0HMplD8j7yPt
d8+nvU25+k98H3k/1z7in7TPPZ96K5R7/4P+FOV6fs5c6R/1P/Re+Iz7GxPp
X1e/nH9r1P+rkverkvebWWR8qqT+Kqlf76/OOt9WPhORJ+My7HPNC1T7lH+P
C+VJKHf7iiJ+S/efjc9oX9b64u8rM+T8e1xG/ZL/xTwZ8T98/m3h+GiXJHwP
b5+zfyZk9A9/H75fF2lfaTIuo/+fDezX+kbzQ/T91P/U8Wkl4yNxWZcHJM9P
5fmufuWtdP6Vfd76r3/+4NNcyTmvnvjerx/JtXj6sxeWX+njGyHeujiJkw/s
f0K9az7YPbnl2Cv++NCC7ZF/fd4L93eY1KxpsvGAp1bPuqtGovhdzP84beKd
k3+132u5xH6ms0YvuO/+0318lvqD80/1R1nFN39otqaT00uN/91/3brebZ28
D+rvk1F/1TkTnmg8p4azn897ePTbNfv5/YMXX3b62+/125Ib/FDy5NFHLcu1
3f+dbm/v5fHtV9eu+POly5slb36x4ZSbTq2ZLP7jjVV7/Wm5e/+PK16Zec+x
7nzYdMCvOs/5/KnGWn/a/t6y5fdfvz4dcH7Jvscc1dDJKy858/BOt+2XlK+8
+NsjtjaI7le8asCnXd74TddkAn6n+qNzjQtOb1L7y/S0tqsOnP3cZ+mQsqmb
Trnbnw9L/dH9jBrHza+qbSpOMP2ff86fz0f98cjvbm+3/t016dA9h2x4b4Av
P+3bHrtP3FE3WfHpwHuWrvk64q9Ou3Ra16b/aJBce/bK5w7/09Zc5/1atao1
1Z8v9SHK9Rl5xh7dr38zul+Bf79x7Q1lWw9fn3th5ux+R3f4QfB9W67uypU3
XDD4w9zr+93efPOyUld+6bb/TB46bmNuyJAr567f/EpuwXFH3HhlDb8/qrrh
qPan3tDB+Scz7Hxw/XfxC52Xd+lVL/nT2FPPPrXDllzjt54buq6Ff7/+djyd
3dCnZr9f9rrU5y9eYsubY+fWGFT3f35Iv2uY9LtvtefnuX42YP0Mk/Wz/ZhL
F9z+Z7fvIMd1SPlzH9Rsc2aP73Jrbvhnz8Mar8i98foB/7ihlc9fuLbuJwtq
Xr1PYtdJHdQ/180f+u/EYbt+fPtQf/rSznPvr911UzpuxjMTnzjC71/5dP3e
Hbr2aJMMAk6o/im2Pm37DnC8tuoX2K/p3Of2erHLRRvTgx+of/TkN3+yPmg3
5OUlpu83r/3iwtv9+ZTE53fO/FXfIU9+lZYteWPYt6/48+VeBy7Z/t8U8WN7
vXXs/pce3RDt25Y7Pz9e/vxCjsfctlW3r3h8ZZR/Vr353rfGVv7o/+bb1wj4
uEX0R2lyc76eL3Ln5vtxp+rHnMXXj3O2/0ql/d/mWvd4bN6rn7+b65N/fz/+
e+fb38r5P+ofDBpz65GHdaqVjPjzuCnnNN6Ya7G2f7NVh/jzvwaseerwPouO
TKwfsH9i62/nxse2192/ZIZOqfN223u8/Yn6zRH/PndGk97b01/22/OTBz7y
+Dcm3XRY3eHfOD22fUqD0T3mbVX95uTUM5QX479EL6VZ+kn9EMrtp6miXPMD
OP8oV/3E9S3td/UXe79j87i4ysmpryjn35Qfj9+79uX1wu5JWN6fDzITf98E
OX9PeW/oHZZX/WNxuaGTWxxe7+TUS5SrfirD713/oj7KqZ/YPtbn3h/tGc7+
R3spp14K2/+T+yvyem9P175H83qutmsf9VLYfq+fRuP3zB85FPWF7S9LrgvG
581If7F+tpfylfm/V+VYv7Uf/Pifhb9Z/gP8Phy/lklYvrF7P/59fdB/LV39
7fO4sta/v8VZJ+fffL82+D3lnd89YZ8XFjRy7auVt0f9+Sa18Tf0XsrfU077
k+VVvwyR9bVJ1lex9c3fXwv5+ajPzV/8/oqM9c32XAM59SDl1Ct8vuoX23+t
XfueyOOhPx+TeoVy1S9j8fthwfj4/Q38PcdnFuqjnO3h+69Heyl/5N4Puj77
m8/c/LPj48eff7N9D+D3lNfK6//mbv4xT4ryXvib7S/D7yknPprZ73x3Qd/n
c6u2HXfL54f6/MdFCzp997sJpclLm3af+Yey7el3/5hxzeP/9vnxZrf9Sub3
2ZFbftlHr1//3cYI/3tiPGeveHz5sLP2NGfOXFd79Zv+foJlebthBcZhce6S
Pzx9Zb9f+vNr30e9s/CciN/K68OypGbe7vg+PeTkwePuXu/xcXJlr6FjdrZw
8flF/5r55tanvX69fs9Dvv/FfZtyv/pkZqfq0vfSk3e7v97+j3v74C8T93nl
vEUvunu3T1x17OFzB3v9+uu/DLm9xei6yZWzzOdfrys1KO+ev7T51dMG9Xf3
wqRHjDntj1OGLHfyVzfc3qj91KXpv7vPumLSjg25haMazOlf29tXdYZsHPn3
5TWTjm2f+HDdb3dE+uHGi4a9vLNXjWT3Q/7dd1KnrelNzUZNfOOhWU7e57KR
Yx+8qkkypt7VlTWO3D3iv/h37+dXL/6yVvNkwpL7/1XxpwPd89292GsanXHH
91tzR+F3lL+8tOMFl/97S27SpYsGl8/+JML/55+YX/3gOV/kuh7Sa8LkBTMj
fB/zYLsG++/xbLrndUdvXXz12lybvx746d/aRedLJf/c+vmyIXt8nz732by9
Dmvq74cmvk/E9+kelXdcVXeje/6ZV3x4W/nDX+Zavzr86mHL56TXrh6ZlD3g
7beT7Hg6XvPQL2a/c9mL/v7Gceu6zvrz8z/kZp+66Z7kgq/TyiuPrD16yFuu
/joVya/fHLZb0uzfYxZULi4zqN/179RHJ/9t53vu/jazxM4HJ++Rt9c25az9
tjxdOnZObt8fvP+1wq4Pty/rd2e37/f9MR4/p9p8mYT2+VPW3nP9c8e3X/3l
3SvqJn/pdPLWSfNLDer38wP2LP2TxTYP1Mlt3HRNatfvt7neB01ouuZQr38f
2mdIkxkn10qOf7hiU8cTd0b64+4av+00cO/SpNuFI1tc/Ml3qP9tJ2/fo/OL
997VMOmal9eN+K8T4G+8AV5+FnCEcv5+MXj88nz7Orr20T+pZfEhd16nuava
f+Xxw77/17k5+f5bGekP2797Gtu+vZK/33HYhuoL/flwpfl61+XezY/T65H+
GJcfj7dSG1fYmJtz3PITlp6n/lNpcvrClWftHLstXYnxppztWQD/bBbydCl/
Ku8vbshNzvuPS9JXZ7aZ8D+zvf2C+eF4U/t8f75su3z//5DLjV57a67n1+ls
Oz6u/slfNdjzxr/US8y+lw8/fW1Ng/pd/zcq7frRojZ1Xfy/FDgc1t/K2PFr
ndy575sTWlzd3T2f/jjseJNlv/N71S/8m/VofvtQ+T4jPpIZf4dejXgyLZ/l
X1Bu7c5VkX0Ju9Dldal9DbsiV8fa8Tm13/nesCuN2p9Dg/q3Rfbv/4P8cWtn
Jz3Evg7rbxDx+6wf72VWiH3M/oNfEZ8PDjl5oT7iX4X993WkX4YFz2+cqH3N
8vAzIv3D8vDb0M7dM8qvSmeIf8jy7hxo8Z/4/ovtuJkG4r8NC/pndzND/Meh
Qf1lpo/4NyyPcTOPiX/F8g9auzGyLzn/qF8Gin0Nuzz3Deb1r8V+5/NhVxq1
P68J1l91ukHs35sh/5e1s6HHvH3N/oPdH9/fADneyzwo9rGuX9UvbP8c6M8O
4l+xfrQ70g/DgvrrJVn2NfyMSD+wfTaO8E1O/TPWb/mntZF/6NZXBr5x/DBu
5hvB16uC/mtk1H9k+4nvc8W/uQVyjJt5Uvwr4cWi/FzNu9X4ShPwmdbP6RS9
H+czx/8hzHPK7Wf2/pBi5X8NPv9Ay/PnwPP7+QG+nvht+Q2vn8mHL7E8eTrY
8uQ+fwB8OvEZPLuTM14CHirCX8ZLGOcYaOMoPv6KcuDhI/xtBL79IvDo4OGj
+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
p/w9+Ys5Ej8j/iJOa5ZLfJb+deNQj/j4FfaX2TywuTmNj3F/0NAQx9zzEZfl
vqJE47P8vR3XnekIic+xPYgDm68l/sv9Y9g3ZjQ+fQ32nwl+u+fTbkcc2Hwl
8d8d2N8Fvyin8elw36zLT0ml/vRp6xeYlyQ+q/xxE+GPaR9S/ozwj/yb8r7C
n9K+C8v79UP7BjwQ7RzXPuIuyyv+0v6m/HXhN6cClylXfObvKZ8s/DZ/z/Yp
v8r7cFle+XPicth+j8+07138VfhT2odh+z0+8/eUVwh/TvwOx8fzt8Rvvl/h
/TvOrqcf4Pqf/gvLnyX8O+33sLyPD4A3z4X95+c37UPXfvEv+Tflhwh/msC+
o3yK8Iu0b9j+E4X/pN/N8j93/2mx/LsmYVwo4rdp37J9Gv9ke1j+ZuHPaZ+H
9pnH176w7+GnmznCn9I+ZHnFV9qXbF8f4c957j7LXyf8Lc8/YPkmws/T/mf5
ROIH9F9Yfo7w77Tfw/iotx9uxN+UDxb+fPrE8+oPbrCan+l/toy74KRJfv1P
D891dHmwlFeNqXjyNy/UTvBpUN7VL+cypkPeefa4O1cude93C+67xmfumwda
LtvW1OObPS+lBs4VjvPjBja8ulbrddv5mb71ymeDBnWZ5urnecI83zdrfwzf
a13+Pnt/vgXzGyZnvD/PW8ZnlL/Me+nxGfGzw/H++MxtkfcnvvFcl5mFz1ch
T5teLP1bbHz1/dfL+w+S/l0p/Vts/OVczeh8GLnXJ9X7p8k/0j7V+2vD+xPq
R/n7cq+B0fs1C9+rYOT+nS8R1/oyp/c3yrmNGfdb6fl9k6L7ff6P51O68+kz
7udNeW7Maum/8XgvfEb5zzyfn+cq6/0L9r15/0p8v+Ik1DsOz6nI6D+en6/n
uxA/eW6M3q9YbP6E9/LE/TNB6rff+/uXis0fHX89v5nnnk3I6D+2K+v8X+Lb
63bdpVyPlBc7n3FNi8PX9xm7xcXP7Ke/P4Dr+ru7cq+9NWJHav/2+zN7XPn9
A9eM3Cc5Zd20iW/UrBnlJ3Tsul/tuf0OTvg7xdc7buy7tv7t76dcx5df8Ojs
ul/4+CB//zTGSfGV/EDvcVeevfL8b9IdLeud1GGw378angfmztl3/dNvep8+
h2/cPRmRx9eNuRHAWcrtpyl/MON8euKv7cdl+Nvz74yPnZbH3dnR+qkC/k7N
wN8pow67fv8tnRw/oOub/XWb7cfo/F6Mp+NXl9b7+r4/XOn3F6C847+qb/r1
hSs6+vjJJ3Z+5C6xeiM6/3/o4/X/eP0sd/9cbiTaQfnyo/bc7cRDduRGjxp+
Zd0ez6Utr291+24n+fk5Nf9+zRPbrpKEepByng9G/LXzyM8/1J8e0e7+k79s
/X1647mPzZ/Q2/NvZ6xe8VTlFfsmV6CfFH/tc1u7c+s4T7P6X/F3NuZfL8y/
72X+8feH5+W1jN5fwPacu++pv9/7+O/Su98Z9tbRi39yfhLmzyUZ86fPZyev
ufdvjRPOO85DyjkeW8ZVj17Y7bMIfw+69L5Xu7XdP+mZb1+zxK6XhiZsX2ly
V76e13KX5fvxG8H/6tyJ+fY9n3bP958fX54XN/Xl8qsHXPhxSnstbL87/y4Z
Lefvzb/yu7nT96+ZfD1x3qY3b12cm92h2zHfHOmff1Rlh5klexyG92+f6Pl5
xeY36jcLp6XHV+xdw4wvve+iF+f7+C/bn+JT+d3xT+wzpNtfmwg+v+faPxN/
z4Ccv6d8XoDPDt9dec5HyoGz7v3G5etrm4j97eT8PeU6vznvpwbta+vk9O9N
WL+T23lTS9rv8bXY+bmcP2H79f6PheWU6/rh700wPtUR/rJ8L7SXcqxbJ1f9
wb8dP4/fh89vn4Tl/f2Y/Ht68H7td7l+bV+1tO+rS0ded+doP3+q83ra74/f
jr95TiN/T/mZd95xz5Z/NXPlo/MNZX7p+Z6f/P2krgs/buXkio/8vcmYX/w9
+4f1UU57bxbkZ6C9Ov4vZ4x/L+Aanz8lj0OeX7Z4sNP1r+Lji/g95cRJyvl7
1r8N9en8npkxv2m/vRyMj5fzb5YfKPbdzt+0+92UXq3d+9v+8/i9Cn8Tf/h7
ygfBnquGfQf7UfCrnosfrYK9SLn9LKkwWGeKD9SHmNdpKvh2uejlP8AelPmT
eb7sHNHbHWBvUk78Og32qeIfz3ceAP3K9wif7/Wqjh/txVtgP9KeDMtH53+X
hP3r7XI9v5Z21Z3Q45eJfTxO7OKXYK9QTnuS/j39fcqpD+lfoX7Xv0tgL9J+
xHxw8haw56bCvnsf9h7ld4hdSnuR8sfwvlfBvvwQ9iblN8Ge6wn7DvW7+fFL
2IP0z4zwB7Qnl8C+pL1JOe2tgbC/FP90/hqZv9Rv5bDvFP+6Y77NxjxdDHuT
cv5+AcZvqozfvuIX0Z4N698O/+L56P7KB2DPHQncOhD2HuWXw54bCfsuur9X
/Bram2H7SpPvYF8OF/uf+HcZ1td0WV9zYM+tg31He4/yh8PznRPai2H/10im
wb6kHnHrA/bcq7DvaO/p/G+ZMf95X8pC6O0E9iblxe7PCe+Lo//p5w/xogI8
H/zQCF+z7mdrhf7fbt/DXC7tJ15avXsoyvv7L6EXUtjPRu2X0L/fI8r/Jx9L
fhZ46NrfKY/HrcT/9/g5Kr/+9mL7E70frNj51cRPu/6aRfzehjxf2UL855/Y
h+AnZ2Twk3Y91klC/9nzO+TN7rHvQf/Cya1/sif5Wfq37vkbb1n6r7T/HuI/
v+b6bwqePwfPXyzPp362879GdH655Wv9/Tp2HLx+h74wP+TtggT+aTdXP8eF
61vx8elgfW1KsZ6dnPoUdlOEj1833/Dbec/XSk5+/p8dx0yua0bf3POfX0yK
7pcxH+ftmIPlHg/P//bP24UdDMdBx592hNqHFg/2SF6x7c99aXHItZ94ezfm
qeJj6wtfmfd89+bJKbb9yYdL//WLtxuuFf2dvT7JX87COu1m9ZmTbwTfjvUb
3Z84Bfos9J99fgfwNrV+QycDfeTqp36DX2QYR6Gc+jH0n/35ZvBvYWe2MtYf
9fErxh34qf5zr8B/3Badb1bs/pdx4E0pL3x/pSmn/EGxr4iPVUH7/P18Lj+f
+aXiPzJeJfjv6v8lcI/vDxx17bP61Z2bGfGL/D3lhf13d65Cyvqk/x2PpvE1
8Equ/YqP/DssP9vJ6Q+F5aP4hOvfXuI/rZX31/sf9P3Wyvtty/stDZxc/Zdz
8fcMrgP8nvJz8nafz49TfLO8VQ0nJw+a9f6Kb4Pwe47/FNSn/TMzo38YL2D7
B6K9lJ8t4xedfwm7hfUvFfsT/KDrf8W3Jfh9eE+Qxo/8+SWjxH8L+Z1taR+Z
P4wXUo44g5Pzb8qnSHyxdMBNjR7o0cQ9H3yUez/a5ey/Mvyecto7tIv0flfi
NfX6vtI/LDcO9pX6p7TnaBepf5hxP1UJ5TOD9pSURPcPc/8z9Kvef8v7BKjH
qcfC55e5uKGuv5sDuzSOv/P3xKXOsPcoR7/nToL9qPhFf4X6eSP0tRsf9Dv1
ut6PAL/O2YW01yinPcf4M+PRu1q+AvYYn7sJ9hrlD8GeW4B+oL1H+T2wp3bC
vkI8wc0P+G/E3XQj7DXKac/RvqO9RznsZ3MG7B+NLz4Mewr2idkMeytsXxtn
X6n9THuO9t044ceJd8AtrjOdf+lW2I/KvyOe4/yaCYJfH8OeOhX2VRvYW5Rz
fW7PWJ+fw56jfUd7j3L+HvMr8q9pny3ImJ+0p3bAvqK9FY7fehfHVf7B3f8D
+26z5FcgXmDAi2J9vyf8Dc/dLDUaP6I9RxxUflviy5H9RT4a5aL8Go4b4hAR
fhK/QjvLy8P4yXtR/IP6BjgdxZeJP+R/lF+k/UP7VuWMjwCXovdjfCWMo+v9
Ri4uFNVvPxeXM79IyxP/iMMqt+vpvZTzoHD/tU3mZbSP/D79S5WTX6adVHj8
myXTLQ+eMT5lzr9UOfln8M5R+3cIv6blmc+Adkb9E/qHraL6ac+hHyI54yGI
m0TvR74cvHrUvy0D/25n1H7aP3MyxneOrB+VMx6i65RyxoeqM9bnZMQv6H+r
fAfiFfTvVM74Efop6j/yzeTB1P9ifgP18FThn4kL/FT/kPhB/Okt8bEwf6Ve
lF8cxiPGlGt+HMshLyJz/wf4z/RTy4dG+EL8Uf+oAvYweUXlt5gfw3b2EP+c
8Z5BGfmL9tOUEz8eFP9/MMohzmN2iH1Nf4DP1fvtqA+JH8pfkK9FXD5dJ/wJ
+WLwyCn7UfuP+HGJ9B/5WsTljdXjPzlfF/EE5hGp/8b8FdpRl4j/Sz55tNwD
6OYv8J161PpvH7vy4b19jU1P4QfYHuhlgziDK0+/mnZQdP407AXyhso/qn+i
/ltv8NXhPbGe/6X9g7wO+G+vRfhFO/UEG2dw7auS9dlT1ifxYUIGPjBehDhS
+pSNI7nyzE+xdnZD5qm48sxvIX4hz8WVZ34Q8oIM4kg+PiDt0vYRl8DDmfki
fxHvPwH4rf7fetiLtO+1fviNHJeof4g/mAdR+2YE+NMiej7XNXAmKs98XuKP
yukX0m9ReXjfZEmJyl/C/CU+qXwi5tcm209R/zK/Z0PYTie3/Hk7h08qp7/9
rfVbo/6pAv6TH9Xy6zB+lRnjB/7VXPJyrxv+UXJQVJ72Y5j/4eXM5+5r2xmV
nyD9r+0nvqAfovJ98vXulzCPXOVodzIlGCetv5S8QUb7/Php+7huMI5R+WL4
QP0POzcqj3FLMI5R+btC3j4qz7iVnSf7Zdxf6/JPo/g68Y92v9ov1GfjA/vY
2ycroRfnQi+q/RHmw7v15eTEB9ovtGfC/mP+fz2j+RsbYU/Q/tf8EuIHn9tR
8iu47mjfaP7GdtgbyBs2A4WfLXa/+FrYE7QvND7M57Idp4v/znbTT9f4O+0J
xLGi+PAwjB/Xv8avac98gnHU+DjyOsHT1I3y/6tgT9C+0Pg14w30H9U+Qd6E
s28+kvwJ+qW0bzR+Tn5mBMbtOsnPuAr6/lDo/wx+2d073Fvi4+TPaF8U5pdL
DO2bKcKPEH92ZMTPQvtkN6P5HythT9C+WC75KfS/iD9TZH2rf6X5H+WwJ2hf
LJf8FMRNnX1SIfkRtGeQpxHlZxB/sL/CzCw4/5qaObAfaE9oeeqpwvEVx7ul
ym+5/FDon6z8vvkBP9YlKt8J9of6N6F91SLi/0L/sMzo/AjxvKRE778Gb2e2
Qf+fmMG/k9+lPaHzg3aSzm+27/fQ/9PQz4XHrzpdL/3L+rfD/pgm+M3y1O/K
71IOO8fo/rBw/DtF/C7bPwW4M07yM1l+Q8b4sP208y6GPaHloYcjfpbPvzGI
j+wXyan/Z8r6m1tk/TLvqhz2B8Yxev8Tof9vlv0flJNfHVUwftKU45bQHqHc
nX8M/lHjM3yf78FvMo+dctoVXJ+6flmecXjNL9f76Y3oF+FnE83PZX4Q1+3J
kn8e2mdNUL/Pf0+D+sui+cPy9J9Lgn9eTv5D82PZPvIq/SU/mHg9v8j7kZ/U
/Nli/c/xJT9aLvFbtp/8o65fyslv6v4ttp/8v65fls/af7Kr/U9+U/ODKZc4
Q1Q/+VPNL68K5ncdo/ntMj8Tzf82wfxqG/mHYf81NZr/zudz/e6Q/GyWZ/x0
muSHh7yr26cc5T9IHqDgB/eHrXb7ccP+25Y7FXkCmn9sP7n/7IfIf+C+wcL7
/Fh/veRT2IX6fOaXhPEPL2c+SRifiNrv8EXtE+ZPXBLmyTj5uchnCOMTXs74
/2jsb9T2Ey/BY0bvf7bY7ypnXKimzQuI8Jn5JvMy3p/5C9wfqXJ3fgHml/YP
8QD9ED2f+S2Dgn0CXs78h3Afjpdzvf4Fdmfh9lXnuiI/V/uX+S4Yx+j9Of91
nVA+H/P/K8x/lTO/hH6EypmfEsYnvJz8tvUzG8TzD/F87i+M/GvkAzBPfobk
B3D98j2eEf+e/cX3z9ofwvxtjX/bz8XlXL9qv3K/Lcd/u/D3owJ+Y3Oq+acd
kY/B9av2N/M35yIPG3F+V/+OYH/A5pzyqy9h/R+KvI5tYv8w3g4/nvU7fN0g
/JryL2rXqH5g/uwdyF9X/5r5GNwHoPnD9Cd4PoP6N7T7mZ/DPB/KQ/6/Ddrn
+ZFWAf+/V4I8jSSsvz7iPtuj/Uvcj/0Q/PeXJH+M8f7qMI7n5Iyv3o08eY1P
6PzcJvOT9sKh2Geh/BPzSZC36/JgKTdF1gfzm5dkrE/m1yKvNmUeC+Xke4gP
d0v+74vwe0bZPJzke5uHI+9X3z1Xnx/uL9yWUznx5iPgm8ofCeJx5O+8XHjX
6Pncr009rvLuAb/fKopfhnl7ZZGc/Iv1W+tE/MAK6L/pYT1ObuNvJcK/e3mD
jy4e+fLwrbmb4FepnPtd7DrtGL0f49Eh/+7lls+qYQ7I8yb1ovdjvAx6IJLz
fJn6tp1R/e58N8vrReW5vq+x/RDJ7fvXSax/uTN6/4Ntu7GvpUb0/lyfV2Gf
TuH2Vee4fzdj/MEzx/OTfKWug3B86iTLMtYnxk3iQ14uvF8kt/7+TvR/PD6c
j+H+Le/fhPy2xxnKaT+eG5xT488PCOOixDX+8/uDuO9O8bV7wI+XcR06OXnL
fUQPuPqhL6k/NX9sO/Qt19d2wWfqa+6jekry86gvkZeP+t8T+7mpO792g/BT
1NefBfuzfP7cmdBntENU/1JfMs9wg/CDyDt0dk9hfrHMIM8y1fzKkN9enxbm
j7mv9DVnL1AO/iqhfiu8f7gWz5dKNH9ue5H5MR36mudmME4Vts/lDzFO4OTM
PzwM9sE6yQ+dK+tjiqyPXmKfq39BfY080UTzQ7EvCOPTLdH81VFBXm6p0fgL
9fUH0N+tJX+T7Wde6xI5n4Trn+tTxzfUVyUlD0v+C+XoF7NE8ieKnZ/F9lG/
Fuavy5Jbod+o71Qe7n/15w+xfq77FbK/geWhJ0xf6DuVh/tf4/xI6lfdX0o5
2hXFpyjHe6UVsr+PcupHXb9zpf81f4XlyUvq/tWw/hrsh6j9PJdE1587Hx36
F3omkmetH9l/mGh8j+/3AfRr4fhgWUL9hnZE/cf1g/24kZzxF+pbyul/Ig/O
7QdUOfld8kWUU2+G567wX+TfRutjZmgXG91/RLuZ6+ZU2f/E/JXWr1p+p1r8
W9bP9XOu7H8hH3AZ+KWp4h9Ng7wO+B3y8Fo/+d3+kn9GOXiKiJ+nnPyNrh/2
3zbwQwv0fDzIyQ/p+pkZjF8Z4vero/pPBX+j64dyxpFryv4X1v/HMI8qkg8M
+Ae/f4rjS36ncHzC22W6v4njR37pctlfxf4hv6P5A+H8KDV3SP7BjGB+tjdL
Cu+/1/ynRJ4veTN+fYT5G/SvfPwd50KkiDuaCokvMf4/NYiD+PnLfEHOf7UP
GJ/m+UR6Pgzfm/k3ej4S4/u0/w6V85s4L5GHZ/R8KOZfQO9H85/5G8yr0POb
ND6p87/kbhu/fw9x9RZyfhh/f4LNa4Cd6Pc/sz3IEzW3Svyd+R3Uv2r/MT9k
HvJO1L5mfL8i5CmdnPmGzDvQ88n2LcIPsj1cx93l/DPmf6xEXo+ez8Z1z3mu
5ydRLxDfdH8W7SXmD+j5bOH+KJ6foOO7Je0L++AjOZ+M6y3UT75/wvxIrk+f
v8q/Kdf8B92/wfNqKeffYfm2rjzj0ZQPl/V7G/5m+0+S+DXzCVi+MD95mJNv
kPh0sfPnmF/H5x8l+Qn0jyjPOl+E9Wv+w3o5PyGDn3T17xD+l34hyxfmJ/37
MR9T1wflGn9ne+YF/eftG+ZDsHxfyf9gfijL6/5G5keK/yHj4/Jyk0sk/4H7
JpnfeYuc78FzVag/dH+B/SypIE6mYn8x3kv7WeOr5Ifd/Q2Sf059w3UwTfLb
HwHeHwz87yX51zx/hvbTAMkP5/kpODcF59z49Yv9wrlrgc+6Poj3zKuaKfnh
jIsS/3V9kBeh/vlC9idofq3GlxlXwT6IKP+M5w8Rn9X+4vlFK4D/mn9OvP99
Bn/A/ZbMe9T9D/w9zt3hPssovkf9doXYtzyfiPhPPiScH54f1PMPqG9wblN6
peyvgH2U6xvwpz7/lOcP0X67U/YfPAZ9w/x39R+Ft3Q8HOXcv4x1bdR/5bk4
xF09X4P8Vmh/+fgC+RPwJtH5JfA3EuYP6vkac0Jchf21m9ZvsO/V6PkitD/C
/a9+/ZBfpB90qPAXtMdp52bwb5n8Sbh+mhs9fyTMT9/DVMj4kn9kfpnqF/KX
PEdzvJwvwvGg/anrh/wV87b1fBvqF+bnbpfzTcivY1+20fNz6JeBlzR6vs9K
8Juh/eXtb/K3zD/W83PIH1Iv6vk+5B+zzq8ifwve1nwm+Mf1EuYHefuL642/
U/6dfAnL6/pk/IPlTxT+g/w/5crPkC+jXOf3CslPUf6FfM3c8P1c+6oC/7DM
rBT/mr+nvPD5Z5tdXPk64fdeDuzLsmh+h/ZdWcTvMH5CeeH9XR1d+zT/kb9n
+5RfYntYXvnDW4J9Ixwfz2/yb8oVX8nXhf3n8Y98Jtt3iPB7PL8A50QZjS8z
3sv8vzMlvs799V8D3yslfr8SeEp81fgy9+WF+X+qH2twX71R/Ui8w7kRUf7f
EolPKn/yKPCU+k/z/7oBz6eQJxH7m7/n+Sean8j5yziV2g/c90f80/xB4inx
9QeJrzNvMNz/4Ocv8RxxqVTzOzh/aX/p+V66/0jtN+Ip7Cij+S3kQ5jXo/kb
o4HnxPf5Yl98GfAbexjNb7k82J8Snz9NPOf+nOnCXxKPaX/o+e58/8oJ//vv
1XK1P8n3hvuS+G9j7rn89+5eh9Tef+Dn34B5LQ7eXrkzPWfgkkHDX6tpSpY9
OLba/OR8FNyXwHsjFJ/13g3dH8X7DliP4vPZ+ed/lNrnbk3723ZE83tiRv1s
T7f+G6+d9eoP6RO9Oi9Zd49fn+F5VyUVis9n5p//43jZ56M/Nji5/TTljO8q
PrP/OY798/9eLA/bV5occqwZ1GPsu7lO+U/vn1UWaV9L3G/RPuN+C32+/X6S
e/4A9Cf6Ocf3DMev2vE7dpz9+H+ZH78aZoSdN2bPY04eVZnz+KzzVu0LOx7+
fAr7/mvd/OmIv7k/g7+nfFU476L8L84ryjFP3fyaduCHg645oHUi7XNy/p7y
wveD1Hf7R1ifzr+s+2lWoT8pj8Y3/32TJFz3/Kf3o2yO+HuOdyj3/AZ/3yqj
PNsTtt+PP9aVk4+R9TUWf1N+CH5PuV3//n7Jqfn+8/efTcPflPP37v2AR5jH
hngVjr8/n4R4F/ZPSQXxX+NjbD/aHZ0vwPVDfDqXeBXOj6L39xAnnxE5f895
p/fDMP/oU8yrrPtrsvRDsffvCDw6EPik88PhIXDjDOKlzK8WQb/5+Sv4VjJO
24d6BwGfFP8vyv+bX878+3HSfuIh7//hfUCUE68wTwzxjPLVwfosNeE9QH58
Ob8qRW7zN1qYr+y4Gd6XFPYP16Op0vlF/YN+dnpQxy+8R8jPH+By0sy+Z/R+
z+L3zfPyzphn3n7iuNlybcw0WZ+cb5BH/PAI3Odkv/8S+sSvP9u/ndy8LaY/
72/f98f/Y939S9SfXDccp7B8NfRUY8Nxzqrf6ucnXf2PPfq//6ZV8XwFtb/b
4P6ndhn3P9n1489P7QocCesfX/5MxvhxPnHeqf78BPOTv4vub+D6D+Yl/+n4
VEf8D+ZlOeVPy/iyP9i+EXJ/F9vD/Y+fiv5A/VWyflz9t2JeUM55SLnFv0/c
utP5w9+H9q3HR/6e8v1QH+XF7hdDR9Iui85PLXx/2EJX/nM7L93zR8j8vBV/
s/++wu8p53qEXoz8yy+w3rn+1b7nem+G9a/zuwbwhvjTX/A91GvENT+/Wgru
7yv2R4i7jSP/0q6PR8upJ/V8Xq4rnlOi/mWx+/n4+9CP6STlq53dkWX/he9v
nH0dru+4/Vr+/Zcu//F/pZsfxAu+ZwfgiasfeMP753gfndTv9ocoPhwMewx+
Ucb9hPWNtctaR/OLv6edrHLa67bdayP7nP2KeRz5j3r/n8qJF7BLIznbhXGL
5Hgvh/+Fn+/9ApVjWldAj0fyYvc/ol/gl8b7Q0N7bFKV4jP8vtyjmAdq36jd
qfqD7eH4Hyr2Oe1lrtOM+x+d3lT7lbgHOyriL7n+YGemB1g7M+Lfs/DzTNjb
sAvNzjdD/5X2Mt+b8+C/1z9b7t9k/5sqPd8a35dzfPcRfob+iG1XHXOW2K/j
A1yI/QOx/yN85vjB74zkE8LxKdf6gfsJ791UeWi/N8myT3K3QI8Utj/bQz91
i+TC+0TP757/N6d8XIZ9FI5PSUnh9jdx60/lsO/Ks+w7/v7dP/3tx/8Lq8YH
z4v8+8g+Q7MqqL91/bTHfO+A+V/Y/65vyBtl6L+E+Kf+CZ/H9fu82N/2c1JV
aP9F9pfjR78U/5P+GdffeeL/nhn4x3XMmeKfE185PiXBP9//1n+dXqX+abg+
4vODKaddyvmu8hYBfsf9z3Espr+tfTilXOVZ9++yfvSrKYxPal9E9wO7/Hvl
d8L5zvURz1/is/ZfqwBfGiXKv7B8qN9KIzl4vIi/axmuG8fzaHnaf1n8Gvtt
lfB79F/HQr8qvxiu39JIP4V2E+PO0fx0fq+u7y9gr9MPVzn7q7P1O6L8kXA8
SkoK8zeTgI8xvowIcT16/m1oVxXsY62f/lOof3R+uHudIznjZuE9y15O/xh2
bsQv0b+GfZOofSv2YZQ/KPiXfCH+E/wr4FqNpKnw1/bTOP9D14/jHy2uRfxU
qH9fLFf7YRX8DXc+VMH1X/x+aLEzo/5pm8HvcjyaYv5lzH83/wrLmyTaDsrJ
nz2P56g8XLedMtdfy4z1Cf8l7WznUYQ//D155/biP3F+cN7r/KH+gt7Kafyr
cHyF/zy/yPml/ndonzJO5/lB2k98/1XinxbTTyE/Vh3x95TTDm2RER/gG+n5
xZTDLzWHCL9VzH8L7ZdO0fzn+LwEfNL+q5RxU/6JcuKjjs+zgbx+pv3E/m+T
wQ+x3cpPjQ9ww9n5On4J4pfR+RLF+BXajyE/4OOHLm5qeRuj8UuxuyP8bAp7
KfSffnK/Cf7me6h9dTaedzqeX0P4a8YX2P6DxP/Dizp+OyM+kgg+iJz+a1Oj
/LPYLZF/nOE/6/M5LhU6PpT/p9eIi/4+5tscP1VePvf3T9/dZe+Enypf9Isd
yf9MbJTwk/JxYXn3uaty4sfQY35b55qzVqf83FW5vF/KT5WjXI6fGf0bzT/K
s85nKCZnfIN5QPdKfqfcnxqf31tEzv7hPZWanyfti/JTi8lpL2TdL1lMHtYf
72/aVbncTx6N367J4/Ozisll/NxnxvOj+xeKyWX8crp/RvyrjPhUtpztt7jT
JeFnxvzPig87flvtx13Fp/+Oj8XlWfHNXZUXW9/F5P89/8nL9X4oaV/kn1WK
XOM3Mn7uM+P5Eb8e9m+2POv9S/BP/XjKqS9Uj1C+CPrG6RHRP9QnqmcoHwa8
Fxx37b9K5FeJvBf0jbTP7Kqc+kL1COWvQ9+oHpL+1fwL937UF6pHKNdzKfR8
roz7aZ1czheO9Af1BeWqP5gfn3X/uebtVwn+a96z6hfJ+47u19Xz/VS/8H6M
8Pke/3XfmuqXjPvdnXym1K/6hfpC9Qjl1BeU6/5X3d+u5ZkPrXqEcr03RO9v
1/NXs+4PUj0Szt8uMn+9/uDvx/3X8tn6gfqkWPyB9av+kbwElyct7TPyfkbl
4zLkz0r96p9pfC4D/zPXP/+W90uy6m8l9Yv/mcF/dXH9xr/l/YQn1vy/iB9V
+8+9X0b7U2m/K0+8tbhJXo3/qD9qJyEuezn1AcpH8mLlrb5Yllp5vUherH18
bqiXtHw9yJdF8mLtL1a/3MsetU/OdWT9FZTjfLg0xGVfnniMc21SLR/uX4nP
JyhWP8uFuOflPBck6/7lYu3jeSFyvsgut38X+zez/TxXOtQbUfnM8aH+kfOp
nbxY/cXKF+vfYv0X8sMx/xjin+OPXHnlV7U8v5f8TXl+VL+Uz66f5bL2J0jc
NOqfYu1jOeH/drn9u9a/2e2XvJBofuzi+OQk/iTy7PqLlS/Wv8X677SJd07+
1X6vpQk+Z41ecN/9p3t+fdZze73Y5aKS5O/ppsPqDv8mVf9CcLUixPmNubKK
b/7QbE0npz8a/7v/unW92zr5iGOv+ONDC7a7ON7A/ifUu+YDn59WTH8ILxXF
7zu/e8I+LywoMaPv/aDrs7/5jH87OZ5nbkE71P4oVv+Hnw68Z+mar9M+I8/Y
o/v1b0bnM1582elvv9dvS679vWXL779+fTrg/JJ9jzmqoZNfNeDTLm/8pquZ
cMmZh3e6zZ1TYVz7a1xwepPaX+ZOa7vqwNnPfZYOKZu66ZS7G2j96eCHkieP
PmpZru3+73R7ey///P6/6jzn86f8/sk+Nfv9stelPn77q2tX/PnS5c3Mm19s
OOWmU2smi/94Y9Vef1ru3v/jildm3nOsv799AOqjnPW+ce0NZVsPX597Yebs
fkd3UPt5W1p35cobLhj8Ye71/W5vvnlZqSu/dNt/Jg8dtzEdMuTKues3v5Jb
cNwRN15Zw+8/qG44qv2pN3Rw+mPGOROeaDzH5z9X4W/i93kPj367Zj8/vvRH
up9R47j5VbVNxQmm//PP+fMHie+P/O72duvfXZMO3XPIhvcG+P6d9m2P3Sfu
qGtW2HGO+K3TLp3Wtek/Gphrz1753OF/2prrvF+rVrWm+vMbLnmh8/Iuveol
x86tMaju//yQftcw6Xffah+fqbTjbspXXvztEVsbRPeDXmzLmz+NPfXsUzts
yTV+67mh61r452PepnPbVt2+4vGVUXyuevO9b42t/FH/5tdxo8TOY79//7kP
arY5s8d3uZd2nnt/7a6b0nEznpn4xBF+/V1b95MFNa8+wChPQTn895ytf2N6
8AP1j578pp/fqD9dc8M/ex7WeEXujdcP+McNrXx8dcCapw7vs+hIY3mE/ZM+
37z2iwtvb+fqPxd4QD0xdEqdt9ve01Tat4+xOFMnsXzHXPd+tF+JgxZ/oviY
uTnfj1/gef5+AZbbeMBTq2fd9XHOlvf9S/6idY/H5r36+bs5237/fnu/dez+
lx7dyukf5V/Oe+H+DpOaNTUb8vXXQPs9P7L9mEsX3P5nlxfJ8Vb+K5lncdr0
zT9/D3m/zbl3zvxV3yFPfpWWLXlj2Lev/ELaXxvP3xTxa3vl298Q478td36+
vf58rEFjbj3ysE61kiP+fe6MJr23p7/st+cnD3zk8eHT9Xt36NqjjRmEcVT/
p5h+QP1mxJ/HTTmn8cZci7X9m606xJ+/8VfoJQM9laWf2K8avyvm3zwS6g2j
+oP8F99D28+ayKstEv1Iu4d6cJDoP4439ZTyp6z3qpBnc+VPg15aCT2l+qk1
9NJF0FP9RT89A710NfSU6qdB0DsXQg+1E/1DvXUg9NivRX9R7xwNPfSW6J/F
0CvUM5NFv1CvUD+pfmE56q2+ov+on1ZCz6l+OxR6g/pH9cdV0FvUYwtFf42G
XqF+Uv3CeqnnVL9RP1HPqX6D/ZGbDj2l+ol6h3pI9Q/11qnQY6q/joJewjyI
+K+7oJeopxqJfloIvVQBPaX6iXqHeugp0T/UW9Rjw0R/US9RT6l++gp651no
oSWif+ZAby2BHusq+qsW9Ar1zFWiXyqgN6hHBon+OAp67Rzoub6i3zZDr4T6
yfcP6x0MXLhO9B/LLQauNBH9thl6ZQj0zFWiX+ZCbxA3+oj+6Aq9hrhD2lf0
29vQK8SlmqJfWC/14DDRf8xHqYaeu1n02yboJfI4qp+od6iHVP/0ht7aG3rs
PNVf6FfqKdVP1DvUQ6p/egP/awH/mwj+U//Af8qpfnqxstfQMTtbOP2jcrPb
fiXz++zIrbjso9ev/25j5H9R/0xGPSrnc9kOlb+PelM8R+UH5ddDqwT1R+1D
+83B+J3Kx0zc55XzFs1LJ302b6/Dmn4V1f8svr8dv3tD5IubXz1tUP/NOVt+
RdT+F/D9UvxO5bWHbBz59+Xtkr6XjRz74FVto/a/9Ojkv+18z59vovJ+KMd6
VL4k/9xS5x+p3J3rgueonPqH9aj85aUdL7j832Vm0hPzqx88Z7dIfuKqYw+f
O7ix008qn4hyM1GPyifl+/1Fp59UTv+pH56j40P9dAfqUflJ+XI1zFHPr178
Za06Ufty+P5E/E7L237bO7Hlm0ft743vX8Lvovya/Pz/NJ1689RTzmj4bfR+
0/D9U/idyidv2n3mH8q258Y8PWaPKy9ZF8n5/RT8TuUrO/3l8Ue2HJK069H5
xXvvOjhqf8PSrh8tauP3l6q8PcqxHpXT36AeUDnrbYTnqJzliOsqP8HqA2NW
PL582Fl7RnLbr7Wd/lB5inLHox6Vr87rjxVOf6ic9fI5Kme5D1GPysfmx+f7
dE7bq9qdP6gsat9sfD8Gv1P5qBq/7TRw7yaJHYeG0fPb4Xv+TuW0z4nvuj+F
uMzvVT9q3tZG6HPKh8n38CcTLZ8VH2F5+qGoJ2rf0Az/gnLwX5F/wfqt/bop
Z3kub9/9P8gfz9vJtZMeeXv7J/Y1eTfYn+p/8Pm0m207Vjn9fB3kdfJ+wvrc
orw/0TBqH9oF+3tT1P+OP4M/peUtf9OSfkbUPuoH8kiF+28V3yNqn4vDwx/T
8rbeVeDnfPnrg+d/niPPVLj819H9d3w+/SK8Z9Q+jJt5zI6jUTmeG/kPQ4P6
a4BnWxX5t9YPbGga2HGMx8f6GZF/wfJln7f+658/+AZ+vF+fN0P+rzz+NwOP
0joqXy55Lvp+c2BHd8jby/58xysg/wbr89eyPlk/2mVq2XZG70ccJ8+nz7f8
Q3MTxmE35q4J8KU6Jc+j5S1/tTaFPxC1j+te85PYvgctT5IqP8L5586vFX6D
5dGuaP/LsKD/6yV4T1f+FsgxbuZJO45G2z8o5E+i/iW/g/eIxg/jZr4RfCyW
n6vfgx9ycvgLTg4/Qssnoj/c+5fgn/MfApyPyyt+kw+hXPHb8hUHOrnlPzo6
eSXwnH4IcZ7yqcDlsH6P35avaeLklt9p5eTkHSi37e3g5Ofn+ZBGrn0rBV/R
Hrd+nwHOU874d1i/nz/Mn+L7Kb4Tb8Pnr3Lzq59tbxI+3+M3cZ31K/67c6Eh
B/8jz2/s6lf8xni598N4uvIfAPfD+v35MOSbwvo9ftt4Tysnx3gmYf2rnJ96
FnCecvIZLK/4PTtvPx7m+sfau92d/KW83b2bk5+Yj2O+H+mPLPwutv7Apzv5
IdbPdXLLq5S59jMfhnIbV33fPd/6Cf58YO5boBz94eTMn+L7gd9x8tmI17I8
4rju/bvCL3fzW/gd4gnr1/gDcZvlwc+49yPfFOKTx2/7vO6GPMkcO56u/Tfa
/nL1D7b96eTgDZ3858YPjkdcm+83x/aXq7+n4HKZjP8m6G3qifNFf3dF/RgH
zD/f/8yfoP4ZIf3HfN5FYR6sq5/8N3jvyL4mf/6u5c1T8OhOLnHJFPFK3/4w
Lhrhc0vEBxAXMOT5KT8tjHtH+CtxTwMe2tX/YRhXTcFju/ZJ3DrC35lhXNp8
ZHl8Jz8b8QnEJdh+175nwrg74xzu+XeD3wav7Xh0yo8K47Y5xfc5YdyaPH8S
tt/FraE/Pf5L3DzCd4lbR/jMuDriEmaJjVP4+DXiMxfYuIzpYuM0Eb8NXjuy
r8mPgxdnPNbJJW6Y7mN5WD++sJvBO0f4zPV3bcb661Vk/T6P+MLTNq5gGAeg
fGEYNzcVwj+Xh3FNMxg8cNg+FzdNNf+F+E5cB4/vyjPfdg/g+mKx3xi/QNyC
7Xft6xXG5RkHcc+/NYybpmi/k0tclvHaJGxffReXBo/v5Iwv3wRcA4/v5JvD
uHmkH8rDuH9ylo2TyPxolFg/fgvzGZx8GeIPiDtE+qEz4hfgt4zu32P8B3Ef
s0T2Hzi7SfZJ6PzL2v8gceWK/xS2zzW/ItlVubOLYMerfnDtg50+Q+xz6uXr
YOffJvY99SP5FdUPPYP690M7vH3O+hfBzn9B7HvxGxwPo/WrHtD+gd2aKL8i
dnGq+iPsvw4RvyJ+S6L2eegX1EhWiP0vdnNO7ffyoHzjRPGdctrpap+zfzFu
kX0vfkOUX0Q5eZcBYp+zfvhlySKx7/n+zMtR/cD6aacfJ/b5Uexf2Pn9xL4v
tv44P6g/DhL7nOVp56t9z/afBjv9RbHPWb/kH8X9Cz9gmNj/rF/yj6LnM36m
8Vf123X/FOX0A9T+ZP2SPxS1j3lRhfGZfsEy5Ct5+ypHvwt2/lyx71n/zZLn
qfWfFuafRvMvK75abH8zeW3hz139xfYHFMv/JO8tPLGTjwavTT/0UOG3ZwKP
byJPJ/w4cTWs38+/MvDaLr4r/DbzRig/Xvjx3uCt2T7FR7THla8SftzdmxHU
7/lx2ufCMzs5+ZLw+R5fjwUvHj7fyxmfZP8pfnM/2/CQh3Zy8t7C07v2kdem
/FHht4nb1wf1e368N3jvsH6Pv2+A16a8rvDb5Eso/0D4cfLewhO7548Fr+3i
CMJv1wYvTrny48Xwt5h9Tvue86ON8OO1wFuHPI33D8mL8/nKjxOXWf8s4ceJ
u2zfeuG/kd+Xhjy856/bgxcfGvSfns9fP7kiaL/nx4m75OE1v4+8dxgH9PiL
8XLv/4Tw273Ai0scwNXPvEGWV/wdIvi4SfCRvDjlDwg/jvxctz9a+SHyIuRh
jhP9JOdORPFF5JMD19ZH+fXkNa4J89icHPns6bIwz9DJR4D3kDw/9/5bwVuQ
x7hY+AvyxZJn6OTI9zdtwKNcLPwJf0/79GPhL4ivxwFXPxD8TCWuOFX4E/IW
kqfn5NOBp5KH6ORtwJucCx7lYuFPaM++HOYpuvKsdzxw+SrhV4jPvYDLlYLf
5D0kz9PHT8F7PBrmWfr5DV5D8lCdHPsNzHngSZQfGQje45Ywz8+1bwh4DfIc
ewm/cS14kdphHqGT026VPDw3/o1gt0qesZMz/vUVcHig4C95iyPDPDlXnvYs
cXSg8BPIxzSTwzxN13+0Z13+ifi35D+Iy8ML5q9XO1x+VfOjwVtIHp6Ta97z
XsJPLAZvshY8ynPCn5CPJU5vE/6C9cIOTa4RfoX8x3nA9TXCn5D32BTmeUp8
Ygt4iEbJduE3kC+akCdRfqQUvMc7YR6mGx/sxzDcn7FI+A3kD5m24EleE35E
8t7NQ9CXlBeLL3L/UZ8QJ51c8pKJs+75khcd7Y9i3jXXMfhO1z7iNfbNpNhH
4+QfhnnxzO/w/HaYF52CT3fyaWHetcujoJz4LXrMyYnfxLl6Fuc8f4W8eeLY
qRbHXP9IXj75C9c/lWHeNvM/nFzy2qkH3fiQnybO2vwOfz71x2HefMRPM6+f
ehjxCvd86hPqyXZWT0r81uW9R/w29Sn2vRnsR3By7h8SnHPvh/Vk+oTrzLVv
cJhXTBx17QPeuHNNFL+53rjOOtp15tpHPN4nxDkn3xHmvZMPdfXfEubVMz/E
lZe8Z+opJ389zKt2eRiUh3phJ/apfOHkLNcIOPe1xTmp/1vFIdd/14R5+4ny
p7KvJjofR/K2c6q/JK/dzBH7nfhNHF1ucdS1j/t1RM95+wP7Aq6Dnkc8xD2f
+obxB+x3cOW3h3nvEX4Phn1O+36D2OfUx9RziBdE/EoWf9w3jKtF/DHt34uA
08cIPleFca3Ifqb9eVG4jzGyv2B3pYMFvw8E7p4S7rN0comLGsVXiZtxH2qE
z+RXjxf8J38h+0B9fCyMmyaKn9jvZA4M9/FG9ivx+VHB13lhXNIovhOfZR+p
kxOXZR+vq5+4SxxuI/iL/Vip7BN29UvcMsJn4jJxeqDgM3F5YLjP0/VfD+Au
7b6egr8SNzKK37QP9wr3YTp5S+Cu7DOM7CPYRWlbwW/a/7JP0uN7GDfFPnOP
n0PDuJZRfG8Uxs3gn38c4TPjb7ME/1nuNeD8esF34cWj/D6JyybKfxwCXF8U
7gN241MaxuW4X8jJJW4Zxc+4P2hNuI/UyYnLss/X1f9UGPfNvSD4e2MYtzaK
3/BXUtmH6/qPuEscXiv4eyN5H+D4esFvnvfFc1QUn4E/7nea/0f/uSo8p8rJ
U3wv53A5Oc9Duzs8Z8vJ5VzOSM7zuO4Jz1lzcjkXMmqf3F8dlZ9ZpH8eCc/t
jORy7mdUP8/7Gh2e4ybtd+dORvUTn/kcHR/2O88RU7mcGxq1j/1CPVW4vH/+
z31/5h/gM3o/OXcx6p/w/of4/gy9P7Pw83k+Wpeo/Xr/TuH2dUG/dIneb9fa
7+89yCjveFmVy72PP/t8TJ73NV5+9/P6L/t8NL1XNev9W2a8v57//XOfX+z9
Kc86/5d/s3/0fEZ73/sy/G5LFH+bh+/D33m5vR97n6Rj1/1qz+3XKuIn9H55
lXdCuR6oR+Wr7X30Dv8y3g/3tm+L2kf8+wj1qPyR8NyuEpVPwb3jIU54uf00
VQ+G54w5Oec/8a9w/zZNeL+5jk8a4CbvX/dy3pu+1N6jHrUP96sn0zLuV7ft
qpfY8o2i8eH3KX6nctxvz3vtIzm/PwC/U/ktL80asWnNylz9jy4e+fLwrVH/
NcD3N+F3Krf3kndM7Dh1iuq/7P9j772jrSqydfEDHJIgAhJUgmRQVEAxwcG1
bBNBxauCAbBpu03dZlF5inKMbQvYtw2YbncrbSAptIF4jmsRDmBCwIyoCIgg
goAg4aD8+u6a3yznV3v11nfHb7z3x2Mwxh5nz121alX45pzfnFWVu398u65T
ls+QcqiH5Rg3jCPLUe+18pz853NXJjMyxh92ycqM+en6r4G3H0m+QsrNylgf
w56s88eb5hSp/ZhxfniM57Ac5z1eL/XkH5+aab9ZvXsfu3lvUH9f+b6O/C7/
/CqKMY/zj0/N9L2M+X2bzIuR8rn9oebv7Wrk82vGP33Q0G7/daTU2y7gP8uM
P4f17/l/qTdx8xTv4+OPR1ncSgUHVT7qw+Hvn7jkgHS33HvP90f03zhzyjvV
9o8FvxLgIOSwW5baflI58K08w77beX/05vsj9yQX1ruuequNu6NBuc99VF7o
fEH3uagM68D93p8PAPzCPN/86aGv3XSwv3/D2m8fRxNy4+HHp8f4a85f+evG
em4n+9dlT5U++9uXa6Rvbxt/8elTq8Sz3d9afo/0K+6fH+36W+Uy7ume5rVP
bz+kaZC/VenKpw4nqgf+8+4C8lmvlVw38JIqOLdY5pOPD74xMzm19MAt0VdT
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
jyD/wea3dAz8D8gpjz54f+xTYP8B4/epzdPX9kGvQM9yflticA9xPtavu4Rf
nhvgF+TwD3qS/kX9AwR3OL5C/Gvcg/CV8tbT/qSfLS5XT3n9Qo75xfo14/73
Ipb/UfQwr1/IEfffTfpV7w8TPV1B+pnsimD9lpvxKZb8A78+gdtXip6eQfoZ
9Uu7gvyKcqM3qqZ3k34V3iupKXq8F+nvcjN+lTLOvn8xft/I/GT9Wk7jz/oV
eq/VG06PV5L+tu3fKvFar38xv/rL/OX1Czn0bDXSr3g+9PRS0s94vjw3WL+o
f5fo2YWkXzF+0NNXkX628RHNX/PjK3HFGTYPQ+WIP9v4A+Onxp0y5p/uq1Uc
hNx9Yn/aj4F9bfWC5vHq87HvpZ/1w7X8mTZuG/B/sI/hV/L+F/hFkncR2M+I
OyLvQfI4qP8ax4e7uJnw1/W0f6zdE/Zf0WgXF/xY4poSL6T4hcaVxQ/z42P1
XlPw9/r+Nj+2qtoZtn3tND9tDPmvyJ+w8QffvhYFxm+S9V8kHunz0xE3Xil5
B49R/gDFpWPe/4P8CtnfhjwLlVNcMtj/gXpPc3Hb9BHiLygum95B8ePhNm4c
6D/k71RI3Jj3x4CP7yP22ediB0OOfAnExxg/1tm4dCp5NmR/NAIuBfkNlPcZ
54+PNooXmDikzy/G+rc8XxvqX88v8vp3n0vKaB8C9Y/um8M+EJWPt3mDwf4q
yvuN89v3jVJr3/j1PcrmfQb83h6bVxojDgj5nWKPof7TXZ5kZv8zPqC/Uf4E
ir9TXqX0j+9/ystVnIAceZuQjyB8xfqGfBTt38D6pjicypH/i/J9aH8Oj98s
Gj/416SHYts+zXuNJY9V5ZuI3+b1CT4J9ct40vho3jPynFVOebPB/ifK+9U4
qe3//XT+8f5RzAfLr68n/Nb8zpT1P9ZnL5unqXKya0t5faJ9tM9K5VfZfYlp
/v0T4O+rBesTevlOwdUWpJ9FfyfbbJ6k1g+9C7+A9S/09nE2D5PGN3v9zTV+
y/bkB+o/5HOOlfye5qS/Mf6w61m/Fuo/7HtYZvNc2X6MLL/u9SvW7/02j1bb
h3L9RM8fRfod+XUzbB6j1i/5TsSve/25SvT65TaPVuuHXrX8utevqPdYm6dL
77dV8zB5/xP8m8sz/FPwIuCd1pL+Rb7XItHjE0h/I/5ztc1j1fdfZvy6Rinr
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
C9UPXiq/fQ151bgZ4YvjD14HPwE7LHj/CVY/ML+kvCL2SVP9JYXq5zwdK59a
Aly0fAnHxysVL/PLob+aZZRvFtivkEOvTcioH/3fvED/s375nz4f8QfYz5Mz
3u/f96/Kg/6V+ksK1S+fQXwYuA056w/oHchZ/0CvQM76pVD99m/U7/UD9BKV
1/qtPigqYv1UqDz0ji0f6p+s/rP3bRcVZZ3/Y+XB+bcqf5Twz97XpuWTX1Y/
8GhRGeufQvUDFyEP7ncy+eiqZ1VOzy/h5xfqP3seg95vHNvn433HlzxK+E/9
W8r9W6h+qy+hp/h+VH1+GT+/UP9R/cH9zdS/Rdy/Nt6B/BePb9bfAk4F/KGW
Z/1j+WTPM3P9sO+z+AXoSdY/hern/B7GR+Ai6md8pOeX8fN/Yf8V5fc/ffvH
522/9m8p92+h+i3eqB7S9tPzS/M/P7v/qP4irp/6t4z7F3gLnM/SL/jdL5VD
HwDHWe7w/Ht8BvlJKId6Mp6f2f7FUq98Bs8v1D74LddmPB/rPet8Mzo3Nut8
cL1/J0Ou++JYDns9a/8OnxvFcvgVsLt/afuBb8jv/6X9g/2R0Cv52+/vjWA5
/B3ogaz+m5/Rf/DX+B5CHh++Bwhy7I8qy3h/nE+RZvQ//J6s+/PQLj6HAvIM
fpjlzL+pnPYVZMk5fqVy65eEz8/Ir1I5+N3JGe0r1H7UCx7vl/aPw9/Owi93
zsx/BE7nrx/lOgf1876IjPo1jpU1Pi3+7fjArwjfH/3fMqP/2a/Lev8XMt6/
00enHfTywqIYn4888GnXF377k/1729/c95K79k/nrnhy+fDzmsQF/ItS9i8u
evnB9lMbN4qBz5sPfW7NnPv9/q4LB5xW+/pP91O/8LaTr/7jIwv9+S/Ei+E5
RfR81R8c3+865Z5XfnXwm9HcsQv/8uDZteJ+7m/Pz7vnJYOlHcwvFtJPZRdM
fLrBvCrxRY+O/aBa36KA37rsyrM/+LjvtqjNIR92++CA4njwI/GzJ57gz0/8
ovT18jEnF6cDf9Vp3vrnwI95+//EG1b8+YrljeMlf7yl7IA/LY/e/frbM2/t
7/lVqT8Z+OuiFiedUC9u+0Dx8gdv8vb1pMvPPbbjnQfrvtySlZd9f9wOf75+
pyoXn92wxoZkaPGMLWeOrhv3b7P6sLkvfqXlrxv4Zed3ftvV6w+pD3Loj2FN
hn778cC68RO/v6vtpo/Wsn+Ulp6WDnjpxSbxkedUOWVBmZ8/Z10xs2ujv9eN
Ox3csmX1GdujG85f+eKxf/Lxn5nfd99vyp5aeu7Lii8HjVm29juVfyZ/A+d7
33fO/kfd9K7KgbtvHXxX063vVY1rr1x588VD/P1V0Msvl8/te2L7H6PFN9xc
vONYf/9IZb1R7frf3D6e7cY5OD922a63Xxk2fnO08JTjbrmmSvV46NBr5m/a
+rof/5c7Le/cs3bc4P0Xh21stiv607j+5/dv7+9vGeDGPe1dre/RPa9oHLN/
crkrn+6sF/f9y5qG8cnzqwyu9R8/uT/1pCsW3vXnmjHWDdvPQ2T9DZd19C2t
vxc/rdb63O47oyVvHfr3m1tWi7+5+R89jmmwQsvDv2/wzwEbN/ZqGLN/MKzW
qoXVrjsovjFX//ykeun2exuvrcn1J8/Pnjzl6eP2i6ftvfDBGl39+RDFud93
lPrbxMwffLnpwPZdu7fWdTlI1inkb4l9eMRDdU585d168fwXD3i186X+/rnr
c+07VNetxSuPv1WXvjP8+9f3jZef+6s+Q5/9hvyDOqngYDwvV7/Przzw/ZMP
ueLEerHDuW2CF97/f0twC3rC9f9Pzl/Z+sD74ya1lvHZlrj2+/uBbpdxhR6Z
36bsrhVP+vP9UG/9XP9Vjb/L1e/3r6Kc67e90chcfV+r/IBc+1vGZJ/r82F3
u/evFnfo/kTFG+s/0vKDn7rj+GM6Vo8PWjeg8eouP0Qj/zx++gUNNqtc8D0d
Nr3mB23G6Png2n/nrX3u2N6Lj49d/W1lfPz92kNc/enRfZuseujzBvHx/7xw
dsNe/v4N6CXoqSz9lOXfQK8wT6X1i944VfTIKaQ/sK6g51i/SUWZ8RnoPeif
kaT/MN9lHiTMjxZ6P+gl6CnWT9BL0FODSD9BL0FPsX6C3oEeak36533RW78S
Pcb66zeidw4TPXQW6R/oFeivx0m/QK9Az7B+gX6CHmT9B34Meo71G/QG9E8t
0h+Hid46U/QY669XRK9AP7F+AX8FPcf6DfrpU/n+VNJvMq4p9BTrp/qidy4V
PcT6B3prqeixIaS/+oheknkQ3C+/Q/SS1J+eRPpphMxn6CnWT9A70EPrSP/c
IutrsKyvTbS+oJegp1g/PSd65wXRQy+T/rlF9NYNosdYf3URvQIegvUL9Ab0
0wekPxqKXqsueo71G/QK1u180i/gq9aKHhxM+g/lbhA9x/ptmOiVStEzrF+g
N6BHtpD+GCp67QDRc6zfBotegZ65nfQL6n1TcG8T6T+Uu1XmyRzSb+BtoKdY
PzUXvQM9xPoHeutN0WNtSH9BLwnOBvsruovekfrTHqR/oLegx1h/YTxETwX6
KZ374c6L+7ykfk4g3+fgogW990TLr/z8rZt2bk5YjnKoh+V4LtrB8k+k3jny
HJa3y/XXOtQfPH+lfN9Jfsfyf+xY/97Q/fdN+60++dj5QxoEz8f34+R3LD/h
pTVLNlSvGbvfVQnk+B6/m0HyTl16Tnxl4afJ1CsWDymZuzVoX8Xa+ufc/cMO
5ddY/pKU6yr15G+f3n8RtA/6Z748h9uHcr2kHpY/Vfu6SVWOPzju0Obpzzb+
rnlQ/9SvKg44ptE3yq+xHOVQD8tdv/+A+7UDOfTTi/KcoP+k3D+kHpZPzpVb
kSxtet3MwQPC/l8m30+R37Hc9VvN2JWvGrw/vp8nv+P+O2HsujuiHtXSbpfc
1+yyVbWC9ztSvsfvWH5Fw7OqNI1qxDedNPWyb8cWBXJ8/3v5HcufSrYcU2vE
9kT8hkBeLac/flAejOUoh3pYvnjfPfF/TKmv+oPlsBfxHJaDL3lH6mG567dO
8bDrWh09ZHjHoP4K0YfAeZbfIOW6Sj0sP3vRyvP2jvP38uZvX2W0QJ7DcvCa
50o9LC9e3+q//vzpl8nlufH5PmjfFfJ9Lfkdy+fk8LNG7Po5HH98P1d+l+V/
UHwihryn5ZUC/U32fQw/GfIe9L3400H5tylOz88nPzxof6H4kfgZKfsXkDu7
dnXi7Ehvv/USubOTW6aLc/Z2EN9S+5P9D8hhH7t21A/qvzPnJ3SInT9xWND/
0q5U2hm0H/oB/hSXd/xNe/BjQfuB8+CR8vdffXn+d8H7Ad/hj/HznR+wJXLP
9/ZhD/P84hg8E8ulXYH/ADn8InnPoH9l3IRHaxm0T54b+A89Tf37Sf94+xz1
3+jGLZVxDMoL/5Wwf4H+O0v89zniz3P9sM8b0vzvadZXw8C/QP3DJS/H8QB+
/00k8n45O/GoeH4OJ/z9DWofunalzE/j+dAPtxM/ALnjv1qCpwrmF9Yt5/fo
/HPtToebfBxfP3AY/hbLXf9+Er26Zb/ye4v9/UqYP8B32Nv8/Cx8RHn4SYe7
9wzKk58VtE+eG9j3KD/NtTt1/I6/v/UErB83bmlfN45aHvkcFOcO4hcU/9Dy
W+RvyH/t/NyUymfGt91nWgY55+cWKt9L+BDIGb/fyfEV9VTu+A/PX5wneA75
p4LzkIPPsPV7/O6e42uaaHnH73h+DLh/k8gdf9Nc239yjg9ZrfWXEb6uFDxH
HgBwHnLEf0eY+uuqHPzQreg/wvdJgrf2+d6/df3bPLbP9/gN+xrlGf9hX98o
cuF/PD8tuIzyjN/Fbrx0/B3/5O+nAC84zNTvxw/xFFu/x++xbrxSvJ/j35qo
vFzwHP0n/aVy8Juon/F7KMUPtxD/g7gl5A+5+KW2H3w75Izfjg9ppeWfztnZ
Xj/2lHxE8LzOTvL7Q+Afa/8Qf/OYxFPRP9JelQPXrwfPJTyEjq+s16sxP4k/
cvXV1/ZXz9mx/nxGh4dNdf7ZfFJvX98gcuFngvwpzD/hZwL9kYXfwDfUz/gm
/aX1t3b96cdH+CDUz/g9zo2Xjo+Mp8pruP5Ihpv+9/vX8T1w+SJqX0Mblwr0
C+bfWJl3PL7YrzvSxplVXjB/Svhv4b0DfEbcVnjzSHj0gN+9yPG6ifC82r/g
t4XXThifW0t84EIXF0jA80NOce+E8Rf88/2Od04kHqryWTauCh5b5cDnnoLL
kwh/UW6CfH+t4/FVjviExCU0Hq9yG3dHPF7Hd4eNu2o8F/I+Nm4bM74nNm6d
zHA8v7YP+H6K4PqnhP8jbdw8sM8pbp0wPiOufr2LSyT9XZxC5cgreM/FZVLJ
N1A5+O0PHa8d4DPFXTVeCDn4V+FdE+Fh9f0aCP8svHNwfsa1wl87HqR+utvx
2Nq+PjZuCB7Wv5/EFySukCAerf1r4+bJLhen0PLNbFwzAQ9s2+fzCoWnVjn4
l4tk3QuPr3KUEz8klXi1yhG/eMXFLTReb/tP4/IRxxcpbqo8OeQUl405vo56
oRfeIPsS/Av0gsR7iB/fPwbOs36oL/hKPITKbxd8/kbweRDhM+LaEndIWD8M
tXF5iSN4++cGif/UcHEfiaP4+wGt3jwwOB/A2hV1NM+C5e5vzY9KWS7lEs5f
KpQ/i+chrsn6AeXBu6wg+xzvt0Ts/Lpk35NdGtjvw039DVK2zyGHnf8E2fe2
/tWBfQ67n/KXgv7pLX4A8ytqF9j8pYz+ax7gN/ktgX2O8uBdZpP9T3Yz8pOC
/ocdz/iO8uBnepN9Drupptj5bN/b/nk3sN/RfvFbkolkn/8vkT8pdn53su/R
fsqfC94fdtLDZJ/Drv2N2Pnbyb5HedjxrB+Gm/VZO2X7HPhRIXb+s2Tfo35p
V2CfY/5R/lHQf63ED2D7X8fX5h8F5aXdMdvn8AsofyiYP/AD2P4nuxn5Q0F5
4olibh/iEO3JPsf4ybilv8nPX6gdz/iM5xeLnc72+W0if0bs/Aqy78cTb878
ebGNu8fMb9O+aimHf4XzP8F7E0+s/S98qMrfIn4bfAn033nEjyuuWh6Y8l86
6Hszvw1enHhmlfcV3hryyYSPwGPIVxI/jrx4igNo/cBdvB/jM/gS+3xvf/xa
eHH7fI+/sK8tj+/xG/Y1yvch/nuG4Crx9CqX8VL5K8RvT0Zekanf8+PyvNTW
7/FXxkvlpcRvgy8hnt+Pv9hbKM/4W2j+I68N9c8jfryh8N7W/vH420d4bfDo
84jfvkV4cZQfQvx4V+Gttf+IvwYvDnlM/DhwGXLOH4c9hfeDnQV5LLy15kcQ
fz1UeHHI7X5VPb9K+68h8eOwj1H+RuK/C+FvIf5B+kvlXYgfl+dp+xl/5wqv
rXEa4rfBi0Pej/jxkRR3Yf34mOVFYtavhfZ3PSa8B+UBev5DeI1FNo9N2wde
5GLhSToTPwLeg/L8tPxo4S3AY1xO/MUJYo/CPmX8PF94k7bCo1xC/Al+P9/m
IWr5coo7Mr8yj+KKzJ+At0D++OXEX0j+vOaPzCJ+ornwJgOER7mE+JOzxJ6F
fcv4XE5xy8+JX+G4JON3V+E9KM9T5UuE96A8S22/5JumHwnPwfyG5Gsm4EnO
In7kPeE9qtk8P33/TsJr9BGe423iN+YJL9JVeJKlxI9sFd6jgc3DI371kJTy
zLR9ks+X3mjz/FR+h/AW4DGGEH8BPhI4+iXxE7IfIFkqPMoLxJ/0pLyAG4i/
AP+B/L5K4ldQDrh8IPEnJcJbgMcYQvzFFrGHYR+zf/2S8CbP2zxQ7f9FYg/D
Pi4l/gL7q/YXXF9C/ArwHbg+hPgT8B6U50ntz+bHbfw5zO8oFd6D8jC1vOSz
SnxG81x9/wov8mvhSQ4ifgRx89jGz1VeKL5IeddBfshlNi85kX0y2v+UFx3w
02fZvGusY5UDrwkHtX2UFw+cVTn290DPCJ+ucsq7Bg7r+AC/SY9pecQXj7I4
p3LKm0+Fr9X3o7x89RcgH2DztjUPw7ZvF+tBlaPcO4Kzwjd7/9HmzQf7ozrZ
vH7EK7R+8PFDRE/KfgSVY39Xb6tnuHzSTvSU8P0q/9LmTQfnaxayjymvGDjq
4yeCB99aHFI55U1jnSVUf3qcxTl9PvaVyL6tlO1XyqtHfgi173vhJz5KhI/X
+g+0edWp5Ss9foP/L3Z6UMvDvq4QnGP7HXn1xYJDrv3ztX7K2wefreUHSl51
T6sHdX5daPO2Nc/Dtq9S4nuqZ1WOcrcJjrr6/P0JlFcfnH/4lt0XgHiI1g++
fq3o0XecHlU58nnmWz2kcsrbl/Hx9hfiGbKvLhrv9JyWL3T+AezXyXafqNZP
cbu4PuEz7MdZdp+myoG7tI/Rzw8bl4oZv68V3AUOLyL8HWvjognjK8XNUsbX
chu3jBn/KS4ZM75T3DRi/HzXxtXi9wm/l9i4nfALPwb280q7T5jap3HHtA/h
O/wL2ser7Zf9yAns+raEvxRXTn5D+A37f6Xdh6vyVoLLlwpODyB8Bi7TPk+d
fxR3ixl/C+XvwT582+7D1PLH2bhYyvjbS3Cb9nlq+a6Cq/Bf+xC+fmDjppKH
7fFzq+A68lz4fEaKmwX5fdgfVGn3AZP9WicFznN86gTB1QsEZ/sQvm61cdmI
8bO6jZtJ+z2+l9q4nOhhj6+oV+zqtCHhP8qJXZ3eSPgOXL7B7vPV9sN/gd2/
lPAX/pn4ZUlXwm/4B6V2H67Kp9m4bPIc4S9wu9Lu89X++f/7/BmcewIelOOL
/7ecP4NzVrh9FdQ/LP8/ff4M8Dnr/Jf/6fkzct+99tMvPX8G92vjd/nvP/t/
588UuJ/u//rzZwrcD/g/Pn8mq/9/7vkz//7968SEM4qPZRYX4oTkE54+aGi3
/2oo5T9OuPxs+R6/4/Nv5V73+MyNM6e8U61awE/gXGDgH8tRDvWwfHzuuW0U
/1iOdY3ncPtQDvWwvND5jT3lPm/gX/7zl5eUjM44nxnnkQPH8rd/lz6Hxwd6
B/WwHPeJ73H3jAf1y/3jMX7H5V272sWufNOgf/E9fsf9t4fqz99/26PKjPZ9
c8V9N94ztlFceX/05vsjvwnmx275Hr/j50+Qca3ImB/n3nP3mG3PNFb/nuXz
aH6wfNXfTu+66Avv37Mc9eI53D6U+0LqYbnrt8bxrNdKrht4yZagffON3VEZ
9O8rUq6H1BOM362/uWRFB7+/nOWod17G/ES53VIPywfXu656q427ZRzD8vj+
Qvkdy/f+tu3vp/dsFbt+rhf072r5Hr/j/hsk9aId77/+1eDBnWeqfbxW7pV3
9dYO/Gvrzz1VZs9D3RwNcfUmrv594j25+bhHyxNuJYJnMeSlt/RZV+euT5Ir
L358bq2vqwfnY3foenCN+X2PUHxDfZAD37DOern1pOUx7ysy7Lu+s3r3Pnbz
fvHt0+aM3LJ2ZTQy9+n399O57/I9/vnztzEPH6bzZ9FfwKehH75wyj0r51L7
YL9ti77MjYeP/04bdcxNh2zrGMOOCc6vnXJRnSF110Rvbxt/8elTq8Qz3N9a
/1XSr9Cz97r+1vpl3NNltb/7y73X1A/yB6R8Wpmb3/upnod82JN1/njTnPrx
3VIv+9er3PxSO/7y3Psv0/Z9ckKTffp12RM1u6nlXfucvjt6btSIa2p1f5Hz
LxI37vsE/vWMXP80lXPlP0vce/j8kOWu/uSWC59YMLFXnbhH2wfP2NDK+/fu
9610XtnzjDdH56xZ8dykq1soPqI/tf9p/vWg+Yfxm5gxfqh39IfD3z9xSa14
UIv+fzjwVB//QjnoYVe/56d6f3XG2gf+2iBeI/MG84jnH3Dscpp/h1/xlze6
tTkkfiTXf/VS4CTk98m4Aue2ja8cu6ibz69DvUfl+m93dFqu/pcof6Jq7Nb3
9mhUrr43I9v+1vFY699x/4odUiWensPzL7T+BdfsnD/rkGrx3PbdTtp+/PZo
45SKLe/esUTr5/nL/nWvSe3Li/Y/JoafBj1O9acTqv7l0lcX7Bu/PjM5tfRA
Hx9PBDe/FBxNCD8HCS4K/ia7CR/dp547HdwPgfl2p+Aknx9Idk1SQvMP9WJe
s32M/CrM/7MIn6H/2wsOM/5OMHbXrgDfRgqu9jE46/EV8xX4yfiH+cvnmNvy
2eerPy/v+6qsw4z1F0H/MD4CV2cJzs4ifF0quDlbcJTxE/NO6g/2h46S590g
OMr4CVwUHIvKCR+Bq58Jzl5D+Hq04CbmJd+ve6vg4grBScbHJwRXgbOMr7Cf
04z5B1zT/FbCt6NkPi0VHJ5H+Avc0/xWwj/4l8Bpxmc9t0LGfwGN/2OCe0cI
DvYk/AOuwQ8dSPi2UuZrH8Hh+YS/VwnuAQfvIfwDfs6SeX41rR/g7giZJzsI
fx8W3DxNcJTxc57gInDya8JH4OoswdmZhK+Yv3/ImL/jBReBk4yPDwiuxoKz
CwlfrX++K4i/07nLcTnJC91v0MP4p+uD+t1nWvJwxv0+7rnNyL/28nIz76vH
fP+O7h+Terj9lh/YP6jf4ekytT9ZjnLWzvZyZxesSax/HfRv1F+ek5Ic+LpW
6mH9JvaE6gGuH/e5nyW/4/phb0ww/qOXa36l/I77d520qyLj/RbI99/I71i+
K6eP66p+ZvkQo7frBuM3I7deqsSwa7n8hTm8q0X+NfffsgT15J+/jcm/3kX4
sDXBc7h/uP+4/RWyHmEHc/3ny7hNyhhf4DbsJpaL/ZhY/5rbVxl1lefw/AJu
/qfUw+VXOn822unsqqB9+H6s/I7rrzrw1voPdW+odjWXF94prSa/4/6F/yh+
YyL2jsrpXjL5Hv88vpOdmkLuPpeUAEf4/i7gzw/CQ8l4qhx23zz53vE4R6p8
+0PN39vVqCH8X7Rf9cPRgiuwwwRvYshH5fT7AXq+NvQF5M5/b6n7V9l+5HPr
Zb5T+4tFbxenfL/gpk8Pfe2mg5vhfungfAJnt9SE3RLYZ2VPlT7725drxGLn
pbPd3yrHe+2WcXH2zAEq33z7smeSAfuL//tmcD7MCTm91wT+Kdmrm6Pp0r6l
Ge1z71dH+m13kP8D3uYRsQOmORzR8mL3pqNy86Zb+kOOJ4pV/rzo7/nOTkje
yOlvn/+/x/j9WxP2/7Y2/fZ3FS9Vj8fe1uMfX0+tmp750j86PPWKz99LC4xv
S+P/HpCek+MJfX6x9X9bp44HO0Llzu7YP17n7Bq0X/v/W5kfwJkKmh+tLnm9
4qWjmsafLXtm3w/qrYuk/So/W+xKrFNpZ2zbVxkd6exszbO288ev7120vqeL
XS33EgbnG7jx7wz/NJb1q/Jpgkfu+Qelu3I40FHrh/3t1uXeIP8H/qOrv0rK
/IJb9x8jDiL97/Nnr7J2Ycz4BX5c7EuxQzw+iT+Y9BMcLSX8xO9tnOJIap/e
iyj9gn/e/sI3jJ+4F2KMjCvjF/Qn4ps9af7eJu0FjpYSfha6n2W21AtcPJ3w
FeU6CY4yfk6R+bdF5jn7N8AV4GAF4Yus7/Qg6QfGN+AicLKM8LFUcG+L4CDf
v1fo+WMFF4GTCwgfxf9KNgsOTiT8Gy24Jjxb+iPhG/IGygUnZxE+Piq49Z3g
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
LTwT5Gts3mkQf6S834jte+Rr2n083j+4QPI+UZ7xgfJKNQ4IOeVNRtNpf+D5
xL8G99uIPYb2STxU+w/+FPIXil0epbZ/HfUP2z/I74R8J+2fgd5H/Y4P9Pwf
+svuI/b2JfJ/UT/jN/JDXzPryK8vyouNelP+PtYn5KNofwnPb16fg2U+o/3T
KX+F5/c6mt/32bzZgF8Dr1tm5qfPzxLeWvvX6Tl/Po/l//WcEG0/5XfqPOH2
Ux6klie7tpTX524bt48H0fjRvkXsw9HyRxn+XvNU9f2QHzXG5rn6/GLRy7tt
nqR/vrGLNE9Pnw+9DT3O+pt4m2D/I/w6ytPj+jW/5yvS39Cr4N1Yv0q+U2z5
da8/sV4pz9XnZ4tetfy6168tjN2+f1xK+t/a5ZonqfX3kvWI/fOsX8U+jS2/
7vWn5IPF4JVYv++2+waD+WP9Ms3TpfwH2PW1dJ845LSvIVj/hdYH8r0oD1fl
8Ccoj1XHF3oXepj1L/R2a5snS/pP9VrM+tXuby4O1v80wz8XB/b3YzZvR77H
P7//juJ0Wt7GB4uD9X2UtctjwYHU1l+k/ID4Iyp3caEifT6v/xW0/wb2OOR1
Pr/svtdG7ND34/xRyhsI1r/lZ4tjtw476Pu7uFoVbX+XXJzExzcpLz54P+wL
gFzay/FL5e9udP2h5e2+5+JY8plUXjdXn/fvnJ/s14fbl1c7tuX9+sa6pjwP
LY91i/ZhPx7kvc2+veLAPi6j+b2S5jfWJepn/xTxOJTPv/+4g/YP8w/O395L
/e/Hh3ivgF/GesO6YPvUrseiorFk30J/f2nncZq//vB8KN1fZvepBeVpnxTn
d4mdtidaSPYp7BrYuVeRfWv3t82NeP8r5LBTq5F9OtvaRYiDxyxv9YazUyvJ
PsX72Ty4cH/EN3YfW9A/6Fe2X8WuiGqKndqL7FNbvjIaQPYp5g/2t7H9ZNtf
Vc954PI9M/xLlMf6WE3rB+N3pd0HF7z/H+0+skA+yO7TC+RLTZ6mt2+xrqwe
8uvHruv6MfbbsPxRm6dRxHLSQynLKU8+aJ/NM2kZlIce4vUDeV3RMxn7E+JP
Zf6xfqqwuBrsH6+wuCz7qGsH7UN+D+snyO8QPVOX9AvkNg+jKKjf5knUDOR6
viXpH8ihZ/qQfuHzpVi/VFhcjvuQ/qqwuB/oH9t/DYL1Y/VCzUC/kF0BeyOo
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
TyH7HnLw+u2of9E+mscqh30Pvcbtx9/jM+SNrV4O7DN8j9+x/pxk1n2dIL4B
+7695fFpfLzfyfqxiuUlI+GRVI74wGHWj1A5xcWSc6i8DFQmv0b4F+gf6Hvs
32D9D/4In3eQfVNE/3j+lsz/w/OjOx8Y4/OXyhf1HHnp3576QD8zyqf4ZPm1
J/2u5vXnrUnwyfJh8v2wDHmh+qWcfv5SeaH+w356fLKcz2XIkmfdT4P8isco
D9iW9+c+/1I58s3wmdE+zQtkOc61TQqUr8goj/Pb8ZnR/tjmN3k5zhNL/zfL
I79mjM0vUzmfm5Xx/sE9apDjPgZ85q/f31uS8X56vn9++6lzbD9D/of0fyDP
4peBWxa/Avst5c9fJodeDfUr42KG/k1eKFA+Kz5i7Z/QvwU+06fKYW+1/N8s
79rfOcVnln3BPAnLX8iQQ38zT0ftT7L4Q3zfMkMO3C2Sf2/n9ECNGHKnF9Yq
ji7ed0/8H1Pq/+zyTi+8p/6/+73PL1tsfg/5gSqH3qD66fmor6homHne5sj+
HnJ//3Sh+ovoX4b+0Pqz9m+6vxeV8fkwj5nzWFA+2N+s9fP93IXKl5l8TW2f
yu15BeH9v/b3Klf71t6HOr7kUTr/gNpfyu0v1H/U/mD/nz1vF+0Lz6f89+1f
r/Xz+b00fiU8foWeT/UH5wMX6n/q3zLuX2uP6vyMrfxf9r+L/wT8FfNzGf6H
1s/5MYXK2/aE8VcbDwjjY/h9Vvx7EpVn/5DaX8rt/7n9h/Lcfssngt/k/EWt
v5T9I+gtjE8GP4nxK8s/ftnPp/rLuP5C/U/9W8r9y/4Fx4+mbdmv/N7i3cni
hR13/n5i1bjy77Ovf/KfPj+K9Ecp64/Sk6/+4yMLd0eDB5xW+/pP9wviT8Wl
2+9tvLZj3OCfAzZu7NUmztIfb5OegbzTR6cd9PLColQ+40ce+LTrC7/9KqLy
Og6sPy56+cH2Uxs3SvG7zYc+t2bO/Z5fKlT/Z18OGrNs7Xd6Pk3v+87Z/6ib
3lX5ZVee/cHHfbdFA39d1OKkE+rFbR8oXv7gTR4/O1W5+OyGNTZEQ4tnbDlz
dN24f5vVh8190d9/eN3ALzu/89uu3n+4/NxjO955cEz1J20O+bDbBwcUx4Mf
iZ898YT39PkDftVp3vrnGsS9q/U9uucVjYP9Q1+Uvl4+5uTieKD8jvHrxBtW
/PmK5Y3TJX+8peyAPy2P3v362zNv7e/3F8LveOvgu5pufa9qXHvlypsvHuLv
54D+eLl8bt8T2/8YLb7h5uIdx25SeWW9Ue3639w+nX3BxKcbzKsS7D9ftuvt
V4aN35wsPOW4W66pUj0eOvSa+Zu2vq7ly6TcRY+O/aBa36I4C7+HNRn67ccD
68ZP/P6utps+8vl7eF7paemAl15sEh95TpVTFpTV0P4564qZXRv9vW7a6eCW
LavP2B7dcP7KF4/9k89fnPl99/2m7Kml51eucPNB5Ze/3Gl5556145314r5/
WdMwPnl+lcG1/uMn+Z1uPPV+rZKVl31/3I66fnxd+bTB+y8O29hsV/Sncf3P
79/en1+0Z+sD74+b1Dodnpu/25L5Lx7waudLffzqdrf+/P63NmV3rXjSn3/y
4qfVWp/bfWf0/OzJU54+br942t4LH6zR1d/f+VZu3X0fHfFQnRNfebde7Orf
rPLra61aWO26Q9VuBo5Q/cmStw79+80tq8Xf3PyPHsc0WKHPv1BwYdj0mh+0
GdMo4C/PW/vcsb0XH5/23v7mvpfc1VbqP0Trh/3p8KNhkN83LNe+g9Ibc/0z
P6mew5uaWh6/r58rXzX+Lrf+vwjyfwbl2rk3Gpnrz69VfsD7Jx9yxYktU+JH
qH3fJ6791eIO3Z+oeGO9z2/dfdIVC+/6c830NsFJxv8hgk/DBZ++JXyCfqi6
9J3h37++b7z83F/1GfrsNxyfj93z94/n5cbP5+ccmGt/vdTh4DbBc29fvSX2
tO5Pyz3f3y8w5Kk7jj+mY/X46L5NVj30eYP4+H9eOLthr90/G9+/3HRg+67d
W2t+xSCZD5APdvWnB60b0Hh1lx+ikX8eP/2CBpv1+fNXPLl8+HlNdN4NKN9Y
Y827Pzl/1fJT2g6eP3be4t/mqKFtd9B+8GakP7V+1AT5YtKP+D3krJ/Qf9R+
fT6/X0N6v1/ncLG+ll8p+gryT+VvyC+S30Pu9EIVKr86suVXRz1Ffp78HvI+
ondQPtifnMPlw1TucLhDap/fQOWsn/B77T+pD3LoJ7QP9UEO/YTyaC/kM0S/
2PZ7/eT0XkOVv5LTcy1VDr1k2+/108vye8hRH+Tg1ez48PlHjWK8H/Qo5E4/
btHxnZzTNz+531v+Rnn8HvK+uf5oH9vy/vx7/G37r73WPzSHK8VaXvgEff9b
5G/Ih8jvIZ87duFfHjy7lpaPp9zzyq8OflPbd6r8jfbPk99DfqPoFZRn/TI3
hx/H6Ps7nDxK5Q1Fr9j17fVLH/l9Lzxf6oMcvFhPsz79+bTgxVA/2gs54wvr
F1nvWr664IWuD9ErkLN+KYQv+D3k0FM6f6Q9eL/hhF9uvD7R9k/P+RP+/Nlp
8jfK95PfQ941Z3f49eH62+9/xN+Qd5HfQy71pq9O6jnsqb3N4sXPlL+74/m2
Ki+64I1+H//msahofav/+vOnX0bNn//q5eXX1ND6030OLlrQe0+04srP37pp
52a8h8qB139LthxTa8T2aM/0umO7V/j9PcU5vfxD4uyb4vjwM4aMH73J27+f
SL2JPIfxP83Za0uiJTm9viK6/N7nr+l7tL+/7qm5H+68uM9L6ues2nXK7euP
9PlJ18xJ13+3sWr6m/8celezsbXiM/Z5sPYhT/r4+jM71r83dP8f1H+Z+lXF
Acc08vfrnLyqvGNl1Y+Tm5p0+WHfv2yJpLz3H19as2RDdX9/2qSlDz5T+qfD
9Pn7dvlnn6kddyS3Xjr8tb09q8Q3Nh415Z1H5mj9cZeeE19ZWJ5MfXpB5cMX
fB2cnzD5qDlXT93zbbTo27vqt5uxLFk4qu68ATX8+L90xeIhJXNXJeXLOlx8
1T+3RVn8y7Km180cPKBqfMRTZ/1x+tDlxC8Vp9Mff+Wvez+uHeN3kP+t9nWT
qhy/X9rnyvvGPXxtwwD/O7V5+rONv9uT1Bi6+b6/La8W4Pu8/lvGxBd/lzy/
seucP7/0Y/TsNcfXGDv0fW0f4i5Dpxz0+kWLX036rT752PlDPL+E8xX6yvdd
v5774ZWv+vNxGv3zqYWTlhSntUrj37w7fJ/4hjX3xcUPef/sFTeeev552f6T
7r62lrffD7zxxB1LrlsXLXm4bd1D9n8haf1fh33517b++Z3eGHHd8OXzkrOv
/uzOkkc3RFK/yivW1j/n7h92aBzlBDcfVP5gxzN2TF1QNb3z+2/+86Ora8XL
xs2LWvzo80POXbTyvL3jdql/slLmOeRdL7mv2WWrDoin3zbjzHPqNUn/evcx
31Ze4u8PKsnZm8uTo3L255ZI6tf3E75befeSwyc2Wntkh9TWvzMZXeV3HQcd
WDX+UOKokLv2vJUU5dbxxiC+nebw/vtoRq59axNXv9/fvSBnb69MTs3h1HfB
/iDXvlZx6+6dXn3g/pbp3S3endjsOq9/8Ps+4j98YPh8rz/2q9r188Wta8WC
Nyrvlnu/WmnbXP31Av2xQPwB1/4a8fOCY5Cf+mjplg799iaPHDS04ewzwv3D
8dh1d0Q9vkva5er/MZrv+i+x7dsafebGNfn9+e36/nBSeH+uG98a6dxTlp+2
7CJ/f9GcFleNOHtdtfTlb+o2ueU/a8dvlLee+B9zvX25UPxRPR/G9Y8+/51c
/26Onsu91/vJvFz9Hj9m5PzdpckzOf/320jqV/neJa4/4Z8M7jh/dbtvPP4j
ngL/ao7zR7R90D+iZ1PWr5A3sHrcz+8C8XX+nvUH5BxHYTnzZBnPD/wntF/s
xmgi2Zc9RK78GNnXYjeldzo7PrDfUb8r1x78V/D+0D9s/6J+scvTxWRf2/ob
B+fvQC7vJfVvCfpX/IqU9Q/k4mdF7F+hf6TdgX7pYZ5/sPSft69Rv/gFKesf
yB0vtToZSP6ZLV9ffvdd0H7oD/af0L83unHDOAb9J89FO4L2QX+wf4P6Zdzi
l8m/Qv1nObsxepXsS/Qf9Mswsq8jkfdzdnw8n+x31O/4r5ZY58H8y1p/aL/Y
5WnDjPUv7Qryj1C/2MnpKWQfW/xoGOwfRfnhEle9iPyrQusf/Qd8OzzDvha/
IDi/o8SMz5vRHPLPdP65dqGdEdcPfG9A/tMJWP9u3NK+5L+hfvEj037kP6J+
4Pvt5N+gPHgV9q+I9wzwG/MBfhHHV7YIn/drx/MF/E9Xae9Q239avkj+iZ8I
Pkvlx0l5+YzmUXnw+cLzx+87nl+fv0T4euC3w1FvX4EP7+948lh4cpWDTwc+
C8+uzz9L4iXCSwX2fyuJl1wqcY4BLo6icom/RLMcDx/wQ+DbhYdPhYfX8vAP
Vro4iOI45GgPvhd+SOXCf8QSpwnwG/GYSyQO1NbFabT8CcL3ox7G7/uF75c4
QFzfxQHIv1mPOAj4IWp/o1jiLOCHtH21JF4DfJc4jpa/VuItEoeJFrk4jMrH
SjwF+C1xFj++Es86zMW5kt+4OJfKwcff4Hh64Yfm6/uXCt8O/HZxxL2Er7vA
Y8fCY6t8q6yvobK+rqX1NV/sX6xjxvdC+L1I4ingWRi/EU9BHOQ5F2dR+Rbh
0xHfZPw+Tvh08ODCs2t5/H6JrHvhl1SO9gxxvHoq/JLKYde5/j808A8Qr3lB
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
71uhv4mfh/2P+ssofgD/BeUnEf8O+92W5/1HfvxPJf5c7Bqdf8w/9pS/Efdn
/vQxse9QnvlF/I3nP0T8J3AVcsZX2N94/nziN4GrKM/4it9D/jTx2/j9DSLf
RPwq2oP5N4f480L5e8gvQ/2/Jv4UvAvKM74Opf3xW4i/we+FJ1Z7U9eHtOdq
M76eP4L9j/o5flBD/h5uxtfz77Dfh5nx+Un+k/yN/mtN/HnZU6XP/vblGql8
xm9vG3/x6VP9+9H5W7E9z2RzNGvKRXWG1F2TyGck5VNbXs+/SjfR/YGD611X
vdXG3ckg9xmtfP2rwYM7z9T24f5a+QzwcYTc/yyfyTa6/1PupUxwPyXjI/x7
wcHoMncPb4B/OB+tnN5f7tVOcb824x/uN8Q90Yxvg+j936f3B769Yu5n9fOX
+3cj9W+h8UV/wD4dSu9/u7lfO7xftdD4y33Yuj+G24/7FtpknO9L529l3K+G
83HD+19wX1GrjPsZ7L1CWeeL+/Nj3fdz6XxcnNu5KsDPqblyG+T8WL1nQ+UT
5Hv5DPAT57VOyHi/F6h9Gef36v0dLfP2X3D/WmyfXyflc7yyxif/+TF6vpp8
P5XuT9Pzy3D/HPW/nrsZjE+h+UP3SsnzUzpfe4OeY8nnVxaaP+Cfs+5/sOd/
18k8n5vPaYRc7jeOZN3FpfI35MBjizv45+83tucw+vtXcG9yn9w92/vFbp17
fh73l3foenCN+X1bBvvXz9w4c8o71faPu8vvGF/t/bxb9T52yOncxgBfgb9y
bzHuMdbydP5WKePv7vujN98fuUfwdZ8YOAu5+1xSBvzO4gfkHtbY7Uf/mNrX
KJZ7VYP7qcoFf2dn4G8Pd2+sxs94fe2R/pL7WWOO38p4Kj/g7rn199vhvlqs
f7lnWOVyv7Dc+1wb9wzr++E+6eYZ5XHvq9zLGss9xDx+cr95kxj6HPKV7l5Z
5QdwjinVnzzv7pWN5b5ZrV/mF+59Dva3y/3R6TR3767U3y227Wsk9343C/KP
5d7dtFzGHfMAcoy33Nsr68DPL+xPlHulcc+0yuXeYNy7Hdivheb/TncvcWLv
z/X4K/eHpzNlnck94rFt39ZI7vWO5T5l1g9yb3HTeCydf9fL3ducuufUxD3n
Wv88ut9b7klXOe6dlnuh48/cfdFav+vvI3Eve8zn18n97soPYD5Q/bi3PR7r
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
/hvWobYf+vebRPFL5HPof/d08ksMJyP7Ymp5/WxyfB71L/RrRfTcHl1bWnvB
LVfcPCEev3kyfloff4vOUzh+Hh+U/nXZ39fZ/Dato/rWryy3+9ZG4wN/zwv8
4/H+RPZtKx2/fv6euP52GX+lw895nK9DNH7gRR5H7BTR2W+Tx0E3FfiXq7PQ
/+7pK/NxS2wco/bJN5Z15ujWb/G/6/hXZ+wfKeI/5HdfyX8K9/cSZ/TyGXl5
fRBH9+dXgGvwX1Xw5/ev1Qf75//l/G3jP/jrFMl/RB6HcVbvX7K8fPPftsa/
7OrfEvp9EvUfIq+R35qfVyfj11vGryH9+C2T18jvByV/Tsen8v7hI7Iwj9/n
t+E3ZJ+Xyl/L28I/nKp9GsrfbaUTJL+O+UI/GCf5m8gz1kHl/cNrnPycLvlz
tq8jQw9T+fu+yWvk9wjxj+4V+LdbJJq/F/q32yYaH0BerjL5iTwN+Werk78j
xD+GvH7Y5Lfmh1rczuXt6v47y5t0/K36DfIa+b1O8jefCuRr90TPJ3H3N9o6
0fzY2QFeVFXdJvkv0A03Spq/gT6JfqzxEfjnZJOvlf3Xa5x8MzlS0vr4l5GX
Wh//+kyTt1r/y2B/o56f6/bHRfEJvg/7Vv0L1GcfrOIb+gDyEXmp9KLzF2gf
+Ys81v5ZvwviC2uQ805fUTryUfevhvNTnQyV/YmsP+Sb9TPR7yvKL2V+kK+6
v5X3kz+PvNP3kxc2yOSljg/7d4r29+DfUXzVffm1sr8JvA/P1eEvsm8T5Q+X
X2v8o/2jPnzTQ/Y/Uf9E8+9cJ/Fh6PCP7n+h/ZnmX6qX+Fk4Pl2TEC/+5Xz8
AvtzrtFrzL+0Xva/UN/8WJF+wPuvDuz3vaP+byg4Hwr9mHNWzpf9T9THf6P8
w/un2/zo/hfq4x9S/oFuelSi5yfS/i/MvzNT9m+F+Un1Lh9Cv8/2pTOPrv5C
o281/86J4v+gffIQdP8R7ROnVvtd8lZLoR7o7ccwb8TzR5i/gX3lz/+ycyHM
vtjucAA6eEZ8Vs9HIn8gPJ/ha8G3N9OVhp8T5fwp9vsZPmR6PhL+ENa/nt+E
Xxz/3+Gyfwf5Pz7047r2yd8gr0LPbyL+jl6h+h/x+2ctrv6x6A/kX86xeT5U
zo/aqwH/G/Hb3gXxTTs3IDvZ8k70fCjyXsxPFul/5AeQd6Dnk+G3y3F/n+h8
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
K5CvNf+3fNX3L3LvH2zjeZbxP98L/QHDC/DD7Bc/foY33D/HfXTS/0z0RDd/
6G+m50Trh/63z/XaiM7/u4Z6qqOj35teH/mnGRfT8yL9E3zvFNoRsv5a2r2F
7SK66UWOb7V99H/wX+nonY8G68vT89+sjvtLisZnr4Lxwb7pmI9TRP/I9BnT
TyJ87mL6zL22DlS/qQ3XX3S+Gu9jXXUX/Rx9eWwoJ5Kw/ZYJ9rniG/qS6VER
PvP/fBxWp3/J9cxofqvsryH8vL17/2/+PeD4C/8C66wyfhff71gZ358U/WFK
XTi/Xr45e8T4+vTcTpH2vdyt7P+od/qh4jPrcT/jzwi/7Q/9WNt/zL4f+13p
zM8Hxp+V7ZeWCX4jpTPeNg9F+oXTD5Ue+hXaRu2H+prT48R+9/fD/7vjy/PI
zY/EvhD7PtLPQv/V3+qUf1jv+9j6V/6oDevXPCL1kV/wl9onvA+9TO1fymsD
+e/9h6Z/Of/Rx2J/5vLvXqcfKn+ewXq39a/2OfwS6u38+fWL/qT6J/M3Jlh/
ik9u/pLH5fug2zr5lvrDohqlsz55D/SG7t+tDep3ifTL2gbWN/8P75dtXlh/
otRn3eK/rOx/apwxPkX+1SL/Fu2bnCsdIP670L508jV6P+tvb/GvUZ9xU/8e
9ENMvvYQ/yLtdwrwO5bfHYPv8uvz4WDdx/cjh+t1So3S9wr4t3Ohfyb0j6t9
7fwm0ftD/q4vKR3cNlyI2sd+EjvN0bGXWH+Vvx+7JR6fg03vyHGwabR+ups+
a/pNovpt6L90foBM3p+88Zv//ubfopqHg/lgfKoNF1tE/uv8F/u33s7b9/xD
PMRwDT+ka/8s7BX8lGI/4f9g/Crzv78fWvE/1O83R/E1/s97Kt+P3jIxOzqi
h/pMVhPtbzK8YXyUPsv8Z8gNbZ/v5V5vrb8yLI/kI/YRcZ2i72d9HSb20yRZ
l7p+kF/Mb5XEv9A/wvvD+YN/GiWsL7W/9d5v9R8yPnz/KrFPBwfxqc9L54h9
DG4x/jMlfsP4oB9+IPJjT8G9vUS/pb75uRjniB7Kp12j9inX9Y/dtavhk8Yn
awO+qC+p/6mh+Cf1JxeMfxj/2Jyqf4j6oZ6r/nuffx2uE76vY7LW/AsaHw3j
prH/Dv2R8dX4ofPfmP9ksMQv6Q/jp+sf+4DndP2ODe1S97xbn/a+s+396r82
u8/5cdT+sw8dG46j6n8tFR8i/T6PbzxXV9l+8vX0+3l/zfxfPDT+wN2zF/uM
Oe9P9zdLlL6oXP5h6aXvbE/+Y3Kbgvo7ZKOO+1nzy870+XPQ8/JVqbUf1aec
55Q+0trlPUX9f6mg/5TzXOX2V6UvFfTPfquKxk/u8YreT96S7k+BLvdIR3TK
df8KdNnnHdEp1/MD/9333yPvt3VXM9fySp6R/G3zJ9SQ151K/gntyzmpQp/C
+e8l3f/6bceffVJ6Pxp800D/6xrqP3mTen4AdO6f0/zKcPw5vz2eP8o1PxK6
+HHk+31ehuqH1Jc4fAG9cXS+P3TREyI65Rp/+nffv6e83+IHNci3R+T7cvv9
WfzXxCmTyu23i/Sz/HeK0wvV//Xtxt/n3ah9T/yjgf7Xfdv+q/4p49tA//Gf
fvv5MzwFVyP9sreVz13+x2Wjz9wlO2P2umarXvH5c9TjPSp/oCMXdHzlvYnK
D+hhu/xF/c/a/n3QunV9u7r2+xidcpUf0KvHfvqrDh/24Lns27YP/dy7J7ze
ZECbZPkHQ25b+uEnUf/ftnKe0/cP/v5+89Y82Mjqryxpfcp5Tul5edvofHTo
lPOcvr9fkwHf63NBh+h+Fuafcp6D3tfoV+wyfMObgw9KfnlCNujxx/bNlE75
KHuu8vhVRefPhP1fU+I57d9TZ0/6S9t5jSL5URP0v717Tvv30t437rr51XbZ
E7PnDjh2n07R9021cp7T8asrt7spnTTijCN7/NLffw6d8qfsucrjv4895/df
9w7q753xXDR+T9y+z5QO1cnoXM+Kxo9ynlP63AkL/3D7aS2SEyffPPX7ez8f
rZ9TrXyOPaf9z/miXeSfh045zyl91PTmr3e9rX0UX+P7Kec56Mcwv2V8OiIZ
8Onz3/n5jYe7+iWjn2jlPKfvv+74i39918JtkX0OnfLr7Tkdn/+/+NbOcKep
4ZCuP8rbCT71CebnrfTJTTvN/lX1jtH7p1n5D+w5rX/wHS2PnfpKp6RfeZz8
/ibGn/Lv2nPQX1rY44v/nNTY2t+WfvHnpy7749+9fb/fGyfs8cTCqsR+s7t+
+3bPR3/6T0cH18Nx4c/bt0Yv6fgNGXTCDpe9vVPCvKh+YQ0V2hc2nm58VT6M
tvfmfNM+23jAg6vm3Orxt6HvG/yjqr2OO6Z1cv6Fp73+5oAtpS6/rV52+5Ve
/2bfGfLhh7ecvvPhV77i6v+4esamU8a3Sg5q9JPT2jX7uHRq15UHzX3Mn6/U
df9/HPr6btW0nw65K/nbscfo+crts0sHf3Dgyz/tmRmOuP4jD94b++zs246P
79d4oYx3/t6SFitWXPWTYX7/UH+TB7Sj8iPHza/cPpeXLr+q+vMj17v6r/36
6rrdfrOs9P3Ll//ugmUdslc+2nDKNQP9/gnwvs5wW+VDLk9aOflw73/e2G39
G97/Sr361uO6D7xqn0g+jC3LpV2cfDjs9EY/eKaumev/wh8cdfUljZomS7a+
OHXUxI3psOGXzF+/+Vn3/oP27tSp6YxPS6dcMLNn+z+3yi4/a8VjR/7G+98+
b50M+MOqdsl5T+y37MA+OyTHzW80tMV/eP2ffcEzP+u10+TtLTLTH1z9Nq89
Nmpdx60lq5/95oGBZw3cR89PWpPWmnyoWXH+Z0d93sp9X84vW9L6zb997YHa
b+yrx3Z78sDzvP7x4FOPTP7LUTslj77dpMsZvb4oPfH1Obc36+nlE3mv1+T8
lc7pWnfj8j/685MPKeNB6yTnq89KefsbXf3FLxzw56s6NUkey9tPV1/1P72P
aLtc/bvZ5S3eX9jk0gOyUJ/cWEJewLcqX9qU6T4velOZP9/z68PkBTih8mVo
ufxrF0fJceQjVz/HvW7ZmR8+eGS/l462/u3v+nd1eXznp3n/9zD8bu7o1xou
bTvugoU3/q55ZJ80XvLy6M+e/Y6TL6+f8f3+w/+21n0ffo3dXjt+/wuO7RTZ
J4bLTr7k4+/z+3J6k+T5fH7Srr3uW/DcGh/futrwbajh23rBt+Hl8i2l/P2t
7fu9/dxrwC7v3/Fu22To/TccfUSPpknvv5/zVLu+fn8cfrfnzS+Tt+/3rzWE
v3uuHtRh5SFflqz9bMzvJk4/u60/Hw979sP1u+/Ts1eXbKjNczj/1UmT8jh/
mR5y8rCJ49d7/Lk/3XREi2s/dXJl2/RWE3ot8PlN2Y57Vz3Tb3tp2YXvvnDl
FxtTlT/Vazr/1+/e/qBUdfZzJ77543tKHR/65xPLLmnm+j+1ts+o+7/u6L7r
pb/OfuXzh7q5/r1l7c6x9+j3I/eyuf/44if9Hy+t3PqD69cc5v2Tr5bXy/LS
/DJfLi6N+NVDlwz4nt+/+ePfD7+x44QWySVzsjWfrGucnbzj7Tvs/8fofPrk
fz5f8+rwnb9MH/vngt2OaO/3z125yyFffucPm0rff392j/rGb6ZW333/1eeN
fvrrPo2SnQ75e/8pPT5Pr+kwbvLLd81x9dk32/fxVYs/brprMmnJ7X8d+5uD
XP+eXrrvTy76+5bSlAteGlYz9/3I/7V010tnDh3k5c9R95/66+nDl7n2H//L
M/V3nv1RqechfSZNXTg78n/NuHfqf3/9pr93com1B/25DTe26T5jafr3w+dc
PGX7htKica3mDWrm9Z/mwzfe8qdlTZJ9u/7lnXU/2x6dD/n7yXs8e+5LT7ry
E1cef+T8Yd4/1O/CWx64c2S75P4dLq1tdPROkfw5yZ538uejuf+48Em/P27i
up5zfvf4V6W5Azfdlvzkk7T2kqObTRj+mhuf5mOTH78yesekw9/vX1i7uDq7
fNUtSfUdXn7ef2e3Vvvv/Gi6yxXHfr740tWlLv910Af/3U3Pn9tampzPe5ru
XHvTyBYev8+4+J1f1tz9canzc9deOnrZvNTal/pr0vkftjn9pi8/Lx2Tz7Oj
3/TZ2t+/cXGL5Pc9Tv58yjONs6UPzCvt9ZXffzHjuhmnnN56l6znz2/peP77
uyV/uumIDfU/9+dvuXsdF6048+sHtqYrbL1Dz/FnU+moMu4sS6191//xjX7W
Y8jujZNDy+1/kS4u49DrkfxZnPvFk5rvTmr/4WH7+vkr4+cnpXllXF0R+cfA
V8oXm58deo7v60pvlPv9QuQfa9O457svdWnh5FL+/Jeu/vTy+HyY5v6Xz0p9
y/3z5wt067Xfk7+9tVP2crn/nZOb93plUsdLvf1z1x7D2z11ctPkh3eP3bTv
iV9H8cnl+Xi68v88q/uAL4/z/tPu5fZbJ/n8tIjkTz5/zVz5vB8sO2Hpuf58
K6MnC0wuPWh4G/b/q1JpwuobSr0/Sefm8+PGd+raVrtc/fsdkmyvi649bXWT
7LnZXSb9x1wvnyaW23stzeMaG0v5+/V+yPrSQtNL5uTz49rP9Z8NpallvWdJ
au27+ieYfH3Z4iZzcj+Yez/2RlObt3N7zF/Zfa3Hb7MbnH2j9oPYjVH8BHnA
r8b/zG+FXyorkh9h3Ia/b/Rf0+tMbmYan2rIvjk113uT/XI9OFX999hcr08W
53p+qvo98if3u3yVqn2A/DA9PVP93OyWzOyP6P4+06ud/FD9epDVM79WdD/a
O/a883+JfTbC9PIvcj0/O170e+wyswOzbmL/mX2C/yuyb0yvd/aN6vdm1+DX
iu4vMLvPnz8j9t/5Zpe0ze2MVO0L7FazM7OhYl8STzE7MdtB7MP9crs1HZ7b
sdlAsV+X5nYVdlY2XOwr5IvZedl9Yt/tnuul5v/akqp+OirXy5Mrcj29pPo5
8iW3D75Ox4j+3xB/DTP+Nj9BukH4G77GfzJP9HPilWbnRPmnL4jds0H053OM
b83OifLHQ79I42y+2G/DTK/+Xq7HZ0eL/o7d9lBuJ2bTxD40uwb/WSRfPsj1
cmffDBH93Owa599R+XJZbhc6+0btQ+yOPXI7IVX7wPqPHZqtFftze24X2/xt
Kal9bHaf+b+6JWr/IV/MDs0+EfvzBbO7cv9a60ztY+xm0yOyfcU+Q76YnZgt
E/sQeYLcUPmh5RrfqRW5UyQ/RH45ev6b1UHX+HtD9WvNLw7d/Ohevyvj/S6O
nvt3vP8O+XGF0c1/5r7/+PL/V5bC9v37Xy7Lm9au/dy/5eUP/rNrGD/xzyNP
qK/yB3kBXeXLbIsH0L6Nh6Mj165kfsr4v6ej9zV5EL7/X87fN7wP3/8v9+eY
3BgVjN9K1/8zLd4EPfdTenr+/j0T/BQaX5qQz1cGPZffXn/F/qB9jZ+tsLhX
2L6fv+p8vtz6zvWH1o7O+UHXBuPnz8/L9Zo27vualu15r5/m/NrZ0f9S1jd9
/Av5wfoz/5jrf/cyP6/28y/4P1z0w00F8uPiAv5EHlA/On/R8B66yodm+fem
yC8bD0fvY/k60HN56O078Jz2Ff8bio/YeLjx65KPV6R/Uv+OXP909Fye7+rW
n+UXufYfyOfL9d/m0/Uf/L7c6Oafcu3fY/ruyGB8/PzZfGXU/5H50aCjT19m
dPRs6NgHiuNh/1o6vaMA35EDEZ3+0S+lv2jyx34j+XG44S+4G/XP8BvcVrrh
XXKC4bLSwV9wV+ngN7hduf32xDXcPEMHn8FlrQ8+g8tKxz4Ad7V98BvcVjr6
Oris7YPP4LLSwV9wV+no/eC20u82/AV3I/vS8BvcVjr6Pbgc+T8Nf8FdpUve
QkQHn02OReMH/oK7Wh/8BreVDj7PNVxWuvFFsqmA/8BvcDuaP+HPkUIHn8Hl
aP0aPrv4ttD7Gv4azkXtVxt+72+4rXT84eByUfy5KD4N/oK7Uf8Nv7sabisd
/AV3o/Vj+A1uV8a/+hK4rHSzt7JzC/DtTsNvcFvp4PMww+VofM3+k/yfTMYv
U5yGDj7n//d5stAtr6KUhPkVjt7P6P0K6BY3TfCr4Gdx7Zt/Br8Mfho3f4bP
L5vfBT8MdPTfw83vgh8GOv4VxVno+Gck/8jVx7+iOAwd/JX8I0fHv9Ld/Cr4
WaDjn8Evg5/GrS/DX8Vp6OjHkn/k6o80/4riOHT8M5J/lEj/S8PMr4KfxdHN
P4NfBj8NdPRn4vL4YaDjX8Gvgp8FOv4Z8grw04Ttr0nvMb8LfhjoFvdMqs2v
Mtr8LNAtbpjgl/mR+Wmgg8/Xmd/lHPPDQEc/wq+i8qEh/oQv8T/3l/wW/CuK
09CxZyV/ydXHv6I4Dh3/jOQvOTr+FfwqE83PAp2451Hml8FPAx3/iuI8dPwz
kr/kvs/i7pr/6dbn7uaf0Twc6X/pQ/OrvGx+Ful/gl+mo/lpoA82/0of86vg
Z3H8Y/4Z/DKWz+D9oyYfNprfpa35YcL5/azU2fwq+FmEnuKXwU8Trs/N6T/M
71Jtfhjo7cQvqPhv8kTlhPs+1ldYj784/7Sd5J+id0N/RPIPc7ze19XX/Ev8
J9D7S37ngDzfMAvb9/4Py5d09BckPxL93PLMMs2/RB5QX+WH9cfRVT6gd9N+
neRXWl6VGx/NvwXPw/d7/J9heB2+3+P7I8iPYPx8fiZ6O/07U/J3f5T3x71/
hfg/bL4cfazk16Kf0776X9C7w/Z9frHNl+v/VMl/5dzfcPx8/m2ut7zlxne6
5B/meHt4YnmM2TzJv2Q/NfWvkPzOnnm+oeu/4ve3xX/GR+VHO8PzkD89/lt/
HF3x3fIqXfsnSn5lnl/zqhu/YZJ/S/wNuuK34ofis42HG79DJD/zh6Y/0r95
kr+b+5+qxX7x8Z087nyE+75+kl9r5we49ttJfq/lFbv2E8kvbid5+Zr/in4O
/TrJv0Ue1YbxAdc/jRso3fzvKX54pYOf4KbSwV9wV+ngK7iqdPAT3FQ6+Avu
Vm6/vcNVpWtcVOn9Je6pdPT6YYabSgd/wV2la1xT6bMkbql08JN9D5Xfv7fL
n4/sL8NPcFPp4C+4G82v4avZIVH7Lxp+gpuVx7+Rw12lo1+Dq0o3frP9N0fE
dMNfcDfKnzN8vdJwVekNxTfBX3A3Gn/D16sL/NPtJK6p9Cskblk5//rVFNxU
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
Pth1ij/nlf+ecX7liRXxoaWOn6O3t+8L/QO6/1L9T/z574eu9vPD8n71/1n8
wdmfal/y/Xy32rfEe/ALqH/A/HVJaMf5+I3hIThZOl3ki/i/qrBzoFNvqPlN
1L9Fv7EPNX6Df/4Dw1Hlj7Osf6dZvxpJfJLv47vU/0T/w37r/LVMJks/9fv4
rnPFP0T/6fcH4p8K/U/EYX188tGgfy0j/bAh/8kZgf+qeXaGxA/xlyP/NX7J
+DwSruNM23ftin+Y9Ux8R+Uz69f0uEh/4/3TTO4XzR/lj4t+kP9Ocf4NtZ+R
3yI/I/tuL3kOes38Xzw0/sDdM37b/n3QunV9u7r562PlU2v7jLr/647JS9/Z
nvzH5DZRfZuwsS/2GXPen+5vFtWvHvvprzp82COx9l393uF73XPaftiuXx/S
/wj/eD/lPKf1Rx33s+aXnbkqsv8bap/+P3X2pL+0ndco2l9Ofcp5TvvXr8mA
7/W5oEN0fm3voH61e65y/X2SSSPOOLLHL/eO6lPOc1p/8Pf3m7fmwUbJ8g+G
3Lb0w5Ul7T/lPAe9r9Ff2vvGXTe/2i57YvbcAcfu0ymiT7VyntP315XHZVOa
93OnqH+UP2XPaf/OvXvC600GtLH+fxLR37ZyntP+XbHL8A1vDj4o+eUJ2aDH
H9s3Uzrlo+y5yu+vis4Hgk45zyk9H9e27hz0yvW3pjz3765fynlOx3fU9Oav
d70t3h/P+qGc57T+wXe0PHbqK52Sfp8+/52f37hzVJ/y79pz2r+5Exb+4fbT
WiQnTr556vf3fj76/lOtfI49p/R2hh9NBT+YP8rbCf70Cdp/K31y006zf1W9
Y9T+NCv/gT0Xzf8Tt+8zpUN1Mro8vq9G8085z0E/Bv5e/sdlo888IhlQHqfD
Xf9KRj/RynlO+3/d8Rf/+q6F2yL7DDrl19tzSs/xt13kH4ZOOc9Bf9LkAt9Z
IB8cXfXDlwzXRY5UQZ8Y4naE38gLkV+ufVpy/RP5xHqokXUCfaTxi/Rf10ci
fObeP8PwXuUAdP7POKt86G94H9aP7u927fcX+QBeQ18h+P6C4TH0qYLfA0xe
QH9E5At4D/0FwXeeD/vn5c/b1h++/0yRLz8yvA777/EdPIY+VvAbuRL238sX
nnc4Kvhea8+rnAr7/4lrX+ULeK9yALrbNy5yJJy/tlI/vn8qlONePuj6rWzf
tnTfN1rkwxWG99Qv8v9Dv0LkA7gOPRF8b4j/epq8cOtH5EtD/M/z0A8R+fND
6w/fP0/ky3DDa+qPFHyfa3js9DDB78TkBfWni3zpb88jp+YJviN3aP9EkT9X
W39of5jIl7GG99AL/FeOfp3Ih3aG9yH+eflg9p0bv3YiH5D3Zj9E8uG/0k1H
tLj20zR7bLcnDzyvKrIvsh33rnqm3/bS8gvffeHKLzamSp9j9f5k7Sjd5JPT
T5T+lrWb2nuUjr5k7Ud0ynlO6SeuPP7I+cPaOtxXOvtvBthzLwt92r1T//vr
N/3591rfnXtvzyn96aX7/uSiv1dnU/7yTP2dZ+8Y0RfveunMoYM2l6b8c8Fu
R7RfHvV/stWbbe0oPX/v7skxj69a/HHTXSP6E9buUnuP0vtavWnWjtKbDd94
y5+WdUv6X3jLA3eO7Bq1f//kPZ4996UFad7/tVH7A6we7Sj9pPK4N8ry/jeP
6I9auzfae3R+SlbvRGtH6VPK9Z505xNq+5xLeJM9p/WXlMfN309Vuf7WlOeU
PuO6Gaec3rqZw32lU85zSm/duOe7L3Xx+elKp7yNPaf0Ewx/szKu7RLRp5bx
bVvp/ofu3/mSEeui70ut3g+tHaWPa/SzHkN2b5d077Xfk7+9tXW8Pqzd6fYe
pXezerSj9BU9fv/He7YckuTPHRy1P7HM/x+k+fh9FrXf3erRjtIfKPfvy3Re
15HdfjS0OqLPtHYftPcofa7Vu9/aUfqqM77ff/jfljv/u9Ipf8eeU3ouz5o4
u0DplPe355SO/Bk66IQdLnt7p8g/1dPkr+kJmdp/+71xwh5PLKzK+L3rt2/3
fPSn/3Ty6RxrFz+Yyi9w2fxH1i/+Npo91t7ZzxsPeHDVnFu9/tmQfl/felz3
gVftg94enW946eAPDnz5pz0d/psfxtEpz/XQXbLDTm/0g2fqmrn2B5k+Z36f
SP9/x/RP5x+65fSdD7/yFff92Ae5nv5V+tLlV1V/fuR6R9+v0U9Oa9fs49Lw
6hmbThnfKhvYdeVBcx/z5xst3fri1FETN6YLf3DU1Zc0apoNH37J/PWbn3X1
z39iv2UH9tkha/vaY6PWddya/uaBgWcN3Mfvnz//wtNef3PAlrTr/v849PXd
qrOhdyV/O/YYrz+desHMnu3/3Crbb+9OnZrO+DS9/KwVjx35G+//Pvby5b+7
YFmHbPGvr67b7TfL0lc+2nDKNQP9/swR+fuTL1onA/6wql12/PxGQ1v8h4+P
2ftLg39Utddxx7TOuv22etntV/rzXerM3jK9O9LPa81+cef7rjj/s6M+b+Xe
D37ndkOr7L7/vLHb+jd8fOK9sc/Ovu346sT08kh/n/lZr50mb2/hys1/5d6P
fp/bVY2zHVasuOonw/z+291eO37/C47txPqN4ouXtXh/YZNLD3D4r/Yz5fhn
5uX6lFtfxl+J+X0i/d/8Cf7+sa51Ny7/o7/fgfIh5Xa+TseUn//I259lvvys
lOtnrbP55fdvdOOT2+ufpYZD2b697lvw3BqfP6J+5dCPsLE0zPgbu2aD8PfQ
+284+ogeTbM9Vg/qsPKQL9Mxv5s4/ey2/vyyx95u0uWMXl+ki1844M9XdWqS
rb3qf3of0Xa5o2/f/NvXHqjtYu1vKeX99/bfmR8+eGS/l442u6Cbjf/+jr57
ef5am/9oi9kJfv/nqPL87ZFdUW5/fim3j5q7+sPy/iffG7DL+3e82zY7+u/n
PNWur99faf0vPfTUI5P/ctRO2bSvz7m9WU9vv2477oKFN/6uOXp/FJ//YP3u
+/Ts1cXZDUNsPYTzu7nUeMnLoz979jvZsrIcWSvz18zmp11kP7xguOzObynP
j99fSXmbcv3G2Sdl+nuOfo/JA5UT0JEvw0P/oaMTPxojcsqNv60bWz/R+elV
9oed/VIgZ7z9PTLkT0c3/0iicgI68kDlBHTKVQ5BP9XkwQqRE9AXmzygfKrJ
ibD9audXMP+Sqw+e/9xwvpvhvPt+kxfIkUUmR6DfavICOdLG5Ijrv8mjg0xO
/djkFHTkAXLiNZMT0Dsb3p9ncmCQyQHoyAuVI9CRRwNFTkE/xuTBIyInoE8w
efC0yAnoyA+VQ9BNvpdmiZyA3sLkwdMiJ8L2t6YrRA5BRx5cLnLCzb/JA5UT
0Cnf3eQQfAJ9kcmDsSInoI81eUD5UJMT0CkfZrhj/iVXf7Ph+XDD+ZHivwKv
HzUcX2I4Dr2nyRPkjOmxjo48QE50NDkBfZ7JqyUmx3qaHIPeUPwBPL/ccH6k
4Tx08Bocf9Bw3K0/kydnm5zpb3IG+lEmD4aKnAjnt01SL3Is7P/WSE5BN7xM
VE5Af93kAeVNTE5AZ198vcgh6JtMHrwociKc//dKYXwizh9fbHLI/FN+fsO4
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
l/0ZrD/orENdv+E5Mt7/wPqjvuZP8zzfv1Tyb01vd36GemsPuslT5x+otv5C
P9vWHe9X/YD1Sf0h9ryuT+oX6QfQ+0n+l/pNdP3NlnWp6w/6rwUnlc46vEnW
H3i9VnBM61O+UtYH49L5uXxd1Mv6he+2WvlCWT+My4WC00qn/CJZv4wf+KP7
o+n/EMEp6JYXlTa3ddFX1i/9rxEc1PaXBPvY/Pp+Stb9Elm/1FecrDx/Hie1
fwNtXWl+Yrh+6tNBsv7GHv39g5cv6q73K7j+8X+eU/0zX2/tXHxL61Pe0Z5T
+pi83eSjQ45c0uq0QyM68X3iAkqnnvWvoP/4S6fUFXxfNrGg/cPLf/PqOOf+
/26/qkrpHY77f5l7Dygriq1t+BCGHAaQnBUk4xBEBKRLEUVEVBREARGVKCKC
iILAiMpFiSKoJEUUQRRBcrSLcIlDDo4ECUPOICBx5uOd3k+X/RzrNtd73/9/
Wa7Vztnd1dUVnp1rPzboe6es9C86/zP4nL39pqn/JtVhOtrFe3h+xoz+n38L
FuP8faYvqPhby27lS/jrjtvH77iPn/fmz8Sv/TX/vOb2lfts6wv2XawzXl+4
z8ZfER+GdcbrB8+zf+ldWTd4/wlZTzz+wX7PWMzrj/aJ/33tUv+tXIz+TQms
l/D6JrfJvAbbZ/8f9w//oulYR8H1pxd/H3i/6Z+3fr5b/ENg/Axd5h/j6q9D
0OfLusH7beeb4XmsM15fwfmL5q+g435eX1gXrP/yuipC62cqjUtK6r95i5me
+OH4m/+tXvwdjQ++azrh2F+3H10f5/vAvJeKWp+gnyActPVf1m8dfl4WTDzP
r9RFUfkJx7j9foRD//r9vD7NuuX1N5XWBeu/wfkzOMX0+MA64vUD/Lnm8voJ
1j9Kaz1f8Xa6j5538X1ML/Wgbll9YqJTOvV6OUp/8K56MeJvmS79dg46F/Ll
KpAxqn93SruF5T1Mx3MzpZ2o85VkPSWl3lcmqn2sV65DFWy/jL8u/7p/mXRc
07Pdl65Njno/6lahPg/v38ryXFlph+nB+lfW+fHPyeHnvd8P+Djz199/zb1N
7rOtj6LUD55/3Id1wOsn2C7+mfkHHfPJ6wd0rCOef/QP7fH6wfOVpL+W+ffX
Aej9aN6xjnj+Qcc6AJ3XHeMbr5vS0h6Nv7X+Fu9rG38qSvfx+sDvNv4Eekm5
n9a3P+5JNH/BccsYNT94/i6ZlzK0fkDHPJan+QvK5wanmI5fOL+Ax/0umj/Q
8Xspmp/g9/v7W/Hztvp1RWld8PridcfrJ2x/gg4/gU3+vF3mlfUvXhfFaf69
64w6QTnGPF82y7QBoyocdgvIdcyqNKVnTDDnLz79z8KVr36/12naYnPLd9al
0ylbR068ps35l5Ft3t8t6b7g+syqpwflcJ9u4d/x/vulPa8fKfI+s349+Tq9
9uSTNMqTZzOFtK99+Ur67zRNbT+nbpZ6PUP4ld/XG3j+qnjrztefJ9Quu/nU
EONfAf5PDaw/s75lfkT/uxZl35HxiOB3Pj8Rv89NvZ4QfmrsK81lXjBPPD+l
ZN5Hy7yXkL95/riOI88/2n0e76P5w7z58xhsX/SGOXX+Wv5Pr/PKvGKeQU8j
84d5wzzy/H8/9X/+LVzM8p/wd/crmTeeX8w/fmf9Max+Iubvu385v9CPrrmT
LfOLeZ0p8wx6UG+yyf8335v6/WvrMH40k/nhdRJ8nvW7OYuZznK+P/+YD5on
//2yHp6ldQI65hvrIB/tb8wHzxPNv+Z54vmrQusA9OB+g/5ixu9HmQ+eJ54/
2/PNAt/9h/sc7R/MX3DeltUJ0g2ucX7r04xrMg/B/vn2n8W8v4/L+GP/8fdh
/jy+kFE/Q/gSlN/OR9m/GVcxjzw/mJeqMk88/ugXj+9f7zv8s43van98xxAu
Mj7mo3FhfOJxf4rwCesd66AZ4SN6Gqyfa/ArjD5Rxu0u4lM0vtb6sJBLDhEf
5PGz4QvPC+YruP7MvEyh55vL+DWRcUtD6zcf8QVen2KfrGOzT/rjL+PO/BH9
wrjy/uC6xTy+E4mv3EXrtxjxlUO0/t8l3OfxDVu/GN8plvUftC8Whv3Nf78n
H2SQ9Z9By35QwfcDP+bUYfxh+WvX3Fdv/vc94Rf2720yviei1j/sZjy+Xv9L
+r979sBY//2IW/DmIa/29Jej/vPeuilJ/gczvsdS6bn834UP+e1PC4xv1ij9
ifnniFKP3Pxvov/9JWVcRf5St8vfPD64vkv2ozD7GsZngYwLj593nbE4aL8w
9kn8fqeM21cyjsH2c2mMC48fxhfrk/Hj++D6jcKfoP0f69+sj2myXk/KOub1
G7QvR/s/gt+rF/P44HvxO68frK8TNM6g43sxDjw++F6uox2kX3NPyDjH0/rz
vm+0b1/n+ce+xvU42XfxfaXlu/5aP+V9h38Gv/DdWG+W74uKb3uX9h3GidcH
vhvrzf9+2je8f7hfbN/Fui4SkDPM+i5C312U9gf6hfn5a/vvNR+3eX3j/uOE
Q6DfIf0DfnH/eV/z+OP+YL/N/E0N9C86/lz4j18/7ySN/9TA/JTSx2n+PLtI
fpa/o+xfIvdFfd8BsUthHfDz+D0pYGe02dfO+/0J9s88Z7OvBZ83+kmw/xmj
xg90jN+hv7af1qH9H8XfMWPM/8F/8LvnP9rs85fVtfu1+2LCDv/69NPTR3+U
YM7fkmbjcV2fel8Gn46/g7+b9RNGD2s/jJ78XUz+k1/d8K81x5575au6Z/z5
bd+5yY5fG17wr9Wy/nDpxUuXb5lermiBvYPjMilcV+Yd+uGR5NX++LbznnPl
eTdy77YpMS8ZfMfv7Sz0xwqMfLlH2dsUrlxfZPCAL5JeOHm7xrVf07p9Bo4s
e8vPxx99sfqWZ4+6b8n11MXPfs89L5vi9gfJtS+1/7Y8F295PlLk2ZwNlib5
Vz4/qsEvcZ3TPJzsX79RY5e+eeGUc6vPfz6x99KHuuZQuFbw5te91fZHy3O4
xtHzNRfds3fx7F/8a7sHP1+bYapZ/+1mld1ZoXZm1V6uqxc/Ov6VbeZ8ZfyO
+xKI3r3Ub/lm1KmscI33xlfT8xrXMX88VeLQKSPfh9GnJjbauSLld/969ouf
zve83+RvTt+TruTT1S87P8r1xOir3x/NZs5PmEb0k0SfN/KegXmyZFO4fvfS
/gHbJh0y+rX3nItrk1HxtV9ulUsxfaZcnyL67Hd1/ckT8ihc2b48MebkXdMm
5NK4fvh1hZeuny1yy88fX5b29/OPnHNxfWB8ZN9n9c35IWHtH5PnTsq1Hj2f
sOlizIKUI/6V9Z98h+5skr5msn/NWHr6xa65Tzu3+nyuoYldx1ZIr3BNevXu
afmnbHVs7Wem9nPLc7gm0vO70w76tHWp/f41X+/d8QOeSeu/v+WEd++tUSZG
4Ro779eN/T9d5TC9lVzTE/2VpT1y1mhRQuF65uD3J4q0M/JTC+85Le3o27pE
njielJffr6V9nZfoCan84LDPJ5g/6CzFIysbXHd2dt6b8Obls26t86cTfi1i
5s/7PaJt/AnPUTv+9z3l8Uv90B2PV5v5xs397/FRgy+9271b6sdl7pidiQPK
NDrhPJZlROZyY439Znb6OkP/KJ5OT966q0zx1ZnUpp8PZslQZ7PBF+FL6ceX
fijvxf1ujq8zzU8q+if7hMdPdK8S3/QoeE8eJe37z8u50c6CnEnFG21Nchel
9Ozy+ijzfAfhS42kX2Oln6Bfq5Oj4bgOFfT8uDfjvt1SUa1os+PTvuWNf2vW
iKOjxkayK728wfXuzTPqVSkvVfnwej6//fYenurn8tR8uXKTzKrT4pWn+g3e
7vcPeD/70dwjHom97G6LW/FZm6cNPvwjecYzvfUVt0bjt+q3HZhWtZpb+P2D
L5jzgZwJra423Hebnv+PSquen51fTfTG0e+f9vi101KeQzv0fi39V68kxy2Y
eXWu3z89v+CyGjG73XzZViaNe/K88/4rNY99ecbEd37RYtKSC/2OuXO8/juH
Kpys9Xucwc88X27I91iBEuqHZutfGNCyqH6kV4a1nZoZ/1+ax36q/Nqssw7G
BeME+iaPnzirF868a3PnROeNgwNV+k/+VH9Ezvfc3qZm7dvrR9S+9oWnnX3V
5LeBP8lzukTs+09tLmj2z7dlZw9YUj+3/zvuAz1jly4z3tClVUOv37ruI9++
NCK5nKL29bP9V3d/KimHKjBkRKFOH5z1x0/wwh3+XY9CzoCTzpaJy52iycY/
e9rjV26nLy6PSGqQVg3qUajxief3+3TwpZH9Bu7KvPqYO7NFmz0Tcmf333/7
ly/MXVY7Vo8dEPfejpx5lLTvv/+j3a2u9rt+1WnQp87QNs3PuMVb5Fg7902T
PwP+tG5JyalPLkujMl3uca7q20n++z/y+IFON+jaXbH/LK6KnFp0Xb9h7CvF
307TePG0zKri1DazR8ak1ze6dR1S8CkzvkcyfpR+fVxGvXNHuS8uJGZT1TpP
/a35fnN+0LVZ99/1e1JaFbu2XoXPel51Ow2PTa5+2qz/QV7/3XuXbPi0/Z3p
1PgL7/WZu9nETz//6ucVs57LqJ+oU3Nl1dHZVba0B/s+eeCE336J955dujVm
ptMh69Onk1ofdH6vebzTpIFGvuo69727dy687lbw+q+yDzk5/LFEUx9T+IXb
8srgYk1rnXXq9H39xyMZbhj/XfNMZ4c1Pu1K/51B0xZ+NWmN0a8uVyjwzfHe
OVVMq7eyLN+aWXdM6D0/rpbJX++xbl3Dnh9ccIq3KHDXE50OuCOb1O9Wtfaf
8K1Ywyktai9wssm8rJV5Av1N73m3ZcesfVduT3H6FDk8/uSO4/77wZe2yboY
J+sEdJFXdMI7T2R6q8ptStr35/esx6/Umzd2Fcs8IrduObZwk+YHiipqXz/+
WsmtrTZmUZk2DJx5Y6GpP+PxFeBhJGLTn2z0CP2zPK//NT2flR7WfmRqql7l
2uhjRa620cG/bPQ3RC7+D9u39i+s/SGe3mOly/PW8ZP+WenAx7/b/7DxD+u/
PG8d/1vsv7X9sPkNe7/0/2+/P2x+brF9Kz1Sv/vDk1OyW+mFtj9YruP9xaz9
A/+y0UtMjMu/eWBN6/O32L51fYS13z3TgVXpXi9vpcvzYd9vpUN+/7v9Dxv/
sP7L81b6Lfbf+nzY/Ia9X/r/t98fNj+32L6V7uk7sWK/u+TgCvqt2f8ucTs+
f5Qb48Eng/zM7P9qK7afj82QXkEeBr3Rt6pzwczF1A3P/ue2y5Tm3rXzzfmI
wKdZE46fPTIklxL7nv9+tIv3bCL7TSE96PMmpfOqamIfak/2IehPh3fk2f30
rMIK+hjowFfgNJ8fhuds9sNfnlz/4cMZLzvPHMn6fsIXsWo51RfTa9eUK/Rl
SWWzD90t/cZ3QB/z14fgZ8X9OSb1W1ldzbxSN/GV88b/g/eiH3z+JsbVZj/F
d2McuP54dRp/tq9dl3nFPLf15tfvH+yyrz93+NT02Bi1TPQ9Hl+b/RXPoZ0l
ZN/tIP1CPxNo/bULmf9KMq4Y51ne+Jr1KfOGeZT5858/8OS7Lz5QPYfq+ujV
bRcKJjtPefK2kf9njSg9I+9t6q16L2fs9sxB50z5bw8u/cjIx8CnFx+s+/yH
n8Qqse/534d28R5p34x/0pvrPp2XX13t3+vxAa9tdisO7hI3bEMmbt+tVU13
mTWtiBL7nt9/6ZdbZ8UrkwdXKBiV/1RTnrPZD8d83bH8/fEXncNbDhYeqm7+
TvFnN2ImLC0ypoSy2Y/OSr+T5Tsqe/3331/b65dOH39xQN7DZVSun5qeOnWf
Od8B70U/OD6qjYyrzb6K78Y4cHxJ3V/e+SRDoUxW+9qbMq+YZ5lfv39fvTcp
McsnMerK780vVPkxo1rYf+yemr9qf3zefE49V6lMATXweK46ZzokusVEXwUd
z6Gd5d7zUfa9+6SfYt/z20e7eI+07/cP44pxlvH13w/9KVnmUex7/vPEF+Q5
/IP975KzQfgK+EzweZ9vRdGBK+Ab4keKsu+D74BfgN4hiHsu8BB0wl1VVfAY
dOJrblDe/ZN+ILhyBDiD9RnEHRXUJwz/Ad8J6guGf4BvBOVhw3/Ad8APQAeu
gW+Aj/jfF+SbGuMBOvFl0ifOMt9zdkh/bnX8iO+qMQF9x/CPFcI3wA9AJ7lC
Y7343y/3TxC+UV7au9X5Ib7n80PQK8t4zha+EdR3DP+xrQ+SC3w+Azrhis9H
QCe+4Lwu/AJ08hu54DOgg3+Ab1wRPAYd7TURvoP3Ufvu08JXwGdAB/8A3wjq
E4b/gO8Aj/35FdwB3wjKw4b/gO8cAR8SurSncwvfiBG8A/2ifG8l4Ts3ZDxA
J75M+sRZ5numP0IH/wDfCOoLhv8grqmHjAfowP1FwjfAD0DvJevhlPCdVrJe
QMf9WvgG2gMdfAF20iHCL0BvFeR7Lr4HdIynjK/CeIM+XNqT9jXeBzrmM5/w
FfAZ0KFvEH+JB13+jtjoYc+H0WHfsr5f7D82OvDy77YP+1hI+9b3A1//bvvg
TyHPW+lh/QP+/d3+h41/WP9h//q78wf+ENL/v//+/7D90PkJGX/Yt6z9F/uP
jQ68/Lvtwz4W0r51/mF/+rvtw/4U8nzY91v7B/z7u/0PG/+w/sP+9XfnD/ws
pP9/+/3/afth8xM2/tBLQuxr1vgEiZtyQ+KntC1+CvgTEp+mQ+LLHFt8Wftg
fFyUfQj6Q0h8lNW+JfK7DonPYz3Kf17ixtyQ+DEdEj/mhsSPaZt9C/pmSPyi
dfwkfk+FxO85IfF71vUTNj5h8xO2ftB/W3wj2rXF10nclBsSP6Vt8VPAn5D4
NB0SX+bY4sumBePjouLrJC5Kh8RHWe1bEpenQ+LzHJt9TeLG3JD4MR0SP+aG
xI9pm31L4hbdkPhF12Zfk7g9FRK/54TE71nXD48Px+9R/FtUfFrY+gnrP8W/
RcXXhfEPyKeCK+6YgD/d7H9/3yMeF/tPcCeN4GYHsl+8I/hyUnClt+AM6Nj/
2PfAAWrfrSq41oHsP8AXm30K/AN8I+jvN/hvs7+Af6yw2G+A/9Ut4wd8/Fpw
EThJ/dc2+1Sc8A/YB6uRfRD9tdnHwD/AN8BHQO9N89OH5kf4hgLfGBTwl591
HpHvm2j5Pl4/KYWD66cDzV87mr+h8v535f1D6P1h60fa1wmW8QX+7xPcAh8A
fZPsf+TXbRAcAB3x0+ALc8i+BPwH7oMPgI79j30/S3AAdODyccG1GWT/Af7b
7FPgH+Ab4CPUvmOzj4F/TBG+AT7C4wfcz03jl1fwEbgofzM+apt9CvwDfAN8
hMfHZh/7XvjHGeEb8rdPPyrzA9w/TfMD/B0ouAscBh34n0m+Lz99H/gH+MZ6
Wj/AbfCFVjR/38j7B8n7v6b3y3pB/mfU+sH4gi+0ovENsz9hv4X4Z63yK/Da
5v8U/4Eb4r+25z8I/tn89+1C3i/+V23zv1aj77P4/7XN/y/+aSfEP61D/NM6
xD+tbf5pjFtIfIS2xUdIfIAbEh+gQuIDdEh8gLbmX8m42/zfsF+GxE9om34H
/mDz38OeHOKftcqvwCOb/1vs9W6I/9qa/wD8s/nvxf/qhPhftc3/Kv5/N8T/
r23+f/FPuyH+aR3in9Yh/mlt809Lv3VIfIS2xUdIfIATEh+gQuIDdEh8gLbp
L8Brm/8b/Q6Jn9A2/Q7ryua/D9P/wRewD2v+l+1HkE97/y/ZjyB/AgfGEn8R
eV+Xt9iPwN863KL96Guyj7D9rTyNX1nB37IW+xHl/0Xxp/9t+1HY/Py79iMe
n7D5CVs/4AuQY+Kp/x3IfsTyy79rP9pnsR/Z9l+Y/n9C5FO5uveTfQLtTrfg
R5j9qOW/aT+a8m/ajyD/Qy6OIfsIj98BGr99Iv/vu0X7UfYQ+9EZsh/B/oY8
11MW+9EEkbv/QfYXtu/9u/aj/DQ+bF8D/j8f9FPf8vph+9FAi/3IJr/UELyw
2Y+Af1UENzqS/cHiX46A3ljkz6Ae8qf8QMGnuNQ8yS3yt9EvoY/Y4ocvLCiS
6+5td/rxPWMpvqeqyPc2+wvbx8aSfWejvG9fah5gguQbmv6F5WdsbHj5m5xz
kp32V5P39KmAq5l/eSzea+eU9CeZxjdZ5Phk+ds8j/d5cn1apVK/w5wPF4bP
hWouXLQuY35l5e8Uf72d5GeZTz3O66fr4fCf4q8D9q+DbpoKWx5bsP1P9c91
u8IJXSY76fft6/liq9N+vU3QS0Wabzk96oITu/3HN04VvuJ8OPHx5o+XvhCF
vzuWpy9S4sRVZ8WsKzOKNDP5Z2rE3i1vXM2t9PUJiWdezKJQZxz0hh89WPTV
+wrphOLv5T+/La1OqJTGWb3Q2JeAe69UyZjYeu4/nXmrkzvUrG/06x218xYu
tLKwKv/UK8MbfpZLST9N/NGCze3ck3F61pJlDe8vXUzaN/mf96f273YV/7Bu
OvPHfKr6U2nqr1ycwV+/jVP7l0V/3um9O04nHnbfyPfCmV+bGf5bVe7//vKV
Q2r6XvdQr7rvDfg0i0/PLf3Z91SLD6/mX+YMG3BsSbF+pv9nu5ef2+PwSTeS
Ov6/OTIOPr3j5n59P52S7Hj9T3Y2dO+Z/o97/rR+m/32dtu6w5wp7a7s77Dv
lFN/RZqWmZ4083d35P3ah/flUKNT+59B9WuXv/9vZcb544P775j33r29rtxw
TsdfvPODYX9a39Kfdlf757qwJaLGxZx76rsaxr4SeeN/+r/bjWTv/V3jDof9
eq6gd0jtfw6Mq7x/cFT80Y+1+t+e73oa1Sf9hZwlR5jzcfedfHzkJ9uqy/zc
qaQesD8/XzdaVi1leD79oPcd7uUcquHHB836h72na6Vr8yLP/ur2/qpvn5/X
Gfwh+dLHWX/+A/gZnR9xq/lxwNW7BGdBB25KHK37K8XHVg2xjwB/bfYj4LUS
3FwtOEr9t+oXGwL4edrHUX/+/zo+J+LTvX/xwNGU7zycBT1BnrtfcLOt4Giw
f8nOOMHdRwWHQS8i+GnjH6H+FRnXnYKrVSj+c4PgK3BV+hNl/wGuAmdBLyv4
OVBwEzjq92+ph7/AXeAw6MBX4Gqi4CzoPn4KbgJHQQf+AneBw9S+O19w9THB
WdCBn8BN4CjowN9cgnMVBIdBB34CN8cIjoIO/AXuAodBB34OF9zUgqOgV5Pn
DgvubhAcBr2D4CdwEzgKOvAXuJtecBj0moKfkfYebo4RHPXnT/AXOPq94DDo
wM+xgpvtBUdBx3NnBXdLCg6D3lnwM9LBw03gqP9+wV8fdwWHQQe+AleBs6BP
FPwEbkp//PHbL/gL3AUOgw75FrjaXXDW3x+Cq15cdFbxXx6MoreX34/KfaC3
FfpRsS+nIfty+6B/MTr+mvyn7H8Msy+AbpNv0b4Nf0GvnspXjko/Ipb+RVQV
uY/pNvk8OH7R/MUS3xiJGj/5Z8sv9t6/zCm0rUOxxT1iouj4Hffx+HnfV0IV
Tr3P6McdAs/f/F3u4/bH3Ne44Ee5b/az1oxZMytfifq+lHu938fiPqK/9c3L
E9+Pyamabl7bM2HN2aj110x+f1vu4/4913vd23c8mF8dWZh/yJQj5nw4PH9U
fm8h9/HzY+IWrP+uWi6V0PBwx05D/oh6P37HfaB3wvisPH7p0LA71BOnRy18
Z6M5PxLtN5bfcR/o8M9UbNIh4cXlx50PG69tN2hvStT8DJTfS8l93L9tORq2
rLUzySk4v/PGnFMNfoCO3zfJfUxvl3lPvZ7vZ1Uv1ujZ46VhSVH+o5fl9/Zy
Hz/f4ecXNz321k4ncrDbDyOfTBdFx++v4D76vsOrR83uu76gijT7IW3rq6b+
H96f0tT7/QjuE3owPjlaPwee2PAl7PyDnW2f/3LTT3cqq3zl/Yv32skh+GP8
Aydazp638OX97gOdnl12rUlO5f1t/KuzVn9zfWHl3Nqza+ZRkdTzboz9olpA
v4/Idxr+IfKltuFfWP5uWPzD7vYnOoy/kln1afj14gY/Z1SRE+rFSTuXGvlT
xsuzK2YSOW9jlH7s+a0yin68wqeH2S9fThjQs2XM/b7dkuMfIN/JOT0qkirn
mfMdPfkjn9rZq9WFRr+lhZwVJb/9PGXJiNI1sqrlqXLcAf/5kZ0nvLBpdnbR
fyGnGf77aPZPpvetUlZNallx/D8rHnW+KVU9pfMowz8gv+V9ot9j47+KVZ4c
Z/xTntxVUcWkyjUbnPWpcpzhHw8uOXz41+VH3AbDG805NT+nujRlzPgv4sz5
+19s6tnit/saQ//SaA/0Tn1+Hu+8ddbNdbVhzO7SsWpy10oNqjX73X9erRif
NOdAFr1s7YFVP/bKrTrPGtyk73emPuigeXdmP9SgmGr58agSveOSnV4Jm5u/
V9LIv7Uqv/Jc+uNVRS477XpynJHv8bfXv5vrJFW/fMdv/2K9mMerlLzgXOx9
4+SH87OqCZErBX9sbeSPHfOyRR5PiVH9Lu1stntxJvXh9j39z+zf5NPnVq1Z
dtipB0Q+vakHeHKQ//7l+eqXr1Uvh1r+W6PB+7/PoMacqD/20QFv+s/78WmL
+ww8cD6TyGGm/rAnH+bWlXY+/vHIrXlEzjLrE/pr/Ye+3FJ3eS7VK1XO+lN9
a8Ebm/wSxJdo+5clPyQCuvxPPHAHOAQ68AW44uOM0IFPxwWX6glOgQ5cAe4A
h0APyy8EPtnkrz2CLzeOe7jSFzgjdOBTH4t/BfqpEtwBDvnjL/3ZIrgzVnAI
dOCLzT9yq/FVKeU93JkMHML4Cf4Ad4BDoAN/gDvAIdAbCr4AV4AzoAOfgEvA
KWrfBe4Ah/z1JXgB3EkvOAT6OMGX7nIfcAZ04BNwCTgFel3BF+AKcAb0VwSf
pgguxQpOgQ58AY4AZ0AHPgGXWglO+esDeNTBwx3gEOjAl4GCK8AZ0IFPXwku
AadAB75ETnq4ApwBfZ7gE3AJOAU68Kev4A5wCHTgD3AHOETPa+AOcMhfnwH5
xyrfuyHyvRuiH7o2/dCSfxZhOn6x2edC9Bs3RL9xbf4Zwuco+yLoIfqlG6Jf
uiH6pWvTL0W/dkP0a3t+s9BD9APXph/g+0P0I9emH/nnv/xr+d61yfdoP0Q/
dG36oX++9L/Wb9wQ/cYN0W9cm34Deoh+7Nr0405Y3/9av3RD9Es3RL90bfol
6CH6tWvTrxG3bNPPws7nfsnjz9b4BZxvcTX1HNbCyjtP1OwPfo71h7D8VpxP
Y/PP4m+b/RnPeXGVJSWOuwC9P7fy3nObtGPsw1vXvNr04xfrKNv5FEdu8fwE
xI10pPhyfK8nNxbDd5j1JfdPSZVrbhc9sqBPr9mn4Zp3ppRUbzUuM7Zd2cyq
+Sg16f66Rr+seGZwQtMfaijhwzrhmd5zGnY2+Aj5Z3Gq3FNYTct7/ecf1pn6
TkNGFsl6z5ZSymb/vXr34zV+6lFe2ezHQf2rhHowrdv+xHnD/xpnnpvce2M+
ZdPvihf+6Pq6yxXxXc7t5X6psqOA0c+8/t2mbPrB5dT+1YL/Us88329FfIrh
r09Ju6uLz87885ii6sC7b+zo0vBP9THkuYKl9k5Iv7aUemxq3xwL6xn7fob2
08d9uL6UVb+tVbBy8Xq54pT4L11v/I1/YeuiM5UWvVPLqj+NOLYotmjtYqpZ
60jRenVzqDuGpt854k0jf13d67XbrcL48mPvKq4GD2n1x6N78/j9w3NfZPvi
8eLT8qkuexbXnLAgA/W/utW/4PW/hLL5J1oF9LcC6lSdd6beWd/E/8XOOz/l
asdkZ/h6d2nX1wqppl5/TP9Gtr/x+cL66nVPvpX5iVPUvuh3JdXXp5Nfr1zD
7F/gkw1fGhGusf6A+8PwDbgGnAM9iE/R/k86/zLq/O918pwtPgF/DxVcqiw4
BTreFy+4NltwDnTEndv0322Cb7b4ZehvHS3xb/gu4FZ3wTHQg/mRBcVOdLtP
ryT4tF5wSfQM//3AN+AacA50xE0Bt34WHAMd+GSLDwC+2eILEJ8F3MonOAZ6
McEn4BJwCnTgm00/vCL4NEtwCXgD+mDBN5v+0V/ubyy4VFhwCnTgG3ANOAc6
8GmD4JLgu7+/gW82/XmY4FNZwSXZ32Z9Cb7Z9C/g02uCS18KToGeRfozVHCt
h+BcsP8llC3+BPhmi18Bfp0W3HpecAz05oJPswWXRF/3nwe+yXfojwXnQEf9
AOAWcMxff4HzK6LlM8S1htiHdYh9WNvsw2HngzwmeSM2fBP7lRNiX1ch9nVt
s69DfrLZl8PO1xX7nrb5D4J5PdH2ceCRzX4K+clmXxb7jBNiP9Y2+zHkJ5t9
XOwTVvlH7FNW+Urs59pmPxf7ixtiH9Yh9mEdYh/WNvuw+A+0Tb4S+7oTYl9X
IfZ1HWJf1zb7OvDDZn8GXtj8C37+tMX+LfZZHWKfdUPss9pmnw3u72j9is7f
jpJfsL9D7NtOiH1b2+zbkD9s9t3g/rba763nk0C/stmnoTfZ7JfY/zb7rthv
dYj91rHZb7H/bfZp7H+bfCD2ax1iv7bKJ9jfIfZZN8Q+q0Pss9omH+Bvm/wh
9m0VYt92QuzbOsS+rW32bdiPbfZf7H+bfR/732Z/3iB6i00+SNr7yKaOT2TV
q1PzghLdAan1aIx8/PUTyQu7TLjofpV6jVGLZ+aYfzWtyU+DvcQWvw38sMUf
RuSfzf6ystmzC0b2T6eT8nZ58Z/lzjnz2wzv1DP/db995N9IHr8z0XJ+i00/
wb4Ose9om/4Udr5+3pdmlc/zcCYd/4+Ubk8cWOk0qfd467erGvv3s79d6X/8
0hW3+bdpDn3cOq36pemlmKrpTX448mKmX0l5LRIpota20HV+mm7sY4WTS7TY
8E2iu6hLnkGnxsUqr30jPwzpt3djjyu59ODX20z5Mk9ET2vWNWPx56Lz8xPv
7PVj/5/SqamTy+o9b5nzGZ6NPVT9k2+POV+8/WGfcYvyq9fmfTJyzA6TP7i1
9q9bCs8rqCs/NTmxwbd5dN5zh7N+fsnobxPuO3YuzYbf3JVTzs6OzRyr+lVY
kSFDkpFfkj5vW7DZsmz6wAuv9r5R/pCbYeRz/2x1wux/4MrGHIeqzxyV7Hy6
uWpc3mfM/AK3hs4o8FzS+MtO9lWHuj37tbG/VmvTr/O4iZm07ugOOzhmsdNP
pXlg1SIz/h9PXHX00XqXXa//6dTVB90uP2wx339iWIvtzZ5Jo3t0ap+j3/d/
OKWzf/bzklEmv+b1oz+2+KViWr0/tf8XnQX5Pn7SyWf8D58K7tT75Z4rRX/O
qxZ3Ozto/C5Tn3uo4FbO6yn1I/FVVPlyL5xPfKaST295pO3ZR+ak08VebrBk
0sc3+XWeuTk/m27Wf/VBVw4UezrZbb8mXa2m1ZKdDi0vlt5YODr/ptPe1qsO
vlxSnSoR36LX2yb/uG7zCXXHXDjnTJpcaFGhKQWV176x73+2P1O3ms/n1t99
tmfokfvT6EUdf7z6wDmzfmBfqdvt+PKlPY86db98/+K0/ob/Aj82CW4AR0Df
L/jzgeDOSsEh0CFX2PI/gBe2+OWI/LPZR4AfEwQ3GtL5H6sEf+YJ7hwQHAId
+GKz7wI/bPZh4IXN/mI5XzACenPBj22CG8AR0G8T/HlScGe54BDokD9WC64A
Z/z+C378ILgBHAG9gOAPcAc4RO273wmu/CI4AzrwI5/gBnDE/z7Bny6CO8Ah
f/0IfsQIbgBH/PUh+BMvuLNKcMj/PsEP4MYQwRHQxwj+fC64s0FwCPThgh9n
BTeAI6ADf+IFd2YLDoEO/JgnuHFAcAR04A9wBzgEOvCjnOBGDsER0IE/CwV3
HhQcAh34AdxoJzgCeivBH+AOcMinC76cFFwBzoAO/ABuAEdAv0/wB7jzjeAQ
ta+BK/cJzvjzE8jPi5ZvwuqvFvbyG6z5cSJ/qBD5w7Hhh3dF/tsewYO0fvvA
Dy8P5YLoE8a/KPZV6/nmOB/CZp8FfiRa4nsQb+/J7ecdz456NQofNqbmRRx3
fky1kxr/450Ntg6f076kandjVp7fC9/kM4dnVZzT0Jz/0bnX74mx06sj/g55
Yorad1VqXsQcp16qndTwB8TD2/Lb4gplujhxaX1r/tLZNi17ZR8cq5NO332s
1MMH3A/mJUxoX9XIF7+eGV/3zV0xuusrnRMi5RPc99M+1L3uS0Z+Hpgx/fLJ
My+7FT7K8ESuJbOcvhlTds1Ja+S7LPkWJyYWSLHm99WrNHljkzmxavlnHbav
L3rZSdw76o8ud5j9HUE+iiW/a835jqcKHUij9r/05jsDnz3rzMkz8InZR8z6
W3Yy/egZdyU7zz8a03zD0VPOic3XJmxvZN4/IVdcr2n7Ep24X1YvzHrqplyZ
YX3PFqXN+ht5efh7kw/Af5NP/DMZ/PEL5o+dc06m2jmv+e3/JPkq3vOXXM8O
bdYf9JNBqXkLa9xvUu2YZnyx/2z5UVH7lvKLsP9s8r/wb2Xj394V/oeb4yL7
FPRg/v4ViZcz8iX2n81/i/1r0z/4/EeO7x2H/Sn7EvuU9o8zXfblL7JPQcf+
myn7DvsQ9DKyfzvIvsU+pvbdB2RfPib7FHTsO1v+E/Yf9t0B2YegY//a8l+w
//rIvjv2obcPQcf+fU/2bRvZx6A/IPsP+26Z7EPQM8n+teWHYX/a8n+w/7Dv
XpB9CDr271zZtwdlH/P+k3mGndP/fuxf7Ntq2MdCx/48JfsS+xR07E/sS+xT
0LE/sS9fl30KuuTPh52/aM0PlPxyJyS/3JfTLfnlrs0+F4yLj86/rh7wD0Tn
1/P5Upz/Lflnbkj+r7bl/2J/2vKrJT9Ph+RHW/1T2J+2/HDJ79Uh+b3Klt8r
+Y06JL9c2fLLke8Wkv+sQ/KfrfxR8p+1Lf9Z8u/dkPx715Z/L/nnKiT/3AnJ
P3dC8s9dm38Z+9uWXy35oTokP1/Z8vMhX9vyw7HfQ/KbrecrbAjsX2t+sz1/
Tva3Lf8X+9uW3439bcs/lvxTHZJ/6tryT4P2++j8XuzfkPxcbYufwf625SdL
fqkKyS/VNv7q799/nd+sbfwd+zck/9YNyb/VIfm3Vv4r+d9uSP63a+Pv2L8h
+c8qJP/ZDcl/dmzxb7D/2/J7sX9D8sO1LT8c+9uWnyz+Aav+LP4BFeIfcGz+
gbD6tti3IfGf1vhR7G+bfC32ExViv1U2+y32t80+LvZtJ8S+rWz2bZz/bbPv
i33WDbHPKpt9VvwDToh/QNn8A2I/ckPs1zrEfq1C7NeOzX4t/hMV4j9xbP4T
7PsQ/4EK8R+oEP+BY/MfgH/b7OPiX3FD/CvK5l/B/rbZ97E/Q+zvymZ/t9TP
ifjjJ/vOFj+J/W2Lf8T+tdm3sD9D7KPKZh/F/rXZn8V+rELsx47Nfgz+bLOf
Y3+G2D9dm/0T+zPE/u7Y7O/YnyH2YTfEPuyE2IeVzT4s/gknxD+hbP4J7M8Q
+7wTYp93Quzzymaf9/evxf6M/Rniv3Bt/gvsX5v9fEwgvu4v8uNlf9rsu5b6
VhHQcX60LT4P+9Nmn44g3sGin2H/2ey7Yv+x6qdiP1I2+y32n80+LfYPZbNP
iv1ah9ivlc1+LfYdHWKfdUPss26IfVbb7LP422a/F/uYCrFvOyH2bav+LPZt
bbNvQ7612X8Rz2SzLwT102j7M9a7zX4aXN/R8WlBfhUtnyK+y2b/xfq36SdY
/zb7KdZ3iH3Uqr/556da7L9Y/zb7H9Z3iH1Y2+zDWN8h9k8dYv/UIfZP12b/
xHM2+zjWd4j9WIXYj3WI/diqX2L92+yrWP82/Rrr32bfhX/Clt8V3B/R+RN+
/ffr64d3HH/Nad87rs7Wr6PjG/B7NbmP6Q8uPLjx4LvZ1N4royYV/OBIlPz4
m/xeX+7j988edGLsK23yqjG7ntlc83ajX4A+Wn7Hfdz+rNJX5r7dI7eqVvxw
jqkjTXwunsfvs+U+0IEbz77RsFGfGxVVu0lTZzZtWiZ6/OT3FnIf03veqJb1
XIfzzh291i59NPFq1Pjgd9zH/ev6UPk5p3Itd9p9VnFQv9diotpvK7+/Jfdx
/6u2rndHwksX3Fk9Yus80DE26vvwO+7j96tZQ87VeXWBU23D+b7Vt0e/H78/
KveB3lboH83vMaLGjMLq20I1Wh9pbfRX0CfL70PkPtAlvzRMvtG2/EfJf7PG
h0v+m7blvwXj76PzCyU/0Hp+iOQHalt+IPDZlh8p+R9uSH6btuW3Sf6RDsmv
1Db7lOT/OSH5fzok/89qv5T8Guv5hJKfpUPyT7Ut/1Tyk9yQ/EsVkn9pzQ+Q
/CZty78Mxu9H5xdK/pb1/CHJT9W2/NRWgfj+6PxIyCe2/DrJr9Ih+VXW+Gnk
x9ny1yT/TIfkn1nPv/DPL7fk30n+lA7Jn3Jt+VNY/yH5e9rmn0G7IfllTkh+
mfV8Y+wfm/9P8ht1SH6jtuU3Sn6fCsnvc0Py+3RIfp81vh71vWz5a5L/qEPy
H63n42B/2PLvsD9C+Ku28VfQQ+QLbZMvhP/pEP6obfwR7w+Rr7RNvkI9uhD5
QIfIBzpEPtA2+cCvT/Sv5Uttky/RvxD5TIfIZzpEPtMh8pkOkU+1TT6t1jZf
1grvJVvrD3DdVK7/ZqnvHQH9lW9effyTF2qJ/zOf9vyf0fJHXLNzNfoc2u88
cHhZAadMWp8ef+8DlXevLqV0luKRlQ2yIX/S6J8x6xbsP/qAwn2ohw367UV/
7pazUF49wVLfCPUxdljqE3Zr+PyXT/W4dnNfr+h548F9zs5qQzO1Hmb6h/rc
+GLWz0sc/OjHrxpnUsNuS+lVqsw1J8tLKU8WKGTmTx6L99o5JeNp5J+nN9dJ
WREfURWyNr+jhvrDea3zt99lSGPmp0ziw4VmrYqoIUP3xE176Q8n07ES44bt
MfaNsPoYd4yvVKjhi5VV1XtiLhU8l1tV8taDP77QD6d266W7fHLFOZX+/Wwb
ppn6fl7cSgldPfX58+6sE3rGqGxm/wL/nngkqfCBGZudr7ekvaN/JzO+fnyY
pb7Kq7J+5D3I0/XnF+vPNv5+fJisq7tknfH6wrrCOgO9lKyf4rJuBss64vWH
dYf2QO8q6wfrZoOsI15/tvo2RWT9ZJV1M1zWEa+/sPP7sK5SHvTWGa+fjLJu
PpF1xOuvq6w7rEN/fGT9xMm6qSbrCPRNVJ8xwVKf8aSsq+myznh9YV1Vk3VG
61N/I+uqoawz0CEfZty1fWXOmTnUG3Wn6QO3m/OdsP7weya5j+kPvlxi+6CY
/GrJ4KX13u5kzicCHb/Xl/uYbqv/GVbfB/234Ruet60/0A/3/LpWjVwnnSmL
fpj+Vc2UKHzH70lyH9Nt+OzbDy37C3Tb+gzyE+v+dfZ1O/n7t7t/cV6flmZg
5knpouj4/bjcx/Rre9Wz+bIVUuXeT9toaE/gtaGXld9xH+jeuouzxh/wvPH8
lpgYl3/zwJr+d/P3Xd/d9XJGt4p9f3v/4r36UrHKwwkj/xROnffT7q4Prh8f
cT1Wbf3y999y/GTsp4N2t7ra73oWXfJYk5dPjMmtjlV8bEXX8jd8OtZLfEt3
auVdaeWcUKNfCr5p2/oTfFQ2fAyrz3u1RO5rZ8ZlVM/06bD29MpsqmyGScPu
H23Of5D6C8qrv5dZvZFaj8/o35DfCx1tmjfpruzqvp+eW5T7vuM+Pax+U+3b
hlxaU7mZrrh1eJ/v9lVVMt8+Hfxr9VA1slex3Or95enen1bzGu9f17Z/Mb82
/o/1EYbfsTLvnWUd8Pwel3ktIfPM62ObrIudsk54/tvJvGMdgF5c5tcmP2F9
2PAH81tO5rWZzDOvD1t9L8x/D5l3rAPQIZ/UknkvKuuA5xfzinnm9YF1MdtS
3/cDmfdVsg54/kPwxbXhC+wLIfzJDeFP1vMvg3hkl49C8NUNwVdrfeiw+nn4
/hD+5obwNzeEv7kh/M0N4e+ujb9XkvVk4w9YTzb8qeWtT2Vbn/teePWdX+NW
ugfeKbe26pwC6tKSrZVWrcniP4+6cx9a6md3z3RgVbrXy1vPH7x0+pef5418
WNn0M8jdNvlLTf9g9gPF1znLPl318YgmBdS8czmXDEhv+tenROl72iRmU7HJ
j55dceo29bQu0OtELVPfuEH9Uy0nDngC+ptGf0FvfX7vutZ7blf7pT5uE6qP
G1bfG9/r4WwB5bVv+of9XX7HC7/Nq1RYDez6QLPNC439G/Nj4w88r4wfmA9b
fcDjMr8XZV73yzzz/Nj0n+B4RZ9fguds+hnmB/OSS+YJ9PtkfjGvy2WeeX6e
kHlBHWOeX/QT88zzZ6u/iO/CvJWUeQQd5099KPOGeQQd82Xbn+A7IfKJDpFP
tE0+AW7Z9p/ot9b5Ff7thMh3KkS+0zb5DuNvk29EPpH+WOVXbZNfMT82+Qzj
GyIfuCHygbbJB51lfG34FuQ30fsH4xsiXzkh8pW2yVeQX2zyBcY3RH606v/A
N5t8BNyy7Y8e69Y17PlBel3iwY6Nttdf4wyaPD/X/dmMfdXbl1fdZgOObV+2
LZ1a+P2093c/v4PtBzrEfqVt9gd8ifeeQiIfGP9Cxibd2qy+kEY3yzm6a8PL
Z5xTZ34amb++id8Pq4+L8bfhk/A3N4S/aRt+tgzwo+j9g/GbK+OGcQT9TRl/
jDvmgcfPZv/D+NvsN+gXxhXjzOOXXsatgIwj6Blk/DHuz8k88Pja+DvGzyYf
CP9xbfwH42tb/7BH2dY37FE2++idnn1L2+xbsv5UyPpzbOMnHY2fkFo/OUnk
BROfiPFb89WT8ReynXM2b/+hUYPqf8rv9/irDpGftI0/++tT6hLjfaDfLt9v
sw9vonFj+x6+37b/ZP0o2/rxrvvqYFymyjjx+GBc1so48ffb5EeMn23/h9W/
Fv+JNf8Udt0Q/4IT4l/w17XFv2DlD+DvNvs7vtfmX8H32+z/Yt92QuzbKsS+
bZUf8P0h/E3Z7L/4Ppt9349vttifsa5D+KMK4Y+OjT8G91v0/Ir+54Tof6H1
x23rG/0L4T/Kxn/Qf9v8oH82/VT0H8em/6D/NnwTPLbKL/74WvBN2rPyD9G/
rP4n9M+Gz3ifDT/Qvk0+Rf9s6wPvt+Ef3mvTb2E/telPYt+wji/2j03/xt82
/Q7fI+di+t8Jurdfr4see9aVaxT/TJDzNf9a/z3rop1a508n/FrE6A8P3fF4
tZlvZFZPPz199EcJ6WQedvj4N2Zn4oAyjU44Nb26L+5jWUZkLjfW2JfSjy/9
UN6L+13UIczxdab5SUVN/P/krbvKFF+dSc1KX2foH8XT6VU/H8ySoc5mv/1e
Jb7pUfCePKivoKV9n473+XU+pD+gL8yZVLzR1iR3eekq9S7ee9FZlNKzy+uj
zPufy1Pz5cpNMqv2qeeWptMdFq881W/wdr/9Go3fqt92YFr1j9T8qituq7mF
3z/4gsHveXFvxn27paLy8qIq6BVtdnzat7yJb5j/j0qrnp+dX3nnJtymv/a+
16fr5Q2ud2+eUc8acXTU2Eh2tTLlpSofXjfxSbMfzT3ikdjLboLkeW6NW/FZ
m6eN/bxAtpVJ454873h53bvd/q/UPPblmT+d/9Ns/QsDWhbVXv5WCdWwV4a1
nZoZ+2BL+R6dmje22v9e0P3xSD3f1YwX9d8/X/+F5LgFM6/Odan/ztgWk5Zc
6HfMPVzhZK3f44z8vWnhzLs2d050Vkt+d/eDA1X6Twy+yt9+fe8Sse8/tbmg
2R/b29SsfXv9iFrhza97oH3haWdfPWb0P7lfzo/WaA/0Z/uv7v5UUg7UZ9QF
howo1OkDY19u4I2XjunSZcYburSq/ci3L41ILue/f+h3PQo5A046mTzccrdO
XO4UTTby68h+A3dlXn0M/g9nZos2eybkNvrlK19cHpHUIK06+8VP53vef8X9
R49CjU88b/yDYwfEvbcjZx51+5cvzF1WO1ZL+37/1i4pOfXJZWl8v1qWyz3O
VX37T+fr9KkztE3zM66np191SrbIsXbum0a+3bmj3BcXErOpIxk/Sr8+LqOu
1nnqb833G/vNvUs2fNr+znRKnne/uvBen7mbd/ntpx107a7YfxYH/9JFTi26
rt+4zR/fJ+rUXFl1dHb1/KufV8x6LqPOkfZg3ycPnPDbrzC1zeyRMen9+IEb
3boOKfiUmd8ca+tV+KznVffarPvv+j0prXpleGxy9dNm/T9/ZXCxprVuygGe
3OTW6fv6j0cyGP0iY6u3sizfmllfrVDgm+O9c6pOCb3nx9X6U3xZ1qdPJ7U+
6JR479mlW2NmOr/XPN5p0kCjX5RoUeCuJzodcN9I5fMXnFFN6nerWtvgh/Rf
dZv73t07F153Mw05OfyxRBP/Fuv132kqcvVH0xZ+NWmNkT+zYb6KNZzSovYC
fz5B3yLzDT6F9QB6i45Z+67cniJyyAW3T5HD40/uMPkjCe88kemtKrcp8btp
ad+fn8dfK7m11cYs4L8604aBM28s3OfPz5s3dhXLPCK3Pnvw+xNF2t3kX2ML
N2l+oKj/fvCTYN4Z/p3luCmX+aPcGI8nmD9tkOfk6uyk8yHC3k/nx7l8fhzq
M1GdbJ8+Ws7FkKuOo/MxqH6S5vpJwfrTF9xqVN/sbTm3O17qLPL53eWKFtg7
OC6Tkqv28ntXG3ySc7NwDuY3dH5Wd6lfKVfk3/v9+1y+T666An2fH98XqCNr
/Dt+fS/L+CV/550PIldXzhfx+zdY8rfkqvrR+QA1F92zd/HsX3B1vfPFDX+Q
cXPfsowf5ZfpBMovC5ufsPUTNj5h8xO2fpD/gfespv5j/AbJ+PXl+jVB+43L
9hvyzzvsn88teqlcdSLpp+S/0+y/g18T72H/5jGxW58UPzfbr+eNvGdgnizZ
lFz1dy/tH7Btksnvzid2E7m6Gcl+4sWFlFBy1Wc8HPP7R/q3TqLv88/nJz8a
j99M+c6naPw8e8zvuLrC5/32yf/l64Gg70476NPWpfbj6ubrvTt+wDNpfTrZ
//04Euq/r3ekJ/1qGs3PSZqfsPXTguw/t9H48PxkpvkJWz+kH+pY6n/Y+P21
3op/UfxD/Wt6vhB6Bv136cFz16LpPn+y0OUcJsQxxP/N9l0bneq029q3fl9Y
+1QnK/p5Oqf93+0f1Yn5u/23jv8t9t9KD5s/Omcvis550H/z/f9p+1Z62Phz
nDLTOQ6S6V7crh9n/nfbj1qfUj9JlQzGKdrat36/rX3QKU4his5+slvtH9HD
xies/9bxv8X+W+lh8yf0qO+j91v7f4vv/0/bj6KHjT+da+nrSaDj/uD5B0Y/
CtOv6FxPzed70rm3Dp9/S+f2uimFg+f3oi7ZOyJ/v0P1ySBPt2c9K9g+6jJG
1WcM6191+r4x9H2Qx9uTHA065HHI5w3o/G/RR/Trgl+vB/jMWdjN3PKin8nV
p4d9f9j4bQqeC6ODOO73T0F/GkznN4ldU1UX/ama6FOg3yP6GPQz6Gu3Oj48
vu1ofHn98PnPdO5U1PlTq+n729H38/ppROtnX9CvqNm/SHHp/nlu/vcF/bYu
+28pLsrh+KgTwbhPP86T2tcch23rH8fPQx+Dfpabvg/yOMvRoGcSeRzyeT7y
v4vdR0N/gj4F+reij80X/UyuPp3iXl2Of+XxO0HjFxv0S2n2Tw0M+s2i/GfQ
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
nhV607aePNdW5DvIe6D3EXkQ8iHkRX/9ijx5Q+TLlGzB+qdXRJ77VuS7+0Xe
A723yIOQD7uIvAg66lcniXzZn+qfkvzmsvwG/TwY/2X0c8+f7uvlgqPGP/BA
p2eXXWuSU51sOXvewpf3u8dTrya/wLvqOrCTsnzk2RvzqFmrv7m+sHJu7Z2D
Y+wTrwi+7Wr7/JebfrpTMb6Rfq9Z/gzL/5Fzn0i/N/PTp+HXixv8nFHtbn+i
w/grmVXKcfXipJ1LjX2T4haYf3j2yoykH68w+kGqPTGTH3fk2W83Rtm/G1ns
l3Lujgrqz+b8XKkfqV5OGNCzZcz9eijl/6AeGerKjqb6fl69uawqqD+b+rvr
pd7YZ50nvLBpdnY9mur3eXUjjX/Kw0Pjn/q2ZcXx/6x41Hk0+yfT+1YpqyaV
qp7SeZTZ/w2GN5pzan5O9eCSw4d/XX7EvTRlzPgv4sz537FXG8bsLh2rXunz
83jnrbPulK6VGlRr9rtPX7b2wKofe+VWdVeMT5pzIIt+ddbgJn2/M/XJsqfi
wQbB2YrKw0vDn/pJ/dlxm3q2+O2+xqiv59Mv9r5x8sP5WdXFejGPVyl5wfkq
cqXgj60N/2n18agSveOSnY/m3Zn9UINiqlfC5ubvlTT8o++lnc12L86kdszL
Fnk8JUZ9uH1P/zP7N/nP39jr1U++t/Irz6U/XlV5+q3hr55+mcH/3dNv3zH6
mdQrnFe1Ztlhpx5QXP/Tq5uYifTbLWb8fms0eP/3GdSKfPXL16qXQ1U/WX/s
owPe9OmoV4i6yFz/86HUena5VFC/NfYJ0t9c1t9If3VZfw3Lfyf9x2X9x7v6
+luU/Yz0I5f1I9KfXdafyT7qsn2U9GeX8Yv0P5f1P9KfXZYfST90WT8k+0GU
/4z0XzdK/w3qty7rt2H5Q6Tfu6zfk/7ksv5E+ovL+gvpjy7rj6S/uay/kf7q
sv5K+pvL+hvpPy7rP6S/uay/kX7ksn5E+rMbpT8H9XeX9XfSn13Wn0n/c1n/
I/3ZZf2Z9EOX9UOyH7hsPyD912X9l/Rbl/Vb0v9d1v9Jv3dZv08j8shskU8g
r4DeUeQRyCdsPz8h8tAJkY/qibwEuuV8jQjoQXkrEgnKY1H+BcX+hcgJT17Z
JfIL5BnQ4R/va/GPrxd5CLgCeSnYvxwa8hfjT32RZ9bJd0LeAX2XyEPo92iR
l0AfJvJKW5Ff+pP/FfIO5J/JIg/5/Q/Jf4c8A/kG8g7oop+Bjyqu3wp5xZdf
RJ4Bfb7IO6gzA3ko2H6y+7nIT+upfmt3kTcgf4g92V+/nUWegXwDeQf0BJFn
0E4WkXdAh7wE+SmXyFOgXxR562GRvxqKPAb69x08eWOdyB+QR0D/QOSZX0S+
6SfyDuhb5bk6It94/TP6xZciT10Q+eoPkbdAhzw1WOQryFv++jjuySsrRX5Z
LvIM6L1F3oH887zIQ6CLfqUWiPxUg+o/9xZ5BnFWkHdAhzy0QeSjylTfmfQT
l/UTkv8Vy/+kn2jWT0j+Vyz/k/6nWf+znN8TDzrpfw7rf6TfKdbvSP/RrP+Q
/U+x/Y/0N836G+lHivUj7+rrp5rlP9LfNOtvpJ9q1k9J/3FY/yH5XbP8TvqP
w/oP6Wcu62ekv2jWX0h/U6y/kX7jsn5D8r9i+Z/0G836Del/mvU/0k8166ek
/zms/5H+o1n/If1QsX5I+o9m/Yf0O836Hek/ivUf0u8063ekn2nWz0h/1ay/
eucmF/btOrelnlNs5G/EYwBXEmj/0/mHmuOfSL7QLF9Q/ILL8QtBf34kMpbs
u15+S6K7f+8jmzo+kVV/kHpOtJFvvnoieWGXCTHq69TrRXfJzBzzr6Y18Zdk
P9dsPz+Yt8uL/yx3zvlns2cXjOyfTs9tM7xTz/zXqX+3+/jB8cOPSPyZXN1J
FH/mxUuXVJB/vPi7Av7z3vWm/gn7NeGP9/60iHuQOHEjv8z4R0q3Jw6sdPK+
NKt8nocz6Sb1Hm/9dlWjH864kvJaJGLij9e00HV+mm7mv/m3aQ593Dqteua3
K/2PX7ribm16KaZqenN+x6IueQadGherCiSXaLHhm0TXa9/g1447e/3Y/6d0
Pv7MnlxW73nL5G8Neb3NlC/zRPTQfns39riSS//YrGvG4s8Z/rdyytnZsZlj
1fj7jp1Ls+E3N77CigwZkgy+rc5xqPrMUTfXj+DS15urxuV9xozv+Lc/7DNu
UX71dOyh6p98e8x5dd4nI8fsMPG9Q2YUeC5p/GWfD2dfdajbs18b/aLyU5MT
G3ybR2+p/euWwvMK6nznDmf9/JLJf9r/wqu9b5Q/5O7/vG3BZsuy6Qwjn/tn
qxNG/nizU/sc/b7/wzkxrMX2Zs+k0aWyf/bzklEmvuvBX+65UvTnvOpTwa1F
3c4OGr/L1Eef0NEddnDMYqd6m36dx03MpONVmgdWLTLzl+N6Sv1IfBUFOaRc
uRfOJz5TSQf7n04Nm7jq6KP1LrsXHnS7/LDFjP+B1P5fdF4/+mOLXyqm1fPz
ffykk8/o9yVebrBk0sdnnZZH2p59ZE463SvP3JyfTTfrv+Pe1qsOvlzSx6+T
JeJb9HrbxN+3XZOuVtNqyc7dg64cKPZ0stu+5cXSGwub/f3N5EKLCk0pqGo3
n1B3zIVzjte+0X/rdDu+fGnPo/75K3W/fP/itP4G/7/7bM/QI/en0Z/uz9St
5vO59aKOP1594JxZP3Q+k+bzmYB7kIM4/oz0C8X6Be1fzfvXcj5hvD8/sl+B
c0NlP4OO+LXKkmfB8Wvk/1Ls/wIebVvzatOPX6xD/Qg/n4vz6/xzPITu6Zv+
uX7xwCHQPfnKx0eJbyvo099qXGZsu7KZVc0+Dde8M6WkajpKTbq/rrGPe/JL
YXP+Ut7rP/+wztSHEL1CVzwzOKHpDzVUwjO95zTsbPRL+HeGjCyS9Z4tpRT7
dzz5q4SPT/XSuu1PnDf2v03iX7p29+M1fupRXs0m/xLkG6/926Lkm7XFZ2f+
eUxR9Zz3XU7Su2/s6NLQjA/kosaZ5yb33phPfU7yVaFSeyekX1tK9KZ8+rGp
fXMsrGf8c2i3eOGPrq+7XFHdUe6XKjsKGP4u/jZ9I7X/tdSc8/1WxKcY+yTk
n22LzlRa9E6tKPtvtwrjy4+9q7i6miqH/OYOHtLqj0f35vHfD/krQ/vp4z5c
X0r6b8b3i2xfPF58Wj7VrHWkaL26OVTXPYtrTliQwawvbz7cWgUrF6+XK05t
TJ0/499sKs8NP7YotmjtYuqOoel3jnjT6H+Ie/PeXx3j5D/fMlU+KmDwqc47
U++sb/Ibuov/9N7U95dQUf7T9e7Srq8VUrfNOz/lasdk9Md/vn6q/Objn/7m
dPLrlWsUoPYr6mYj29/4fGF9NSt1/OP8/kHeWiu4A3kMdLK/uGx/ofhNzfGb
m0TegfwzQeQh0McE8ALnIBj7AOSpAyJfLRd5C3SKH3A5fiDs/DrgE/CH8Wm+
yFsrRf5KEnkMdMJPzfgZdj4q8Hqt3DdT8Bz0RJF3nhX55xmRh0BfLfKSH8ct
8hTokLcgf00WeQz0aSLvDBH5B/KQ//0iLwGfIE8F27/o5hX5C/IY6JBHIJ8c
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
Zv5J/F8z/yf+qpm/kvylWf4i+U+z/Efyl2b5i+QHzfIDyV+a5S+SLzTLFyR/
apY/SX7SLD+RfKRZPiL5UbP8SPKhZvmQ4ls1x7dS/K/D8b8UfxoVv0bxv5rj
fyl+2eX4ZYrPjTr/gOKXNccvU3yu5vhcil/VHL9K8bkOx+dS/KrL8asUH605
PpriuzXHd1N8tOL4aIrvjTpfm+KjXY6PpvhezfG9FD+uOX6c4ps1xzdT/K/i
+F+Kb46Kb6T4b83x3xS/rDl+meK/o85HQb0b3z9O9d3WiTxzb9t8WSu8l+zY
7DeFpL5qJPDvrFO22bkafQ7tN/7xw8sKOGXM922Rc0l7fPPq45+8UEvvSbWv
mv0Vf+8DlXevLqXiYtYt2H/0AbzHn599Ug8D9T9QLwN0naV4ZGWDbArtyPkW
/vwkFF/R88aD+5yuDZ//8qke19yd1YZmaj3M9C9e6huVLfpzt5yF8uoSVN/I
q7tq6g94/TPyR4Wsze+oof5wnt5cJ2VFfES91vnb7zKkiY6/vP6gV3+V46dG
Dt0TN+2lP5yyiQ8XmrUqojIcKzFu2B5jnxh6W0qvUmWuOSUOfvTjV40zqSwv
pTxZoJDBR9TH2GSrr9Ktl+7yyRXjH0//frYN0373n7/7nphLBc/lVhXHVyrU
8MXKqo63Dvzxa/BIUuEDMzb78vU3W9Le0b+TGf+41OfPu7u9edWzT+gZo7IZ
/kn1PRyu75Fx1/aVOWfm8OXjN+pO0wduN+eHdZe/fxB6FrkfdNQ74ToivL5A
5/VV/+US2wfF5PfpSwYvrfd2J3P+Fe4HHe2B/rPcj/49JO3R91vr29D+cXj/
YP8F9y3+nXUO9/y6Vo1cJ/3nJy/6YfpXNVOi1h/ovP6+lfsxP4ekPdDRH9DL
SH9B39ft5O/f7jb+/denpRmYeZLx3+JvPI/7Qb+2Vz2bL1sh//vKvZ+20dCe
2f3xLy9/I34f94O+U/DkVcEXnINs6b/L/ZeBjAe+sX0CeFBK8OFjqi+5S/Dk
NcGXlYI3oHN9H65fJPkTLtYV8IzXH/CR1x/wopzgB/AEdOAF8AN4AnpXwSvg
VznBM15/KYJfvP6CeBiJePcZ+0cNwZOygi/VBG9APyF4JHV81DTBK9CBZ6j/
A7wDfZbgza+CP9UEj0AHXvn5OYJnoBN+uIwf4Ifee+Kizkfw6joB7yLx3jwb
+X/XB9ePj7geK3zttLv1y99/y/GTsf94V10H9cV5f5Y81uTlE2Nyq0G7W13t
dz2LPlHxsRVdy5v60pjf67u7Xs7oVlHDaH6xXqp460cz/qFeE+o3oZ6T/3xL
d2rlXWn9ddc21T9r9NNn+nRYe3plNnW1RO5rZ8ZlVGUyTBp2/2hzPhftH8X7
p8jRpnmT7sru67e1f3puUe77jvt0rz5fZj8vqldqnT6j34fVb1o9VI3sVSy3
P/8fLE/3/rSa5nyryluH9/luX1VV57Yhl9ZUbib8K85/nvDbZfwm/uUy/yL8
diOBf1H45zL+YX2AzuuD8NFlfCT+6TL/JPnQZfmQ+KcbJZ8F8d9l/Cf+6TJ+
EX9wmT+E1Qcj/ucy/yP+5jJ/I/7vMv8n/u4yfz8u+xH783bZr6ADb7E/s5L8
tkXwAPiwW/ACdJx7XVLwgddPbABvIpHOATyKkm8Vy7elZb9i/zaX/ex/X0h9
vHaCB5jXdwUvQC8g83+X4A/Pf3fZz9jf98l+B72m4AHq3xUVvAB9ruxXJfu3
iuxn0LHfcf7gGsED0IEXwA/gCeiEjy7jI+GPYvwhfNSMj4Q/ivGH+E+U/Zn0
M3nOnK9D/Mdh/kP8RTF/IfzVjL8kfymWv4h/aOYfhM+K8dm7+vwxSn8i/qGZ
fxB/1MwfD7xTbm3VOQXU4RdefefXuJXupSVbK61ak8XvP8Yb88r5N1T/T3P9
P9pfmvcX6Y+a9cc3Mh1Yle514Hkk4s2jsZ+UeLBjo+311zg91q1r2POD9HrQ
5Pm57s9m7HvNBhzbvmxbOtU9tZ2r7k/fT3t/9/M7/PZJftQsP7bMObprw8tn
nAxNurVZfSGNPnnmp5H565v4Hq/d8v78YZ5BD6u/uPTTVR+PaFJAPTX9g9kP
FP9/zL1nmFVF0y48DBPIDCBpyFmJIyAiAqtJiohEQVAQQSVLlCBxHkFEskhQ
kgRBJOcMqwkCkjNIznnIOc3x3V1V7a419Sw/z3uu65s/+5p97+7Vq0OFu6q7
t7tLb6deOyDM9j+OP44vH/+6OlOPa2US6z45873e9EgKnebFu7c2xdn9bQNh
PPg4IY7rqwisQ76+mHxRXL6w9ju8/bg+sZ9gGGMRj4L29jbtV/g+iCN/8uTG
4XXLR72tjjP+hNm/itu/OB5Vq8Q1mjqgFmvHLQfvy+T3XCJ+Gu6//vjOqe1N
TuRWddj912ZdIh8VEmvqt+9f+NAnJ5cXyUL1DupQsf7eVTY+hesN1x+uR8S5
3OX6h/EnmvMnK2C+4/zH9YB45qD1FBLSOWi93XIGwXrC9RUN6w1x5j9p7j8l
gfmO98PieuDjg/3PxycO1huuv4awHoX5o/n8wfkXPK7499f8hvlaGdbfRpjP
iDP9qLh+ZPyP4vwPW5+Kr89jUO4RzO9dTH+w9jm8ffgmX0K/7WLyoRbM1yYw
f8/AfEbc735dHA9cP1y+DYb5jPZFEZjvweVxPYSE5ApaLx5+VHF+lNmXituX
zH7S3H5i9qXD7UtsV2awH3j/MftJcfuJ2X+a23/M/tXc/mX2neb2HbN/qR8R
Z/yw4vww40cdzo8yftjh/DDjRzXnRxl/7nL+3HwS/+vx7xm/qji/yvhfzflf
xn9rzn8z/ldz/pfpd8X1O7N/PPuPmX53uH5n/JjD+TFmvyhuv2D/Yf/w/mP2
jcPtG2bfOdy+Y/aL5uvb735nJt8dLt+x/5D34vOD8WOa82NzAvd2436SkFjT
Dpvfum1K7dh7Kez+tz0H51SvWvKZR7+A/NJcv+B91hRfgnoQZ/JTc/nJ9JPi
+onxn4rzn0w/O1w/M/0F3+OfRz8rrp+Z/ae4/cf0r6d/mH3icPuE8ZMO5ydx
PJDf/APGK3h+4XiGhMwKGm+P/aW5/eV3vzrTX575zfhhzflhxp8qzp8yftgz
Pozf1ZzfZfy35vw3m5+Kz0+2vsT8c+gHzdvH1o/m64fZJ5rbJ7xdvP+Z/au4
/cvsB8XtB2b/a27/s/ml+fyCF43F9+fxDWb/a27/M//Iwz8w+0lz++ntPDVL
LPoyqXr//fk/DdqRGPTTIaa/ngGPcMvF/+n94Pdb4fMtqA9xXm7MJ28vjm1m
5SfOp51B+wbs+ON9TuOOHhlQoPo1971kI5O+Mv5v+8chnzvz0JHRrb/5632/
3tq57jkr/xaHlR32MEdi1bdN6Ss/33ziZkmx+dyE2lY/34v8smKR5BlUj5y/
dMn8ejoN9Vt+w5yv5USb+t3Yq20W7Vtt3//uF5szDPnppNvsjdulFz2445S/
3nP905TWfsP7MR7nf9TwWqpIfXFbmZNlf5hN9ZvzwhKrS1dvNV2X+Jm7eEjK
Nn3K2fnxIPzw7aYDY1RMpreer5xRTJd/Z8anI1+8QuNfMXB+yEtq64qhRV5P
kVb3h/dEHPNuPoR+SXcqT9yj9dZ/wv37NaBfoR8Iv9hpQ/kquZKpu9NyT8/2
VZjes+58soiyVr6kC+w/zqn3jCz1vP7XudSmpofG9ClYgMrj+QefpOvQtmnN
ne6PZVbUnLn9b/ZfYD/0VtdZf7Zqg9PXnWzXl3dfcsTal5j33Pn8QBX2Q2K9
Z9WiYnvbHqHn431koRPzvZX+/hl36IH7LzXME0rlf6xeuG+/Nredraac+6Wp
h3C4X0ynmpZkxblsydUXNyulrnDK6o+IBg30xuaJVL60Hd8r3fuh2/XzoX3D
Nln/FfNTc0b1r7s3c3oN9dP44P5QqF8nhnYiHt6u3YIvdT69AfptaUzXmBn7
bH4X2ocjfusS7Qy47u6butHJ9uJv52PNSLKlX4ULbvXbGzOkuX3fKTPuVvcf
dtj5t2lepqWFmoeoae7tUkl63XcfLk8xpuTv1v9F+TJ+QEy/Q6nTaaif2vcT
6E+o331vQJllhWrZ8mu/7FzqRNbr7lsNvtq19uPHzqO7J2a8+NXGXzaNuBM+
t2OUGlWnSqfibybX2T7KVKxWa5v//VG8nlP1fmK155OK+SuOe+b+kWHNjCcz
bH51uoX14uLK5Vb118ZFnN+fU288Pv5o9w+sfJ9dvcHlHsuSqxW9V9SomypC
z95w+FGzdxZRefT7arfPtb/x7mRqRL09WV8st+OLcYXta3PNqr0hkdrRq1aS
7q9a//dWwRnn1w9KpJ6YfnOnmH502PP17pTPVO35UWrp7De/nBxv9UOq8ZP3
ral8x5l8r1/vZXuPuW+s3TWmRX47/16ePmne2MYn3Zi3L2VfeumOs6j94x5l
k9nxQ72E4wLzwBN/Gdl34LGkW6+4V7JMvDm+qPWfMH6U4lGX28W/Oudug/ek
+Qv8wdAxU9YdrhqhirQakXb1lzY/be+Dh+9vWhmiVtdc0PWNPA/ckwVq1E+c
3Y4/xlug3zTUT+MT+3mFBvG3kiuoX4fUavXwt9vTqXzV+9tTft4vnd5gxlW9
b8aZns/1D34ijnoH9RDqMcS5/ilz58aOP7Na/W4+Q2Lx3p1gPXTLykO494/r
n3n1d34yoFE2bc5hyKmq9YjY1rq+td/0xqrPOjeIpHuPPnkRs3LRk2VWfhi9
5pQ29xq6XP+UqtG9yucDQ9WAwDkSj93Gy7L0P//JaZfVrxePvDx6fEhKtTn+
01e/e2bXRzToO3OO3XE3lukHfB+6vxH0LOINzPOcPUZOY3uoftQrmP+ZBfQw
4qtSn8tRff85d2O+Vyvdf+O+szq+W7uOo23+clXoL5CD6k2m3z5MV/qzonWS
qhZGT+rmazbH9R1ykOpHuY/3QKYEOYv4cpCn5lyMQprrpy4gr3H/Ui6Q44j/
uv9YgRxbkyiwI/QWpv8ONi39Zu4qIWqTeT/3bIssc299ccXyr6Y+PJdTc/3T
1ryPa84Rpfel5y95N+3Id6IeOeM/mr72Xt8r7sVC18vcjbHnT4Fec+DeXofr
n1XfFtny8ZKMypwz9pKeCe/D6nd3wDkJ+2M2jW36vvW/Jhi9oHL//MmyDW9G
aa5/whp3T7Zxf1L9sFCmX672TK1a7ui5IqaMzX8vNKvpklHhYarTsn6vHV31
zE0y9PqI947Y+BTKM/AjXK5/SoO8NPzaE/cXkKOsfp0D4qbPO3UYmrmuHb+P
Hw/JXq8M8VDum306zrsUYeNnKA8xPp8S5CTinyV//8a5Jucd1a/h+v3hi5y7
pa+2nj7QyreaoFfQLk+2a+Ci56ssf1K1d9lhTRvcBH7wiZPro1TblnW18aGu
z49lTzoyrb51fva1rM3Tq8bjs9RpcDYb4UcPvTLp3pEU6lLkoLCdMZG6eNtZ
JxucsedrjAC5j3pgwUdNT0xOa/MTQgc/LRb1ew7kRXTWuNXP9JdWv2F/o55B
OwDxNpMejTxXNVTdmrTwTrcKj91vu0TXuPaxtV8+apW8z+aD8U7XgH9/z+2d
9eLE64dsfA/1KeRlaK5/soM9YPiBew7aCYhHbatUaGy3J0498KsHzV01Zfof
Nn4Ces0JyV5t5kdvrnS4/qldtvTm4j+lVB9/8WPh5LcjdVTo+T61z16j/ktl
6nefLq5Q7O65UNVmRNSLkjfs/Of6h+sPjifs33j8J9envFg/1z8cRz0k4UvA
H/KpX2wf6A/P8/8EvJyR32L9/P52oX4Rb8n2f3Ec5Jzn+ax9VN4F/DjgEaCH
fNrv1/9i+1DPSDjXT8L4ifVz/4zjXP8Iz/erXxwfrn+E8fHrf7E81z8cj3n2
zryUxwqJ7zcsUaEca6/w/HRP/eL79dmzbcX575N5ymP7r25+9OniaiXF+uex
/EWhfvH9GzP+h+OT475sVO+LLH7to/IbWPmafzYa9Euh4n7t9+t/v/Yr/nxs
X8dTL4/9ueur4vNh/MT6509vNLL4oFNi+7j+EZ7vV784flz/COPj1/+E1wV/
Bnk1zs9x/4b7R8H3iYbEcv8G/Rr0c7h+Qb8F/Zg2zH8B/kfNAT/oHeb/oF+D
fg7XL+i3oB+zhfkv34Lfg36Qx/8Bv6QR+CncP9kAfsdK8EO4/6HBL8oAfhLn
zyJBH6Bfx/k3vHe8OvQb95/QL2oIflIm5h89Bb9kBfgpXP6jvEc/hMt39IvQ
T2rN/CP0S9BPOc38E9RnYeBHpWL+E/JvKNdzMv8I7qfF7xXXL5PAb1kKfswF
5r+g3wPtdrn/g34N+jlcv+D5bujHHGD+iwP6ZgX4QVOZ/4N+Ddi9iuuXDuC3
oB+Tkvkvj8DvCQc/qBXzf9CvQT+H6xf0WwqDH8P9F/R7kDeayPyfnOCXtAQ/
hfsng8DvQD8kB/M/joBf1Aj8pLLMP0K/BP2URsw/4fxZEuY/ob5CPykJ848G
gV+SGPwU7p/cAL+jNfghg5n/gX4R+kklmH+Efkkj8FO4f4L6bBT4UYuY/4T6
6gCM2wTmH6Ffg34O1y/vg9+Cfsxg5r+g35MD/CDu/6Bfg34O1y/ot0D9bmvm
v6DfUwv8oBTM/+H6g8d3UF8Ex/3wj/grF+M0XH98DfIU/Y5MLP6SFeThYYjj
NGTxG4zL3IU4DdcfGHe5BXEYHn8BPspNBHGcvix+8yrEVR5CnIX7B9ge3P/M
4ycY18E4T8j24PgOxlVQT/D4ymWI+4AcVzz+swXiOiDHVC+mn2pBXGUyxFnG
svgKykuU49tZ/OQ2xHXOQ5znNNMvqBcwzjKExVd2Q9wnLfg9G5j+wrjOJojz
8PgOxmUwTsP1R36Iu2AcpguLvwDfp6IhjtOWxW9QX2GchusP1Leg5/VyFn8h
PhHiOPETguM3GJfBOA3XH1Mh7oJxmEcs/vIexG12QRyHx2/GgbzBOA3XHxh3
cSEO85DFXzBug3kQ1Vn8ph7EVdJCnIXHVzi/NYzFT0aDvMI4T3YW30F5iPs7
trP4CsZ9GkEciMd/MK4zC+I8k1l8ZybowyiIs/D4Cue3ePzkAcR1bkCcZxqL
72BcBfdH8vjKHoj7zIU40HIW/ykGcZ38EOdZzOI7GJfBOA3XH2sg7oJxmFMs
/jIE4jbjIY7D4zcYl8F9NFx/YNwF4zA8/oJxm74Qx7lbMzh+I8T3tYRz/ovj
XH9wnPNXxxjO+S+hfvH5nL/i9XP+i5fn5xMJ9Yt4S8aPcTyS8VNC+1wJV4wf
E9ov4px/Etov9g/XL8L4aQnn/hGvn+sP4fli/3D+S6hfxCMZfyX0v1ie6w+O
D2H8FeIbAef8l1C/5/3XA875K+RNkaf7mvFfvH6enyTUL74/58eOAL4O8BqM
nxLa56kfn8/5MaH9Ij6E8U9C+8Xx+5HxU8L4eerH9+vA+DFeP9cfwvM98oXV
L74f1x/C+Pj1P+FC/hjhQn6WX/4RlRfyh+j9hfwyv/wsv/wqer6QP+WXX0a4
kD9F9Qv5RdQ/Qn4alRfyjwgX8tds/lHC+XdUXshfo/kp5F9ReSF/j/pHyM8i
XMjPoucL+Wf0fCG/jHAhv4xwIT/P8ncJ599ReSE/yy//iMoL+UOW/0g4v8wv
P8vD77D8Knq+kD/ll19GuJA/RfUL+UVUXshPo/JC/hHhQv6anf8J599ReSF/
jeafkH9ln59w/h69n5CfZf3DhPOz6PlC/hk9X8gvI1zILyNcyM/j/BvPv6Py
Av9D/S/wG1S/wE9Q/QJ/ReUF/ofKC/yNHz9D5QX+inCBn6H6Bf6Cygv8F5UX
+A0/fozmj8DvUf0CP0b1C/wOlRf4Qc3az/kfwgX+h9ov8FtUXuCvCBf4K8IF
/o9wgd+j/hH4H8IFfoP6T+An6PkCf0XlBf6Hygv8DZUX+BkqL/BXhAv8DNUv
8BdUXuC/qLzAbxAu8GM0fwR+j8oL/BiNn8DvUHmBH6T3E/gfwgX+h9ov8FtU
XuCvCBf4K8IF/o9wgd+z9jWzj7j85/mrNRlu5MNTWIc3PflTteB7/B3H4d4Z
BXmUHv8D5A7FJTiO5bAejqPdi3aw8H5uluDnEI7lUkA9nv0xwfH/EI5/+Oad
9onuJoXnpvaUN596zR6oh+OtA/1+Htp334PXhHobwXP4+GSGci2hHo6bco/d
Kdd/rD1zSqinffh9Y/gdL2/GJ70yv0vr6V/8Hn/H8ZRtoqIHD7jr3k1S672j
h1543u8OfJ8UfsfxgTW2NR98Kt6ZumBQibLD73lw/H4A/I7jh1fWOXHzcV4V
vfnqgwvD83jaP2N/nUHVS4arFkmbn3knk3f+ZYZyh6Aejl9clXHozEuR6u61
bndjnVBP/c2h3l/hOZ73h3LnoR6Of1aqW5dPh59zVCE18PB3KzzvF72i7e7U
sxLplN+maPV6HW/5nFCuJdTD8bTn03dfmeSqe3N4tZuz3/fGH7FefA7Hb0C5
FFAPx3dVu9iq9dCH7of3Ru463i6Rp334Pf6O4z3K9drdaVdq9W2746+9mz+Z
5/kD4Hv8Hce3Ay+yCz55fqOwfm38JWj9Lyi7GvIgEMf9nbhP/jeWH4F8JeaR
ozxDnMvHHfmapX97i+Wn+s+5n65C18S6W8/Rc1tmT6qA7+H8E/JAeM8XlQd+
xAX+RkWz/BmTz37ZNc9/CPI2ksob+ypUB3+Pf3/ZV4F7kV64Cu7h3hPUX175
t9nYa1T/J3C+QtPA5y4n/Y/vXZmx1+6vRF4HeR5uf2LeCuaxLIY8GcTXQr9X
gXFIW/xJ0XKN7fn7xq5Prp88W9H51rooT3zTjHeknhvIz8LzDez5Uvkmv7G6
yU/33OTlv7ox70q8h39e1GpX47Ib7tC9Pscj33v+an1rP9Rtd/LrsmOvOa9s
69Wx+9GNbuP3q9SI+Nv5x3B/lm7XIXvGi51Te+KXeL8Q3uszt2rNNxZ0/Vv+
4r78zb5YeM+tW3pxtZMhIWpc4J7Qv+1/yz4tUaMDUbpKROdd7WemU5OTdpyd
6A2bn12t7cCpozqkpe/nBOq3/Djcd6+/qffdB28VSK7qmfeh9uF9Zu/D97Xy
XLhUZJy9nyl/7ikn4z575kZ8cmvgpKOJ1Y+B9tnzFRZP2fx0VMNk2rQ/Sh3a
23HC6nHWvrpj7mdzm3y8anOaH5846RdO3jJ7j+X3K8O9bfh9vqXNn43NZvev
F02SZNZy97GbbP+0dokHhiroL8KXBMbvrIvfLylbsnCt5clY+7OqOWX2pjk6
IrOuHL94Vf+lll9fFGj/Vad0sTdnLdmy1jX3eNrx3WTuv3Nn1X7jfJsZzz38
c0m4TwXviVkaeL71b6aacVELAs9PqksF6rf3x88dOyn0k7hkulaJHLs2Vovy
xC/N+Oame5t7Hb32xdS7pah8BtNvOmmsarq/ezLVZcPYPb/ksedvoNxsGGyf
EI77q3eBnOT7Z8xnSOxWkA9cvnYHuYdykMs/lAfgn7tcvmF9TA7T+69h9uVO
Jn9Bf7jA0ztcvlYAuTce5CCXf2tAri4IkrNWvn4Kcq8RyEEu/0D+qM0gh0OC
/kj/kH26hclX5C2Qx+jM5Gcl6BfoBxXF5CPPD1zC5CvKTbjHUndm8hPlJry3
5vIT5WZekKP7mfxMA3IR5IrzEZOPeH/OEpCzx5h8bQ9yE+XofiY/US6inJzI
5OMYkKsHQc7OYfIV5d4PIAe5/IsEuVYA5NwEJt9Q7u4EOczl7/sg95aAHDzB
5N80+D3K6flMPoN+cVODHObyF+VeEZCDXP7NB7lWAOTcW0y+NQa5ex7kMJe/
RUDuLQQ5yOUfyBeF92vmYfLZhfYsBjm8jMnf2SA3UY5y+Tkf5OIUkJOvMfmI
chXvGVzM5GtNkJuzQY5y+YlyEd5b92DyEeUqytneTL4K/i+Trx7/1er/hP1T
xk96/HcbPwv8efxTN7h9Hv/P8rMJ+/+EC/4h4QI/4MdfEC7wA4QL/i/vX85/
sPZ7/GPCBf+dcME/t/GZhPkLwgV+wo5Pwv6fHf+E/TfCBf+XcMF/JVzwTwkX
/HfCBf+UcMH/I1zw/wkX/EPCBX7A9l/C/IUd34T5AcIF/5dwgf8gXPCPCRf8
d8IF/5xwgb+w7UuYnyB8K8s/MPo+m0K89KACX20vkVgN7prafTvjU9d8Wv1o
8g4SwfpH3hb//tKvgf0rSdXIYmnW1c0Uptscvrekai/Ln5pPK7/2QrwK8RZg
X+E5fu+/Nbd8ecfe/1P1cEzbRG+/wDgSxfkRF/xzev7FA2cvxpR/6MR/8VaL
jccuuV2mvFTgyRBr3xm78TT455s99qNgv9r1h/cFB/Brnv2HJt8rRJk4+T2P
/Rm3vUHKTC0ilLHTQjznq/DzFdbDPiLE00M+4HzYn6TvJZrfrv3rhON9scaO
u+nZX2jub9uF/qlj7Bvb/wUji02PbhaujH8b74mfG/0fpvBet27x/ymwuPtj
wmPc0Tce7Fvubrhbu/LzcVecHWr2khsqN9X/4Je5+7LcS6wi52TpdHnsM/e1
71fMzj/srtV/cL9j5nYfrmnx5JH75PNddYZ/YvenPIic0af+hkiV+I2IC0Wj
Q/VPB9aGv4hPQu8Pel0bOy+PehF1qGnBvW/R843dss+tFbDjbjkR8Dua/8dX
Lw9P/ty5Wr5X/2WrbrsV8vyebMpFm586s8aFcrHbHjn9mr6bvtm9q+7tuam/
+uhLa1+1hfszX61YJ8vtoaedgzMPvf/BU9u/pn2hal7ADnrsGj/0hBvcvjtO
Kfg+bvWkCR0r2vza1W81yvdNnieO8U/jPPYVjCfdC9n/lYjRGZ5XIrxciehj
MZvinQajj/56pvM9N/0PY59cTmzvJ8X7UY1/GuI9/yRwv1WEwnvEjH1q478/
gFxAOdGayYehIHfeADk0jMmfFiAXmoOc4PJhNcgllFMhQX/oH1r7aw+TP4nb
GblwCeREZyYfBH6O2tcU5BLKqU+ZfFrN7B8un3aA3PkT5BCXP4lArqCc4fKl
AsgVlDNbmXx5CnIF5QyXLwtAbqAc2cDkB98fqZn8SQly5RrIGS5fUK7sOWXk
zFQmX74AuVII5IxHvoDcKAJyhMsPvH8M5p3qzeQPygWUEz8y+YByAeVEPJMP
SUAuPQQ5VYrJp9ogN1COcPkRDXIrEcixZ0x+fQNyA+UIlx9zQS6gnIhh8uEa
yCWUUxWZfCoGv18IcuQmkx8ol1BOcfk0G+TKGpAzXL58AHKjPMiRjEx+4P2F
00AODWDypybIFZQzXL6gXEE5w+WLYB947B/Mw8T5jPidH0OT1dkZpW43+7xH
rzvJkb+i9gvygcqDPaVxnzD+H4xbfsV8b89fnwO805pgfp/Km/2jIfpeltpb
x3wUoTpv+K1JjaU2P0Tgt+j9926s9frLW0LUmitN30xU/oG7L/C/lV9wvpMC
uePJH9w085Dbts5xN2PV1z69+tkdp2i2mKev37T5z3lNfovT83KzkvsaXnYx
3wVx82ntPy5/hgXu5U6rjPyK0tw+Mv333DX7rsOgf21+SvMktV4e9l60up4z
9qMeX2X05A/2e6P9+ej3I3TXJKn7VHyWXH3+Tau2p8v87fyTtkfyv7bjr/57
s2N0lqov3J3tz94scsj2X9lOVzeu73bZCWmx+NBrneZ67J+idX89UnVGYtUl
UP9Tt27SqDaPL9j9xy83ef6fecVDddaiE7McOhqpzuf59vrOJZY/ul4p+Z6u
Za45sTljZjRtscHl9+PW2Dex68rSidTSiGcr8+R66B4Iv3p2dbG/nQ+W6kLJ
RaP/stv2Fo9J/8FOh9/P/NhtdD172hQq4vaaOg9bReiPzjdN+vPA1VR+VJeu
x99uctvtlW5Z6rHznzm1loUP6tjY5idP6PD2O59ViNLpG2TM0D19OvWwxR9P
N/1s8xtSPIuvEhKbRuV/5ZM7Rz5I6bk/OPujpNlbl7vh3v+pcsWw9k+c3OdO
jVMTrfx1wov/2b1DjNqQ4dn2S12Lee6vPh85eGKuK0/dC3U+b7liQmLVuuzy
HKtOp9DB7U+kKr039xvV7qEbF1pu2YxHN+n9JgbaH6LqVqrZ5Kvi9922JyK3
ff2VzV+b9zi+fUhIVlUybcy064Uye/IHz3/yRc/nBS+4DWo8uLXzwn3nxh+/
9y0abddnzI3tA16//9gZPTnTr3veiXO3HPiu17nDNn/n1u6DKZpsPejM/PVl
faL7YU/+SLVsYwbdH5pcfRCoP1x3XvnwepK3NlL52Kkpxw2c9dwtOnnGxTa9
w9Tt9kOzf9vVzn/Bv7HzO2H/gd5P8A+pvOBfUHnBf6TxF+KzVL/gP1L9QnyC
ygv+FfWf4F9R/YL/R/UL/h3h5tPj3xIu+LeEC/4V9Z/gHxAu+Hd+/hOr3+Mf
UfsE/8fP//Pzj6h+wX+g8RH8Ryov+I9+/q0tn7D/SM8X/CcqL/hP1D+C/0T1
C/4h1S/4f4QL/h8r7/FvCed2yzy2/gX/ht4P7Sa0o7Yy+0nIP6DyGL+fB3aS
+d7aR2i3oB2zl9kvQvyO2o92UwjYUdx+wvWOdhCXD33AroH9F04+Zt+gXbQe
7CRuH/Hzabj8QLtmDtg585h9kw7soqFgJ3H/Du0etIO4/BgHdg3aOXuYfYN2
UX+wk5oz+0iB3aPADuLyJQvYNWjncPumK9hFaCdx+2gE2C17wI7h9ksPsEvQ
TuH2yQiwm26BHcXtpwxgt6Ad84jZL8vArqoJdha3r9BuQjuqBbOfNoLdosCO
4fZLRbBL0E65xeyTAmA3pQQ7ittP74PdgnbMF8x+QbsK7SxuX50Hu+kC2FHc
fkK7B+0gLp9GgV2Dds4fzL75AOyic2AncftoMtg9j8AO4vKpBNg1aOfcZ/ZN
fbCL0E7qzewjgb+g9qM/h/llfP+04H9Q/dVgfc4LXp9Unts3nF8X4us0vvvh
eQfg++rmHCYqz88n4vKJy6/QROO2fhZu45eZWVwS41SI3wjYRxmg/nQe/tnw
ZWlUsFzCv7/sK3M/vHryxfGo+AnhHv+rAdwnr86uLfA09E+n53dnz3Yqb/u/
EtgzE0YMqBJ1d5ezzM33+fJ3Of+cXi3M0eRIxLC0nvO710H8eSHEnyusafjO
w9k2fl0U4tuLIb49tO+p3V0e2/V59j9fHmpXLa3aV/KddMuup9LQTmt/M/uk
YqB+ax882NqjxpRV0arXmVn/GXoxI8b5qf+4fbRp+pCY/8yw90vg7zfVbdB+
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
h57102bSo5Hnqt5xzbz17j9bgPd2QznP/RYJ61fCBflGuMBP0vwX+Elqv8C/
Uv0Cv0q4wK8SLvDHhKeCfq0N/czbVwv6tS30M+9ffj86f75gnxDO5ddg1v/C
+Cmf5xMu2D+Eo/7ZE6x/CBfmJ7VPmJ+EC/Yj4YJ+9hsfwgX7knAYKIpvlGXP
F+xPwvH/lex3hCdsf7P2RSj41Hz+YPsMnkEH/86//AeXkvffMSlKHa6987u3
Ix+5G/O9Wun+GzY+EK0H/1gnX3pVYvXrp9YsOey2qPzjtohZNr/7lWyZTg2J
SaI6fngxbn5UuN6Qfth3l15spfLm3oVUcL5Xbs33z1WfodpmTppdPf8tPOP1
Kc+d5kkSvbFthc1v6Jz3ZIYFZYvqwmdSTe+7uaRe9Lj8kTZ3bP5HiU0H70RF
hCnIQ9R71rw7sc0Be3/I4slXb10amkbh/Xglks950OyBvf+zOXx/8VC64+8v
/ksuvHFgZvin9vy0kqz+rax+/F5v++OV6J9z6XEP6+a8EGfz21v61I/5k/Ae
2H5qH5TD9jtQXnG8uYBDu7D9CtpHeEv4Ht5T72DPx+dCP2roP3p/GFe4XyOV
4vfzFDHjpmAc1WIzfoQ/M+PuwjzQn5vxp/6BeYnzVMP8pOfDvFMwD/VaM/8I
f83MW5zHGuYv1X9x3/ksw1QaNW5aq4IVYv+q98CoqU+1Pf/h2bmu28csz6ie
fN2j5oD2e53CQ9rFDN9l/Ysp/aYfSfZDuHp8t8G9V+dF6lVfjz9R+k9Nz+9e
6bPITh+cd8tuavPrkEKZ9ezqDS73WGb3r328eGS+BelfUvi7mwVnnF8/yMrP
N6FcWOz9AekvFtBpFtaLiytn8287vPvkwL3ML5yztf/TrGLJVLpugyS3htew
+z+bVi7/8Xc/RKl5IN+v/fRk9uUUdn0PvJqm7M2WR9yuH6oPixTIpLN/lajG
mrk2vlr+cK8fIqKTKIjz6ajlf+7+eswWKt8Yvn8RPnl91nE5dfp2IbWunrP7
b/G5ZUrodovnZtV1R8e++Vlje342tFvBe7jQfpt/Ycph+506pjz1D7RbwXs4
0H7Cn5t2YfvVS6Z9hOP35cx76jDzfi5rv9PM9KO+bvrPxs/M+OD4OTC+VD+M
m4JxVDB+tv1QDuaBhvGn/oF5ifNUw/yk58O8UzAP9UYz/6j/bpl5674w81gX
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
n3A2Pn7zh7c/JWs/9t9k6L9vWf/h+psM+UvVWP6SwN+EIL6n2qNfUi99AfdE
33DNpy0/rdaLVe0m33f3LEq14kmodqcE/rf8INq7kCetg/dT3aJ8GCk+cuCP
L+p936yslvjpLKVXrd4emRHlNslzxFFuHPnv+T9uTM/m/8k7bwPdU4M48kvY
Izz+j/mlUv4zFIs19ZxwTfvt/N0Bv1eB9u92jPy39gu2t3jATv5LT8M93qz9
TsmA3L4MeVh2fvrJb7TfJf2/uX7DlaO+TqzOpW/X7PdXbrsrmo5o3S3jM3r+
uVPv7GlVK7neGtDLR5wBcI864skyrDlyJFO8ExY4Z/CG5/7Jtj3uHomaX1Kb
c4zTqsVrN1SrkM/GjzZcD/tpQbEXzsfvhjfYdTnOvbb36eSD1f92Plng3L38
Sj+bfORms2Se+znHte6X58aRCAXnJLs7P+i5tFpbe3/AwMiwjb8ueuQWGhRR
K83axW6fyPhjS0Pt+Oavun/E0ha5VPPni9PdzRKuW8M91ohXKvLr7jpLo9TG
sS0P7sz2yD1yavTDdnm88d3BRZ4uD2n4h/PLjRcdi5by8u/q1cgjTZYtdfGe
bcQnp4npMff0ESfm8NZVyePOuCFwzznit5o26pFySJQ+d+O1K3nfPut8s3zH
5BbFrX2N9u+8Ml/nzvDstnsd7llnz3d2bwzLmvPaVXde+mfr5myPt/rfjJsT
krLnbzVaXnT5/V8LzXhpON/ZWXyn76bYeDt//rjTKi76bCJ15tOuvQY2vOUu
TTew1pJLdv7ERCe5P3V9FQXj6LkfddSjEf1+PVsSzo/OoGE8Cf/z5sTyXY+F
6w5t2u4IKbjD6R/6Vufyn9r+Rbuot2AfHf3845/3LMyvQK6BfLPyOVieeNf/
tUZLlq/67Ix7NfD5l/5u3XDD0zpW/wwLkq9e+YZyDc+PP8r2h362Y0C3RuEV
RPvw3sqsaV47kF/kF9A+iy9o7hn69eUlA9ZW+Ru/4WP/vwd+dXCcIQPhAn8d
gjjINyXJN/hhrGn/DajPym+0K/cF5Pcmx9iXNj4SbL+edy4H5Jmd/xgP9skf
1VL+6IkW11pOfJxUPb+qmk0/ut7pU23amqp/O1978dZfnq0qmlbD/YjK2Oc2
/65M0TYfhl0trnZ17hb28PVUGuUg4qPaTv5kzxK8V/iFg3IQ8fuVwmu+muue
MyXkceZ5Tc4793s+v/7dCvt+X2b45Oaf9QurnUUSOVtXhUH99vwyWDd0b+DR
Ho3vVT8ZSuXb9F430el+y53ZoUjVEvXvOlFPqoUfz2fHv1rKH+b3efVl9Uve
kvFtR4fo6Y0KT/y9sN0fOHh5/pQXqmZXPcz55m7j70fn7BnjOR9S9zDnwztV
3vp5X/mN1j5E+bdi64uWpavcd9LX6vvexCn2+RszVClYptJf8+F6lfHvDujq
bDxZfciZ2Xb9VV578eKfGy+5D8z55U7VEdWXxq3w2n99wu6lzjVyn9N4Te+B
Z+945K+z0Zw/7qybuXZkvlK2f3eYcVMhLTN+fbJALzoPGfGdZrw0ysUiR2t+
P2q/Hf9Dy1OE1IwPVwMPnvj65pk9Tt8HR+sfX2OfP2FPt49OlquhOptx1CgH
EV9evPTLw+Mq0v0OKAcRL79p4rmlZ5PptouH1Onz2zNnw7azW+b1sPPHyI20
ytgpL4EcCaXyZt29cCaY9ee+G1jv/PzLkNgJ8DusD/HjsD56m3WhQ64F1gnN
7y1gPyw3doN71tgRHvszVsif9/PP0b6T7EO07yT5iHLN8L6hYIedYvk5EcAb
ZFImT8bmX4D960j2L+gHR9IPQnwuhLWf8lC5/tkN+uT0iswbSoXvcJ3AfZE2
vwX3JZp7WKPUk7Kpqk1oafNDUO5J+gnkG8o1lHM0PmeM/ae+MXYf8DM2f8Gc
p/vCadnofr7dWW64zf9IXKZeCTu/xgfuczvpxBbaFBFx7o6zZeatJVFJ7frH
+wN+DNxDGufuCtxDasuPPZOkU+mP06rVreY9qXg7nf5t7IlhlypY/uDa8I8O
1v8gkcqXcuy6taPvu11at0jVd7blD/F+gVWdbg2eeCxMVT78+uNs66z/dubH
zzPX35BChY/68PfG15Lrs3DPKOKNL31+652liVVPc0+sm/2zqmunf2/vf93/
5p/7sizPrDLcvpj8xwfZtbmHNR2176VPFxdM93YSVTtwD2m43vhtfKdaZ+39
COh/wz21qvWpJlvOf2bnH8rPrR/psgvnR6n5cA8p4h0vz/vocOFQtTzD97Wd
DI9c035rn5ZrMLn8uHu3XdP+FOqXX6NXR8+0+Q8jpm65/G6lR86tym67OfsO
0z2yiGd6kfOjXb8cceqYe1Sd1e3SDY6bYMcP7c/yP/e/P/frEF0O7vFl7Xd+
M/e0uofz95j39UJbf4OTj7+++uCxc6Deg/DiYWfcBjMSXfi+SajFoy6U/GHG
Fbfd8h9GjTuURE366rveE1Zb/gnlcsotFzo1nHbPHbog04fnJlp+y5y3nUbN
qd8hMseH6fSQjk1n/pzOzu8SgfvukqhYlajiltXhekkrd/j5cWuoPN4/8krg
nt4iKlXgnl4bv0F5Jsm34P0ifv6l1/6CYrGmnuxQv41/4O/xe5D3Hn5zZsAu
zA1xGJv/hPah8Stz6iwB/9jyR8H+vXd/FuyLEuXLfuPfi/lnnxr7V0n2b4tg
3lG3YvmFn4P8vAx+biIW30K5a+JuuWAflz0f3Y+fpHw7IT8Rz7sDuatBDlP5
iBbzJ3y3M68Cuwz9V+qfJ6/VLLWwS0GwH2+4xj+28g/vP5iUYlLNHHMz6Hbm
nHmqv0bSZS967s4A/m9atDOpfYVvDtlRb04phXbOjoB/bPWjsUcy6Mx5T00O
25ZXvzerT6pVlez56ENHZU3++r68UH8o2J+2/WUyF81RKU2MCoHvTf32fpyo
5XdmPmn1whmx013foX00nkNP9Y+8sjoq25vZFbynzjMs7OjIrtZ+Rvlo7Mpc
elrAv7bjh/LR2JU5NdyHQHjp3tX+6DUzl+peo8D45i8n1XCfA9WfI8ugZ9sf
FVb4fe5XDr96KJPVr2b80D+NAD/Wrs9HgfErQ98vCvjHNn8N5aOxSzNpuI+D
t99ZE7BLs+i5Af/cnr+wf/XNIqt7lUH/GO1Eqr/+qBbPf1xVRXUEP8E8P4bw
J4Fz7U+6nQpNLDi+WA49ZGjjh++esvrJjO9LaNeinUu4Gd+cyvghKcA/v0j9
VxfO7d+aY0nSdeOyabhPg8qjXSfZdzWC/M8E+LWE879CEN8F5ST5Bz+Mxe/j
A3EaG59A+zIR3P9r/Eib/xm8PyVMFwvwiPtsfBB4ST//H+XEnyz/O6vhN5XE
b4L/L+5/R/l4FOImryac/0xy/lUW/0H/vYKxi10TXw+l8sV94veMd/TsL8V+
UcZu1VuNHUt4y719+4yZ+cKR5J8aeWrfl0/Son/rAA9I7YN7jZ1bcD9wruX9
3ujx2O6/7b5yb3P3eozeEfCf82rgH+38Wt88y452v9I9DWHIhwFu7tWN0Bd7
lO83YEwyvevR4wtq/il6/2qDKmf7olw01P+SRjmJ+K3OBZd1uXjdleTn1Oob
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
L2sUlD8v7n9zpf1vyD/57H/U0v7H4Px3cf+g47N/UMy/R30v7R+E/XWOtL8O
+T+f/ZVa2l+J/Ku0PxDPB5D2n2H8w2d/kpgfjPy+tP8L4xM++7fE8x+Q35f2
n2H8yGf/kivtX0L567O/ypX2V8H+Ou2zv05L++uQ3/XZn+b47E/TPvvTxPxs
jK9J+7cwPuSzf0/MX8f4nLT/DM8v8NE/WtI/uL9e0u+gnx0f/exK+hnnpWSf
gH5xffSLK+kXsG8cH/tGS/YNnc/w3/Wv66N/tY/+1ZL+BftP+9h/WrL/UD77
2D+Oj/2jfewfLdk/eL6HpN/BPnR97ENXsg9xXUj2Cd5/EGbuPXAzwf+IC/fn
hSCe/fygeVNqJFHJP42vnSn6jjvipfgeeQs8ZeWfuMtmz+1//ONDbv0BVw5u
OGD5v9g3KhY9vjWvim3kzip6LBT8cKvfSrwe/iDz7bTi+YRVq8Q1mjqglsZ6
sL2I559YJLpas6I65vMMyQv1e0H10fzB+16F+1Nx/p7udP3ujOOH3Y5zEw1M
Ot22H+/3wx7h/MCDG4fXLR/1Npy/mJPyJKi8+YudHLh/45xr7ouw/Bz+3txr
ewDua7L+Mbb3jym1Y++luO3uPTinetWSz7j+cC52m1amVJrr7szVc+ZPKW35
b7/7M5rcObW9yYncupZw/2tknU5Nt95LpOqn/qlDtUc33bibC0dlrGL3L3XZ
vr1at2/CdM7KraofrPKHO/jXFWkqpLD9y++f5/erPDve4VGk+6oabuaVm8zM
M6of7y+U+j9LAL/hHvj57slUCx84R795dnXkMxs/WXxNLxidIkacXzivmpt5
6cI8pfJvvjT0wR9F62usp/D+Eb1/O12c8Jjw7SvPXK6osZ1YH59/32xM3H9u
6afOlmFqVI/sdn763d/S9pcvav7wSRnYf5dBmf13lj8Q7m8MQRzO31PS/ML5
GRW4f+ae0zZwT43tP5x/ZRZ+uDptuatOtsv10p8rlpK33/my/Fx9Nvdf+vrY
wc2pF9n5kyPbuk6po9OrycL9b+zeFbyHhfAnOdM+vTkhUr0SMX14hZ8uO/V7
t9x2Y7Pl1wYfb/yk77Nk+mrh9zZ1KPjcyXmlzmfXxtn+7Z0z3+tNj6RQUS/e
vbUp7iX9vs7U41oZe//d+3vLxm+KDVEd2s74LSLRA7dQ8gZ5Sil7PhH2jxnf
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
b3OrU5xOFX65pvwfwzXnux7T+vbgXZL8ns/Ff7V98pCFwEfVfrJ4jtllq39c
7Y/UD9+Bf6n64TfozxT8zjr8/nyt/n1S+3Xz1vwkx+soR7yj+PfV/ErcHvzj
qj4H/595NjNEP4v+T6r/DzJ7knZn2srszRo+uWjV9vHJmWYPev5ZMnvR5S+g
v5sibk/zq1gPeWvwhF8s9b3XNF4T56F+z/hNvH/gbXAecfOzKnlHrPvR4PG+
WOp7zzRelnIgeDteN36W3Hr91fPx4Pk2/7jKD73eeG2cZ5t8LJQbL+dfilb/
udIvy4J/5APwvIM/w+XHGW9N2eo/V+M3A///XfDAP2r8Ny7fFv0hzzf4dVwO
3pJEHm/wl/j6Ba9P0epfV/odvEKJPPLgEarwTeMNEv+7qg/eA/+/LnjmwT/k
csxLOgQ84tu0+c9jxb/+r0SeeK3vD14l5wf6jfEr+fUvwb71dfDIm39+aWVf
oB76x0cbj7vW97/ZeKEK8ieda/xQLj/PeG/K74LnHfw3Lm/KTxH/vFT/XPzP
mn0i/llW/8y+3f/Mqj/Ff8vqv4n/n9X/F/y1VPxV/P8aP5j4r4X6r+L/J7Uf
xX8t1X8VfKRUfET896T+u/jnWf1zwS+y4hfif2f1vwW/yIpfiP9Wqv8m/m2h
/q34V6X6V+LfZvVvxT8v1T8X/zOr/yn+eVb/XPzPUv1P8c+y+mfif2b1P8U/
y+qfif+f1f8X/KJU/EL8/0L9f/FfC/Vfxf9P6v+L/1qq/yr4SKn4iPjvhfrv
4t8m9W/Ff8/qvwu+kRXfEP88q38u+EZWfEPss6T2WV/j5cy0u5YMbuPndDnP
FzaFf6jnC6ZX+np+BfhxvT31b2teAT8VPxp/sXOQav3L+UvS8xfrr+eHFK9J
fgb1Iq+j9l9TfMFU/D/15nOSf8P+PGX+eU2/Qh/mKdB/t5q+9PaS15L0fBr6
HO0/or6vnq81vz5p/j3tP/B4pRli/x1pvFyZ/Ga/NX4ubw//s+hiPF+JPDOU
P2q8Y2kT4yFLyv+yo/GK5VPA/9bX+MW8PfznckfjKYN/XK3PdY2XrTzHeNrS
d8EnRvnWxovm+RFfMn60anyMly2Bpy0tD3uScvN/+3h+BPjXvP0K+P+zjcct
TRf7k/xmPY0nrjjP+OGq8TdevASevPRz2JOUg5eO/S/uNX46b7+m8eIl8OSl
74Pvj/K3jPfOz7f3Nv47b78X/h88egn8eS5nf5Y1nr40SOxb8AYm8AjW+J/G
GS9g/vRF47c72vgBq/cDevFp4xnE9avnvwD23zeMBzGp/feq8RrmncD/B35D
l1Mv2vz0SpuAZ4py8S9L9S/Ff6vlJ2temPqX4r+lWn2M1vNz/F7VZxT/vVD/
XfzzpP654KOl4qPiP2f1n8U/LdQ/Ff+5VP1p344vFGofi/+c1X8WfKGGP4r/
ldX/Ev80qX8q/lFW/0j801L9U/GvS/WvxX9M6j+Kf12qfy3+Y6n+o/hXhfpX
4j9m9R/Fv6q9X+K/J/XfBX/Iij+I/16o/y7+Z1b/U/z3pP67+J9Z/U/BN0rF
N8T/zup/i39aqH8q/nep/rfgE4XiE+JfZ/WvBZ9Iik+Qz5z6izznlI9UvSb2
g9hHpdpHEp9S1uJTwNfeev8qvop877z/ZuCBb23v5w+lnj/Mac17Zf/9+tSb
lFOPtd6/wg01vhP3K1qvX/k39v0P/x5y1V/2++yy1U6r9C/5yD3+HDzllJOv
nf0jj7vfH3znbH8gedAhnwa+dR9/8LD7/INvnnGiPwIPvV8ffO6Uv06ed/Yf
fPM+Psbf7vcHL3slB8855VPBh34g4xPAk+7rC3z3zJ8G/7vLwVvvzw/+eu8/
eOmr9WHP4+OH8XD5VPDAUw7ee+//2ruMnPbDB6rzh73AR0/5HPDUU74D+NrZ
/77gcffxBd89219s4+nXX8fu53L0x+UHgm+e80Meesp3t/Eoef/jbbxc3lSf
q5Y3L/pB3o9C3w/aL611rSr7BeeBEgf+ufWD+L+pOL8N4v8yzzdb+bRr9a0K
rW+VYJesjvPbS+X8BOeNcg5c6eeZ4BPm+fFl4BmmfJidp5aMT8F5azW+4Evk
+dgI8ChS/hr4IHn+dDt4Iil/AHyM4GlM5GmkfD/wVfJ8iTyW/nzko4SdofZB
Ah8j7QucF7qcfIjgSSyU3xPngY6vkweScsZ9gYcx3wZ7wtcH+DT5O3k2Kad9
AB7PGj6N88KqDih4LimnfcLrKP8p+TIdHwKPZmv/3/PzWfJUUo7zvsTzP/6f
zw/4IjPOh+eCR9LXN/g8wfPJ88xq/s4yPsv/wfkveS4pfx58oe/jfPV/wCPq
7S2e1d//ay3e1eWCb2TFNyS+NGt8KfCc1Kpfqvx4+COSH17ZDxI/kDV+QOrz
eZ6Cjx/0A+WqH55orY+Rtf6F6Kes+snPB1r0Jj//GH8bj5LPd7GNl19/0rqf
3HH8MVV88cA15qx4/flV/OH3fjp8h5MWb+TjM+Lq62/dbbf1/PkGznjv5C2e
6uzyjSaNe3fIYXdX79+3Nrx9fo8HvP8jfr3RmFOOqN7fTfbddu1pB3zg/bv1
mO5Dtjmker+u6Tdo39f37V6N313HnDvo5s/VT1k0/ZxDfvNpNT4nDBjyxJXV
+Xuy/lTzZ/2t2tvz+vq7zcajWl/P7/HY4LU65ZGUj5l3yY/2r+Lvh90z+9HZ
P+/m4/fiJxdc3ff0ip9irPXX5XgeHz+Mh4/ffjZe3v+1R025b/tnFzKPJx+7
eODy746s/Cv0x6+P/vr1D7L5ygdCvqfNp/cf4+XXx3j69XE/Hz/0pzo/sfny
/m9m8+nP/5yNR3kI5NvZePn9m+pviv1aqP16CPADxucrfiDrP+n655tySZA/
ejbe14MQP3+qnN8xf+rkIH+K9j/zA9T+l/056f48z+JRy3nIT9jW4lXl+nze
Dh0Qz+9yxFsnj78Gjzflp4OP/BnEN5OnnHLygY9F/Dfiwb09+dIZv0wedcpv
GGl86FOBq5InnXLygbNOPnnCKX8C7YYgPr6r8B+fAL5x5p8iHt3bE5+9CPH5
is/S3piB3xV/Oxp4IeOvlZ8b8eie30Oedcqnga+c1+kKHnPvP/jaub/vAx73
1v7/jXHkNfya+OTdiC9XfPJ34Cv/APkHfwePOeUd5hqf/EOIjyfPPOXIJyiZ
X0Cedco/BF/9dojfHw4ee8olfyar/SznN4We38j5TNLzGa77KL9bzk+y4n9y
PlHq+YScn2Q9P5HzpVr+ipyfJD0/kfOl3KHlU8Pfs+Lvcj6R9HxC8PGs+Lic
T2Q9n5DzlaznK3J+UOr5gZyvZD1fkfODUs8PBF+vxVfI+UHW8wPB12vvt5zf
1PSDnD9lPX+S85tCz2/k/CHr+YOc3yQ9v5Hzh6zvt5xvZdUPcv6S9fxFzidK
PZ+Q85es5y9yPpX1fErOVwo9X5HzqaznU031syX/q1bfVPLnkubPSf5X1vwv
+/b8tlr8jOSHJc0Pk/y22vmz5P9lzf+T/LWs+WuS/5c1flvyqwrNr5L8sULz
xyR/Kmv+lOS3lZrfJvlrWfPXJL+r1PwuyZ/Kmj8l+V9Z878kfypr/pTkx2XN
j5P8vqT5fZI/V2j+nOSXJc0vk/y5pPlzkl+WNb9M8gez5g9KflnS/DLJ78ua
3yf5b1nz3yS/L2t+3xytCyn4uODftfrCkr9QaP6C4PuF4vv27fh47XxP8P9C
8X85vyj0/ELw/ULteznfqOXvC35cKH4s+Hih+Ljgw4Xiw4KPF4qPC75fKL4v
+Heh+Lfg+4Xi+4IfF4ofCz5cKD4s+H9Rw/9bzy8KPb8QfLxQfFzw70Lxbznf
KPR8Q/D9QvF9wccLxccF/y8U/5fzi0LPLwTfLxTfl/ONQs83mvgntP6q5reY
3bo6/p/4dJV/Ynk5vRi3hfinji7n7+B1Qp2/Sr8Kvp4UPxN+iqz8FOK/J/Xf
YW+kcYiPMRy62p+OMnslLUR8yFizZ6rxwf8zPsfs3er8HvZSYvzKbogDoXyK
2VsJdhbtMb8+f18D8TNrmz3n1+f++CTiU3R/tP2pf2rFzyv9yP15GcRHXST7
M+zR1IqfV/GxM80eLj5FfJbh5JV/B7837474G/NnKv4x7o/jEP+i+6PZB6um
Vvy84jfmvroT4q8ukv0Z/kBqxc+X9/bAJfJGiP8y/LzS39b/bunriO8x/HyO
X/9X5u+kXoif2g1xaJTDX0qMT4M/5XL+P+PD1jZ/zK/PvIVlEN+EeBLvXz/z
9/x3+IN+/VPx+2LEb91u/qS3F/y5Vn9Z6/tr/p/g60nxdcGn8Ts/Nfw9Kf4u
54O1+CTB12v6Qc4Xkp4vCH6bFL8VfDopPi34bFJ8VvDppPi04OtJ8XXBn5Pi
z4KvJ8XXBb9Nit8KPpsUnxX8PSn+LucHSc8PBJ9Oik8L/pwUf5bzhaTnC4Kv
J8XXBZ9Oik8L/p4Uf5fzg6TnB4KvJ8XX5Xwh6flCEz+T7I9Z90fkixQT8Dvy
Sbx9az2HDh2WWD5edP6c9PxZ6+9uLvll/P8PkR+n9u8MiwdKOyF/CfFCPj+X
WjyR78OIN6rGB78vQf6U7s9nWjxTsQHyi5inQ/mvLB4q9cTv91i8lMv5O/Ob
vmLxVn7/G0a0xWuVg5A/hPNTlyNezPfXYRZP5td/FPvjCOSvTZL90fDr5Xx/
PdziyXx8gf+WCflzmj/L/MxXkR+l+ZnAyzD+XbPuX3+xeD0/n37K4vmq80WL
p0ujkB+HeDufv5MsXk/yXyv7n/nFP0B+nuYXc79fjPwrzV/9xOIR0zXIb9sa
eYKUv2/xjJ4/iHhHb4/4xmLmbpa/d53FS7p8t4Pa4inLg5B/xv2WcsRjIm92
mfyIxWv6/fl7gfy6U2V/lvz0Wv6p5Hcnze+W/HR/j1vlnr9fw38k/zxr/rnk
72fN35f86KT50ZL/XWj+t+Q/l5r/LPnppeanS/551vxzyc8uNT9b8p+z5j9L
/nbW/G3Jf876fkl+e9b3U/Lzk+bnS/57ofnvkh+eND9c8t+T5r9Lfnjt/ZL8
/1LfT8kPT5ofLvn5WfPzJX89a/665Odnzc9v4h+U+K6s74f4n1n9Tzk/znp+
LP5JrT6U+G+l+m/iP9T0r/hvNXxT/M9C/U/xr7L6V+J/ZvU/xb8q1b8S/yOr
/yH+VVb/SvyPrP6H+LdZ/Vvxz7Pu/+LfFurfin9Wqn8m/m1S/1b8s6z+mfj/
Wf1/8U+z+qfivyX138Q/zeqfiv+e1X8X/zOr/yn+e1b/XfnX1P6T+MNC4w8n
tNR7cHzI5RLfUGh8A/IBE+sfWT5iVV9zJcsndD03xvINK/vK8hG9/tLqlq9Y
7Y+Wz+j1iZDv6HLkQ2buA8iXzK3X75a/ifpIV1u+pcuftXzN4nuoP7SH5XO6
fLLli/r5502WT+ryEZbPWQxk/SvL9/T+IV/Uzz+RT+rtT7F81fIC1N+abPms
Lj/C8lHzHqiv9FvLV3X5RMuXTeNQ3wj5tL5+7rJ8Xbcfkc/r7e+xfNrE+lq/
t3xbb498XX//kM/rz4d84WIu6nsdY/nELkc+cGL9pl9ZvnB1vm/5yOkx1Mfa
2PKV/f4TLJ/Z98Hplu/s7ZEPnVj/61rLl67sm2Ft+dTFr1C/yq5fPf/dlo+d
acdva/naufX6H5a9UZ8L+d4ul/jjUuMnxP8r1f+zb9ZdqdePF/+gjm+1+k+F
+k9iv9fqz4j/lNV/Ev8vq/8n/k3N/hL/r1T/T/ybUv0bsf+z2v/i32T1b8T+
z2r/i3+Z1b8U/zipfyz+ZaH+pfhHSf0j8S+T+pfiH5XqH4n/Xej+K/5hUv9Q
/Kek/pP4hzX7U/znUv1n8f9K9f/Ef67Z50380xLfXcv/kvj2pPHtEn+dNf5a
4t9r9Uck/j5r/L3EpyeNT5f481LjzyW+u9T4bok/zxp/LvHdSeO7Jb8ga36B
xPcXGt8v8ftJ4/cl/yBr/oHE12eNr5f49ULj1yW+Pmt8veQflJp/IPH1pcbX
S/5B0vwDiS8tNb5U9ues+7PYL0ntF9k/s+6fYr+Uar+I/ZXV/hL7olD7Quyv
rPaX2Bel2hey/5a6/4p9kdW+kP231P1X7LtC7TuxT7Pap2LfFWrfiX2S1T4R
+y6pfSf2SVb7ROzfrPav2GdZ7TOxXwq1X8Q+y2qfif1aqv0q9lep9pfYr6Xa
rxKfmzU+V+KTk8YnS/xsLb5O4pezxi9L/HTW+GmJL67l90v8cKnxwxKfmzU+
V+KHs8YPS3xuofG5Eh+eNT5c4rMLjc+W+Ouk8dcSP541flzio7PGR0v8caHx
xxIfXYt/lPjxrPHjEh9dany0xI/X6nuADyGRH4HflBOf6gd+ng4tn3/sn6cv
mnvuou6Qv10+8bv3/7biLRW+1/WAJTv36fdesWjWkR93KTdLZ/daMmqd9ar9
d/TXt9lk1uR10madp9798hvb5Nb7VPykyqPg7fcur9/k+Y6J1zmozb+o7LvJ
49P5o1bv6frz9AeWPm3i4E/l+T4qJs3LN1/QbUCtPs0mT5xz0nUvbZ6G9Br3
0SOb7J5vw/9RbrwXPK/rMNp4IKrzuS7PP/XQSreu6PbvT785Mb+yVhUfZd95
CPmTNL5rtTd26/3qpiu4/fuNW/b6Y8+t5np7w7v7p8OuOuy/z9tvy8w4FMqN
F3U51nVIo9r4USv8rIk/Y4+TRk55+6FuaWH/np++c2mXtN4yV5+99cVVfTTw
06Z1vvzno1bq1zv9Svhd13xzlwPnTeiZxsz6wcJTFnXN8zba8cEjN6z4q4Xf
o8Yv/5Xl91x7UPp78d3Hhix5cHSHdMSPr7lumaWq+TFeKNb76TDa1k+Fj+2a
+4yat+XS+eT+635t/2e7pR6fbb/gwflVfs5LxtfhPCTk8dD1yfWn63PvlS4+
cvjH7xTL7HLU/pM/WCq99c4t568yrLLfjwZvGNcfr0f5ujaeJcd3Txtvv38T
f4u8f4W+f3x/W3l9+VlQ3Hfhw786d5c+adebTr9tmzWmFre/u9K9Z3Tq6v3j
+uT60/W5zJv9Lz37hQ+LDZ7drt+khzuk88e/MGDiAdX+ufsZbz51/5NLJxuH
hcUtN0w8bdY+T7v8lRM3mLL57X3SnP0OO/G5AQ8VH937xMYPP1Ldn/XnuC61
/tzzA8cvu+/ZHdMRw/f53a7HfFo8tMaDxy4e+pLL+w89ZIenhj1SHDN16vBj
T++Uxlx7V4+tu1X2+VxbjyXWZ1rL1qvLx5u+KvrPPusPl++0bII+i56v1Ofj
uuQ6UPziq1/r/FHfd3umjX6zcb/hP9wkDzlo5eW/8ovK//3JxKXOXO7qpRP5
aV466q33r5lV1Zfj+AzEdfT8rIkfaYTpS1/n0KfeP/b728Pm733FGd+prV/R
L1n1yzV/vPGmywcvcR6k1469cstBPd7y+z+OdgvffubPd56/XZpl+szvP/Op
G3f49haLyCOUHrl859EfdPtc/Wms7yVDjT9P17e9N7QHO3QwnqYqPuEl8Fbv
896LU/d9Ya28C/isKZ9v77O/39+z972y/7guhSeI8rNsvSWsv9zP1mN1/1b9
k1X/GK9gVX/Y3vPK/lh/93cHnfTay1V++Zz7+xTrfS7/oO2ThyzC+Oj7++3/
8+qqr9z8mPvHVz3ece1TD63uz/k5BvvLCzI/A9rW3Xsl5832x8/ll2O9DLD9
Pan+JH+6x8cJf3ruukaHh77dzfd35Bf4/PzhqFH58PM+qfLLO53WbcbE9+V8
+KPi63iv9P2Q9y/p+wd9VqwP/QZ9V9l/mPeZAT/UNNNHxZGmn8q/mr6qxge8
7uvb/pnJ9966fl3/Z9X/sj9m3R9F//McowPloh+z6keuH64PXT+iP7PqT9l/
s+6/Yn+Wan/K/lvo+pH9o9T9Q/bfpPpL9o9S948m/jHZP0vdP2V/zLo/iv2Q
1X6Q/a9Wf1Xsh6z2g7yfSd/PDU/ruMP4Y1fIzF/99MX0vZW7Vedzz6Pdx9DP
M8S+HHPkNrs/ds9K5M/OGz+939/u3LiKryMvzJqwb3X92fwQz+zQwf6vyn8T
+zup/f3nsfdte/yhXfKNjD84sP9TYzpX+Azt+41xHbXvm/j9piOfievmPtNH
Lpf9sba+7rD1kIfCvnrA1ou3/47tN+W+tv+kl20/cjnWc+b6xnp3OdeF2vGU
i34tVb+K/ipUf4l+zapfRX8l1V/iP3KeR1Mu+1eh+5fsT0n3J7HPstpnsn9k
3T9EPxeqn2X/KHX/sG/fX2v2sewfWfcP2V+T7q+w93z+YA9W8yPzqvyC8n6U
+n6If1qqfwp94PINTF/4+sZ8uX26ns2nP5/Yf6Xaf8OsP379e62/fn2uG8o5
j/L8IX/jHLufj9O11p/a/FGu83e0jUfJ8etq4+Vy8HH6+8FvyuX9zvp+S/8K
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
/+Ttg/wulwf5XS4P8Ge/P/9+tjU/yOUBPu3yAJ92eYC/uzzA110e4OsuD84X
XB6cH7g8wKddHuC7Lg/wW5cH+Hr1fO3j1y4P8GmXB/i5ywN8tpqf9vF1lwf4
rcuD8wGXB/hz9fztnx+4PMCnq/u3j0+7PMDfXR7g6y4P8HWXB+cLLg/OD6r1
337+mMutHlqvxDw2rT9hft3q8js/Vf2Li1HXosaPhHhC4uK6fwX4trcP/Nuq
f+b3J+AASeOzpjNeFb+Pk/i0FfA7cIKs8W+TDbdIrxiOkTQ+6zjDJRJwikLj
x/bC7+sYzpHXkPg023/6J+A8tfoHuv89KfFjwHUScJ5a/QPuvxdg/+0i8YtH
YV+81XCgvJvEr5k//DZxplp8pO3/qybDr1eq5Xfo/jde4tOAqyXgbLX8Dt1/
NT4S5/LpIsPhCo2Pm4L9corhfPkrEn/5W8Md05GGQyaNDwWu6L9/SeIf+fua
hlMWGn/Zz3DTBBw1aXwo4i88bnQZiU88Fb8DZ82LJD4yyP/09RPkf3r7IL/V
+xfkr/rzB/mr0r6W/yvyWn6vy4P8Ub9/kF/pzxfkT/r4BPmvLg/yOyv90n7+
qvc/yO90eZA/6fIg/9XlQX6ly4P8WB+/IL/Xxy/In3V5kF/q8iA/2McvyD91
eZB/6tcP8l/9+YP8XpcH+b0u/w3qYmxveaRYv/X6T7L/VfOL35dYnhWei5+q
/vRGQf3n4HzXn/9SwX8+lPyniy3upjjE4nDydMnfML+pV0KcTdpJ8lf4/0te
tH1yseTHnGdxQ+kyiyMqe0j+xi8tLqjg72tLfslK+H1DizPKz0j+CuKq0nYW
Z1V7/77S5hddWvI9Giz5JYbfLpeOsDirmn85Xfa3EZLfpO/XK5LfwvfzQbyf
heRPPWBxbYxzq71/ODfC+eucYkfJXznF4tqKiRbnVosPs7iodRLf4xMkf4rv
12d4vxZK/gzfT753O0t+1gKL+yvWsTjAcqjkjyGuL/H3KyQ/CvF/xXUWJ1jm
3VrzsxC3mBDH6Psh5YbPjy35+8GSv8Tfcc6Yt5b8KdT9T+Nb7c/q/Wj//XM5
3veyNa+bnzC+wp8vOF9x+YqW91mMtTzQWv2lZSyvM1ke6WvFy1J/CnmhxeqW
J1p+X+pbIW81I481a/2luywvlXmqtfpQdv1u+WrLc81bSf0p5PVm5PnWzlee
tLxa5tnmPaU+FPJ6M/J8a/EXh1rebnGQ5fHW6pMh7zcjDzhrfaqTLa+4nGx5
xvkiqX/2e8urZp517XxlouU1J+Q5p3FSf2ory6tOyfKsa/EX91jedEIedbpQ
6p8h7zpdaHnY5UCpf7WO5XUXJ1ied/mm1Fc73/LOi5mWh15eJPXfkFeekGee
tL7ZzpaXnuZZnnrZS+qr3W1583lby6PPF0n9t48tL5558lnrj1ne+4cl8uzz
l6T+WeB/+vwH8VUuD85XXR74b97/wD/x9oF/4fLA/6zit9r337x94H+5PPCv
vP+B/+ntA//K5YH/4fLAf3V54J+4PPBvq/j+9v1zbx/4t74+A//Mxyfw7/36
gf/m8sB/8/sH/qm3D/xPlwf+p8sD/93lgX/u8sB+9fEJ4hOr81P7eP2oS8U+
Dey/JvvGxy+wT7x9YL/6/QP7z+WB/ebywD5rsl9dHthnfv3AfnF5YP+6PLBv
XB7Yx9X71b597+Mf2McuD+w7lwf+gd8/sP98/AL7z68f2LcuD+xXv35gv1b+
e/v2v8sD+97HP4jf9fZB/I7LA/vMny+wP/z+gf3g8sC+dHlgn3n/AvuqyX7y
9oF96fcP7CeXB/ZFNb7t26dN9keT/ertA/vb+xfYrz5/gf2VW/tfs99dHthn
Lg/sM+9/YH96+8C+dHlgX/r4BfZ5k/3t8iC+28cviH/2/gXxyy4P4tNdHsSH
e/+C+G7vXxC/7e2D+Gy/fxD/7O2D+Ge/fxD/XsXvtB9/7/cP4t/9+kF8vrcP
4rv9/kH8ubcP4stdHsSX+/gE8fkuD+Lv/fmC+EGXB/F13r8gPs7lQfxjtf7a
jz90eRA/6P0L4gMr/dh+/J9fP4ivc3kQX+fzG8RXujyI7/TrB/GV/nxB/Ke3
D+IHxf6pxTd6+yB+0eVB/KKPbxD/KdevxXf684FXLZFXbZ7wqym/Xl/8TflP
l33l4aV/0i/1e2roBodsTdyKnwXFhsvvufag9PfiyB9fc90yS31UfvexIUse
HF3xM+ya+4yat+XSeaXPtl/w4Pxe+aT+635t/2crfGn017fZZNbkdXD91Wv+
J3jjCvLG4dvbH93Wvw0Tr6P6b++VLj5y+MfvFG+9c8v5qwxbXHbZ5aj9J39Q
4RvgK8xjA/7C/1rm6rO3vviN8nsnjZzy9kPd8if9e376zqUVf6jmj+v6nHX6
ornnLuqenvzd+39b8ZaPilXbnrPKD7LvKv6rph8vfPhX5+7SJ93x7kr3ntGp
a9rpptNv22aNqd5+9zPefOr+J5dOt9ww8bRZ+zxd2nwtrOyLN/tfevYLHxbn
jH9hwMQD/l6u/+x2/SY9XM2P8t8ov8YrJ24wZfPb+6S/3/vExg8/0jW9ut9h
Jz434KHq+QaOX3bfszumSWs8eOzioS+Vhw/f53e7HvOpy/sPPWSHp4Y9Uoy5
9q4eW3frnI+ZOnX4sadX8zd3ox0fPHLDxeVab+5y4LwJPfPYWT9YeMqiSj8G
41fZ1xj/3do+V/9pVawjyrsesGTnPv3eK8b3WjJqnfU+LRfNOvLjLuVmLid/
FHj+avFlXFd9cd0Bnafe/fIblf6dPD6dP2r1nun0B5Y+beLgT2v4/+i9y+s3
eb5jOqjN//1byetRvgn4Ush7M6TXuI8e2WR3bz8T8/NYKz+Lt+/y/FMPrXTr
iumn35yYX1lrQS2+zPgauyfjPeS5CD8LitXe2K33q5uukL5xy15/7LnV3Jp/
Zt8zh0zF+lz9igGrPHbmYJd/o42va7l0Yhtv1pO1+Aw7d+2f+PuPrzrsv8/b
r8Jv9rD3Kq1n71mxUN6vJv5Q8LelC8DbtvaX/3zUSv0q/vU1bV2lebbOirNs
fXn74P3x+ce64Toq15h91h8u36nCLzGQjl9QH1H+k4lLnbnc1Uunl4566/1r
ZtXra34VfD/fAO/NV36zcb/hP6ziPzkfXQJ+0Sb+INWP3x42f+8rzviOtzdc
5m9cp1nX5zV/vPGmywcvKWYfe+WWg3q8VfP/g/mv1u9TN+7w7S0WFY9cvvPo
D7rV6w/PxP/PsnWSP3n7mT/fef52Ljc+1KXS9W28q4w7qNav4rdLhh693bVL
qvyGt03vF9+zfaDsLPr/JfBV7wKeuH3ee3Hqvi9U+Af1IXhmS/LNUn6W6bW0
mum5EvrN2wf7l8uD/Ufmt7a/+PoJ9l9vb9+1/cXlgX52ebB/uzzQ3y4P9ncf
v8A+8ecL9nefv2B/8vaBfePyYP9yebD/ujzYX/35g/3V5YF94vLA/nD5+ru/
O+ik114utp1zf59ivY71/KNh/+/7ML+w8a/XX/32/3l11Vdufqy46vGOa596
aKc6vijr51N5vzZv0zfvgfeqe4a+d/mTeL//ht+PFf0P3mXfd2v5ye3vvz7/
fzhqVD78vE+Ktzqd1m3GxPfr+cld1+jw0Le7oW70nEL1W6B/Xd7ET3a+zTvX
Qbme2FeTbV0Vz9s6y0fI+lL+4SnCP3yy7WvlGuAp3cD2Nx+/DU/ruMP4Y1fI
n76Yvrdyt355osx/MD/ev7OO3Gb3x+5ZKW/09H5/u3PjVWv+m+7ffxf9bO9n
17xmm11AXtZqfc0Q/bym2A9/Hnvftscf2iV/68D+T43pvAr77+Mb2Efevonf
u4nfL9gfXT4DeRP32Tqq7Y/QCxl6Im8v9vlHppfyq6an8ouin8gf+jL4Q/e1
/cevT30BHmx+uzx4f/z6sDtoh9T0w70Y/2Gt41/hS8J/rfLA/nQ51mXawNZp
zb/7PeyLt1rtC5dvY3otDTA9V5NjX+G81J4Pz5XwnLX7c729G/C/23el/1Q+
x/pdXGvPUWt/tI1LiXGqj2/7+itTHugHX1+BfvD1EewPFX7Rvv/k9w/2B79+
YB97+0D/Vfhd+/rZ2zfxNwb619vr/GH/8v4H+5PLlT+6hi/g716t+sflvzC/
sHzE/MSaPPC/XA69nKCna/jG47CvZ7Ta1y7HvKVk81iTc7yhB2vPp/zcKp9r
67a4zdZx4J9U+l/lU6zf9BNq7be0cSkxTrXxC/Sny4P3s2i4v8+/9l/9O8UX
1D/sanZn0Rt2Z2/B107G+P8E47+d+GcDsd7JO7qe+Id3md9KPxbzWPmvN5rf
RD8qd2j5LCiOMr+tNN7t5cCfUflvwf7j8sD+8OcL8BdvH9gfPn7sKeuf/BTj
RHmwv4p+i/lhg/3d5cH+7uMb2Edy/Zr943LuD8u17g/ef67/L7eufx+f86B/
u0H/LhZ8S8evj+Bj8LvKbc0Py4oP3wE+280wbknwqT6y/24q+NgThtuVwPFy
X8HvgvXn/etuuFX5Y8OxcoeWT4jfef+D/d/lxGfmteIzVXxe+/ZBiN+qPLB/
Kv+3ffvG5YF94/LAvnN5YL+5PMAvffwD/M3lAf7m8x/gb7I+a/iitw/wQ28f
4IfePsBfXR7gqy4P9j+/v//dis+5PNgfXR7sjy4P9n+XB/u7y4P93eWBfePy
wH5xeYCfVdc33Ch913CkpOc//c1vTPAjfRwov9X81mT733vFc+K/nmm4WboC
5zZXCH4W7K/ePtBvLg/wP9dfAf7n7QN80/sX4JfePsAvpX3MTx7guy4/3HDD
YlPDEctd5fwuGH9vD1ypsH7X80964LzuacNByx6Cfwb2TWq9fqX/FP8J5j81
3N/lth+tiPeDeSlV/wP7yvVnsL+5PFj/4fwfLfZNsL83zZ/LA/vU5bitn1/0
E/8vsF99/Qf2g5zP0Z6s6tTI8+daHuAXlD+z8/Rfbtfl43KP15c/bdpvu6cH
1t1s2w+/XuVH/GSvOfNv6t75H35xnxfHDlg23duWpzjZ5V/949de/NNtz5T9
8piLdlm3dzIevTo/vdbBoXxj5DOybofx1VXzw3rbO6Bux0Ft9bqr8xnyHoyQ
OqKU5ymPbNDvd2t6XVTUQ3A5f9c66np9rVPq7fH7pMvmLnh9XI+EOkM+Pqx3
yrrq0+T66HetzhHlW0jdhcmox0D5QJHPFDn6lbUOkvev4f68LsYxsZ4E5eT1
Up5DyjFveTF4x6zeeqVfyUe9EXh5brX59/ZYlxnrtMD6rPArW3d5oK3DAuvP
r491m7GO0/22fr39hCsP2XDr0R+Wcx6fver49A+99+T5V3ya/+7j98n7e36w
2R+65Mt/cfWzXc/rnB449ZIXBj+Xvf2CU0f99xlHPFZ89urPpl545yppk7GH
Dzh7RuW/Dmmzy/vm49rs9NnlDTvs+caoOyp+yk6jPzyj95z18jfwfz1u2W3+
/K0q//tnaLfPpHPXvbl3r/TOhtfMvu+s6vztZ3ulvTZer08+EzgW7Elvv7jz
ZfetNqF/VpyF8lfg9x+5/cInP+j7WbEr8ADKBw/Mh0+aWOUNwV/w9vz9h0O/
uc8vz+ueiKdSzvtu9cyJ5y3Tb9nUCfYS5eg3nyPRHqb8m9bO7SrYW94/9LvE
cyT036+/v/XL7fp58EOk/8WW9pwJdr7fn/baZzaOCTi5yzGvnOeE+XU55o3z
X2D+fPww7wnrIGH+vT3WZcY6LbA+vf+LbN3lhbYOy41s/fn1sW4z1nG6x9av
4pf4/2h/+ahUO+mLysmLSp7UE6Q+4gDsH9w38B5X8XHS/iRpz31F83Ap577C
uq1aP/Vi7ktBe+4PEb8G69lqnVtvj/2B+0KN//YLtleeIMq5v0wL+kf9Tb1d
q4+DegS1OgWQc3+K6u9p+yXCf8j/Z50TrY83Uvo3QvrHvNCfS50Syj/DvkJe
x8+E33IM/v9ktB8j7cGvW14heQKUc/94EPvGhvibcv7/lUF7nsvrOT3lszqO
uXDfdV4uVz5h1ugz9uiY+Dflb+D/YR+mt6U9/YGXECeh/oHFL/XP78y+Yd5q
I3pn/q3tNc6Ccupv9XMpJ55JnFPji7g/6Dkb5fz/ixvaz0X7m6U9+8N9RfHt
70N/Kw5BOc6HSuIzM8Q/5f5AnKxWfwz/Tz93urQnrsZ95XZpz/2F+4riA1fB
HxsDP03jK29ow6ffL9/57S3vHbv1J/435fTn1M+jHPEdJeI7ilXEP7nz/K+d
+aWu3fLvD3j5jCevfq3k35TTn+kifg7lHeSj+0uTvJVvsS5v1Qd1eau+a+f+
139eX/zb18//7vUvaclnD9sXkbw137ad/rXsF/96/5vGv6n/rfvtv93/8Pmb
5rfp/q18Vf/6/Zvm5wteP5yf/i3xHnV563laXd6q79rp/7DPxyP929cP2zdd
v1/LeUrYvun5w+u37jf/ev+bxr+p//1b8Ph/u//h+mqa36b7t+JV//r9m+bn
C14/nB/ljXU7FfIRUvdR8ZGx0N+w+/LJwt8gdbmcr4JyXjfCj5QXBvmmlf8M
fwbfqGdb4ROj4c8ch7zT+chDpZz2LL4L5a/j8+E7nyLPR/0S4T98Ltrd02T8
6D8Rp1H+4Yug3/CdviL86rSfiR8+JPhh0/ix3xG+1zQ/TeunaXyOx/yMDuan
af3Qf4rwQ/qfrHMzQMZP49Y0v0TPnRQf0XOdXyJOmnKNy9b42u+3ntvV8CPa
j4wTXg5xwpTTn8F3AT/H29MfIg4OP8nl18OexXexwOzcL/x8jBejHntL8B8+
F+3uTjJ+9JfwneBH+fjTf+K5yKs4J6Gc9jK+03VmR/v86vh1kfFjv2+Vc2jp
f9I4zi+6fm6S8VF87E3Mz1tyTvFF1w+vG+GHmpf2rIxf4/sr+l/x7/+t/ic+
QZzlkgb9f6Xor/Wh/9cP9D/xrRP+Tf2vdVuVn6hJv40U/a/7Z5P+p31LP2Cw
6C/iJRt+Qf2v49ek/5vm53+r/5vmp3H94Lojg/7r/rnh/1L/rxDo/8ugH//n
X9T/Greo+p/+PnCDorPor5eg/18K9P88yVvZukH/v9Og/8+U56PeuSnQb037
57+q/19q0P+/F/2/ioyf7p9N+pP71j54jpX/Rf3P/ZFxTfNlfHR//k/rfx2/
V2T8viD+n6LzbfI5sY4S6pH59eeBTwn1/5L9XeGrA3GeqTwQlFP/Rucf5HPi
ueglUr/wQPBBaR1uyoX/pc4/A713DXg4UO/e5U34zY44n2V8WOs4VvEN4I9C
/6vzNcZngn8K+v/Rqn8tdc2XB/4/W/ufyOP7FHh8vX8N+pvn9tH+P8v4PJLy
fFAOPpGsPCOUg08iax0xyrcEnxTqXJRaH4J8SuTpuAw8Hd5/1KVgHTGt30e+
p87Co0H5oeBjQn2FdC14RigfAz6uvcEjMQo8EpSTz+tq8EhcBR4Jyvnekofj
LvBwUE67cxh4NkaBZ4PyoeB7Up4Tyh8AXxR5TiZYvYtC7u88Jg+Ax4Ryt3/B
U3ISeEooJ6+f1hH09Yv6EOTxGG31Prw9+dBQHyT9EjwdlIPvJGkdQcrJ98W6
KlrfIoEPTXlCKKddhHOq4gqxj2aCr5Z1FqHnavqpAz76/l8JvlnUR01/snqp
3v7SFv1a12/Uj1onnPJVwXcb2Yfky43iR6j/+gnPl8vFftX3H/FF1GvUc94/
4vPR/sG4rki/4R9Hsz4m+HqD888OaTPjM1b7O5GHfCB4yCln/FHD+Wu9zjzk
D1u993Qn6sC/gjrwlL9s9eYz69A/hDr0lP8YfLi3oq6S8uMsC75d6sVOUp8J
9dq9jjvqBVXrC3WhUF8I9RrfcznrS1Evol6Rz9+Z4Ks9CXXo30Qdesq3AV/x
s6gzjnpJLiff8UjUGUc9Jr8+9d82qNO+I+q0U077kXXYf4I67JQvAB8u6+C/
gjr4lF9GPl2pgy/3r9W5p5z2n9axp/wW1FVCfSzoqY+q9YO6OK4XV0Cdd8jJ
F32H1HGnHPXwE+axVp+HfMjUi1pfinzRrCO/P+rIU8767BZH9pnzWVLO+u7j
wY9t/LlV/IR98/3smXg9ysGHkMCPQL4Ev/4LsB8Wz22zG8qTzY7Irf1zvVZe
IvEjX9Q/j+xD6rdIP1KvWdzkmoiT6ONy8oFu3da/FwuLn/yc/4V615H9i/2h
iPYH6qNIfzadzzGvf6HxL6cvGR+zPN9HRbrsBwuHv9QpTb6r7/2DOk/z+8+A
3ov2p1fBpzHZ9Fp5huk5v7/zyZndRzvQ5ZehHvVDVh8vnWL18nx8WO/6YKuv
V4y0ent+f+rFR60+X3Gh1eur/A/Uiz7G6vsV61q9P5f/GvWor7P6gPmPVi/Q
+8f6l6gvmP5k9QZ9/PZGvXHUL2Q9w2p8UK8c9RNL1FP06/dGvenRVt8Q9Ror
/fgE6lWjfmLubfUUXU588Sar35imWD1H7x/tx0OtPmOab/UaXf5N1DNH/ciE
epIuZz30l61+ZXG31bP051sV9axRXzKh3qTP369QDxv1K9NCq2dZ07+on5mu
t3qaNf37TauPWXzT6mX6838P9c5RnzMdYfU6vf/fQ7111PdMz1i9z0q/se61
1QctVrB6oZX9hXrk2eqLFqdYvVG/P+uhj7X6pBn1Sl3O+rsrWX3TtKHVO/X+
aXyd6rem+IadWvzLduwv+4y268ynvvfn4/9f2m6d/0p/ml34OPlYK3lL/N7s
EnxzLt+ixb/v7nqE8kGwVxv8+xTp737gA4nsX+KDmyG+7xCJ76P+pJ/7lMSP
U+9aXHXHZHzQL7q8CZ/cHPHjUXzjo3jel0zvFoXpYZcn8GloHUnKDwFfB3nQ
UQ/b+zcM9YfXtvq/xdtWD9jlGXwXWkeS8uPApwFemzzN6hFXz4f6zDdY/eLy
Natn7PIF5EtBXfhpUr96OPhW+Ltd/3P2xe7Gl/F7q5/M5/H+XQm+DdY1Rr1m
b0/78kdWH7q40+pFu5z60eqAPleiHrTLnwYfC+pTp+5S33sd8Lnwd9TL9v6R
j4N107eQ+s4jwefB30+xetk1/xz1uVHv8r2afjS7dCn4569U+DD4WrSOLOVf
BV/MxfAT7P6Xin/fMY2w+uPpUqtHXq3/n4JPRevIQr4T+FzAH4D6kxW+3xP1
v1+y+unF2VZP3eW06yL7rtX/rONrxOci+2kq2kX6D/9I+xbnNNX+O7LFf+4N
P7KK/2z1n/sCR6zyDxh32+T/046z/LbqfOMA8AFG+Cb5BBv8f8Yf59fpD/P5
oB8PCc5/prf4733ybWYnu5x5L9H5zA6tuGMtPpv8v7BbM+xYl5OPL9J/y4Dv
j3oTOKC33x38B0cY/0D+nfERVOsLfHnGc9YvEc/y9Q0+PurNacJvT36InYw/
Ia9qfAou3xJ8izOMnwE4Z6Xfna8x0J9ng29vfeNvKJU/oTv4+vCcGXwRLuf5
hPGk9c4rG1+FyxGfkK80/gngkNX8rg4+x7WMH4M8HD7+5IPk7+Dr8PafgM/P
/Of+NX4J8gFG+pPnKhONHySDL8SvT/34tvF/5H2MD8Tle4Lv0fg7BiTiwf7+
gG+SehP+t8u7gl9jvPGf5GOMD0Xmt3+K9N9Y8EFSbwJHdfmu4B8Bf0sGn4vL
4X/lBv8rR/4X7cEG/z9H/j/twwb/NPOXwD8tGvzTMvJPhV+gdn7F8+8I36X+
a8AHQv3J527AB3KED5AvsgEfyRE+Av88R/sH/LOywT8rI/8M/m8R+b/wX3OD
/5oj/5V6M/LfyefQ4H/lyP+C/58b/P8c+f+0Hxv809zgnxYN/mkZ+afAR8oG
fKSM8BGeyzfgA6kBHyga8IEc4QOsDx/5v8BPcgN+kiP8hHoz8t/pl0X+GfH/
yD5p9X/vL3BOUsmh354N/LvW8+uqTirlredL9fNz1092rsFzDr1/Mj/zA9hr
VfwGz3+UZ5pynh9F+APPxy5D/tVwyb/y57FzGTxvpd+o/8xvfrTEOY/LeT42
U3gEKf8vnB+Qx+FQ8DhQDj6G9AB4GnAOUcPXXwYPxu3gwaCc+PiR4OE4DTwc
lHfF+UvkH/P8hnYf/WQfH7SL/COeH2whPBuUU/8ozwXlPB8ZIzwWlNPvi/CD
CTwfAg8F+Hz9+Xi+EPmPPJ+gXcTrSf+LR4UnhPJW/7XiCaGc51v7gAcD51yV
fsT5zgDhEaGc50OvgkcE50Qu5/nWV85q5fGgXOsW/Kv5qdQrkX5hXN2SDdvi
SsprLc7E5a3xNfXzZ8kPquUXU3/Y9+zyDYsT0funxy0upDT/rrIvGD8T+d+M
v4nqTzC+6KQgvo/nJ5F+4HPRLkWcjMsZXzQXPKPbgmeU8uGIv0DcBeMwfPwY
vzFKeDYoZ3yC8phQDr6UjLiCEnEGLmf8Cv1G6hHKGf8S+Y/T6G+ONJ4UxFG4
nPEXkf9A/XGX8JRQTv2BuJIScSYupz9EHpFO4BGhnO995F9fiviMo3Ed6hHK
70R8R+RfUX8gLqVEnIr2P50sPC+UMz5IeUwoZ3xMh7eMBwZxMi5nfA15YBBn
4/IfIT6IPCzdwcNCOd/7Bvw5R/gz36vIfiBfYaQf+P434PepAb/PDfh9WJ8A
+HYR4dtN+X043wjjS/h7hM+TL7ABf80R/gp8O0X4NvDpsgGfThE+zf+P8Hng
q6H9AHw1xBeA75cN+H6K8H3qjwb8OTfgz7kBf84R/ozzj9xw/lFG+B/1RwP+
nxrw/9yA/5cR/g98u4jw7QXki/zn5yMpOh8hH2iEz2teVIDv5gjfJZ9w5J9I
fnHN/uD5WwM+nhrw8RDfAD6eI3ycv0f4MetjNZwfNNX/ShH+DXwzN+CboX4C
fpwi/Bj4b27Af8sI/+XvEf5NvucG/DK0P4Cf5wb8PLR/PH7+n+O7uQHfzQ34
bo7sD/IJN5wv5Mj+IT7dgK+nBnw9N+DrOcLXgR+XEX6M84fccP6QI/0E/LuI
8O+RLfH1/dOqpgd8fFvzgzqlTc1OqemvML695fr1+M+DIH8D51BLSf018c8Y
J1C7f+TfeHxZhM+0PF/d/2qqT8D+TRhw9/TrBvZI04bPOeTQcX+vPX+H2Ufd
eP7OS6cf/fmHM3c87q/e/0N5PvnQ3I9eO3vt9J23L7jnxEdXrY3/kysO33vL
v75a9L3rx4+udH0tv7ZcstuNHfdd2C2/PvmC206e3rfW/xHLvbDtsactn344
6NhjDjj71Vr/Rlq/CvSz1h7PxeesySdstVPfs3p+UHTY8uZJt27ySW1+3rhn
lXG/f71L/v4JU49fe2i1f3H85li/U4fd256j9vx47jTTxqF2/eOuOvCK0zqv
lHZ7bMqx0x6p+BV5/TN3mjJizItLinV2GTnthw9U8aOU72X9Sq9bP2v3X/L1
tucqLrHnrLXfyeYtYx5r87OR3bf4pfWj1v/drd/l8fYctfYH2ryVB9s8VuMH
u+D3ti8jD6Rv1X/I4TfQjyhUHuWf8PpRfPbBrXYJz6Fr9/8r4tI3Q7yNXj/C
P9k+wk/ZPsJH2L7p/GvSup/ccfwxPdPANeaseP35i2rjM3DGeydv8VTntP2k
ce8OOexuvz/rL3zvp8N3OGnxRmnE1dffuttu6yXt35Hf2vD2+T0eKEb8eqMx
pxxR2ZcHQX5tv0H7vr5v9zzurmPOHXRztX/y+pvvu+3a0w74oJx0TPch2xxS
x6eS9atAP2tyPFd5mz1nffwXTT/nkN98Whx8woAhT1z5bm18L35+j8cGr9Up
3zZm3iU/2r93rf9nWb/TNfYctfk/yJ47HWfjUFs/Q++Z/ejsn3dLL35ywdV9
T3+9Nv5rj5py3/bPLiyOXTxw+XdHvlfrH/qVJlg/a/fHcxUD7Tlr98e85e/b
PNbWD+5boB+19n+zfpfD7Dlq84d5S5hHfz7mdUX5Xa9LXVLNf8D+WUT7J+33
6P3Ei4D8ttUT48Qpp90dxY/zd7PTeyXPA4H8CcS3RO8342Mi/FJ+r8XPMP4C
dg/tI58fxm/APiotz6LCBxa+aL8fZXZRGmt2kl+f8RGw22jf+fOvgfgK/g47
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
74g868p/mjQv33xBtwFhfa4Bnafe/fIb22Rep5WvbkHxjV7jPnpkk93zRk+c
c9J1L22eeD1dvxH/Kdfv5PHp/FGr90ynPbD0aRMHV/ERTfx5h1112H+ft9+W
iG/o73ESlKPZaOPf6J6MJ6LCJxF/lYx/e7n00zae7Qq/Yn5Ll+efemilW1dM
P/3mxPzKWtX5EPNb+r2xW+9XN10hbXXLXn/sudVclzfxZ6zz5T8ftVK/3mkN
8JaPBZ855Qv79/z0nUu7pD1OGjnl7Ye6pfWXufrsrS+u6v+MmfWDhacs6prX
fHOXA+dN6Jne3GjHB4/ccLHLwa9SRPwq/Wef9YfLd1o2nW3rquhq68zlTfyN
Jl9Y7n7Gm0/d/+TS6Z4bJp42a5+nq/3pa50/6vtuz3B9cV2NsHVZYJ369df6
zcb9hv9wk7w5rrPxQSsv/5VfVPjCt4fN3/uKM76T2U9eT9ffTyYudeZyVy+d
5h711vvXzKrq2zTx33z09jN/vvP87VCfbuVs+XcV/kl+yuj9ZXxftL7s+6Uh
xj+zVDKemldr+vP3f7zxpssHLylePfbKLQf1eKuGbzz21I07fHuLRcWUy3ce
/UG36nxk3/denLrvC2vll8Fvv4vw289s5V1J04R/eJldjtp/8gdLpfnv3HL+
KsMWF3utdPGRwz+u+KN+NnXq8GNP75THXHtXj627dU79hx6yw1PDHnH5dx8b
suTB0R3SV5bfc+1B6e/FET++5rpllqrm/6T+635t/2e7pe/mPqPmbbl07vHZ
9gsenF+vv23z2w/6p8J3u6B/u1u/CvSzwjfx/mxg7025u71Hfn3yxjwd8F9/
UX6gSD9yfUXrM910+m3brDG1uP/Ch3917i590p3vrnTvGZ26uny9Z7frN+nh
DqnLm/0vPfuFD4vzxr8wYOIB1f4G/V9E+h/vZxG9n1xf0fpt4gd9ab/DTnxu
wEPFKyduMGXz2/ukj+59YuOHH6n6f+TwfX636zGfFn8dOH7Zfc/umGas8eCx
i4e+VPn35L0O9MMxtr64rgqsM78/9F+aa3qv7G96UOc3R/PbxC/7I+wv4ftv
n9F2nfnYz6v9H/tSNj34Xmn7Y73+zYDd3x100msvF9vMub9PsV6l/7g/fuf/
vLrqKzc/Vlz5eMe1Tz206j/XU+66RoeHvt3NeTQoHwh92bC/p2j9rm36N0X6
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
mHVmKWe9Vb7/qP/g7Z9FvVbX86jjSvnzqGf7PniO/wd1bn38WM8Jeetaf+01
1CudDJ5s1L+ozrdQ7xXzllkHlnLWhyBPtNZf2w/1Vp8FzzbrsFK+OfLzzwWP
tNaPon1zMr7VvtnE6s45P8B44R+f0MIXwPe/wn9RN6vk/xmeWa1fOT9Nen5K
vUb9p/oRdcEz6oSnJXPb6oP7+qZeox2t+PFd9j6XD+H9ftXe95r9iu+0udiv
ov8L1f9N+IXh5R0z9d5Wxq9a04+0/1U/2vj1SVNwH8O3q/ovVn/pXa/DhPpL
Lp9pvLF+vp6MP9blM3j+Dr04TfaHXsb7iPt/VIL/0dujLnxmnfj/h7J3D/h0
qvr/bx6nxjhNiHGa0OPMmJnk2LWdyuORb+VYCd9iZkgoSsnhrqc8YswQqXEo
JaLIaXKuvURiTsZZIcygmqFGUTn//Ga/3+vqeu97dfnOPx/u9bmuz3XYe+21
1l5rvdAf3t8v9KHNRR/r24u+bP2PUhefx6KP0oRSH9/uf5W698w+PbNK/Xs7
vkrdfPNt9Fm6q9TP+/XdXOr67Vz0Obqs1Pf79d1U6vbTedCbO5f6fT9+/VL3
n+ejDxLq/9vnU/oe2L3oQ7RZ6X/g50ffAbdPDyv9B/z8S5W+B8Y+WOh/4M8H
fQ2S28mlv4Efj74I+QD0yUJ/BL++0jfiLbsLfZB+XPovtONv10V9J/JZ6HNU
rr/1z9D3we2r7Uv/Bz/+xtJ3IrPPFvpPtPLSV8L170Olv4Rc//D0fvThuqT0
p0jd63+pWQV9ltD/wuWPlL4c+WPoo7Vf6c/h8hVK3w3vr3166b/h13dU6duR
9kOfLfTv8OOvLH1FjH2uzij9Rfz9om9IYp8w9A/x49F3xMahD9ZZpf+I//5h
6Ff4KDj1sCfb/eHu/M46v8sn+S3LS57WwmYK9Omh4NB/TfxH8iKof39MjgTk
5L9SL6v9GPTH9uOZ1069TE4E5bxucGKq/T+x75Lad4+Ch0e7eSo4eZTfg+M+
jH021otQDq6k2HnLyvVX8eOB7vXzfQ0MlO+19vPjsO+3AJ9c7XvyLh7F+uYc
DP5+N7/FNL9lMfA4phX9a87pgPx+9E/avvThScOkv+D3wbt4EZz3f4CDQbn3
Ryt9emyW9J+fCV4F+z8NA8eCcvQFcs47ORzd8/8+sy8U+4hS/hXwIJiH/gFw
Iii/BDwHcB7YP6nVP+BNsA6BHArKyYuYVPosJfRXavXj/MITuROce3JG/PrA
26B+PBAcDsrvAK+D+o8cD8pfAs/kg6XPVN4dnBPKf1r6XjUz0D+JnA7KvwFe
xcOlz1Uix4Jy6r3Z6Ku0OfoIU473ZujjlbS/KHkb6NNl5HBQTr13U+nzlbYS
PkNf/hy4dvh/ty9dTp511z9e3eXl025lfFTtJ/Kyu/5xGz+iftgc/qXqB14P
87Knoo8l5eLfV/2hJb8vaf4f8ye7/n2bP9mX/0D/HpxvXH+rn0X/J9X/14G3
Tf8Z9qafvy8+SR441wXYi+37wfXiPtL4zj7WQu8nRs6e9sdDX2Dvr3w0ONuU
zwFP+lVw+KaBM005+4mRg6f98UaCB86+t+hv7OfnvHNOHjjclJMHvjI4dcoP
J4+66z+3z5f9e8lJHBB+NPo+W9d/bscvv0+O4j3gUFPO6zkTnDz0p/b7Z39Z
cvCUr34AeOBd/7rNzyAvmxzGfYSvTd541/9u84c/ju+T07geON2Uk9/+Ojh8
PwcHnnKuG+CQV/0x0ZfcyJFEf3L/fa5b5DBeB8455ewnSA6i9secDh447qOZ
B0549/zDbRtwEtE/2p+P+J+m/qf456b+ed/+v/hnpv5Z+XT/s4rPif9m6r+J
/5/V/5f4a9b4q/j/lf4U/zWr/yr+f6P2o/ivjfqvEh+p9n/Efzf138U/T+qf
S/zCNH4h/rep/y3xC9P4hfhvWf038W8b9W/Fv8rqX4l/a+rfin+e1T8X/9PU
/xT/3NQ/F//T1P8U/8zUPxP/M6v/Kf6ZqX8m/r+p/y/xi6zxC/H/k/r/4r9m
9V/F/2/U/xf/tVH/VeIjWeMj4r+b+u/i3yb1b8V/b9R/l/iGaXxD/HNT/1zi
G6bxDbHPTO2z4t8u63UVJf/26Ta+h+P2gn+o+wvgShn145aFL1XtH0l+1ADl
53euZ2AAfNVo/yXp/sv9Xa5OAk/W5bQXUYfSqP03QfILdH+c+oZ6s9TnteOD
1/MSOK6qX99b9GFGnkcq+avt+NX8Z81/3bHoc6MenF70fft8u/UpWetX7oH9
Nx6c1evE/vtb6WvvfAD0t2/ji9CL5LDehj7N/vulb78dDw6q9k/+Q+nLb2PA
T7i79OfP3fO/kT9phZM6IP1vXy5cA7sUnNId0Y/fx3/hCrj+O7LwBdr1o3AN
bE9wcmfDnqT8psItcPtx18IvaJ8vvv8mOLpqf+6M65mzT+GkXl74Ci7f59BF
XInmUHBQaU9SDq6D78+A7+BycCXyRuDwgi/h5/914UZ4/PDBwo9o99/xfXJ6
wZ/w8+O9pAYc1q+JffvTRbzLC5qtwNnV/ukXFK5GJkd4fOFruJx6cR44vF+T
/tfghhg5uGr/nVW4IEaO8M2FD9LqN+jF148pnNw3h5c+7T6+eurLxH8z9d/E
v6z4duK/mfpvQX7nIOXiv6fKf+/654365xIfNY2Piv9s6j+Lf5rVPxX/2VR/
lk+PL5jax+I/J/WfJb5QxR/F/zL1v8Q/Teqfin9k6h+Jf5rVPxX/2tS/Fv/R
1H8U/9rUvxb/0dR/FP/K1L8S/zGr/yj+VTW/xH839d8l/mAafxD/Pan/Lv6n
qf8p/nuj/rv4n6b+p8Q3TOMb4n+b+t/in2b1T8X/NvW/JT5huj6If92ofy3x
CdP4BLjVrd4q+xF+/VoXO0vsB7GPTO0jyU8xzU+BPdh0f7+Nz5KXSDn0mctl
/8F0/2GM1Bc9IPVF1JuUa/1XX/5g0f9Ly/nvaO3fRf/sVspVfxX77GV/Pnhe
rX0Knp/Lwfnz6wPv8BDI9wcH0Z8/eIE8Hvw9l08Cr9CfLziGlJPXyPvfEhxH
yslDpPxgcBIpJ6/R82PBcfTzgwfo9wdOoF8/eII8/6bgDPr4AC+ScvATXU4e
Jc9PTiXl4Dq6HPfTzg/wEj0/AhxFyn8LHuZhkH8QnEy/fvAcffyD80g5uJV+
f+Qg+vgCL5J2PDmSlJNXyfODz9nGr8Br5PmvBceRcvIwKScn08dvT327+BdJ
/QuZH0nnR1BfMkg59gPdPil+VOs/fgb5f9y/DfL/jPub3TqPqj680fpw2iWH
YP928pD7J143gn3gdn3eCTyu57B/TE4X5dhPNfpvJb/6HpeTN3Ia9sfIIaH8
JPBUwFkhP92PvxQ8E9+fA+eEcvJeuL/0WXBgKKd9QDtD7QPsB7p9cQI4J/5+
cdx3sH85VewT8lJoX9wEjgrlrz9R/LVtsH86C/aEPz/waPj3ZkLh1Pj7h30A
Dk4VnyYPhvYFOTGU0z7heaaKfULeDO0L7Df68cuB5wLOSyLnhfKT4a9w/4/f
o5y8FXBYGnJYKCcPB5ycTE4O5eTBcP+XnBh//+Dt3IH91XHg8FC+BnjcjL+M
AaebcolvZI1vSH5p1vzS0eCFd/VL+3xWB2+c539z68Ih7/6+5w9kzR8Y0+1v
4XEYvz7oB8pVP5Tfe0v/Q/4M9tEoF/2UVT/11Y/hefjzxfNq8zvAw/bjwcmm
fA/wwg+FfHVwxCmfAd72Ibw/cLgpB1e7vb7C1/b7BzebdSqZHHTKR4InzuNn
gDNOObjhLn8WHHTKydOmfBY42/58wOOm/BByuikHb53yqeSwQ06eO+XkvFM+
E7xw358GR9zPD9447/8P5JBDDu56w+cP/rrLwYVv31+5Xv998sL5/skR9/EF
3jrPD368nx9ce38+4Nu36zN457z+z4CDTjmeh1/feuDM+/jt6V8j9mtS+3Ui
4gezkJ+v8QMZ/42Of86Ubv7Tv8SHMF/XQv78trJ/91/Y98Jnc4nUB9H+Z32A
2v+yPpuuz+Rxsj7hF+B0ds/PeOBb/0o+v8sfBu8OHLz0K3DwKL8BPD/mNz8N
zh/lx4Cnx/xv5IP780G+sjF/+SBwCCmfBp7gzxFXHQPOIOXk6XF9Rz66y3nc
kciPnyX8MPL6uL5/ABw/nx+wBxZHfr7GZ93ewN81/vYdxAuZfz1G+HbPg0fY
jX+29jd5f4w7zgIHkPKrwTvk+o58dpefDXvgq1jHNX7N+OQY5JdrfJK8v9tQ
f/B/wQGknDxGcBptLjiNlJ8MHiE4hXneNwun0OcPeI/nIX9/DDmQkEv9TFb7
WfZvku7fyP5Mo/szHPZcV3X+yv5J1vif7E80uj8h+yem+yeyv1TVr8j+ien+
SVDfPUC5xN9N4++yP5F0f0Li46bxcdmfSLo/IfsrWfdXZP8g6/6B7K8k3V+R
/QPT/QOJr1f5FbJ/kHX/QOLr1fyW/Zus+kH2n7LuP8n+TdL9G9l/MN1/kP2b
RvdvZP/BdH7L/papfpD9l6z7L7I/0ej+hOy/mO6/yP5U0v0p2V8x3V+R/alG
4499/edk3zBr/ZfUzzVaPyf1X0nzm8un17dV9RtSH5a0Pkzq26r9Z6n/M63/
k/o10/o1qf8zzd+W+qqs9VVSP9Zo/ZjUTyWtn5L6tqz1bVK/Zlq/JvVdpvVd
Uj9lWj8l9V9Z67+kfsq0fkrq40zr46S+L2t9n9TPJa2fk/qyrPVlUj/XaP2c
1JclrS+T+sGk9YNSX5a0vkzq+0zr+6T+zbT+Ter7TOv7JD6eND4u8e+k8W+p
X0hV/UI3vp80vl8+PT5e5Q9L/D9p/F/2L5LuX0h8v+rvpnW/ur8h8eOk8WOJ
jyeNj0t8OGl8WOLjSePjEt9PGt+X+HfS+LfE95PG9yV+nDR+LPHhpPFhif8n
jf/L/kXS/QuJjyeNj0v8O2n8W/Y3ku5vSHw/aXxf4uNJ4+MS/08a/5f9i6T7
FxLfTxrfl/2NpPsbEr9qNH4l9S1V/Xrp28F+7oxPt/oR+aKZf7+gU0+zsLkQ
f5+OdVLrTyW+njR+Jv1dTfu7iv+e1H9fptgb+UXkx8xEHoiPv2KvGP9+YbFn
/Pph76S9kZ9zT7GH/PiNi71kzF+B/eW/f3Wxt2iX5W8Ve8yPXwl/fw/yZ75Z
7LlqfXwS+Sm6Pn6p2KNNN37evj+uzzsiP2qqrM9lffp17sbP2+uDPZwPQ35W
iZO37/d8rKvbIP+mxM8vaONvWB//ifwXXR/hD0j8fK6ff3Gsq4PIv5oq6/ND
xR/I3fh5q1/gj6QvI/8L/or//tnF32j2Rn4P/BGX/6T4O3lg35I/xTw0yuEv
eX7aX4s/pf5TczHyw/5Z/DE/P+sWdkR+0zjkoVE+p/h7zDMx+IN+PP9+GPK3
dlr0/Cf585f4c6Px54mqF8Q+lvh6o/H1vv5pEn9vNP4u+4NNN85dxdcb1Q+y
v9Do/oLEbxuN30p8utH4tMRnG43PSny60fi0xNcbja9L/LnR+LPE1xuNr0v8
ttH4rcRnG43PSvy90fi77B80un8g8elG49MSf240/iz7C43uL0h8vdH4usSn
G41PS/y90fi77B80un8g8fVG4+uyv9Do/kJff3NZH5Ouj+zXwr+XPrkri5zf
HxgoeW6tfyD7z0n3n9nX4fSgvxa//yDq49T+LfHPYcb6pWWx3vr1lXyi9Crq
d44p+UZ+/uXw/Smon5ol6/O7Sz6TrY36ok+gTody5EOlPfH3u0q+lB/Puh7W
NyHfyuUlfj3a9kf9EPZP/f6QL+b1/8gn8+O5Pr6C+rXZsj7uWPLFvP7/nSWf
zI9H/Dcvjfo5rZ9lfeZDqI/S+sxvY/3aDvVJun4hX8/rF5DP5/KSzzXSNkd9
3GzUG1N+ZcnX8/qFX5R8Pj+e9cUfQn2e1hdzvZ+C+iutX31PyUdsWN+2N+oE
KUc+Y2L9IPIdXc6/j0D93tklX7J9PyWf0l5G/dlXsd5SjnzMdDL+vnrJ1/Tj
+f1lUF+3lazPUp9e1Z9KfXfS+u6gv+gA5VK/X8V/pP7cqvrzbv2+af2+1Eeb
1kdL/Xej9d9S/9xo/bPUp2etT5f6c9P6c6nPNq3Plvpn0/pnqd/OWr8t9c+m
80vq203np9Tnm9bnS/170vp3qQ83rQ+X+vdG69+lPryaX1L/X81PqQ9PWh8u
9fmm9flSv25avy71+ab1+X38jr7+uuJ/ZvU/Zf84V/vHXf+k6g8l/luj/pv4
D5X+Ff+tim+K/2nqf4p/Zepfif9p6n+Kf2XqX4n/Yep/iH+V1b8S/8PU/xD/
Nqt/K/55o/65+LdJ/Vvxz7L6Z+LfNurfin+W1D8T/z+p/y/+aVb/VPy3pP6b
+KdJ/VPx3039d/E/s/qf4r9n9d/F/ktq/0n+YaP5h91+Dx4fivIbGs1vGFXq
Ab3/0fGlXrDd3yv1hB43WK7UG7r8qVKP2LD/EuoV/fp/VOoZbTv0Jyrnb/0n
1EMa1wHUS7oc9ZTeHwn1lm18q9Rr2t7oP/TZUs/px6NetK2fKPWkLr+z1HPa
heh/NVjqPdv4UakX9fyHu0s9qR9/aKlXze9l/61Sz+rXt3+pR7X90F/p/lKv
6vKLSr1sZn8j1NP680O9ruc/oJ7X5V8s9bR5Afprod62jc+Uel3f/5xW6nld
fnmpF07s73VLqSf286MeOE1G/6aflXphl19d6pEz+2OhXtnld5V65nw+5uXF
pd7Zf3/zUg+d7kP/r1VLvbQfj3pqWw39q1Bv7e9nl1KPbediXt5S6rWte/7/
sCnoz/XiLovqvf33Jf/YNH9C/D9T/698su/KulV+hPgHVXxL/Kes/pPY71X/
GfGfTP0n8f8a9f/Ev6nsL/H/TP0/8W9M/Rux/03tf/Fvsvo3Yv+b2v/iX5r6
l+Ifm/rH4l8m9S/FPzL1j8S/bNS/FP8oq38k/rep/y3+oal/KP5TUv9J/MOq
/5T4z6b+s/h/pv6f+M+Vfd7Hb5P87qr+S/Lbk+a3S/61af615L9X/Uck/940
/17y003z0yX/3DT/XPK7G83vlvzzrPnnkt9tmt8t9QWm9QWS3580v1/y9xvN
35f6A9P6A8mvN82vl/z1RvPXJb/eNL9e6g+S1h9Ifn3W/HqpPzCtP5D80qz5
pbI+m67PYr8ktV9k/TRdP8V+adR+EfvL1P4S+yKrfSH2V6P2l9gXpvaFrL9Z
11+xL7LaF7L+Zl1/xb4zte/EPjW1T8W+S2rfiX1iap+IfdeofSf2ial9Ivav
qf0r9pmpfSb2S6P2i9hnpvaZ2K9Z7Vexv7LaX2K/ZrVfJT/XND9X8pOT5idL
/myVXyf5y0nzlyV/2jR/WvKLq/p+yR82zR+W/Nyk+bmSP5w1f1jyc7Pm50p+
uGl+uORnJ83PlvzrRvOvJX/cNH9c8qNN86Ml/7jR/GPJj67yHyV/PGn+uORH
Z82PlvzxKj+0j8/ax0+6sXCfMzjQGfxnv37yrEcVDnWaDM415eBqp912ff6A
H57yYfmdil8qHKKFzkvneQ4FR51ycMt9fJETTzn7uowtnPaqf+xWh6667Cb/
80az4YWbjdz9U5sbv0f5FYu4F9yPGxgsHIg2vjb9Bx8ZfHF42/99zoNX7LHb
uFa/lk+79TXwmzS/69njLt52q5We8/jOj2+54qofbP0v/eHBq/9n4dgzPu/j
45hF3LoHGv59h0U8vtZ+Jz/DAn7GAeDNg0OfngOHnvIPg8d30F+fmHHQ4+va
U4Wn58eP2uWwPR7c9e78hRkzdj/uG0vY6T++caUdh7fvT/gejfI9wD03cNDT
XoV/7ve3euGGc1wOgh/ux4NbnsExTxsVfrlfv/CDk/KDOa44/nR87nfixOl/
vnO4vTJqxKt/uWDptMFSl0zZcWprf5OLxfHH81H+fHme/nw/Vp63X5/yb5Tf
IvOv0fnXx+86Z/Ljo6/89D/yho98cOR1vxlIS/1p1AVTHn+pGp8cfzo+r39h
hV+cssSwtMtV35i20zozmtvP/c1Z3/po65/eV7jveA5/bh4r/Pd2/K1zx3Gv
7/JkPnr3A7+/1xdebX43dvIyB01Z3OWcnxyX2n/u77+4f7Pf3D0sPXvwZ0/4
7eg7m7knbDR9zM/b33/3nz56yILzRtjpj33ylZNfG5YWbPqhO47e+HV/P6eV
8WgYn2lkGa9+fuir/NpjR/9z6bxlWrbosya4v6z3x3G5OsbBbH1+C+zqbw8f
ndLKZ/z97s33tS3vP/PEy58c4/Jv3P4fX79y61e9v/Ddk9M5x6/d6h/mT1+H
82h9SB8/aHzRlz4uv1r0qctXw3VvseSMm576406m41f0S1L9svU1H79lxA7z
G/B10lp/3GeVeVss5/L7cNwXfvTZ/3P2wdva40Wfted//5U2d9239CzuY9ij
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
++/zfm8p9+/Pw+cPnpfuU1Huv1d+v/kDrwfyrcfakddduaapHUL5l3C/Py33
n/g8KH/pa8f/n1OOurfZbNKRo6fMXia9Pu+LM869oc2/43jA+EgcL5S/hu9v
Wo63l3E+yj/336888OLqb2TEbZu5iOdSzuvdG3bbtrgfyg/E8/xLeb6G+2nj
qzjfXogL8/fk/Bnv19835bo+8P8pZ/0367grPp/0X9P5rfXre4BDQ7nwARty
Av39Qy+yP7zqx6A/bH671zeI+zsjuD9ZF6r+EkF+uL9/9pWk3sKnH0+9Oa7o
TdfHev8Tgvvve35B/3y/vq2lflL7Y1h33U66foPvmz6HdeJznTrk/ufD/kIT
g+cb9D/w87P+87zg+vvuX8fPm2t0xw/zB37QzR/w5x/EP/z31X+5DvtAlA/H
/uzK3fxA//1gfynJ+TU+mN/u9QX5EX7+wP/289M+XdC1T/35LvzeNX89bseX
c4m7/a3BZ2u/fuWxwVP2W9weXfz0cw9a/6kGn2/7/ofh+a2C57eKPD/dP9D1
gf7LSl3/xZ/PpZ9+6pQHLnmmufGc9536zmHDEz5dvvDpny5Yc/wqqcThR/HT
5Tvj+TwXPJ++5xv4v37+P+L6Vwyun/d/VXD/feOnWh+kf6bKh66//rv31VX9
GpzfIvmg1Jfq+akPouOr9Wno84dy1U+M783suT+5vvD5Rs9Prr/v+fddf/h8
tg6en7w/P//Mt/l+3u742VqeT3D+8P50/ATvJzy+7/lp/Frlmj9B+T2QM4+w
5/zV8+Xz30zyp2aInPkc0flV/wfnD+9f9dMMub9pcn/B9YXjP3p+cv19z7/v
+sPnMy54fvL+qvNH7+f/dfyMC57P230/On6C9xMer88vsC/9+XwF9hzsvHSS
2Hfggld9pign35xcc+1fdSF4Rv8Nrvh50j9S4hqVfd/nv2h8RPU7+d3ok5PR
J8ePJ7d9U+gt1d/kd5PbDY63vP+lcL0Dg6rfrfQ7yOiDkH6APgiU80lyX1H1
O/nlCdxy3d8pfRleYJ+G9Dz6NFA+CL75NHDNZ3aut9avqt8N/Hb00a/yy8ln
fxVcduV3kl9Pbj049n5+8unvAJcenHqXnwM++RxwybU/8+Hgd6OOrBmHPgiU
nwR+NrnZ30WfBcrJVydXXftXk29Orjn7FFBOvvhXwBX/E/og+PsBP5zccNXf
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
pxIHWj99WfIv1y1xx/xCiUM2u0p+6E9KXDH73/ft5j8i/sg4ZbpY8i8RN2Uc
FfWLS8n7XdWYN5okP9HzSRfF6SblwyU/Mqj/dHlQ/+nyoL61Pf/Q9at+/UH9
qsuD+l/rnr+q73V5UD/aro9D11f68UH9pB8f1L/6+AzqO9vrH7p+1eVBfaef
P6if9OOD+leXB/WVLg/qY/39BvW9fnxQP9uuP0PXl8r1V/XB/vtB/anLg/pT
lwf1r/77QX2vy4P63vb5oi8G6kiT9m8K1r/2/vD3ktfl/KWBrnzdxLohnR/B
/q6ff7LEfx6U+ifk3STk4SSt30BeDcbv77PWryyPvzPveYrUx8wreUPp7pJH
lLR+490lL8g+ir+vJfUlyCtqjit5RknrV5BXlZBnVc2/n5e8JuM82l/qS5BX
lVYueVbV/OP6dg/WN61v4vzaCvPrIalv4fx8GPNzKamfQl5bQp5bNf+wb8R9
pKT1K1eWvLZ0a8lzq+ZfeX8jjfN4C6mf4vzCPng6Q+pnEH+GHz0iaX3WUSXv
L11Y8gCT1o+tX/L6mOeXtD7K/17yBNNKUp+FvMW0RsljTFo/hrxE6MdV7VWp
X+Lft8I6uYzUTwX9c9vnM/T8E/kIO79T181/YX5Fu74Mvb/i8jNK3WdertSB
Vv2X1il1nRl1ns0npf/UE6UutFm61ImmudLfCnWrhjpW0/5LPyp1qXZ8qVO1
7aU/FOpa8/WlzrXqP4W6XkOdb5W/ibpaQ52taX8o1PUa6nyr/M07S92uDZY6
3vw96U+Gul+bU+qAm/2kP9X4Ulecx5c646r/2S6lrjpvX+qsq/jPRaWuOaPO
OY2T/lOoq7YflTrryn79Qqmbzu8pddTNfOl/hrrr9LNSh50mS/8r1HWnm0qd
d/q29Fe7p9Sd53NLHXozVfq/XV3qynOpY18yrSL9zVCXnlCnnrS/2i6lbt5u
LnX0NlX6v6Eu3vYqdfJ5Nek/hrp6e7HU2Tfa/yzwP/38QX6Vj69gf9WPD/y3
MD73d9l/D/wLfz6B/+nXF/hvLg/8L5cH/pXLA//T5YF/JfHVyv/w4wP/1Y8P
/BM/PvBv/fkF/rk//8C/7fPP+vx7//3Af3N54L+5PPBPxb6o/E8/PvA/+/x3
656/8s/9+MB+lflT5Se6vHwODNJPnCz2aWD/+e8H9o0fH9gnrXxo+9Xff2D/
+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
innLeUz5BZh/x2DecR5SzvnLect5TDnnJ+cl5ynlrMst+0MntDy47vGZ85Lz
lHLUz4fxA523QX157qkvx++F9eUWxecmdvJD6/rr7v5AXV+P+u8c1X+j/iz3
1P9aVP9L+zqqr0Z9nvXUR4f7U1w/o/pw1PdaT32vRfW95IX21JdbVF/O8/bU
Pzc99c/h+oj6Z4vqn8lT7am/t6j+nuftqT/PPfXn1lN/btH+Mud3VF9N3m5P
fb5F9fmc/1F9OOdvT31z2F+hO3/D+uYwv3RiJ35f1/8y/h/Vd3t8Lqg/Jm+5
p/40R/Wn7J8W1fdy/vbU51qUP8P5HdUno77UeupLLVpfOX976pstWt9Rf9v0
1N9aT/2t9dTfhusv6r+tp/47XN85f3vqn1NP/bP11D9blP/G+uGovhf14dZT
H25RfTjrh6P6ZNrVPfsDqWd/oIn2B7r+Zr2+I/+z6cn/7O1/FdnXiJ+knvht
juK3XL+j+DjiS01PfDtF8W3O7yi+j/hI6onPpig+i/2Bpmd/IEX7A4gf5Z74
tfXEr1NP/LqJ4teIX6ae/ZMc7Z+Qr96zf5B69g9Sz/5BE+0fcP2O4uPYX2l6
9ldStL/C9TuK73N+9sTfUxR/5/yN1mfOuyh/kvZ2lP/o+TNBfAvx0dwTH01R
fNTnbxB/Rvw49cSPmyh+zPkbxc85P3vinymKf3J+9sTfmyj+zvnZEx/OPfHh
pic+nKL4MPYncs/+RIr2Jzg/e+LzynnX+HzTE59PUXye8zeKP2P/IvXsXzTR
/gX74kXx825+3RD18R3/t47vnt/JD1wK18V/C5sPlfzjsP8S52cUn0Z8JOxP
1fV/6/gu4rehf4r4kUXx2wM6/m8dn2bcK4pPIv5lPfFri+LXiO9YT3w298Rn
m574rEXxWf5/FL9HfDv1xLebnvh22L8O8W2L4ttd/7WO/yK+H8YXuL5F8WfJ
L6/ip93xXeendderIeoXO/nndfyX4z/yTxifjeKnHN898dHQf+P4j+K/Mzle
g/gfx3dPfNii+DDHd0/803rin9YT/2yi+CfHfxQfR/y46Ykfp574sfXEj8P+
Yhz/UXyV+XyRf83xH8V3u/nNdX1Xd/+irp/gvPn4V2Z8eb1d3mV/uPldZ1z2
h5ZfzOP/iL9/At+jnH2HN/3oxJmfun1+/uae08ef/sSb1flPxd/Xx/f0/Oft
sOfqp414a13f9urrrt385Ur+5jbl7+fzeyKf+MtPzfnQl36XB57+/BXnfORf
+ltTL+Dvn+H35Pr2/PO3bz7hnjXSyDvn//2ZKev58Ycz/oS/fxjf0/N/6UeH
/PDrS65g+9w7/biZdy9sVL4v/v5lfE9//9m7vj3tpFlv+Z37XrH4Qa+09i2f
75v7lL//gd8T+SFbHfeFT0+Z10x4x+M7H/f1enyMx98/he/p7583+qZZl49d
yWbu/uxhh5/xj+r6+Xd+T+UPLL/7Adv+bl5e/cYj7lnhJ4tVcv59Dr5HOepL
c2TfaN2Q1j+i/i3MD0f9W4rq32ifRPWFqJ8J+4egPtCi+sBu/n1dH4n6j9xT
32ZRfRvqj5qe+socxadQH2M99X+5p/4vjF+ivibsT4j6LOupP01R/Snqk5qe
+svUU38Z1gegvilF9ZfU71F9IepTw/oJ1KfmqD6V+j+qj5T946q+DvVVqae+
Ksyfpv0S1a+h/sx66s/C/hecH1H9HeqnrKd+Kkf1U6jfyz31e020P8Pz9tSX
WU99WdjfmPMn2v/j+O+pb7SovhH1famnvq/pqe9LPfV9YX591/6p69dQ/5h7
6h/D+gLOj6j+jvOiZ33N0fpK+7/HvsiRfUF5z/qYo/WR19djX+XIvuLxPfZB
7rEPco99kCP7gMf32Jc5si95fI99lnvss9xjn+XIPqO8xz7NkX0KnnS4v6Jc
pYDPGfYX/XvhVaK/9arpt8IvpH+4MTjdp4IHSjl58+Rkk1dLOXl4/J7yu8nj
fKrLCffjyccgV+iHwsd7svC6Mznefy8cb5ePKrzCxDtW/5w85Cldjl2rP8q/
wXKe1Yw8QcrJI1yx8O1sb/DuKE+F9+0c8BsKB9zlfXyMbcEbLHzD0WlT4YtT
P+7S5bT78eQhgo9oY8FLlOOzcNT9eI6niK/C8SMc1Gr8Rc+f/a2/iXHFcabj
SzjI1fgh53UuxpGOP+E0+vXNx/h5CePmKYwjHX8R34bjZ1mMmzMxjnT89fXv
E06ln38HjB+Om9sxjnT8cdythHGo44fjhuNIx59wRKvxJZxYl3N8jetyOPX4
vGGXA+ty2ofgS+d7wZtWOf8+Hd9T+U/AUX6+cJQr/Qi+cr4K39PjB7qc5ur6
Ir4Pzx/pNx4fjT/mf4wEB36HwoHX+HTaFn9fC99TeaSfef5ofvH4aHx2ecz1
/OX9k/P8dfCq9Xjwn5vf4Ht6/IfBob4YvHY9nhz33fE9ysFDDtdH4UtX77fw
ffk86/tbG7zyaH7jsMGLCv87kwdO+THgiV9f+KuZPFbKwZs24VC7nOOFnOgJ
4OVSTp55z/pqkX4kv2kJcJtWEz4qeNVpX3Csny8c69Z/QTz8C4WP3mwPXjrl
1B/PFj58vgy8eMr7+E3/CZ776MI/rvjX1C/CCdfxY9H8HYX3G67/GB//Xn8/
ub1w4P34L+L98r3yPev44Li4GeNE3/94vHeOA32/kf3E8RHpn6XwfvleP473
rOMj4nuxfxDf+7EYB/r++d7nYRxQvi7e7xi8183wnikH352ca5spfHe+f773
+RgHlDM+0KNfLNIvlPesT9azPoXjp6uPQv1qPfrVevSrRf5BHz+P8p71LRxf
tO961jfrWd+sZ323aH0fi/EUrQ99fNf1wFuPxufndz/w+3t94dU8c507jnt9
lyfz78ZOXuagKe38JHfuIXDnVhL+O7j3Yf/BzxQeu0X+Ge3uyP7a4JEPjrzu
NwPpjMmPj77y0//Iy/xp1AVTHm/zR8i73wQc8KMKB9zl5NGTb87rpXzdtX75
+RVGrmIXzV9p+79MfKRZ+8uL7XnrlbX+J1eV85Vyv99Fevb5XM5f5S/n0fu+
sNWJzzyVd3r2V6s1G7TPd328n2h9mCPvVfWH8n+VD3g03i/f62y8Z8o/i/cT
+T/d51X3L+FxkX/G9wM+e+Z70ve7NN7r2XjP/nzwftbBe5mE96Tvl9fJ96zv
L+Iv8r743t7cpbxHfX98b1vgPVLO9xXNT6w/ucc+sR77JEX2CfVWNP/g34bv
F+t302PfpR77ziL7js8/sm9gn3B8RfarRfYr309kn8E+sB77IPfYBymyD/h8
I/3WXW/q+QP7KvXYV02PfWWRfcXnH9kXsB+tx34M/Ss+/8g+ot6K5sfpj33y
lZNfG2bv/tNHD1lw3gj706YfuuPojV/357vGonn55/zA9//2++Wv+Xvzu2+8
Nv9br7XrA+IHFsWvEH/IUfyBd1Lm//KwD1r//pVRI179ywVL234nTpz+5zuH
24ZLXTJlx6ltfXMfH5fPP9JP0H/Ws75ZpD+761E9f/j8HsVzux/PUZ//fDz3
UXgPlCP+l6P4H59/FL/hdfG58jnr8yP3nc9Rn/9GeO774j3o843Wdz6/yD7g
84/WHz7faPwzHhWN7z5+/XYlvmVRfAv3n3rGXxM9P1zoYOEnrwg7oc2PZP3F
0o8+eOcK1y5vx77/Spu7brs/gPXVoueL9TlF6zOfH7nEfF96/1F8WJ+bxvd4
v9H84/OLxg+fz4p4LkfgOen44nNZBs+J8nVw/5H9yOfXY5+E/Gbsn4T6k3Hd
nv2Fpmd/wcd1sL8Qrg+87ij+zvuN9ld4/1H8H/Htpie+nXri26H9wPvvWd+a
KP7L+4vi+7y/KP7Mcd2zPqae9bGJ1sfufKvfL/y/psf/6+WPR+Ob19ez/qRo
/eH1R++H1xf5p/B/msj/4fVH+g16KZx/Om9Vv+F84fiC/xXuP7F+LdLP/L1I
fxyB80f2Ka8vGh98PpH+4+9G/q3394v8p+L3hvlv/P3I//b+f4F/J/1vkva/
IX+CnL67pH/M6ajrPQ11CCdJfa/wHxrlPzi/scNRaec/+4+SE3Wx9B/d+pb3
PXHrtIczPptSn9T6T4Po+/El9PHS/h9vXF74W/hsUKfk55+E+8OnnSz3p/05
xkh+1QR5fjPk+R2D+mZ8sj7an/93kX+Oz7SJ1DdutNZqT0wavYzhM5X+qHe1
8WF5fj+S58frljpovz/yJTkOvivvp2/8dPPjX2zGyvM5sdufJS+Q99M3fsb3
XP9UeX6by/MT+zOp/Sn7C2lF2V+Q9dXzGCiX+GOj8Ufu3/F3Vpb47Kpd/7t5
h/jfjy1++rkHrf9Uxmez6lceGzxlv1a/iP3nfgTlZT/jbxmfzcLvXfPX43Z8
+W3fn+iXRvWLPr+l5PkVu3uU4TP95emfLlhzfNu/QOJ3aZ6srzec875T3zls
uOEzXf7pp0554JK2fpTPD5/N0vL8NP6l6wPfz4ESZ3+74+cqsV/1+ej72VXe
T9/4kfWtuv4ReH74TI/K86O+FT3s18/1Bn1e0mxZf7gedvu68N/C5tION5mc
xJaffA/qbkpfxnGJ+02Uk7cFzmDF56I+pn6eJP1l2NeF52EfCMrZr4J1qCtL
/xnqE3AQE/UN5aU/hdsH4DS2/T027/S9HZEmS//b8mm3Uv/PFPuCfS1n4O8n
S3/Lw9Av49HSRyNNlP43ffqZfEevg5D+NlPwPA8tfbjS13R9R7+NLiexnb/s
q0m7bar012Q9DPowJK0fOwD9LKg/npP+NR9Hfwb0aUnrSX8W1sugT0XS+jH2
4+hyFNvny7416IOR7pH+NcyfRZ+OKj93JPpB8O/aH4b9GNCnIe0j/Vmmo98E
7rOZJ/1jZqDfA/q4VP1bjkFe8Talz0jS/GL2K1m59DFptH8R+/Kwv8nR0p+H
+c3oY5EGJD+afXvQxydr/545yLt+tfTJSNMk/xp1Xwl9lNAnve2f5HWlpQ9I
0vpS9rNwPSn9a9i/4/XSZyT9XPoDsZ4OfVKq+lP23aH+3Vn677DfypmlD0vS
/kliXyW1r8hb7Opn5TO+7HLlM97V7TvndpzfH/Qi5apfhe+THhA+Ib9PufIR
78f3KR8j/ELh56ZZYh/L+pF0/eD60123+I/r29Jy/S2fsXzarZSr/n0U3+f1
TR2S37i6Pz9eb/f6R7TXJ3xL/j/lyrecCV5n9/g2P5v/z+ubKXxP8gZ5vPIJ
+f/ktCufkLxFHq98Rv4/f1/5jORK+vgUvuSh4BkeAvn+wj8kb9DHv/AJnYvI
8aF8RHyfcuUX8noo31T4lpPAy/T3K3xN8iR5/JbCnyRvkccrn3FzfJ/HXyt8
yt/i++SXflD4jbwen7/C9yTX0p+/8C35/5Qr35JcT59/wvfk//P6Dxa+5xzY
c1vAvpuj/QO688d0/pRP2lXrJo2/dPvjrpHU/6M9Nx32nfYno714ehC/mIHj
qNe0f9hkHPcg7FPVf7TXpuO6rxW+wWdgr9F+0/5n5CXQftxU+pfzeaBPGn6X
/9z+8r8f07FX2/6N6LMK+3Rdv/43ty72IJ/zM9IfTfquVv1XL4S9Nx32n/Ib
Voe9yDhK+b12/X037Dn08UqfkP5dtAc9j1f6n7G/z4dgX87S/p2w52jfLSv9
zWgP0j7U/m1nw55cGval1md/G/bWdrC/tL6R9tyesO+0v9g9sOc2h32n/b1o
T54M+3J16T9Gu5H2pfb/+iqOWwb261ZSn8m+d+iDl7T/3Rmw516FfXeM9Hdj
PR36oCWtL6U9Sfvye9L/bTnYk1NgX86S+lUeNwL269nSf49949BHLn1V+sex
75nnwUv/M9qTU2Bfbi79G94De4723d7SX29H2IO0D98p/dvYf+ch2JdbSf8G
sd9M7Tf6513O7b/wdxfxiR7n/jf0aPv8yFUDRylfJHy18mm3/hNxUrWPDDwm
cJrsG8Jfoz86o3CUGtVv4t+b2p+MVzJ+uZvw6chz6vr3bf3o0+BZ/bpwrtL1
wq+T9cN0/SC3resft/GXXcG7on+u/Lu++CV5U13/uX3+CfHKtQuHFBzidnyx
npJ9MbQ+mTynrv/c2j+slwSnqdH646PBm+r6x+39kesGDlRSvts48KbAoWqU
TzcArtr/Fo5SPlH4ageDt/RI4TDZ/whfjbwjcu1mCv9sDPpnfKtwspLy78iT
ssKZauYLf24CeEzgNKXxwm97BryquwrHKimfjrwncKBsmvDdxoL3xb8r/4/1
1uBYJe1f8Ai5bh3/ts3vehQ8rL8VTpb9r/DvvN4afV20fwG5c13/tua7Uy+p
/yb+q6n/Kv4bzst/lf9jlf+z6J/7b6b6SfwjU/9I/GdT/1nio+JnVv5zpb/E
/zP1/8R/NrUfxT809Q/79mfE/zX1f8W/NfVvle+r/r/496b+vfhPpv6T+C+m
/ov4j6b+o/hvpv6b+K+m/qv4b6b+m/g/pv6P+G+m/pv4R6b+kfjPpv6z+O+m
/rv4z6b+s/h/pv6f+M+m/rP4h6b+ocQPTOMH4v+a+r/i35r6t+L/m/r/4t+b
+ve0R+bCPrld+JETYY/Mgn2i8XNyJWkf/UL4ku6PFg6k5xlS3rW33vrXsceq
/QXT/QXydsHhTfOEz/lfXT5nc4ns786APUS9ovxL6h/aX6p/aM/Mxn0q35P2
EPeRxwnfkvbKWrBftpX91zVg79D/GyP8TeGqN8pXJ7eS9o3yK+Gfwc/5z3Sb
9J94GPYKOLVJ+ZW0d2j/HC38TfLnFof9NCD9J74De4P2xxjhc9KeoX1zkPAl
yXOl3TJL+I4nw14ChzLPE/4k7a3zYH+NEf7nNNgbP4f9MUb4ozfAnqF9o3xO
Hnck7JtZwrckt/M22Ff/V/idx8Ceon01QfiX5HqC81nxPa+GveN9OIVvSf7V
GNhPX5P+NbRnaN98QPiabg/BPnpzeLc/jfgnWf0Tsf+z2v/in5j6J2L/J7X/
xf8z9f9kfxbHtfUP4v816v+Jf5fUvxP/J6n/I/E/0/if+G+m/pv4R03F5170
z/3TRu0/8d+y+m/in1b8AfF/kvo/Yr8ntd/F/6n43OKfmfpn4r9U/G7x36r+
UeLfZPVvxP6v+peJf2Pq34j/Z+r/iX9a9c8S/69R/0/8n6p/m/iHSf1D8X+S
+j/i35n6d+L/NOr/iH+X1L8T/6zib4v/auq/zkE/bM7rJP3vmY9BvTJT5j/z
n/g5RtZfsS9M7QvJXzDNXzivs5/fcjQpZ79w5XhSzn7j5IAqH0Di50nj5+Tu
kQP85vwuf49xMbdPpP8/889OCvLPyNukXtlB+L/l026l/aL6h1zg84TzSfnK
6Gd9Lzicm0n/evb9p/45TPr/s1/2fsL59OvbtfT7JodzM+nvz37n1D/bC7+A
ff/HgfN5lvT/H49+52OFo+njA/22aSfNkv76j6DfNTme+0l/+xXYdx966XTp
v89+2uSE/lj637Nfu3JAKb8Z/eDPBUfzMuE/3IR+5+cJJ5Ny9gMnx/MM6f9P
7gHtEOUfsN/4KsIJ7V7/8KQcUMrZT/0p4XBSzr7/nucm/f/Zr/3b4HzeJXyF
G9FvnhxO5UvciH7n3odQ+AXro5/9fOF8Uj5OuADniX1DffY+fE/zz8S/SOpf
yPxNOn9pH3W5Aq191OXyvuHzmXLmr3249JE2zV+T/S9T/Uh9BA5gUr4B84m9
j630N30c8bYtEHfR/YGS10x7mxzDdv51+wIzT7ddX9h3E30Ek/bfZD/GLmew
7V/KfoRfLn0K0Ye53Z9aBvs7L5Y+i1V/0i+hnyT10wnSf5X7S+hj2syS/SXa
N/9cdP7HKvvmavQzZF/Bb0l/0MVhFw2WPp3NVLGv5qBfIvLA7A/SPxR9F/N7
Sh/DRvt38rhy/cunnSZ0+8PS/kEf2yr+y76s7Lt4ofRnpf1V+kiOSFPF/mK/
Svb9/Kv0b52N8+5d+jzaPdLfdGcchz66pv1zmfeGPpZJ+7+ybyn1k/YvPRv7
p+X3h5nun/6E/TxLn89G++Mm9JOkfrpJ+q+eD7trm9JHNDUTuv1zd4S9Rb0z
XfgkEn/JGn+R/M2k+ZvkrjwH+2e+8Fe6+mJgQPnki8Gemgb7Svkskj9gmj9A
LvEJsH9OED4x9RP1j+on8o4fhf11ovBTRX9m1Z8e/+/oNf5b2LwX+prxp/HC
P78Q9s7esH8+K/wQ2ku+/yX8FXJF7oP9tarwRS6CvUP7Z1D4KrSXqJ+UH0Pu
yhTYXy8Kf2UU7BHaJ8cLX4a8Ieot5ZtcDXuH9o/yRe6CvXU+9NbFwj8hd2Q/
2F/3C3/kUNhz76V9J3wb8rC2g31yvPB3aO/Q/tlI+DK0d8BJyspfIU+KnPJb
hD9De2sy7K+fCZ+F3B/ad8r/IbfmQtg/g8KvuRr2EvXT3cJfeQr2Fu0v5dt8
EfYOOefrC9+H9hL10zThx9Deov11o/B/JD6aNT4q+dem+dfinzTqnzB+sxfs
G43fyPxMOj8H8K+bn7CUy7lvMA72S8QnnxjUD8H+Sy/BflL/jvaM978WvkHX
HhoYeLNjL731fGGvHA/7Rfsrsy91N/7c2hfsn0z7Sfsv3wN7ZTzsF+0/zb7a
1C9HSn9t5sO8CftJ86/3ObTYE4fCvhgr/bdpr6APut0t/Z/Zd3kj2C/af/ks
2Eu4z3yz9Iem3/dJ2E8aH6deex32mcZXX4Y9cSnsix2lP/nfYK/QftH+27Nh
r+wJ+2W29KdmP3s8xzRe+nPT70Mf62r/gHptHuwzjS/TXkGf76q/969h71C/
PCj9qdmfvoH99DWpL/gp+v1vBftF+5/T3qF+2VX6a8N+y3P2KfbT5dIfXepz
Kv9G9teS7q/J/lHS/SPZX2t0f20A/7qcq/b+ZP+o0f0j2f8y3f+S/b+s+3+y
v5V1f0v2//x6KZf9laT7K7K/lHR/SfaPTPePZP/LdP9L9n+y7v/I/pfp/pfs
/5ju/8j+Ttb9Hdk/qea37J9l1Q+yP5Z0f0z2h5LuD8n+WKP7Y7I/ZDp/Zf/Q
dP7L/lfS/S/ZX2p0f0n2v0z3v2T/z3T/T/a/su5/SX1c0vo4qQ8zrQ+T+ris
9XFSH2ZaHyb1g6bxm/Lp9W91/k63vqzR+jKpfzOdv1L/Z1r/J/VvWevfpD4q
a32U1I8lrR+T+iXT+iWpHzOtH5P6N9P6N6nvqtYXqX+r+GlS32Va3yX1T6b1
T1Lf1Wh9l9Q/Vfx4qa8zra+T+sCKLyf1dUnr66Q+rOIPSn1d1vo6qQ8zrQ+T
+kPT+kOpjzO1z6R+rNH6MamPM62Pk/pB0/pBqX/LWv8m9YOm9YOyv5J0f0X2
n5LuP8n+SqP7K1KfkbU+Q/aPku4flU/ff6n2f2V/qeJPy/5ao/trsn+U1b+Q
/bWk+2uyv5B0f0H2X5Luv0j8P2v8X/ZfGt1/kf0j0/0j2R9Juj8i+0eN7h/J
/kjW/RHZP0i6fyD7I6b7I7J/kHT/QPanku5Pyf5a0v012Z9qdH9K9leS7q/I
/lTS/SnZX2l0f0X277Lu38n+UtL9Jdl/aXT/RfaXKv607L81uv8m+0dZ949k
/y3p/pvEFxuNL1JfdOu7Wv0h9Umm9Uml7sn5nNjfaNcXcmm7+ydt/q/sv1R8
6YEuN7etA4Bc4hdJ4xfkbXb3R1r+7HLgUbKuRvms5GmeVjibSfmzHwAvtLs/
0u7PvP5EyVvapnA80yzh03J9B0e0qm8m7xIcTPus8GFpX/A8U8W+IE8TnM18
mfBjfwWe6R2Fc5rGPdfl93L9ph2g6/dJ4IWCI5qUr8t6r+8UDqdNFfuBPFJw
SpsfCH/3UvA8wbFNlwi/lrxRcEiz8nnJ4+zub/yLf4K8RHBOK34veaDd/Ys2
PkpeK94r9i9afrHE55PG56X+MWn9o+xPNLo/IfH7yv+V/YmKHy/7v0n3f2X/
Iev8lP2ZRvdnJD6dNT4t8fuk8XuJH1f8eInfJ43fy/6D6f6DxNcbja/L/kPS
/QeJr5vG1yX+nDT+LPH1rPF1iT8njT/L/kaj+xuyP5N1f0b2N5Lub0h8vtH4
vOxvNLq/IfH5pPF52f9Juv8j+xON7k9I/L7R+L3sTyTdn5D9m6T7N7L/kHX/
QfZvGt2/kfpc0/pccqu7dXDt8+mupwMD3fW2yj+o+ktM1LwFqa/jfOb6q/b1
TKyH9KOHCb/5K1hPOX8PFL71/Vjvtsf6N0z41V/BeknOwAeEv831dhLWX+Vb
D8wv69WdWL+Uz831juvfSsKXJlea66vypWlXc33V+mLO+5uwfmv96Pexnr2I
9e0fwt/meubrm/Crv4H19GGsr8rnpt38XayvWl/NeT0bf9f6WXK9uf4p35vr
JeeX8q1fwnr7Qay/uwv/+6fgmtPPVb45udvsI6n8banPN80Plvr1RuvXpT4f
f+e/qr4+a3299B8w7T8g9dmm9dlSv560fl3qp7PWT0v9epV/IfX3pvX3Ul9u
Wl8u9fem9fdSX95ofbnUX5vWX0t9uWl9udRfm84fqe83nX/Sn8C0P4HU92et
75f6dNP6dKnvT1rfL/Xp1fyS/gfV/JT6fNP6fKlfb7R+XerzTevzpX+Baf8C
qb/PWn8v/QtM+xeIf9aofyb+ZVgfcX7H7uS/yn/M6j/K/njV30T8l6o/lfhv
Sf038c+q+Kv4l6b+pfhXpv6V+Jem/qX4V6b+lfhPWf0n8U9M/RPxT039U/E/
k/qf4n816n+J/9mo/yn+l6n/Jf65qX8u/mVS/1L8t0b9N/EvTf1L8a9N/Wvx
L7P6l2J/NWp/Sf5no/mfkj/RaP4Eub08/lnh95Lneyjkyu8lj5jHnyr8Yv4/
5esJv5jcZZ/3wl/eA7xf/v7qwgcmt9ePF34vucG8/z2FH8zv8/ipwvfl9VB+
iPCfyZ323xf+NLnMrAsdL3xmcot5vPKLJ+L7PP4zwm8m15jPR/nGvB4er/xr
8pz5+7OE/zwD/38I8weF/zwTPGvf3xP+Nf+f8hnCv5b866p/qPg3Wf2b8sm4
4fJVfoH4B0n9A7Fvq/4w4h+Y+gfiv5j6L2LfV/aJ+Dem/o3Y/1ntf7GPTe1j
sf9N7X/xj0z9I/HfTP038Y8a9Y/EPzD1D8R/Suo/iX/QqH8g/o+p/yP+QaP+
gfg/VX8p8V+y+i/i31X2peT/Z83/l/qIrPvrkj9e1c9Jfn3S/HrJ706a3y35
9VX/EKkPMK0PkPx30/x3qQ9otD5A8t9N898lPzxrfrjkv2fNf5f8cNP8cKk/
yFp/IPUTpvUTUn/QaP2B5M+b5s9L/UHS+gPJn6/6j0l9RtL6DKkfMK0fkPz6
RvPrpX4gaf2A1Fdkra+Q+oCs9QFSX5G1vkLnjeaPyvqbdf2V9S/r+if2R1b7
Q9b/rOu/2D9Z7R9Z/7Ou/7J+Zl0/Zf3Puv7L+pp1fRX7K6v9JfZfVvtP7K9c
2V9d+yGr/SD2V1b7S+yLrPaF2J9Z7U+xn7LaT2IfZbWPxH7Maj+KfZjVPpT8
1qT5rZL/mzT/V/JPq/w1yf81zf+V/GXT/GXJz636H0j+ctb8ZcnPzZqfK/mr
pvmrkp9rmp8r+atZ81clP7rR/BvJ706a3y350UnzoyW/t+6v3c2PbjQ/WvJ7
TfN7JX/cNH9c8puT5jdL/m+j+b+S31zlN0r+d9b8b8lfzpq/LPnfVX4neRfe
v1P4xYzXgPMV8gfAkcRx/Lew2fShg39/w2ZruP1x2tE77XvvzW3+033oS/pK
4VSmx4T/Q94xONsVH/nULles4ouRd8XzzBS+F7ljzxaOV1b+2JPgfh9YOOBJ
+d+Fz8V468Bgub72eHIfwSFMewn/sXzareB8Vf2vbwPXcK/COWx+LnzDyeCF
gSOWlhX+GfkY1wZ8DPK+vP+m8M2uB/cuFQ5e2lL4d+SNcfwpX43cXXCdkvJ3
he+RlO9B3jfH5Rzhg/P/eZ67hQ9OXoyM72p8Ua7j62fgXXv9mvCx+X3Klc+9
AN/n9V0p/Ow+PovMn6Tzh/OvO2/5b2GzJnjflG8nfHCOP8p1/G2N7/P9KD/8
dFwP/fPNcL2Uk6vO839D+Or8fx5/t/DVdwMv3vN7hS/P//f9FeHLPwp98k/o
F/Jyg+s3vX48yMFjod9my/P5MPTBQdAPT0FfUE59Qv0y99/zASu+D7l9HFe3
Cb+P44/6Ucff9dAXu0B/KF+WvETqjynCH6S+Ogn6S/mpfB7vhv7S8dfVhwMD
7+7oy4XN5tAn20O/TBO+6C+hj65g/n7AJyT/R/mbo6FvsK7g/G38YGPoK+4/
Kj9R9Iep/uB6CM52lT93xSKuE+35gcHynlv77kbwksFRrvjW5dNufW0R93u5
Kj+fPGZwsE3513y/4CinyfJ+ZX011X/LgNdEftOqwgcnz5nnOVT42geAZw3O
dXpO+OEyf0znD7nZXJ9+LPzsY8C7ZtxxB+GPk99kAb+J3G+uX8r/3grc+w0v
3Gzk7p/a3MhT9/uTcaH6W9Yv0/VL9DfOy3+V/jPVfxwflOv4EP1oqh9l/TRd
P8U+NLUPZf2sxo/of1P9L+unqf6S9cF0fejjg8n6Z7r+yfpmur7J+m+6/sv6
brq+n4b5yPk5UvjpnI+cn8qvpT6gfrhG+OocP29CP+j46eqbgYGfdPRRZd+a
2rfk0nP+fkz49H18POe+470q/13Wr+r9k2vP+X288O0vhT4g/+4Z4bu/F/N1
U8zf7TGfKed8JyfuSeHPU1+Q/0Z9Qrnox6z6UfRPVv0j+tFUP4r+Sap/ZP0J
99e787LtryPrT6Prj6wvSdcX0b9J9a/YX6b2l6wfpuuH6OdG9XP59PWxsl9l
/ci6fsj6aLo+kjsMTm/FH+bz93Eiz1/4iab8P5lfpvNL/EdT/3H1Dq++5dhT
Ti4zOMa2QPjM94F3XDi7f86PCZ9Z7Mes9iO57+CY2wbCfyevmO9P+ct9/MVz
wLvf8JEPjrzuNwO21J9GXTDl8TZ/lu+f71ff/9FHXHr5Uov9Pe997/Zv3jE4
YBstu/96W6W2foW86BHynihH/lfeBvNQ55fol6T6Ra4/6fVzfna5zu383ATX
i+tPR+F+/P1hPn2hcJTtcYmfiP1rav/yfYADn5QvLVxj30fz48GV37Bw5m2U
8OUHdv3/52Xb/6qcv9WPG4K37P3thc/8KObbUZh/dwofW9afrOuPxE+yxk/I
/eb4V/73sZ35NDAwsjPf3hq/mE+cX+sKH1z8J1P/iTxYjn/OB30/fP76ft6D
+cb5tz/mYzB+TMcPx1/3vfLfwobjdSPMP45nymV9zLo+SvzHNP4j8zPp/CR3
HBzyij8u15f0+rrvbe2q/wnH6/oYv2dhPFPex9fleTl/VL9xPNO+2ED44t35
MDBQ7Ljnq/mN+KhpfFTsy6T2pdhPSe0nsS8btS95XbQf9PmJ/dSo/ST2n6n9
J/avqf0r9l1W+07s36TjV+LDSePDEh81jY9KfLjR+LDER03joxI/D+vvEf+t
/DeJrzYaX5X4r2n8V+LfpvFvif9mjf/K+p50fRf7p6o/lvW90fVd4mONxsfE
fklqv/D58fno8xP7plH7Ruy7Ru07sV+yzm/lY6t9J/q9Uf3O8XEdxpGOD4mP
mcbHCreb9zMwWK6jzb9d+tEH71zh2uV9/Bz7/itt7rrt/irvZ8uiv0zXF/Ks
VQ9SLvozqf6U9Snp+qTzUuOfsj43uj7L+uX6ysdfd31Ouj6L/ZfU/pP1N+vz
EfukUftE4pOm8clj8D4Y3xyG90X5ip33OTBwROd9V/ZXUvurj0++Gu5nC7x/
Hd8SHzaND0v8tNH4qcSHOU79/Uh8N2t8V+LfpvFvGZ+Njk+ZX5X+Ffu7uj6Z
P1nnj9gnSe0Tef6NPn+xfxu1f8V+aNR+EPs/qf0v4yvr+MKNDq6O+9f9DbH/
s9r/4h9l9Y9Eb2S1n2ajfx4+Kz76TPz/3fieystxL/Azq/yezt9faFRO3grr
e1Q+q3tdlZzH8TxDX99iaXZwvJ43ks8M5APyb+jjV8L5V+o7fjB4vnl28Pxm
4rwzOr9TPf9mevB+3ub9p5n/9vnxvurf599nBvf/ode+s8rdBwwYPiN52h3f
U/mtl0xfc/i9L/Hz/2PvS6CtKq5tL0qPoiggKopNFMVeRDBcczYSmyhgkxej
YIwtEmOPUZOoHDX6jGATFRBsYpsIomJPc2DvCDYgIAgqKiqioqJijx3i9909
Z5U191mpg+aP8cf47w7H2HLXrdq1q1atWlW11pyF75uC30/E36k8e2jmghvP
2CrBs9j+Lz9+4dPZ37UrfxbkLMd6rPb3NdrPeufwPUb/7G/0T92l68zbrcez
KZ6F73vgrPf2+WC3FhmeVnlXj9G/acXoP9b7IN5j9H9pojE+rl+N7+fv5xj9
z/c/YLyfv3/Q+v78p8yn8j8Z8zeT8u5Hy7/c8DOlvmvDz7TK7iJX+6X5v/r7
E9ZftfxXS7tK+ZYo7+95jfYZ32fP//zvvwLuz1el8D3x9xvycq3tC/++KI+t
X7Hv6476uqF/fyf9Gxv/2PedMPTcCzbqsUaGZyH+h3w1xPWa+9x7Iw5f5eOb
J917ZKvfrPVGaUr+TLfc+Nnn/jq0k5OXty398viT2mR4Jnq/cT3i2/BMt965
U9Pp+3v/OY9PWw78n+Wlvu9PvPfpNT0+0OJPWt95/hPtMjyRv+f9p2H5vxM8
s60a6t/Rld9u7991W9Vi7QzPZDK+Q79vkvF9jL9knkmfhvatKe33+AdPSf+N
2/NPF17wm1UpnqXKzeU7jn3Ay/HvjL/PBi8dfPad/v6t1z0vbb75400zPMEv
6+X4d8rf95P+G4b41KHIYzlsQaej/3lndycnrvONGJ/OMj4x/dH+OVD65wqM
D8dtWxmfmP4wX4J5l/2l/dp/k6X/OG9mhf6Bqz9/uvldsJ8iL8x/zjvOw/z3
4yvh+6P+YyJ2OBO5s89qf2Ptr96+rJ7ybrCrPQI729Kq3/z+rkH9/Im3L+bf
0S7imQyqah/t/o2Nf/X+KdjPZCDmgeo/7QntiNoP5ifRTswR+0C95zxQ/ee8
HoV5rvObuDEZ5vFWMn+3h93DM6uI/eO85TzuK/P3Ndjd12GH1f7eIN+n9o9/
Tzuwjcz/CWjPRPTfT6T/Etg9PLPRYv+uhF1gHP4RYh/ugt0dCzus9pf4AozD
1vWJf+/sjNiXEWgP17EDZXxi+sP+wTPpLP0TG5+Y/ji7iPY/Iu2/ItJ/xvzK
RK7+jZPXyY/Kjf27Vb5c/f2F/Z+TG/t/La/7Qyc3zgek/QX/T8vr+UDN/Wec
f2h5tZ/av7p/1/7R/bl+n55fFNo/y2i/sf9Tue7ffP3V978q1/2r15/q+1Mn
N/bvWl73p4X2P2C039j/F/rnQaN/jPMBJzfOL7S8ng8U+m+20X/G+UdhfOYY
42Ps37V/dH9eeH9f4/3G+YQfP/lR/2ODIQvbzzpkFZ9p/vTxA+G+k3k1/Pmw
NG2rXXp/tkeTBM/sjgkz3vjgue/l70feH5Pn9X7GZ8p/h+0r7M/d+/E9fKYH
/3aLNhtO9etf7P0x+x87f63ef97/rHF9MeX0C+knDpLvz9ffj/lMq+9/X0nJ
i6r52fm62gjra6PC+joS/g+e6TrT/vL2Ewf5++nFz9y+9nOtF6av5M/SioMf
aNV2n81c/c+k7cpP3/0tn+kf9zp6/ODhPj/x3P6jHx+759d8pi8OuvGXTf/p
8V032XGfOasGrJngma314iZt2v/W4wNw38TvGrz1za1H/frnNX//JtuuPPTQ
n33KZzqgQ5NPT9vG508Pm/73Dh2ucs/0wF9NXvHgh94/4fcvNr5f/Rv6kZTT
fyZ/0q7Sv7HxjX3/n9C/56F/V0j/xsZf26/8v7QLtBNqH0K7s6q0odifOvmp
vv/y52PhX9dq/5bT7pXUPsT8E7VLj1W3T7p/deVj7avt/ka/P9P9t9n+7rK/
/J20L1aeekc9VP3j+co4zLMrqtuX7ALoWSE/AfNmCeaRzh/OF86THWR+0C7Q
Tqh9uFLOV86U+TEfdmke7JTaJ9qNkfg+tR+YXynt2Acyv2g3LocdUfuh50s6
v2iXaKeOEPtEPAPiQm1d3T6b/Rsb3z/j+/AsLZPv43hzn/oH6d/Y+Ov3q300
/APTfqzu+YdhH6R87P7Art8433flY/bTON9y81/9O7Wvsfvf2Pdr/z/2H+5/
nM+lPYz+6bd2dvyUyoYJnoXzhec/7XfpxaXWGZ7JPWdt+OAh7/v4l9fvmVnf
/vomCZ5Z/3Gt5/Xa1+NjzK0f98QdZ83gs5C/kNe7is90gyVXDhlyku/fpofv
8ocH3loja5Y/k/x85XvxLX1G7nHgglf5THV+D/7q2Jt3GPoFnzhf8fk3dQ3l
Uj4L/LL6fQPk+1Yc/fDSy279JP08f5Y2zd5sPLent4/Pof+eNfrvoObX/XZF
u3UTPMnv4uzPTzfd9pTH11qZ4lkaOubhRa+3aCXld0b5nQv4QM0i/Ze3f80E
z+wf50w5p+3xHt/nOYzPQoxPWxmfmP6wf1YY/XMGxudMjE9fGZ+Y/sTaz/7r
gf67TPrP2N84eex8uE5+1H4Z+wtX3tg/lmqt39g/avvKVnljf1Xz/UOsfat5
PlcoH5Mb/rVrn7E/cP1r+P+ufmP/VArrL+wPXHlj/+P009j/xfZHmfV9yq9k
7B9deWP/KPeDhf2d/77q+0fpf7t/jP2Tjy+NjK+xP3T1G/u/msc/9v2x+zdj
fyP+g96/+/u/2P18TK77Qz2fMu7vpP32+VQsfk2/X/3LmP2tC38K5/dqv7T9
1fvH2zeuW1zHVL+47tMP0PUf63uC9T3T9Z3rFtcx1S+uy1yndX3G+pti/S3p
+ku/hX6M+i9cd7kO6/pLv4l+lPpP9PueN74P63eK9buk67f2n/qH9Fvox6j/
wnWd67yu7/Sb6Eep/0S/kn6m+pf0q+AfpOofNI2MT0x/6HfSD1X/k+PzuTE+
Mf1h++nnqH8Y6z/j/MK1v05+aosPKOzPdH5a9dcYH8EfF59WQXxavcanxeJn
Y/ERtcYHWPeHsfbzfvcE4353Uo3xAVzf9P681vgAxgFZ8QGI7ylpfA/johgn
pfFR6p9ofA/jshYb8QH0Z2iXNL7sCrn/1vgg9t8Uo/8YF8U4KY2PUv9F44cY
lzXOiA9g3Brj2GLxARp/xHgFxgdofFtMfxjXxjg3jW/T8dH4tFrjA9h+jT9D
/FiG+LFE48di8Y3G+Y2TG/Gprn3G+bicLxfOf939Ul34U1b/LtZ+KV/Yv8Ti
C2LlY3LjfNC1zzgfVf9Yzy9d/cb5r5Mb57e6v9HzW1feOF91cuP8Vu9/9Hxb
5nfhfNTJjfNv13/G+bYrb5zvSvxP4XzffZ9x/lvz+Brn17o/NPs3Nv7G+b2T
G+ePrn0/LP46Oj8TQ27dT5v5MbXFl9vx7bXFB7XMuhrfT7s+0IifvUH0W9d/
xMeVEB+XanxcLH6W/OnEOdf1a4TEX2v8GuL/steN+Guu2/y9xq8x7pBxiBp/
OHk14681/k3tg8ZXIv4vHRuJv0Z8XKLxcYw7ZByixh/S7xplxF9z/tMuaHwd
7QfiN1ON34zpT6x/OD70szT+MqY/V0bar/HXGh9p3A+58nXyU+P9SxLWX4i/
dvbFuJ8xz2dX138x7pfM+JzV3V/E+s84X3dy4/7ByY3zd9d+437Atd+4nymF
9RfuV9z7jfsTOb8o3C+VwvKF+5Os1u8z7qcK/Sf3D05u3F/J+UXh/s2VN+6v
ZHwK9y9Obtzfufcb9zNOHtMf4/7JyY37pZr1x7ifK4X1F+7f3Ptj56c1xieX
+VT/28jPysL6a8+vNfx/8/2x+OJY/YZ9d+0z8o98fEb1/CFXv5EflIXlC/lZ
Tm7kVzm5kT/l5EZ+mZMb+VNyvlHIL3Lljfw0Jzfyj3x8SfX8Ndf/Rv6dq9/I
XzP3PwdK/xn5e05u5GfVrD9G/pkrb+SX1aw/Rn6ejE8h/87JjfsLc3024uNq
jZ8t5M8b9zfu/bH731j+QKz9xv2U84+M82lX3jh/1vgGPX935Y3z9Sysv3C/
4cob9xO6/uv9g6vfuJ9JwvKF+4fC/YKcz7vyxv2O+D92/xn3P65+4/7KlTfu
f5zcuL/Q9VXvv2T8C/cbTh7TH+P+Rv0vc3xi+mPcb5n9p/6RkV/o6s+fsfxv
Gx8jFp8b809i8bM/Nj6V5z/Xhec/Ts7zqXIkPnVxJD6V9lnjt2Pxqbo+a/w2
4x6eicSnWt/H803EL5Q0/pvnm8P+Q/GpGj/PuBHGkRj5A6VXfmB86rlyfqv5
A7H+jY1/LD61tvyOQn6uez8mSpnPiP9cOD+P5cfFyhv3J659Rv6pK2/kj7r+
MfJDtX81/1PkhfxaJzfyZ2V+FPKLXXkjf7bwfZJf6uo38pNdeSP/1MmN/GU3
f4z8a1feyF9242fk37ryRv52zeMT0x8j/9iVN/KLnTymP0Z+tpMb+ddO/nSw
rtWa38WfH5/fFctvqzW/a2Qkv+sCI7+H9y68hzHyB9IlRn4T7pdK84z8Lt4r
8Z5J8wdi+V2cPzyn1fwCzj/cT5U0/0TjGzV/guve5ZH8Luv7a83v4u81fyU2
vrS/HFfNX/mTxH9q/kls/GP5XbH7pR8Yf+LkXBefMs6X/he/7H/xy/4fxC/L
KI/hD9SFP5Z/Z8oN/9S178fGRxj+sZMb+4dCfMSwSHzE4hrjIzT+3Nhf/cfi
I4z9lStv7C80/lz3XzX3b2x8jf1TIT7ilR8ZH2G13/CPnNyIb1T9LlPBrfwI
WZ9Uv39wfoThf7jyhn+h+qn+g9NPw3+K+ReZ9X1WfsQSI3/A8L8K+RHiH/rv
i+RHGP6HK2/4H4X8CGt8Y99n+E81j7/hHzp5DP+F++oZxvnT/+K//C/+y/+D
+C9OHtufG/HD/vuqx/8WzndOqPF8R+/vjPhoJzfinwvnOxIf7sob8c/m9+n9
sBFf7sob8cNObsSfO/tlxM+78kb8eRK+vxA/7cob8ffm+Oj9dEx/jPhxeX8h
PtzJY/pjxNc7uRE/r+2PxgdIfJwbfyO+Tduv8WvSv4X4Qe1/jW9zciO+z8mN
+EcnN+L73PcZ8W+uvBE/6eRGfJyr34ivdP1vxIe6+o34StP/1/4z4ksL4yPx
gzXrjxEfKf1XiH+sWX+M+FEnN+JDvRz1sd3afv57pPwd5Vu2vPuS4dut4LNw
PrUVft8Bf6dyx4sJfotC/Df+Pcp4v+NVQj1W+/U79ftHGd9/HeRXG/I6+VH5
wLsu7N78o+YZnrHyZaN/0y2N/mO9J+I91vh0MsZnVOT7+fsbjP7j+wca7+fv
j//331/mU/lPjf7LrP7X8lt2P+O7/+ZX+r03/bv/Xqk/V+R39Tns7T893CrD
M+G/KR+Cv8cze+WJZ/ZY/+tfuPLvfLHzxteMa5rhmQxb8e6cU3qa+FWF77tO
+vVazX9qqG9Viiff5+R5fY2h/42T8HUfljp2vWrvf/5xjQzPJH96/rlY+458
++Lv/ptaWfjXG7/7b0LlApHXaD+c/HqRX4T6Lkb/vin9Gxt/4/vLUj45IdRP
Vz78+6L+iLzQP8swHu9CD4bK+MfsD/Xu3lAP5fu8fVss/RNrP8d9E+jBJjL+
l0GvLoKevSX6Fft+9jvHoS74ibcv1j+x74+Vj42/0f4y5cb6k8n71X46eZ38
qNxYP63yZZUb9tfJjfVXy6t9lv4prM+F79dxsMavcL8Y6T/D/9Dyuj5p/+r6
Wej/Tkb/G/rl5IZ/YI6/6n9y6LF777/Dt3ymuX3196O5Pfiaz8L9ct3fP5hY
mdsowTP7dv61t36dNav5/VH5gv+p73M+U/dvyI31Ucb/Uz7T0E7H3x/r/5j/
ORb9N87ovxrnt3v/9ZH5sVi+n+PSiOO0IBwfjnsv6EFZxh/rbz3W33pdf/F9
Kb6vEF8X61++70KM0xAZH8M/8d8HvWgEvWgk+mHYb18+0r4tIv5v7PtHheNW
mJ/wPzL4H8mb0r6YfTPmh+X/Few//Tn6keo/GuPjytNfuNfwX/PybaGf5F32
65vhX/rvg/7Szqh9MfwL137aN+h3qvod2/+FduPTUlm+vy7UO+phzf0f+sX0
k3374R+l8I9Kb0n/GPZN9Ufth/s+bZ/yTxr2xZU31g/Lvy/Ub6wf2r6yVd6w
r2XKY/v3WPtW0z8qfl9Ervs+nT+GfXP6Af8/g/+fqP9v7L9E/9tmnKfafxxX
jrP6B4b/7tuP8W3EeSzrT+z8pLDuy/dT/2GfUrVP2v2F/Ci0n3ZI7U/HwK7Q
zvj+M+y3b3/18U+kfp3//n62evus+ld7f4TziXqcT1T0fCK2v6HfRT9Mzyeu
k/J6vhDbP8TaH9v/G/6PkxvnM+79hn/kxsdY/8uR8XH1G/6BNb4F+2H4J05u
+G9ZrfUb649rX63nPzJ/aj7/Mdrn5Kt7/hM7/9X1jXp5wuqd/7jvN873zO+r
0f9wcuP8x/dvdf/EXJ+t+SP+l5Mb/pX63+b+3fA/XXnDv0ykvJ5/uvLG+Z97
Pz67zKfqv3E+6OSre76u9Rvnm04e9f8j9Rvrp/avnv+59hvrq/l9+v2G/+D1
r7p/IO+3z28M/8mVN/yj1d0flqV/Xf2x+xGem9wV2R9a50/G+lqzfsTOL4zz
SR1f/X6rfwrrR+z9sfJb/IfOV6433m/4J04eO1+J3V/x39b+o9b7qxNX7/7K
tS92/hj2lzm+ptwYH//+6v6l1l92L1hN/eG/R67e+aeTMx99ujwpD/NNfTsN
eZ3KmbfeHvnnfP6n6mc+joVPE5PXmD8Rxe+qsf0FOX8veUzqn5hytodxwIxz
V/nsfy83vy/GL008gg4hToGrn3jPgjPgym+GfBuJIyrVKu+PfKFNwzhgiT/Z
3OXVa369ykeK/E/Il5oXxvG6+plvJDjiaa1yzlfBKU9qlS9EPpHEUbv2fSHy
c0VO+3JCGKdbuxzxLRKnltQqPwj5XIJT7+pnPrDEQWa1ylshX03iqN37w/ml
dsbja0G/ga+1ypifOs89fwNxe7pXtz8ubnSOzK/q9Xv8jFh+V6x9XfH7gWIn
KVfcgG5if2YFdoVx2t6+/Krh57H6XVBvo4bfz5X2e9wCLR8bn9raV+Avdd+n
uG6Knxba10bZ01JeeYHUvl0De7Um7NgIzX+BvaId6yT2i3Fj26O85lcMhb0a
JnaMcuXNmi/2i3GJtIM3S3nlhbpA7M+7sGefw869LPaN9mqUUV5xG5ZK+T/C
Xk2AHTtP7BftEf3PQWKfThBcApXTLi4XO0k57dU1YsecXHAZLhf7pbgEWp64
VmfAjg0T+9UR9op2bFOxX8qbdqWUj/lP/D/LPsTK11h/ZP52Ed6u2tsH+wX8
0y4/tv3lH9Z+h59YkBvly1q+m4EfF6u/tvJ2/8b6L4/rb0/cssL+nXHHCf5O
y+dx9ZskIa67L8/f8++0fOifrSqUj9V/XTDvmHfu5Xnc/laCK7u67WuTsZ7V
bX+sf2Ptz/MmWichrqyXx8aH5ViPymP1x8rH+jfWf4JfVOB/+LH2Kcdb6u32
hZgvGeX588n6EMfNr+/K28B8esqnXL/7jpOHv5Xmz8/TSsPTn+8Z7StH5K79
sfbl+98tib9W8O+moD1Tw3aK//OR5FHr/tjG58jfvybs07JU/bM5kf4jn0+7
AMfO43MtGHPI8Sd/skpwAL1/NOPtOzt0+tz5RSXNT7p1i+l/bdpjFfI4ljuc
R8qPvfmfxxzWsxPKzympfzVstzsfPXuTphnzgHP/zrfvoilP/vrjN75Oz+mw
9eSt5nyVntXw9Pr7zVNnrbfzW52Sd7Y5eMftdppXyp+vufq3n/rLvd5utnMS
5rF6/pi9slPf++kzuyVhnlR7Jz/t+m73/P3cl5FXtaLAL7HVBT2vu2XzllmY
Z+3x/w574c41djzk4/Tkv7x31qrXv0hPaXj6/NP0wukvnNZoLWd/86f3X9e5
6LH5nQduBvmCkvJ7vLHB0j3G3fta6fG/1j2/8x8+SfOn929mNoxfryzEOdrF
yX91w5t/3fLSxslLu/38gEbNlqUvNzy9fq239LkFBx/8ucvvzfeX/vxw7WN+
eVvbRp/BDn1U8M+G//zOKT1H7Ue/DM9dXP8uOnWfjc9utkbys61+s+fQZu+l
PRueK937z/u487r7L+vp8mp0f7pjw/ium4V5Ml7/L+437DftL10z69Kw/nyT
Ml+N8h7B/rJ3srvYL5lXhflVhx/ahdGj/udnjOO3ot2ifVD7peXrgp8Pha+r
rk7tk8jLKk/x3sl4b0XsE/aXlcj+Mn1a9pmR9pcph18F3sUtC/azNn7oZSnt
YFexfx1g12jn2ot9i43fjbBns2EHdX84DnYttHNeTtynmbCTN4p9HAq7F9pB
b//Ohl27AHZO7Rv3PaNgJ0eJfZwCe9Q7sGPefpEfI7RT3j69C7tJO7pM7Oep
sFu0Y2q/rkJ/bQc7e7XYV9rNMwM76u3nE7BbiwI75u3XItil0E758ScubgV2
tCL2k3aLdkzt1wOwq+vCzk4R+8r95ZOwo0PFfl4JuxfaQa+/e8Ku0c6pfWP+
5WjYySvFPl4JezYEdlDz+7eHXaOdU/tGu0g7eYXYx1r9vxh+7e3B+U3x/oO8
HJq/rbiY1c/Pfrh/1y2of/0kxDnzctqncB9YkHOfWGi/8AMU2k9cYOVfVN63
7v+2f9bP9P5C1q9s92Af6svff/HMcW9f3r6Av0H5kVP++Fj2+Dvwn+alWv9D
jx73wnVte2X7NuyDtjbqX1Hw7yi/r0G+FPcDc9z7e0L+3u6tVt30q4OSpQ37
mG6F70f7C/iclP8mb3/6NuyZyhc8uPNGc/+6ocsDry5vAf/Bn5/yfPfthvYl
yFPfKjPksg8r9I/jMa0uX4r+m1P4vrx9exT4pSm/c055rxk7rZ08Bnuq7Rvf
MH67ZOE+tiAHzqRfP6T/MrVv0n8J/UBDfxLoj6t/5/D7Cv6dfF8GP9fSnwz6
49ondqdgf2Ln/4LfW7BPuf/0UAX8QcIj9J/an/L8S3HAnX+VkOdJ94dsH+2W
2rfY99fafzzf//f3L8X2x/wz8g0qzj7l5BtiHrnuj8L7N49TTzn5lBQninLy
KXHfSzxPqT/TPPpa27cA3xfuf/33ke9HcRYoJ1+Q4gRQHp4PtcuIp0r5pOB8
bu2C/9BPvl/5GWP9Rz5CxVGgnHyO4f7Qz/8pwfnYqsL5As/nlCei1v7ZWvp3
mPRvTH/YfsVBq/X7Y/oTi7+ow4/cb7r9J+/V6Gc8Kv7ZCbIv0/mJ6s3z94Hw
i6R8ZpXH/tjtL0O/bCPu73T9M/mtY/aJfpd8fxq2v7d8fxepf/1M2uf6j34V
5Wqf7oPfRHkv8Z/gt7h14F3xv8bDrwrr9/PrHfhN/L7XxH96AH4Xy48S/4t+
EeXqH70Dvyes3/s/9Mvk+1376BfRz1D/iH6bfL9r33z4ZZQPE/+MflHYfu8f
3Qe/J+x/7/+gf1PpXxm/XRIpr/1bkv513z8Wfhnlj4t/Rr9K+t+17374TaI/
7v3on0T6Jw3le8j4evv0NvymcHy8/4T2Z9J+8V+/83safh6oqP1g/FoHg38l
tBe0Y2p/5tZPN87npXy5+vtbJzwf2kDiT/LvXlai3RmEcybKY/zV5J/gvlf5
X2rzL+37xfD7JhT6Nz+/b50QN0rtz8Shu5+17aedXVzzYzPbNl64S1tXfv3Z
4//4jz/XJQ/ft/czz+3WKDt8xItdmi337Tuu4dxqp4S4YGp/jprzxsTSPi+4
OPHdfnrYXV2v8/Hdm3x5ZPPXln6Z3rrs3iG7T34zffX0ZtNbzfPnn2Nu2eio
XW7Ygu3Kpvzt1tKJ/d9x7c/PleqcXVq+6/vddmiyhiufn6sdSN6nRPkrr204
N1vh7gH7Cb/il+U7W/6hY9Ps4U8vbj6lz6z0itLEu9b6Rwsn73nnqYct/u1n
6dS8XenXHVv02eo3vv3rNJz7bJXRTy3wdzec6/Rw+zbl7164cffl+936RqnS
UP+Xad4Pvv/y+5c22XDYpXsObN33+t+t5eSPNIxvM/Rf42xei0/+dsmp/nzr
gOsb/3HFpE9K+8z89oVfb/pNeuu55924KPHf37qh/U3Q7jUL/tFGleuvfK5j
x4xx/xsdcvDUw+rXdfIzhrVsNnNKXXLncbuffsCBjbJX6495adZiXz4/vz/A
4e6p/alv6N92Lv4+H3+PX96x84rmt/drkl38wHmHfj1hbvr1NcNfWXKuH5/a
4ktt+8B5z32bnq/wfHzXwP/x/Ldh/U/W6/4P7zXPx2uNn7XiR2Pna7H71Zj9
5b7kGei37k9OCHHtyGPgyk8OcesK56vUa9lHSPxTG8bHF/xj4r1x3o2U/Qlx
A8XPd/3DfRH9ft0fsf1boP3Kf0v8tinhPsqVp915Gv03SvpPeCcK67/yuuv+
4S7hvdf7ietDXMIC/y3x80aF+yhXP/H3tsH43CDjI7wfhfip2PcNgv6MCvdZ
SVje8aI4HDvKldde94+C61jQH+F1KfRv7P4t9CtaJ+pf5M+5lZ2M86Hw3GYZ
9iOF+FrOS/P85IfyZ9Nvod24XfyX3P7dUd/NeL8R/1Tn3g+/ZBb8FL1fewR+
B/0Q9T/Gwm95BH6M+i/EGzwGforaj9vgd2wKP0T9D/otx8CP6Sr+y+HQK/oZ
W4t/MR5+A/0I9R/o19DPqYh/A38npZ+xUvwLzp/t4Qe9L/4P7wdHws9R/ujJ
8CsWwM+YLv4F/Qb6Eeo/YPyS1vBz+op/sx/8CvoZ6l+E91s9si5V+ct5f9om
U/+GeJdrwU9R+zEGfgf9EPU/8nzTz0sbw49R/2UA/JLz4afo/VoZfgf9kJXi
f0A/M/oxk8V/qfV8l79ZXf8ltEd1ddXzj1x8d1nPh2t7P+Mhivx58v5y9fe7
8nVaPuZ/5LyIHzg7WJ0fcRv3fj1/IP/jXWP/52dm/Styf5zzRpLvhvV7+3EG
6s/t4PDKSKmf/Ix8f+5P+PUhVn/On7iF1O/jB/LyiSuv/nPOq9khC+V+fXsD
/In5979YOVXu76X9ddr+WP+z/WH/fw8/sqH80668zl9pf1nbT35Jls/9lRXu
/TK+FR3f2Ptz3spd5f3+/EjeX9b3x8ZH6q/T+mV86nV88mdWH+Z/+fml+SOM
o6E8zL9xeThy/sv4wq9Ku8MPoVzvZarH/9jtY3wk4yIRzynvZ/xol+zf71+K
778WcTHXIS5G9XNqEF/3aUnxyTUuRPOnZgbxj8sL+W9h/OFrvH928l9L3Ez+
/MLVH8b3Mf5vgSt/nMQNjZTzRcb3XY64FNWv84P4OeZ3ef/5Iok7yp9+/jCu
hPjUiKNzcsZXov8L/FphfKmLM3XlT5O4IMQLOXlriavR+/nbEJfFeyHEoTr5
y4i7qUfcTf70/Bo7BPGDbQr+xdsSl/SYnH8yLolxk/nTz58RiOvB+BTOP/aS
uC3FP9e4rWck/yh/2vmtzB+zzi/y59x6a3/C+vlc3fnP85NumN/dZP0P21/c
X7D9sfJcp3T+o30VrhMa35rfR82onIV1/lbRX9bPdVznf/5cUOE6+pqsn6i/
vrb6k8L5fP5cWE8eZI2/q619c+vBv53q+o7ydVzHR8n6zf45Dev0MFmf+X6u
szp/KOc62kvWz9rGb3x9T4zfIl3fg/rN9tf/uPZnlWZG+/P636mshXX+b2J/
f+z4ov56q36u2wPDPAG9n5F7XT//a+O/judP8Yl4E1c/zwcYd8f7XinP+6N6
nf95/voi8GKsKOjHoOfv3vvixY86nFk9P/7lyhPvPP72FaW7G3jF10jaC385
9aEzeMsL+QkYL+LC5ecBG7j2HZzXn7Lee/Aeyj94ucvUszpt7O5dQhxc5l/v
lvE9ef2dXfmQt2YDwTHz/Chsd2fhX2e75zX033OIV/DnC2wP7130fCDkJVla
wI/ies5500/46TE+KcclxLH5sLRzPr5uXJ/GOEv7XLv0fojt4XctwHdSfkNw
PvxJYX7zvaznaXwn5S3bzPnDDh80STbL3mw8t2fzZMw5U85pe/wzfv+Zjx/e
37kwvz/Kxz8jvoyeX6H+jPVuivdQrnndmt8NftHkqfCc35Wn3z058MO9/x07
Pwj97mL9OPfLBoZ5YO776ZePgJ+u53/0uyXPxMknwW+XPBknH47xlTwlN7+4
n2L8+qnif78Nv51+/HLx35kv8xT8bOXfPRt+M/3os8V/pl9PP3+C+Pf0qy8K
/GzvXzO/nPuAm8X/53lVGX7+leLf068eBD97ivjXd8NvZn7D3eI/D4dfTz//
WvFf9oRf/XKYxyPtX1WaE+RX+Po5H0M//6OCfd4uzPNx/U9/jn74K+J/029/
PcyTkvfvko2En67nf/Pgd9MP1/z/yfDb6cdPEf+deTMzjfy+2PrJ33cz1l+e
z3c1/Geuu5yXuv7Oh71tjHVW7/fuxXp2CNbRDrJ+Ej9rMNZhXX+3wXrE/ZXO
z7aoD/Wn98r6eSHWL94rDZD1l//mOqnr42ysB/z9AFn/aI8/xDqt63OK9WZs
YL/9+kd9OQvr+BGyfpNfLeTH+l7+DvrrIKyTuj7yfcQHTWX9m4/1ivNS1+fD
8b3E3Vso6yPnE+4JS7p+c/52xTo9R9bnA/H318IO6/zshPWM6+g4WT/ZXvLc
z5b1l/4Q11m937sN9bXCOrqZrJ8cN67Duv7G8Jli8TvIv03mGOtjjP+7D/gP
+/xA/u/J4F+c/P8p/3dz8Ho2//+U//vByPtj/N/V93fjZf2x739w753xfFnj
+xB/5eKudP+Wx081ycL9g78/xL1oiXFX6v8jPirhvaGuL4g/kv1Vd1f//vm9
pYuL2je/z3T1I/4pcfeGgh+e+2UHuviEAcIvOCG/t5b9n8dnH5vfC2e8Fzbi
87L+uBdHnJ6T497TxV0hDkv6r10W7r88vukb+b2wW9d0/UZ8n4/rE/zXdfN7
4YR5EvOEnw/xfyXeuyMO0JXHvWrCe9WL8vtWJ8/zFutc3J+uL3PzuIIs3D96
/cO9fHIl7uUR5yfnsz1cXJ7u3/J7/51kf+3vr3Fv7uLudP/MedEO80TnR/7k
vHL3H07O+3zc7xfwq77BvKjHPFH/gP3FeXagzK+7MW9w/16YP5wXuN9P95P5
Ee4/DiC/pquf+ow41IL+M96Deq76vTHmHe7vC/OPes95MEb0f0vMy6MwTw+V
+Ym4TsahFvwD6j3nger/Yug14ksYb+LvvzCfEB9QwBem3m+MeXCJ6D/n5auY
pzo/D8C8a4V5OEPmH+NFED9S2D9xXnyBeTJJ5gf1jfNsjswvxoVdh3lU2D9h
XkzAPFH/Odzf7pRtI/ML5xPZdDw1vjo/l2rPuNtC/HNu7/eV+Fsfv0Nc+ZV/
Pvr4RVuvk51yzKhHmy/z5+P8+3x96ViIfz4I7w3jk9dz5YcC//7oDztNavyv
plnj5S+evPhA7//n54VbJB+d0er2JZPaZ3o+Ob7Bv/04hV+b7b9puy3bPevj
Y3K8tVbZ8IWHLmk2cc3snTWeuXX5XT6+JeedfzttusWWXS9u1iI7uvL8p79t
4cuPzesv/SKvN+sk/vP4vH3Zxnm70o/zdur7E7yX7XDy1/L3l/DeDO1wcsZt
ot8K+kk+4TD+uaP2bwn9mh2T97OT5+dy+3LcC/dv0B93b6nx2+QFgl5kX+d6
4uTkC54HPdT9M/7e8aecLPoVxk/ui/gor5/joHfgvS7Y52OhV+T3UP0K4y/X
z94X/aTe/Al6pPpDvaSethP9bAK9op4dI/qF88zsdujxfqK/+DflhfNP6hXa
l6h+HQu9op6pfm0Evb0Xeqz6i/4AL/j6Bf+iCfSKPCqqX8T/IK+y6ifWn+zX
0EPdv0IfyG+RrRT9YnzfbOipxt/F8H1j+JdLurT7r72+bsT4iEJ+LX+/GH+n
cuKbp9Pv/OnIp7Yo2N9Y/i7LsR6VH5J1Ov/1L1q6/ASVa3y1ylnuINSj8lh8
0xHHz6iM2eWbNM9zK9aPYub95YkN5zpL3LqtctZ7DN6j48Nyg1GPyq/ufck2
p5/1idtXav38/Uj8nZbveMsuu0z7WRuXt6nlea64Mf5O5Xl83BeI4/oC/qo/
P1qWjhizU/9NBN/A2y+J32P/O/mL77/4cYe7Pk2fOG6/k+6o+7a04l8X7psu
9+evzCuYZORXk2+QeYU/Gfzml5/9yed/5u3r6+4tlL9+3S/Pbf7l3T/L8nZ2
SJS/YXC3lyrD367Lmm/7ePqv0+qSffo1eWTPhcXzC+t8Z+HVZ964T7vtXfwS
8ykpj+EbfjjjrSOO2G5G+tVlpaeeHbKydETr05ts9r7ej4+v7IH7c42P23/S
fvt1//Db0lqvnnDp1HM/L5338L+GfLTU37+cemjLn+/0y0ZJMnhC/2s3/Ly0
9JVjfnLjZl6et39lun2Yp+Xa/zuJ7x8k8f2jf3Fb3YQDGiddW3R6ZL9kRWl0
u6MmtVrk7w96v/r8pedN7eX0U9fvgW/9q7xsw+bZqKGPvjT77EbJCRI/z/xM
6uFo0b/HoVcvQc8+F/1CR5epp9eLfnaB3iyBHm0q+tMCekE92Vf0Y0okv4Tn
Z32M87P3odfUy61Ev8+A3raGHqv+Um/qZuZ6pPrTCnpBPVH9uAp6OxN6PE70
92fQG+qR6o+Br+n0m3E7/I3G7+wAvVsAPVT9o16Ngp7dIPoV4hqvkal+0v5R
D1X/RlPvoIeqfzH8fMWPLuwvIvHDc775eN/DH3b4gIX6qb9WfFCeH7xtksfP
rFfY30xCvXxP9fjl9TLWU8jfCvyDNQr1R/EjUC70D7x8n2cnbvyHv62f8BxW
5Zq/pPOf5fZFPSqfjvMA7F8L9fP3j+PvtPxD57737sVttuX5SuH7+fsH8Xcq
h/6nfA4d8/Ci11v484N/rrNm12t+vVky6tl/vbjbCYvTWR3v3vKjV5515WP4
vsTdYRxRv+G95n9x4sZOv/OnHd82YP3J5z7ZsmW2f3p1+ura36b5euz918U3
vTt0+AsfpQee8trBRz3+VTpm8wPu33+z4v6P8bWjgnXO6w9xkXI98vyJTfeZ
N6Fy4+ul9fP4gZR8CJQf9fU3/b8evFuW29F1C/aP5493n7b1TX/p/kn6+/2P
/8Ua1/r7N577V4zze+Z7MH9H7U+P3Zt9PuKO7+ze9rcueWLzT1PND2v68Yu7
vv7Zns4vUPtykeSvXSD5a+/3vGDTzS5YMzv5F43v/MPvv0kPP3HIA8s28PmH
u2Ncn8U46/hy3DiOOn6joVf/gJ7NFv06COPKcR4r42vgPzv9i+UfIC4kbY9x
7ifjexfGjeN4kowf80O5v7tB9Ct2vzMaehfaMa9//aBXR0PPVL/2hF5MgJ6o
frwJvdgDeqL8PnPRnubQE9WPUzDu70EPDpPxj+HLxPhV+q2dHT+lsmHCp/Ij
3fR5xwnLv9w8ef7TfpdeXGqN8yuPn7EJ9vNX7Tyl0rj1bkmLhnvadq68ge9d
pvzQ874ceN9Tndi+0jY39bxss1ZLXPsa77p165XHduT7E8bjUf7ytE/aJqe0
Tf466pz/OvzPnROel1E+fsQ2v99hv60cP5eOz/k3bzNswlsdGf+RkAcibL+d
n8rvseI/P7um44Iv226R5P7VOtn5Df7VYtd/lyI+5e6G9eHwZBbwTij/G/qV
996tpH/Pj/BPPIdx4/jl5zz+fGj8iE4nJv94J+1+5J3PbXRas+yUVhN/c/Ft
fv0Z+9+nnD62SfskH5ePU57DUC75QXWaH/TFbh0fumnku6UVRz+89LJb18xw
j+/qv7V7z61vv7dpsrChfavSs3//wUVrHPo9fOqJ6T7lDT8qPX7qF9Mnbbtm
gT9k7dN3adG6/xru/lnH97fX/rPDdheW4D9smCi/V+z+NY/v7Onu96rH9y6u
MM/nNInvfeGYTr3WfKpR9vO29772l/Ets15XbN59vb38+ZvyeyyR+cnxuxHz
sI3MPwP/vkz5ZZgXnCfnyvx4HfPuV5iHOv/w/qQp5uEhMv/Yn5xn2v8xfLOt
Me/OxTw8R+af5F+Vtf8fwrxhnNcCmT+cd5yH58r82wN6fw/mwami/7nefpJ+
jqeeX+5W98Au71zzZik/v/w6zfvZ33/E8t965O9Pnmi76OIbN18D+dnf48/K
31v68Oo2/ecO/ia9tXOPA3b4pV8fY/hnF2J8iKt0X8M4efyD40tf3/GzhXXJ
erifa/aTq1ad8jdf/uJuPxl44jn7AL9x28L+PMZf8N7vLv3DxSMaZysb9qHv
pQMa9p/fwz+O8Hd9BrvxLexIS7EftBu3wI6cI/ZjW9itMbBjar9oV56CnXlU
7Au/hHZO7RvtTmvYIe3/WPwL7dJRsFNqn8L4tZ4F+7M37ArtjNoX5h3wOzT/
gHrbA3r8kujvk9BLzJPkNtHPj6GX1NNbRD/5XpyvFfDbqbf7G/gR1MvjoKdN
RT8ZTxraIa/f2Ldm1GPtv6+gl+9DT1U/Df6NOsqz+nFP3HHWjNJiPJV/s906
Xe77/dlNs3ZBHKS/X8C6mNRtesvOy/s/D/vi45cxPqWl4F9Sfrr8mVXWNfJb
7gvw674qDZx88XpD+vr7mQsvKr/x2NVrJGse3W3743o+mx52b90l90/z78/7
c2/xn3z/Dd925trt/runO1/lPS3lzHebZuBvLN4k/272Qyf5/oER/qp8fVpF
O+DiTSmHXU3G/PPMztdNXVmatO9LU24/8V0nz88Pm+L8t3lB/9i/Vn7Q7lMX
Dhn398bJJ4ecNfaqIV+X+tz0yrTh73n78qvlAxb3e7W3w9fS/tvv3vMOufmW
fXE+4+5JnDwW3xbjN8T9WKkN9PBg0T/Jny7r9zeHXlwEPTlc9GNX6NXD0LNB
ol/hvNx7tfEzd4ReDYOe7SP6NRbjynGeKONLveLzHw33kEucvP6RvlNfmPAx
+T8K8yfG73Nt01/fdeRJ3+1LT9rhvsO3apzk3+P9sxh+KPm8nwRuYI9x2Vrn
HdLBvX+vQ/46/6t7vtPPV144t26H5aV79zz1F90qBXxRk3+Sev0g9Fy/j3rb
DXp8gOhvLD8f53sZ9Vy/j3r7gBG/SL3nPFD9Zz5DD4yTtp/9znHQ/jf4l9z4
hflX3QvtZ7/3wjjcI/1PvEe2W8cvxu/Jf18nf+f0q0HvWwl+uZcTP/Nq/J3K
sf4nfA4Y13per31fdP1z+ttPP7v+kJ8yP7nw/TH8hEfeaffHfq81y27uvkmf
9Z//tvRY60NXXf5r7z9MQb2D8R6tn+UeRj3TpTzf2xTt0PfH+E35b/27UP/W
yGDfgf/j4ysMfIXC+Ts1ysDvpbwQXyv42g6HknLiq/8Uz5OAF6zlJb49q/X9
/HfIo9C15vLKm6z44PQ7Qlwa/vjyFv/Myw0/Uyp5/ui0yu5V22/Xn+NujAVe
8oSK5peT37SD8JxSrrhbM6V/Y+PH84rpwoNKeUfwmZLXdAB4TilH3gdx+krN
EOdBOe/7+dxB5OQ3XSA8p5TfjvuIa/HU/Dfcr6S3GvIh2K9dKOdQlOfz7eBp
V+KZlz+9d63l5+M85B08P8M5CeU8P3lFzlEo53o4SHhOKVfe5/nwp2otn4/L
jr1H4Zn3Y79pWr/yqFI+FPmQVwhPKuXDZN3Q/DxdV0aLnHzO5EVdCzypYf2b
u/h58qxSznjPq4I8KC+P4V8Z+JtpreVrw9eaq/gUfvyq48+49hv8Wa68gU/j
+u/Htt/AZ3f1x77P4Jd2cgOfp1A+zIP6SPqvgB/k76cj/WPgJ8r9aAF/x9k/
A1/GlTfwYZzcwA9ycsXfIY8h5QZ+jitv4OO48isFP+gdwT8/qjo+jqvfwI9J
KDfwh1x5A1/GyZm3PCnEJ3LtM/CVZPwK+ERu/BVfR/HRDXwmJzfwd5x8ZHX8
Hdc/a1XHF/L3R9Xxg5x8x+r4Qe77DPwl934DX8nV36bh55Z6+jfqn/xY+xLy
HTj/1LUfvy6L3L2/a/D3deVdg/oK7a+vsf3l1Wu/z4u2+Cus9jOvmvgj3SP4
RwZ+ofl+qb+i9cf6X/q3Tvu3l8RNKb5WmG/P/bmPz9J7eZ2/EjdSDv8+Xl7u
nQrxnXpuqvc/ci9cwM+Te4Wy8kto3Iu2P9Z/sfbruYHaX73X1vaHf/9g5a6g
vsL4lXX8Yu+X+uu1/lj/672N9q/iitMfonyPYH/aJfs9/C3KyY8q+CS6f+aP
gT+qvBD8iZcXfumS8rPG6lfeZsVnwf603tqfhrjKnoew1vaDvyIlL011/grf
vlnSPvKnthOeDB1f4szMkvGlP0XccfpblBN/nLjnc+GvUc74vFvwd0/B36P8
bOF9vhD+Vlj/HPA6e5wUyrnfoX83Ev4e5eRHVZwPyjPhhf45/C3KTxVeZ+LM
UL5MeKmJM0P5ZPhzk/GewfD3KL8c/YY426wL/EmnX/B3XhIcFMofE17oN+Fv
ufqF15n+FuXEtScOzxT4e5RfBr+GvKhPwN+jnPyqGeohzyrl5Eelf0WeVMrJ
r8p9LnlWKed5A3lTyaNK+XbC+/wX+Fvu+wO/bfOMfNOh3PNKEy+S8ph/oudD
uv9R3gad38IvmDAeWd6v/GCx9pVrbT//fjfj/cIvWOBHFX5Ch3df6/fH+k9x
7fV8Tduv++fY+iX8faniT0l+U0n9A+GPczxylEv8a2H/qrwYuv9VXgPG+dXa
vtj39ZF7d93fSPxOYX8j/IIJeQYpD+/P24FfzMevxb4/1n96b6P+l/JqKP6q
8Asm5BmkXPgJec7g3h/rn1j/xvQn1v7Y98f0h/s14sL9Q86nOV85j6z7A+Gp
KZQP8am6FsrXhT/liLxO5TxnHCj4V/w+4am35AX/jPXTT1T+DOmfgn2W+5vs
JPn+bkH/fOX4CCkX/zqBf11oH3mdyTeoctoH8hlSTl64EngLx4PPsHr5OSi/
tHB+y/lLnmitH7xzGfjoCv3HczHyBRrtTzV/jnLGAfGetLq8UUY+RO1/8B4m
4EPMDHlGvkSjf1LmQRr9UyJPtMrpx5HnmfKdg/Zvnmh8I9u3F3gLyWdoyBPy
JRr9l5Ln2eg/xxNt6E8G/SmUJ642eZ6r17854zcTrZ+8heQzpDzGn7qB8BJu
KPe31XGpPb9qdTl/THmZ8vzpz+8fk/P7vNwyd86u/Kg8Nxf8JR3/TPjnvf8S
8Z/Uv6p+v+HOr8pq3/T76S9SPlF4fRQfhfyGtE9zBd+EvEGCj+Tk5CcU/CI5
3/e8QYzDonwT4Q0ijyHlXZB/KPhErvyd4P2ZGuI7OTn5CQUfS9p3IPOSXRwK
5cw7EnwsV568RIJ/5OTkJxT8I1c/+Q3pZ80V/Bfl7VH/bDF4hwRfyr1/f+EN
Av6WkysvEfCVXP9tpLw+VfGpPG8Q8QAoV94g8hhSTl4fwc9ycvIG0T71F3wh
5Q0CvpX7Pt73/yvk4XL9Wyc/Kg/vB1sW7NsJAT9zy4J/hmrLfFYvv36COL40
Ut5on72/4+/FP3Jy2i30T+H9JwT8zV2M718/YxyiysnPTF5mldMfov1R+ZHw
p+hfqZz+DP2b6vWvcHmv1eVLEV8xp/B+8CuTV7lQP/0Z2iWjvItfNr7f2SWV
M76M+QNG/6QfwH+r3v+7ZDyHr97+Pdy+xSjveJmN/nX7RpXTn5oO/8ro/xL9
N0N/HC+z0f8uLq+6vEUyFP6VoT8Z/Rujf5z9Mb4vo39VPT7L5gekP9EO/gX9
Dcpj5+M877H4CcgPwvOtXaqeL91RCeNDrPObYvtniXymyOkPcd+m/kvs/Xr/
GfIgen5DwblzcuDWZOH5uO9f5W0GnqR7/83wRwSHzt/vw5+5GvYFeIaufvpD
5D0kDyLl44UXmf4E5b+BP7Id/JNB8Fcopz9CXkP6K5Qr7zN5Einn+b3gIMr9
nOeFJg5JWL/nRaY/EbbP8y7TX6Gc/Ia3wD/pA3+FcuV9pr9EOfkN7wlxFp2c
59fkRSRPIuXKq3w6/BXKyY/I83HyJFJO/sONQhxFV7/yKgOH0MkHCG8z+ZxF
P7PJIc6hkzOei+cXej/+w/ZPnr+kMrnhp8L7+65i38L6zPjaKP/yv+eXdvGx
hfOr2uLD7O/neR/P/6rHF65KGf85T/xz4iLxHofnvZTzvI+4Ahpfyfs54lps
LfiMPG8FD0NJ8fPIr0xeZeN+2f1e8RnJr8z4GMXH4Xn1JOP7NO9R+VFpX2h/
Fd+S57k83zXu1zPe3/0L57GU87yY58fKf6C4F9p/4f3W5gV8VY7PjRgfxc+M
6U+sf66Q8dlWxiemP/TbhoX7o0L/sV8nSf/FznfnBvGJxfjw/El+ss9Kmh9+
gvglyo+6gfAmbliV39muX3lTlH+d8ZdTwcvCOISwfb1l/0Q87nj9U4U3hXF6
lIfxj6scXwvlysvCe2LKQ/7DeSnvuSmfKbwsej/D+/KTwcui+adh/OWcAr5R
GJ+4INX4ozD+ro1bx8L29XL7C8YpUs74PPIeKr874z/PAe8L4xQoD+NTlxfw
/8L4UBen4Nq3rvCiaP5OyJ+4omCfFgkvS0/cs1NO3hfyJo4T/vg3hDeFcQSU
7yC8LHq/xXiEl8DLovhdYfwq7YC/fwjjN3l/5c+nw/jVb0uMY6U8tr7if4TX
0Mvpt0j+SJnyMH/js4Kc87W6HYu//8fWHzt/Jq6dxtlRXh3X0sur8yrWXn91
XDIvH1yVt9DXXz3vvvb6z6yad67lFbel9vZV5/Wrvf2x/o+1vzqvoZfHxo/5
nWFep5c3q5p3V/v7f2z9sfGJ9T//He5PvH0K582T9cqPGsa1LHM8jNXLF/nb
50biB13cjcGPGN6br2/kzxTuX9z+6SjhbVL+IfIvhvcvfv8NvKWSxX94ReD3
FfkLqbfh/Yv3P8DfmFr8jWeCd8ni3/tAeJ0U339YsO8o8j9S79ju/sI/xXoj
/IRZhJ+wFOEndLxOc4UfCeNTsvgxjxJeKeUPIC9UhB+yFOGHLFn8kDfDroX3
L/78hHgtFv/hx8LbpPxcGH+5f/H8Wy2FF0r5G8kvbJ0/4nyhPnK+UKb/P706
Poy5vufvf7bCOJAe4t+zPOevxtehfH2sPO37HgGeqpdzHNcK8LA9/+5w6OEZ
AV6zL8/174wAz8/vjzivQjxTj08cq/9k2O8lAV6Nw5Gt5/iHeFDF9p1ZtX11
5eFG+3L+3TH1tFMhXpPvH+IMNgvwznz9XN+aBXgJXs75sVaAt1Ecv58a4+dw
vWX80P5KpP2V/1T766T9+fsncnySpgFegC9Pns7XV3N8UX/Fqj/Mvy7yp4br
6YTC+qq8yLMk/1HX925SnvcH/L3eH3C9Dtdvf//A9XTDkCfRtZ/8jTz/a471
mvKxYvfPwHpP+QaoV3geJX6xdTIyyO/2+zvyMx6BdfFKWX/Jv0jeRV3/We6C
kOfR1R/yYjUu2H+uC2Pwe673lJN/kbgNis9I/4S8jeRxpJzrXYZ2qH/EfmU/
D8B6Szn5F58LeShd++bLujk82Cf59ZW8iztgvac8PLf7pMCvSj6Xu7HuKT7a
geJ3XBvsQzw/I3kZrxf/4k7UKzyPrv/I38jzP/I4in6mwsPpyvM8jOdjmp8j
5+qF/BRj/1xnldf4b+6vw/N9n790Oc7DeD6m+RMjmXfCPA7JP+F5XIXn9JJf
QbtI3mLNLyHfPdevmZI/w/O4FTifWyX5J+Qv5vnVXyS/5iqch5F3frbkd4Rx
3d+ULpL8iolB/sgCx4NMeYgf0MbxGFN+Pb7rGpz/HSv5PeQvJm/xLZJ/xPMw
4gT9XvJryF+MPBSX7xv2b2vyVqc7SP6N5A2XND+F6zLP9zX/SfKWC/k7XLd5
v7ed5J9I3nTpdcnvmY/zMOJ7aH4Tz9M4DiMlf4b8xlNxPreX5D8xXlBxZsL5
E9u/2udXGwhvnuJntwavXT8DH5D8k7SjFr8k4/MYR0c54rsyC/9JefN4z0s5
efP2AW8e49woPx68dIwb0/uvjYT3zsW5QT5WeOt0/0n+yXG4p9X9L3nzyBvJ
e2bKlZePcQyU4748nYp1UPndegrvne4/cV/OuMJM77+Ud68b4zghJ+437rFL
vMemnPyT5J1kHCfliC/NNE+G8h2FN49xBpSTX5K8koyToJz8kZ0lj4XykeDN
o15Z/JLsV8YxUB6Lz50j69scWd/0/miW3B8p7wh5bCgnP8msUO7qV1x18hRT
Tn7iWaHc9f8swUUlXirlyjtMPmJpv5P3lfYp7zHrk+/LZhnfz/ZQzvZSrrh2
xLujXHmHyWMs/efkFemfOuU9Rn3Sv6VZRv8rbiTbK/2fSf/r9yfy/a688g4/
KPXH+kd5hdtjPaCc55k8l+kq5x+MO6J9J08q5eRDDf0zv//hvOffkUeVctpz
8qLS3lN+L9YD+mdPYb2gPNx/dE/Io0r54cL7S3tMOXlHaN8nwd5Tvlh4gRE/
5MpzPUGcUOrWG+pPcO733T4L6w3lm2G9+hXWryOxnrn3w96SF5U8qZQzLr8R
7PsA2nuOH+z5f8O+kyc1bB/3X60SrjeUkx/1SawvLbHeUK68x+RZpZxx85Nh
38mTSjn5VemfkWeV8tHB/q1pgvg+J6c9ZzvIk0r5NmFcfsb1gnLGfWyLvyOP
KuXkTw3zP7z+gh/T+R0a/09+1dB/8vln5E8lbyr5LiknPyp5UTU/gu8N/Scf
nzZUeC3Bv+jkNwuvJPahTk7eyg445wD/o5MD7zslLyp5Uin/s/Biki9T6s/A
k8n7iVTaV+L5M/hbXfklwltJnlR5v+O9JB+m9J/jnbTyY0P/ZT3t3xL4aRPy
qMr4Z2GerT+fIL9q6L94/jPltSSPKuXUl5OgP+RJlfZntM/UR8rD+MkdHY8q
5eRHBY9nQp5Uyu+Gvl0bnBN5/5v6St7UvqL/yrur/CJ5/O2R07YOnuc7fMMm
wstLHlXKyb+6fnC/toVrH/lVwd+b3Ir5QLny8lKfKFfe339CX13/CW/vEsHH
z9fF3tP6Bs9j3fcB1zzl/OB8cd8vvL3kWaX8feEFVv5Txr9R/7cR/TtZeHuh
X4X5w/Mp8EW7+sP44/WTOZgPlMf4V5UXk/+mPBYfQd7CMH/W3/+RH5O8mOTJ
pJx8ROS9VHy5WP7/usIbSB7MsH19Hb+ynl/H/GfyIpI3kzyalMfwmcifGeap
+Pvj/Dm3fpFxf7J4Rsh7+CX5ECFX3sIS+AwpJy/i+eBFJI8m5ScKr6DGXy4U
3kKNXyc/5vXgLdwNfIaU/1x4CfV+gfyYjEsgX6HoN+6hV5USwYddIry/5AOm
nP9m/Owr+HvKY/gTQ4T3l3zAlP+X8PZq/p7yDiv/FuPj2b4+qE++383f2RL/
S/7fMD/ey2PxOYPA20u5nn/gD93967pyfzcJf8/xuQD1Uc728PuOQ3spvwq8
v+77qse3u/Kj8PeUdxTe3+r5Ly15PlraEH9POflVyatKe0X5w7BnN8G+vQ17
58an4X5vVD3HabDcD7cU3l3aE8q3hD3qAPu0CPbK6Qfs0RzjfEB5hTW+/Azh
BSbPKuXEfyIvq+pnS9gL2o8+sCeUF3h9wdNKOflV34J9OgX2ivIrYA/HwD4+
DntJuRH/5fQ3hj9HflXyqpJnlXLlBZ4He+fqj+CbjBZeX9ozyhkPwX007SHl
3M9Y/Kvk1bwMvJr8N+UxfEPyb5J3kzyclLPfGH8wWOIPmL/XF7yMGn/2qvAq
kkeTcuVtJJ8j5cpbyDhqymP4OUcJryF5NClfF7yMxKVuA75Gyifh/Inza4qc
P/H8lryb5OGkvCK8iZo/1kN4E8mzSflfIvkJyqtY4FcGr2J/8CqSb5Fy1Svd
PytvLnl6KY/FpyqvLvl2Q/2y42uU15f1uf5Fe3g+xfZSHsNfUl5e8vxSTl5d
yvV8T3mB1T7y/JD3gKxP+t+Ng56f89yK8gmS/8d8wBsg1/uRh4SXV/P3+G+2
7wH8PeWcj1tgfnK+Ov3FfCcv67OCb0J+Vc5/8qxSPhL25inYH9ojyo34ZKdf
MXzXccKL21HO38jPyvnfAvbA1S/n+3p+zbgjxkHq/k55e2mPwvH3vMCqP7QH
zF+mvaB8T+HtnST+2SnCq0t7QDnxU7j+tIA9cd8XwdeK8a+eC96DCwz+A/J/
tgTvZyeJnyRvIXk7wSfoyi8Ef+S94P0kDyjlRnx6mXLyfy7GuQB5QCmv6xby
8pHnk/InwavHuMknwLdHOfk/zwJvH/n8KFdePPLlUb6W8O6pf6f3F3q/xO89
xYg//Ai8exx/tR8vCu8eeT4pJ39uW/B2Pif9r7y7ffFvyjfGeJNX90roA+XK
20keXcpj+Mbk9SSvLvk+KX8JvKE897oEfKJOf8HbSV4R8nlSrrygyu/E+Icr
jfxD8nYOAW/nAeDzDMfPjh+8BPEPTwBnYgz4QilfIbye/Dfl5AclLyj5cik3
8jPKlCfgVVwEXkXwgKTyfseb+AH4FCknPyh5QckTSrnyHjJOhfIY/iD5P8n7
uZ7cPwl+NPlLnfwS8CpyfpAnlPL3hFfxG/AtUk771A7zg/PFvR/2conB70J+
2/Ohn+S5pTyGz/2c8Eo3wXyQ95c6Y35xvlEew39U3mnOB8o5X87G/OF8ovxh
6GuIk+Lz42L5Mco7zflEeYx/lfyf5P2kPlJOfSZvaD30nXLyg1K/qe+Us6Xs
t8ESv6y8tOQBpVzzmw+Q+B/OB84PtT9fQx/7Qz+pr5TPF95b8oiG9dv49FzP
uL6Rp5ZyrpdcPz8Fzy3l5KclLy15ap3+CS8312vKBzb8PFx/kxH/PTty/8/1
9Ar07zpYbyl/COsxeQyPxnpN+d7Ce02eWqdfWE8ZV/wx1lvKjfyuOsqPi/Az
kV+UvKKObxVy8kaSF5R8kpSTX5T8reQZDfV3bj3j55tK/PwDwrtIPkbKyR9K
3lDyMVKuvIjkS6T8UOFdVHw7jb94UPZn7cELSl5azb/KhNf2Rfyb8j8Jf1bd
70J+K+V1fQfjQTn5aclLq+cjGGiXf7Cu5B+Qv5a8teSxpfxa8IbynlHvL5SX
VO2D4j9MFvyCxRH+VfBXJ3eCd/Qz0b+xwktLfaRc+B/Kmv9dL7yYzBN33w9e
zKngxSRfJuU4n8+6g7dS+XkYt8L1XddP8pOSl/RM8GVSvjH06SDoV2vomxtf
4R0mz6yTR/JLHS8C9OchwbeN4ScrrzH1gfIdoC8/h/5cBn2iPMa/yv5O0f8c
D8oZt8zv647xFP1z4z9O+D2UF5Y8pZTz/pzjN0DwOR4X3lnVf+U1Jk+se7/w
JtPeUW7k/7rxi8WnkV+W40Oe2bB+z5tMe0m58qpq/DD2e8lvwIvKf1Mey08+
Q3hNyaNKOflRyYv6d/CdUq7tUv6+a4XXVfGNic/H9Xk4/p7ym/A+8qqyPZRP
Fd5X8rRSHsvvOjPCv0p+Vebfkmc1/P7NmReUnSn8gsIvkCq/AAaibMWXK27d
dMHfFXwW8sQ4OfNHdw3qzxy+rfIKWPyrVvsYzzgwxIGR7/e8MZofauS/mf3D
fMHw+z8vRfh5fnD/Mn9e8AGdXPPitf2MV37K6N8NhNdG+QWBW5XOCHFq3Pxj
fglxUu4W/kAX34e8jtHBORntS+tkBPJ+dP4y/4Y4MmcLfyBxt4iDk+dTe/5B
2v9ByGuZIvyApwovzanC/zcc+S3EoSGfLOXKizNf+AHfFl6b5RJfwvwR5o1M
Ef/kCuQXPYW8oivEPigvzeXC/8fza+YVTRB+wpeFF+cV4Qckr00a4iQ5OfNr
Xg9xcJyc+23mzSj/LfOLXg5xeKR8o6R1iPPj5MAncHk/ej5DXLSLAh5Bfz7E
/mRe1ZVy/oBpWcazgN8r/KCpzn/JryvcXynunebXSX59RfPrJf8u0fy7WPuV
t1Tzfw3+B9c+yT9MNf8w9v5Y/yh+ofIjCr5Iqvgise8TfPi0Or+XHx/Nn5T8
ulTz6yT/sKT5h5L/lmr+m+Qfppp/KPmTqeZPSn5gSfMDJX8y1fxJyQ9MNT9Q
8udSzZ+T/MCS5gdK/lyi+XOSn1nS/EzJL001v1TyMzPNz1ReVM0vlPzMkuZn
Ki+r5hdK/mqq+auSX5lqfqXkHyaafyj5lanmV0r+aar5p5I/mWn+pOSfJpp/
mj/p33Qp5OdL/kmm+L9heRv/i7+x8NVrLF/ANw1/7/AHnNzAJ4i9v0y58rta
+Cj/l9tf37Wm9ndxOK1h+Ydodx2OvJZnHKrGn9419n9+7q+MxO/3kvgolue9
uvoXbD/nj96/szzPjfV+he3n7/V8+T/0fse7OlL8V8TnVUYE++jNC+/nuYSe
T5EPhL+/R84vYv2fl7+4nv3fy+j/SPvrf2j7Kefv9fwlNn6UDzPGj3lvwB9N
NxB+mjBv0+JnUdwRz18zTXgnbjf4vZRHR+sP953ePhj4qq79zO+z+EeN+uvC
9tv7S+Y9cX4/Kvw3teXP+rx25cchfn03w75o/yv/DeMFyIOj/DeKG6/8NvQ7
kFeG/ITv9R/y68iDo/w3iht/m/DbhPvPnZBf4e8PFJdd97ffIP8SeZdpKvw0
7wtuu+5vmH+HvLtskvDXTBXceOXX2RL3r0cBl/5QOd+8W3DZdf/P/E7kdTo8
eMqZn3cdcNt1/8f8PsadPSb8NcxPbAXc+BkSf868QOQllpQ/Z2PFdRf+G+bz
k+dmjPDb0L9CXivzXJ18iuC6K//NSsGNv0T4bcL95wHIz/L8OIIPUTH4HWT/
6M9nw/0bz8E8v6DwOxTsV2ifvkp3h50K6y/ww7v6lXerfVV+DHv/F+JF1dXt
vprfL/w4JfVPY+Vj/S/4dFkP8Y8kPzlTfgvJT04mCX+F5Mdmc4X/QvKHU+W3
kPzhdIDwV0h+bHac8F9IfnhaL/HFkh+O/ae/P5P84PQL4ceQ/OBM83skfzo5
sjp/BuNYM+XHkPzz9ADhp5D889JTEr8q+ceZxsdK/jH2Z56fQnm9XhX+DMm/
TloKP4bkp2fKbyH56Y7vi3LJz8/WEf4LyR9Pld9C8seznsJfIfn5zo6F88fz
l+r8y5/2/ifEb+1aON838Gdj9Zcp5/1nuD+q/X5EcbOr49fZ7Y/5V7XxCxbw
c6W8fb7I/c4WyNupSH4j8/JGhXkorjzznsDTwzwp13/XS9yynv+XJe9A43+R
v+p4G24Q/0N5Gazz3ynB/s3zZzJv+hm0f4S0n7zL3H8o/7LmPU2R/uN+hnFu
ig84FPPnMNi3YeIfJeDFGBXs35q69zMvQfIQ/P5beDnuEv5l5i8xz2WkjI+7
9w/jANz72S9bh3F8rv3KqzFQ9Cc2fnx/Zryf+jPK0B/FD1H8RM7P8Pzc89Pk
T/v8qfr+0fPvCG52qucvOB/C+fa0ip5vV6+fP6t7vm/5N553sDo/j10+dn8b
a7/mtWn82eTg/PWNkuYXhufnq1Llp6F+IL8p0/wAnpfw/F3xtWh/4CeVlD+G
9oU8PMq/o3HDyh+jvO56/kH7RP9K+YuI18l5p/Hf5P2ZYvSf8rYrPibjC2iX
lJ9Ged31/If9h31ySfmRNK5I+W04PsON8Ynpj8YVK35cbHxi+sP2I74tU34j
2h/aHeUnUl746vbF84oSB5dynvuE9svzs+dP2/8Jz7U3KvC3G+XrKCe/oZyP
Sfvj9kX9xLB9X8k5m8cXkXNr3n86+bvCO6r87r2F1/Q+4W+nfWH9D0h83HDc
q7G88ruT15Tllb+d+LvdgvLK3+d5QzV+SXlJ3xb+9XeFV1T54cmLumtY3rWP
51Xy/UnYvkbu+5Qf/jHhDVV+9t7CS3q/8K+jf1PpX9c/youq/OzkF5T+1fMX
pz/PCT8879Wk/5Pw/Vu7779P+NtpX6R/XP3KO6r87q+C13QXyN8S/nbaF2m/
ez/X3ZDnuGhfBF/byWkfaBes+yc+I3LDf7L3R7Qvwj/q5GI/Cu3jfePAgAe5
8P2OB1nl5D2mXVA5eb1oV1RO+0G7oXKMb4ZxLXwf8jcdz3F1OXFvVhTeT/tA
u6By2hfaFZW/BvvwDuyC8f0l2pXq9TdC3u6GhfK0L7QrKqd9oF1QOe0L7YrK
iccwHnbB6F+HG6Ry2ofnYReM/nc8yiovwT7cC7tg9H9Ku2L0X4L+K7yfvMfk
QTb6x/EcG9+X4fsK7+d9TBhH6vcvjJucKTwAlOfzb5mPMzf4f6z7K85P/kb5
B/Pn3PqdUI/yD8XuvyV+shAfpLwDXeV8yLi/cvs/np8dBF4BxcdvK7wF9wo/
EO1HV/AWzBF+oQHgBwjzL/z9ifIWdJD8FPofoX/sz5fJb0A/WvFBeL45Djj1
qeArE98euPYORyyUN0vAs5MtFP4f4t9/BN4CzR++UHgRBgj/EPkfGoMXYITE
b84W3oEBwu9D/H/g/hf4h/i95DdQfGfWC3yidLbwE7HcYPAiKP4R+Q8Yd6r8
CLeBX6AV8t82k/x2tvf6YP/kz7+VV0D5I5S3YJzwA9F+gBciOUL4hXbD/Oc9
UleZvwZ/SCksX+AXrAvlBX4Rp1+x+B2D38jJY/HhYX2OH8W9n/Zj13Af5+QG
v4j7foM/Q/bHBf4L1z6DH8XJDX4R1z6DH8T1j8H/Ife/BX4UV7/B/yHyAj+G
kxv8Kq59Bn+GH9/q/CtObvDHuP43+Fec3OAPKcx/4Z/x5+PV+UWc3OAXkfYX
+FOM8/NPCvH5Bj+K63+DX8bJDf4Y1z7E65SIT9S+Kn9w9PzB2QXlFxZ5WeUp
eFOYv1ERfmHlPVH+YN77/g5x1/n9tPIP2+V5LldBXGhF+IeVN0X5hd35J+J+
EW/r5Dz/YP7BMuEfVt4U5RdmfAvjlm8U/SDuxBDEhWp+AuLtHU+w8gMPhf99
bMBj7P0L5HuULkDcs/IHPwB8pnURlztFzl9xv5I8ibjfoYgHDtvveUl0fSfv
CXmClR8Y/VGaHeS3eP0dB96VkEfYy6/CfN4OcdFXI16acuajnhnwGPvz1Sfg
3y8K8i+8f71IeFNeEn5hfu+OiPtV+458lKx3wEPsz7/mC2+K8gtTH0YjbvlK
xDNTXp0XnD/x84Upwguu+Qex+pXXQeP7lTdc70/3wPz/Keb976vyHxXzdFz7
Mf+ZZ6Px4dQn5kmNlPj+U4UXXOP3lwnv+DcSP8/z+Vswr5+S/ITthNf7L9Xj
x13e4nkSH3628H5fKPkL12P+j5I8Lsovw/zlvH1C4vc5/zPM+3UlPp/ztx7z
dpHE13P+E59e4+fJ+815e5vkd/B+m/igmr8xGfOX+e+DJX/icsbNYN53kfwI
8h69JHlalD8mvONvSv5BeL/RJtlB4vs5fzWPjfJMeMd/LvkZ4f3GLm6e6/yp
q/rD8wHlpfDyWufvD60/dj/J/OcQV9XLq/NOejnnb9MAt9bfv8Tqr87LqfUr
rqGvn+Me8lrWXj/3jSHuiZdX5x2tvX3Un0MC3Kna2x/r/1j7q/N2avvt8eP8
ahzgaqhc875rf/+PrT82PrH+j/nXYT5LXVn5ZWLzs8b4KcifxP7a16+4vIpf
HvJF1pWVPzf01+rqmgq+tOJCKj9uuB+bUH+m1D8i8GcX1Cv+aKx+wUWrU37a
kwXXR/H3yFf50sMnf/ff5EpTwS8K/fUF9QcL/pu0v6Ltj/U/24/31ys+leJa
KH9uGI80oV7br7gmjZVfNxzfso5v7P2CW1FW/AZ5f1nfHxsfxlVwfJpI/TI+
FR2fML+ueP4di9+JrY8hr2DrTPkFGS+xFnifdP/E+FzyCK4U/kCOD/IjUo2/
IN4KeQZ1f6m8UsofSP0lD6HyDz4mvE0VOb9GPgDzAzLl/zscca/HgtdJ+VEe
EV4q5QckrxTyE5ICfyHibh8Bb5WefwOPP2sN3ibFhy2DF4q4tCuF/28yzp0W
gNdJ+euVl0r5AckrhfyHbLLi9yPf4hjwVnUVfkLyCcwC75Pun8eDV4o8gsof
KLwQ2fvCP7gV4o2OAe+TdX9BHkHlDwz3rz3Ao+Pjl2LxuZw/xNfdQPjZdP3c
VdY3zh/Om57Cz8b5wv3LWsK/xv6UPCT3/Zw/t2De9BF+tgHC63me8K9xft0T
5gm5/lHeTOVXU15O5U97RHg1ld/tN5h/22HeDRJ+tbuE13OC8L85XrcwT8jJ
lTdT+dWUl3Md4U+7GfNH8sgK5/vUw8XCr8b5w3lzjPC/MR9ucpiH5PpnvPBu
fin8bBK3zTw5Vz7kxVqjwN+mvJuPCD8b59/V0JNjhX+N84vzarTwtwkvp8HP
aZ+vKq9lX+WnDOVF/GPB5a4IPr/IU8XvrrX+WPuIK6n4y8r7qfiTT0Gegrcz
Ff5PkWep8HvW+n2x/iEumeLbM2/0fvxe8ctYfg3wdq4h/J8iL60h/J6x/tH+
VX5O5d202ne/8X3KK6j8gsy//DV42TT+H/xcCXkEVwp/IO37bPC+Kf8aedn6
4PcaX6+8b8ofyP078xeUfxD8Zwl5ApUfkLyDt4N3bVPhHyQv3J+AP6z8gRsF
96NbJMpPmLfryN758/xp/DflyqvWTvgHmwhv2zHCL0heOLSvwC+Y2/3evcHr
Nq0P/k05cbHx/ewPV34ceNm2Av+O5m8cK7xvyj+ovG/vC3/hgfj9PPCyaX6L
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
f3638gPG4mcuRP+0RL8cIPx+/H7ilh8q/ICcN3PBWzpX+EvJO/og8G12lfPL
w8FLSZ7Rb48K+UVj8dvkHR0O3kjNn1f8NeUX5ffdD15KnR/90T6260Lhz+T3
8bseFPwvIz+jTttn4Wcegu/bHd81SvgxHT442n2/8GuSdxE8v4nyLyovosZn
x/JHHhPew+r8i5tn5HGcIvyNMX5G5XVUfsVY/D37h+9V/kW+9xrwOs4X/DTK
n8HvrxH+x62AX0AexiYG/+Jg8C5qfLrY3+wPws+ouMiq39Xz3v34xOTsN96v
aH5NTK64wZr/GpMb7SvXKldcMM3/jck1Llv5KUJ8j6Jc8I9M/kjJr6hZzvp5
L6b3Y4rrq+erMfmUwO9YlY4T/N+5ci+q+5sFkDO+RuPHQl6ddgV8ZJ7n83z/
umA/7OPT+PsRIlfcX7WfMbniSis+cEzOuBfEwTAeplSrnPsWnsMpPrLiJg8T
+WjB3Vb87Zi8fxi/n+j+qr/gTmv8KeNtiA+r+NN67qrnrzH5JMHlVnxuycu1
8M0ztUOU8/wvwj9rlsd76yz8Ec0btvIXI/jvmdqJf//+8fVafs5qldf22+0L
v6eIrx9rP8tH+EvM8uRliOCbpxa+Oe5vShZ+PO1aBP89s/DfaS8t/Hvaowh+
eWbhl/P8N4Kfn1n4+fz7CL57FsF3TyL47pkVX0R7GOEXyCx+gcmCW23g6ycR
fP0kgq+fWfj6PG+w8OMVN9rgH8gs/oFY+Vr9O/6m+vzzeZ3qX04LeXfKmp9Q
q32ThpVXT+7aV9b2GfiPTn8FF6Ks/Gax9UPqL1v86Hy/Zd+s/pH+rdP+1Xt7
tW9N5d5H+f2ayrkBzhNc+9eVuC/171h/vk4OdzyNlL+Bc/2cx/HFCvhis1rr
Z759WP/38L1k36z630z2pZfL/mpwGHcDHkHfv9L+em1/rP8lrrt8nbT/IDn3
Vf9K2l/W9jOuNG/fzPqcf/srGZ813Pt1fGPv13t/5ReQ91f0/bHxUVwOrV/G
p07HJ38+Wc95ovNjTsQ/I351+PTzj7xjyL9NNf/2x9qvQcB7Cvefnv+L8W/k
p9wQ7aBc+B9TtT8nBLjbLQvnA7MFl7L6/pb4mh+l1f1Du//JZ05+c+BrOXmI
2zansP8kXzLilwr7oxCXbFn6sujfAuAphftH33/bAy+J+auKfxfikn2bAp/M
tV957SdLfPIw4G2F+1+vP28I7z1wmJx8R+Gl1/lxEfCwyO8NnCwnJ25eF/A3
q/9APC/icAPny/XvDOB5hecD3r7vFeC6kYfDn98NB55TuD/0+Hkhrt3ywvkC
8bZ+Bn5r4Oc5OfHCwv2xt18zgffF87Mr5H6OeGrk/wbOmpOHuH4fpWq/Tgtw
9Vak6v8ST+1k8KOfIutH/rTPz7j/JH5/o4bfz62IHPzKXYjjb9TveYSqy4v8
Hvkzq6efNE38I74/0r7Kj2ufw+cunG+F7a0rG/vXcmbYJ9RfidXPdV7tE+Vc
Z3vJ+hrKt3A8XCqnH6T2KX8urMf5fGboT12sfq7Dqr/5c0GF6+xrVdfXH96+
nP95Rv1Z8INuFf8nl79Tvxb8nL+JfxP2f1KY3/kzq9APUftf2/hllWbG+KH9
lUj7Kz+u/ePrmde2SNrP/jsNftIwsf+1je/cesaXq//E77PqR/x0KvyrTs75
NB3PO/4tvzX5Mfz3Ka+G4nPF9ne0S3yvzm/hv86U/7prcG/ieEycXPD/C/ZZ
cSWM/bPcO/LH19/NqJ/5z8w/Vv39s+SVa/478lkT3oPq/B2PfGPEIWf7S375
nyWvXvPXDxJcgOWSPz4W+cDMD+4k+fvMt2W7+kn+9VDkax+N/G3NXweuQXYK
8nu/FnwD5kMzP7q95O8zn5zzsrPkF/PfPEdU/ALFVThF8t+HSt694iP0Rz4x
36P2YTzysTdGuxW/ALgJJeZ3K34Cz+04LmoflgjuwtGCXxC7nwN+dSL41a79
wOdOBZ9b7bM7X87t0RjhP1yWCv6/Wb4u+HH7l/TpYB/jv5/zTviJnPzpYN9T
LM99zVTsc3R/Ezu/AX617IP8/Ab+cir4y+77gV9bEvxqV55424Iv7coDvzUV
/GXXPuBLlwRf2o0v8KNTwY925YHfmwr+tu8/7JsEv9zvz7BvEfxvV57fI/jl
Tk59F3xq/37sWwSf2n0f8LdTwd927WM+vOCju/4HfnAq+N9p2P5XSoKPrvEn
ieBfu/YBPz0R/HQn575G8N+9/sFfEXzzLKz/o1TwzZ0c+NGp4L87OfdFgj/u
5GI/MsW/l3U90fmjvFtqH3heozzylNfhh36G7k/k/qnAz8HzFtoN9R9oL4kP
/u/PfycU7rfon3QN7Cp/HP5LBvyXgv3gek38GfUPcH+eAd+lcH/Fvye+jq7/
xOMhPo/i0/DfxK9R/J5jBZdF13fiyXCdV/wixW1R/BraB+AbFfBdFHdG8WsU
V6WA/yO4Jbq+h/c/+2aKf8P5j/unTP0L4DtlwHcq3D8BfyajH6DrP/CPUuAf
Zeo/sL+A71S4P2oiuDaKb1Tr+SefBn9wEuJc+fzSboF96Jp1l/kp8qS73D+H
vJ7k4fqqUD/W/wI/mbTf8O8db2mm5yNyP27GZ5F/T+dvKF/q+PwoJ/4j+emA
c2LU377g/1NO/r23gfev9ZPXc7HkP0n7madZqB/4H+lIyR+nfAHi6PV+g3Ly
zz0u8d/Ai0neA//hUvDZGfIMcqt/Er2fofxI8DO+I/g3Yfs3dHGK1eUtEvIl
Us717yHwQ+4Lvj9DnkDu6t857L/C+YL0X0K8f0N/kkTwReT7CvsH+b6M56SG
/mTki6Vc5kUhPpf3EVZ8Cu3F9PDp3k/8VNyfuP0I5fnTPn8M40qK/F2x+JPY
98XKh3lDPg+a8jB+62PmK7j2bQY8H+q1zn/NO9T8pjAupFGCp9m+kdK+hZI3
ovm7jHvlvFf9ZX7UvIBnwuNjtHpxkzbtf9s822THfeasGrBmgmdW6/fF+kfj
nlX/+3do8ulp23xZ2nTblYce+rNPS5vkT3+/CvyCYQGPy4c1f/8X0n/nSv/F
xj/W/tj4xuJjw/nj4svc+T/Xda6zj8r6PlB4hUM8/wJ/ZoH/T+KeV3v+cX8h
7fPnY8KLq/PvPuGF7SXr7wPCCztK1u/7hddX9Y+8uWzfa7L+Km/uu7J+LxDe
WV1f38G6Gdbv18/xwkur6zt5Y2nnF8v6+oDwDo+S9X+s8Mrq+r5AeH91fVVe
5V6yft4vvMC6vt8vvLq9ZH1VXmbFv5svvLuKPzBfeHF1ft8nvMS9ZP0dK7zE
j8v6vUB4fXV+c90Nx8evv/OFt3mYrN/k1+M6uqGsn5yv4bz187+6nD9FOePZ
KY+t/9yv0w/Q+4fY+jpDcP11fr8BPG3iVAMfxn3/JoJrf2uO1+3k1wIvvR/i
83R+Hwe8ccYfDpD8OuIe9Ad++cM5nrlrf0/gdRO3hnjllBNvnfyX5Bug/Cjg
ge9GXP0cL9y171jBve8s+W37C2/CvjkevCuvuPjgB3DlN1LeAuCVU76O8EL0
E/y2CcJrQDxzyucCj1xw3KT/Pit9DXx84Mi79hPv/Ergnz+c46E7+QjgjROX
Ruf3usBzD3F0fX6s8ipclOPFu/p3BF468dN1fo8V3gn0g5Mr7wTw9HV+uPyV
p2V+yLl3Up2/1o6vJK7bjB+Y30K7NdDYPw+FXg4L/VCnP/SLGB88SPyja6AX
a8IP1PMvxV+5QPwjxe9YKv7lH+G3TYAfd574b/Rr/wg/d774tx3h19LP3VT8
W8Wvu1m+n+v9mfAzNf4Y/qrzYzuJ//ouvu9zfN/L8n3kJyRO1+Xi3xr4t2nY
vkJ+oR9f5gei/Xr+pfnZOr5G/nrh/dcY76dfPMoY/9j6xd93M9a/kD9y9ecH
1z3Oi9tl/btbeDV0fiivxG2yfnHdexXroK5/ygui46u8G7p+Eb/+KKyDh8r6
x3WJ65SuT1x3yN+zn6w/U4TXQtdHrkvA/QLPh1+fXP4s1tEjZP3k/DsO6+Q2
sj5yXZqIdUrXp2+w7gB/jnzwrv0bK6+IrI9cl77AOjVJ1ifqN9fRAw38U66T
c2R9dLhsWOf0fmml8JpcIuvXAVj3WmEdnCHr3/vCC6Lzj+sW17Exsn5NFd4X
Xf+q+5+Z+JeMey3e78bi/7neIf4W+1nfv8x/6Yw84Or4dstLoX/j9z/kA58e
+J9ePzYDX/tc8Iyrf0m+89D/6+zaNwT85/PAY57HI/j7a9Y3N+QBl+/bPGM9
ef0bOPkg8JGH/qm3vx+B73tcyLPuyh8M/BjEbZCP3snJJz4G/OJ6vwQ+cfEP
PT4E2uf6We0b19X+4IdXfnf6lfx97l8udeV/mbcfOGBrJBp/Qvwm4gDiO3T8
8P7OBf9yZ/DJh/6tj19juzCuSZ6P+5yT3xDkd31SuN9lPFjo//v7OY4n+ZfU
v2fcxUwjfrwr5g3vbQfJ/MmfdnzsNphXjP/V+cX1C/pVsK+cd+Th1fk3H/Oq
MeaZ+oezMW84LwbI/OH6Ad568tg7OefFQZgnOj+Ix0McpXtF/+djXl6Ldun8
vA3zohXmyWYyPy7E3zM+eoDM37FoD+epzk/8vdNLnR9ob4L2lzqI/nNefoh5
qvMT8WIJ58k4mR9oH3CvHy3MX7bnBsyP2TI/YQ8TzjP1Lw/HvIF9SxbK/OH6
2RXzcI7MvwMxr8ijqfML+uj6Wf2PEYF/3ybT+Tcn2JcV/UP6lTOM8w/lVTLk
wO1rUfRPhVfKkGdz+Hcibw6+JTwL6+9k4A3jWcw/IZ8T6lH5g5H2E+96It5j
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
/u/NiT/BT6vF1j9Sf4FJnfnDI8b1dD4HXE76Hz4D6J817ucnxANFvyPxF3ii
k3/2fOJP8L0Of2uOuJiKT3bjJ8b19PfXA+JyjonLOSZeJ/pXxf3k/YdPQXr9
B9fERz3+eXriT7BzZ33qXE7nAx1r3Ex4muibGpfT+VvvMy7nKeJ1osO9zPGp
9R/G1W/1zPxsHH20L8jEx6eJ6fnrhxuacsH8858rUm6B6/n558s9nv8/d3/7
7h95X7n8utF5m61O/lOa9zTx84/O+2n10b4A7flHx50nfn7iqmm/a/XRXPyX
en3OzZ/49ffd/77rHx23bPW+5zfaF6HVZ45cV07881/u+fueT9/959/0L/fX
XWq+BBl/gCrnD8C6jXmX830z409c30mJv0H8f6V9ftHjr1D2+CvUOX8F+QsM
c/4CzPu446P5iy23mPmunz/nj8B6hPbvfNu/NC6x84UvMa5wxj8g8je8vuov
jVvs/GP8C3J8fPwJcv4Jur4i55/g3OKMP0DV4w9Q5/wB4BJvm/EH4LicfwT+
BD3+CmWPv0Kd81fA3yCtz2vrZx4ybrH7D7AeTuvv2vxE8sVy/gdN+/zOmDiq
9QHqh+gPvPizZKyJPy0d28/6p7oFfFB84grXeU/fkvhJdv0fvf/r+oY91zf8
r14f/kz0z72tfza/2/XVrba+4vy5+Qn+Tr/9/K3v4AZJvnXrL0W7TOtV2v0n
4gYbJPUU7flP1vv7oSTfr9Xpt5sm+c6t/07f+Xn/nJrsN7c67XPTJJ+j1fGN
/H7m+iKv166v8cO4acj8YP0k36K9P7M1/zg1yXdqz8/7+cBkPwP9qTH6Z7rf
NdHnNxifnXl+uv6xnusfm+j1v+UlXr/8RIbMP9J4fvf5zux5vgN7vviV5M7f
55/i85KlNn4cqP7+Fo0Lf6H5BPo2Nm8hHoPOvODNyfjg48/1QziK+9r44+sX
/f8Wf27nRT5/yByf9U/HJyE9nvMtG0vnK62/Ae9135+/Uu+9C5P4dBu/9HkH
8wV03vvEn5lvoLNfgr/RZZqvoONvYD4Bobsv0v/VfAL9ZHvvyqcgrq/hS0xZ
2sQtp0xpfh8/Jdqnrpu62RWaz6DTrvEByPkjfETXgU8CelOf/MGlzX394JTm
9+nx+evZvAafBHTmDa/RvIH5DPoXbd74Rps/EB/GVwGfhbj/Ni9gvoHOfIT4
s/yg4vPxezAfiDj/ejZvecjy1x+3eeVhFt83f6TwSUK3/l+q/8fx4udUxs8J
fWA/3v8nvfhzKfOLzv6b+77CyUJP1xXbh48SOv5IxF/xg0VfYedfbufPxD8G
6MRb8UUiHot+seK1c9WOiOei459UK/6LjxI6PMa7FX8lHpue/4nYf1qpeC76
uXqvkYe6u+LB6KeZb+tZipei32q+sD9UPBZ9D/N1/ZzisXH/Fe9dpPjvEsWD
4/qSuOGkek/Fg9EZP4gvz1G8GZ14KL5IxEvRa/OFPUTxWHT8kYi/4pOE/pj5
0uKzhJ7uD+0dPknojB+Xan53p+LN8f3N95V4bHp/Wl9Z/GbRP695Db5J31I8
GP2j5vuKTxI6/kqz9BzwWUJfrHgv+5MzFA9G79v/ca6k7++6L4mPD+afUMGD
Rjf/heoW47tzPbn1ScqfbTl8E72+vu/Xt7/tdfXON7f6zYo6TnSrL4t6IHSr
P6x8/8fqZ6KOZqLXN9PyRn3/Ya1xT8lTRzf/hPBRQDf/hfBhmOj367s/aX5/
7MPG55t/QoWPArr5L1TwbKP9fTite/Hv33f/+p5/3/X3PV/aM/1I/NaOTrv1
9n9AMj/YvvyI5ZeYXkuv/fz4KpwovwV04p/wa/FJcp3+/48Z/1f63+j1QevL
cFLm+th3hVMxWl9T4KPk1/dW+TLg1+DHa1+xwk9h9PlfqLz+y30Z8GvIXL+O
fzhz/jUVPkquMw/ABwkd/x/aLX4P6O7LgF9DRpdPz5Gd62ffFT+EzP0JvwXX
yRPEB2m0vk74KPn1FfJluFp+DRm9lt55vvge4YM0+vN3Lr2+xdpPiV9D5vtV
1JFkvl+NX0Om/dRqP6H3+a/AtSV/LuXctv4NxlfrHD/Qjx+f/nth5/zEDdI4
Rvv+dy7hipf4fl4r7vTNKf8sdOda4+OAjj+D8c9C/zNxp41PFjr+DcbvCt25
1vCu0cVdqo0/Fs/3IONSU++Pjv+C8e/a/ADjYk/Gx0H6jca1hneNDjfb+Gah
i29WG98s9O2NSx0+DtLF16uNrxffD/+GBSk/Lo7Hf8H4eqHj32D8tNDF3yuN
vxf6HHGt0/2JNj8RPorx8UK/3LjTcHDR9zKuNT4O6HCtjV8XOv5J/5Ry3kNv
frfz/tH5W/grbdwZP/BXog5ytJ6ff/N3e7/79de6/k78kfcxvkmuuy/iaL31
RXTdfQtHH9/6Irou37/qSc0PRp//yHh/uu6+hpnja97Pme8fvoquMx9gfpC5
P9Vlmn+Mvv8H1/gmjb7+1tcwc3z4JmXub8wPRp9/o/IczQ8y9z/yvjLtJ3yT
Mvc/+nfm/pW3aH6QaT/hW5i5P9G/Xaf+Dl8l1/v8Hfre7+4rsZ/pfeefqL8E
vhI+f8c/wjiOMf5dpfcx+0N36n2N7r5K+EygH22+R7xv0Y/Af0L99wK9r9Ff
p/f5H+v9/kG979F53xkHsZ1/6326jt6v03jfSud9yvsVHwl03udwJnnfoysv
vnqT3u/4SKBTL4rvBD4U6OIplrz/8JFAh6vH+3WR3rfo+Ecs1vsVHwl03udw
JuN9Lx3+Eb4RK/W+R2fcwHcCH4q4fr1P/1rvV3wk0KkXoP/yvkbHX2KZ3u8b
630f7dN8jz6u9y06/hPE3/ChSJ8fXPvgeFr/eRrOfeXz10x+4CA9vpffHf3z
jpHjQ9SXdNbPxCvg2nn+/9fU/tgfcz7oGYpXnKX4hdc/iDsfdRobKB4U91/x
njWK/xAPQieetFrxJXyQ0N33cpXiWejEq/BF2lTxLPTmuvaa0sTn91raXO/h
S9HpXxfoe39C8SB0xY/1/uzenx0Vb8I3aZriUWn7P2ppE+c9akpz/Mdjf+wc
xbPOU3wLHyX0Vbp/j+r+/czun9dVOh+M/snf97Tn09c+8Pdgf+xUuz/OvXjC
nk9f+5ll13+hXX/6vltGnklpeja/duWE9q+eq/BtwccFXTyT8IXw9Q/7A8xP
8XlBT31FHq1usfXrTPlCyN+jsz7E3yX1YfH64XVrfFvk7xE67Vv+JbX7Q3Be
/o7PC/oz5vvg/hTHmm+Fr183Nt8JfFrQ5Y9SyR+F/LHCzh++Du4P8aT5Rvj6
kXmnvlfl/hS8V1KflG1Ku/7wZdF+f+jwArZO9q9fEbqenz7/2U58XM8/3m/4
vKDjOyF/ngofF3T8WfCF8PjAJdqfpH/h82Ltk3bZWb/uq/4AF2Of5D0W+7eF
7d9OOP+U/lCrf/jzxd9lTjL+tvNH+iPcA68vw58FXxZv//i78P7aUP3N+w++
Lfi4oG+j9oovCz4t6On871fVNPUX9K+rP5D/4fw8/F247tk2Pl5uvknyUYnj
8Xd5v/r/+Ta+0F63U/t1PoGOK89UO3T/QPxZrlT/oL+g0x/n67nSX9Hpd/iy
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
58/wMeP6M/zP+PwM3zPOn+F7duZHxjeN45l/M0+YbO/3gX6MszdAdy7lLcbP
tvpCvf8f6zv/OPo2ia/SC4X7K/Vdn+Y35YmJz1M7vjAfgdvp/gn0/28nPk1t
/Knv+y8R9/NmcT+XmP+S12X6+VnX4tO00PyZHjDu5xrzX2L+A/fzEnFC0Gcr
Po1P04XJPiL1yS33c5X5LzH+rBD3c57tj1Kft0fis9TOX/BN+mzio9SuL+Bu
XiTupq8/TxM3FJ+l08xfCe5nlfhAtflBcEW/n/g8+fpi7xKfJa9//kNxO/FR
+iPzT5KvXXF74vPUzp+uFDf0MnFDrzR/pUeM+/mE5Qct1vofn6clFt85T/H3
O8XldP9t536ea/5LfN9xcT+Jw6GznzZdXM4l5s/0UeN+ftT8l2gPmyU+Tt3+
Zf5Fg/j8xj9T/gXXjk0e2b8Z1x6LcQh9G/Nt287mPwP7GT0/2d38Ldv8ub7j
3bdtdH329jEujeYLwxX+eeV84b771/f57uvmfOGbEv/E1TFOoZN3+kWNO8cb
f3iVxhf4B84XnqvxiTyiPY0fnPpfPtHhD8MFhhP8WeMDE5cgv38P4/8yvnxS
48rnjE88R+NTyl9ZP45337jvG7+Y/C58G51PzPgCJ/gB4wMzPtFP5xj/l/GF
ceVS4xPrvhXkd99hfGDGl5s1rrzV+MVwiZ/VuPSC8YnP1fjCuOJ84Qs0Pv2t
xqW7jB/M97pA48648YcZXxhXnC/M+MS49BfGD07jR09Xzh8e7fvBT3/8x/jd
pev8V27+sm86Lyv+a8e7L9TEz993/ETHl8HIn+CHm+9Iq4/23Wh15jdpXn07
f+w7/2jfFD//C9X6Sd5me/7Rvh4TP//ofdVWH+3L8VKvb5163SRvZuLX33f/
+65/tG+JX3/++dH/353sy/n1u+/IxD//5Z6/7/n03f+l1m88fuLxl3Scafsv
x6f9+Kniistf/FG8ZOHQ50cD+xk9v8mf3+JO4zn/OY4fvT5sx5X9Musvv050
r4twf545SX3EwjGvL7komY+vHvP6nJMtL9frA8Q7KP4je+OGkxcP/fzpemUw
WN/yv/vOD3+I869n+S2e1+D+PSlPYuHYTMvf8Lyfdd3fJ73+cb/+vvvveW/u
f+T7ep7fMDu5/sG4+yOl67HVY0fZ/r0936E/377Pp//r/o/NsP0r+/yhf37f
8/F9QfdPsucz7s+HeCZcKOdDpXHjLl8YvobWP4XzkZcadzXHZ3dOM3rze+Xw
9zPXJz7OGBxH5zsSV2Yd9M/GV+7jJ/fp1FWvFnfR+VTOdXR+8kXJvHlS6fzl
o7Ufe7y4i+6/dKNxHZ2fTP9TXXHl/uzUz39I3ESvv6QuHQ6y84+pn4bT7PEB
50I6Hxmuo+rSqVNv18+qT1ddOnXq7fNRff5ycRPnJf29re+Hg+z8Y+o7VJfd
yS+hvhtO8vPGR6Y+XXXppfOb9f3KG8WN9Pom6ok2E3fR46vjqv+njvF54ycz
fohrAOcg9FuNuzg0PtV81efDUXZ+suVt1Y8bf9n4OuV25m/i40aOv+jjALr7
Ovj4YP6pnf5v/orl3pnxzTmu6MZfLnx/qO944z+Uznc1/kO51vitxh8o7zD+
q/EZSue7Gp+hnG78VuMPlHOM/+rc8xuNz2r8jep4468af6GcanxY4y/UnzE+
q/Epyg8ZP9b4FvCM4njje5S/ND6r8T2KlcZfNb5DeZDxYY3vUG5qfFbjU5QL
jR9rfItyB+PDOjfd+a7OZd/c+K3GP4lxAt256c53dS6781udy+7819TXNXyO
OvHR3P4N65cTU456XH/f+mJ5EpeEE9uNj35Y59//t8ZX8/4L305/h36ScR2m
W/0z61fypy6x9++PVTf3c9XNPWD1u9SdzU3y7Lvv/99T3aS/H8/R58IlnWXv
7x3FhcXnaCfzNzpH18/+p88f7jYu7SrzP2rm53tNaa7r8CnN8XvF/qhzUb2+
gfb3xTRPNK7vXOPCnmv+Rxz3St2fi+z+yA+pwifpd8wfaa3VNT5szwd+bfP7
40ub/nhU5Jf8b32/hfp+n7HvR/uZm2k/tBvqDpxP6HXR3j48L9PvH++7dH+i
5SMP0p+Of4LvC3j/6YsfWv8qne9H3oX5N9UTPZ77y331/HzyL8QvrjJ851p8
3tLrN8UfLsQfrpw/zH2P/Qmrb8ZXjH7nfGb6Hf3W+cL0P+2PFM6HFr9acYju
9/O6IucTX6T+S7+lH6OLz1yJz1w4n5l9E9qd84vFh67od86H5v/X/knh/Gz6
H/1O/OgYX+i/4mtXXp/c1z64P6o/LJyvne4/7Fw7H7uv/Xjeu+9fu69Z5v1o
6+xO/obtP7b+ZLy/bf1ep8e348P0TP+z6wt9tvb10J2f474m7j/G/Hhycnyb
//xj8x1xfzLqD98s/RHzH+N+c/5rrT7PfUPcX+xB+ZLsLf1H5h+m71/Z97fr
mxzPx/3F4KPa9/f2F8/nHvM3I/+ez3d/MXxJJif3v82v/7H5iri/2RTzRfmm
+Ysx7tn9LdPrWyc+3/3NbjXfEfcnm2K+JteY/xj90+6PfX7rO+L1p+5r8oj5
j9F/7fpDZ72a+gx1+y/9NucfdFJmfkz/Nf+R0N1X0PVS/e9q9TvX3VdwtN76
Crruvn+uu6+g6/RP+qXr7tvnuvsCuq7+S7/tXJ/7ErpO//tX9bvM/QnfQtfx
7btK/c519wV0HV8i+l3m/oYv4ejzr6O60O0656f/0m9dp//R7zL3P3yEMvev
1P3r6PQ/+l3m/oSvYOb71fp+HZ184fQ92fVPyO1vU1dPHlGzP9X6I1j+Xid/
Rnzsin0in59Xik9cnvD72/go70fqAt1fQXzvWlzv2td/4oPX4ujX95o/Av1v
H3HfV5i/gnPVnf/t3PYF5m8wTdx14kPOn3du/LbGj+D/h/9zl/kzwH+fIa68
84PEj6/Ia3Q++lfFbd9E3PbXGR+L+N6R4q47n39L48ZfZf4HPNenxX33+PFZ
xpWfZv4L4vNX64rL7uvbu4z7Ps38Eeh/4varjqGNX8lfIOrTcvsHC3SfK4s/
0//wgXd/hbT/PGY+QO3+L/l7+2f2f3P5t8OEK75u6c+H/peuT9r2Rf8Snz7q
cL3/iK9fePul/9HvZpg/AvWv9Ks9zV+B/iP/gML9DyL+r/v/pPkbyL+gln9B
4f4L+B7Iv6Djf3C5+Zacav4MfF/63cW2fpF/QwVXzv0PVpnvyGxrv9sk9T2v
KN1/gf5HP5pm/gf0H3wa3J/hcvNFecr8F+g/9BsfH+h/rE83NH+EtD5ot+hn
6PgJyN+j8PGT/jcnWb+39T1pXcX/6+RXU79j/vShr7C4p8dP3oivqrjaHj+A
2w3X9FbzR0jzy3+/5HzojxtX2/O/8UWQ71q9yPwReD8prl+uMH+FJcbFdv+D
5427fbb5G+C7gA+D+y849/ur5n8g/7V6E3G7bze+IPdLvn6F+y/s4Fxs8z+A
u43PwXzzN2B8wIfB/Rec++3+Bzcbt9v9GajfO1Zc8PdaffGVxtX2/HZ8EbR/
HPtJ3n/k61e+3/wVnKvt8ZNfi9st3z/eT538TvnuhQ8fel9+AO3f/A1Dp72b
P1+cX/6GhfkbxvG0f/Mf7PQf8+eL4+cl75fwHwyd9m/+gp3+Y/6McTzt3/Ig
Ov3H/CFt/tj6jjxofHz6j/kXxvWtNV8P58/DlTd/xjj+aPP9cP69/CFr84eM
4+WfWZt/pt0/fM1inz7OT/u3PIr4/vIHrc0fNM6fvl/C/7J9vmr/5n8Zz4f2
bv6gnfmb+VPG+Z2b7Hxp3ifX6O/OV3auZMc/xLizzp90347c+a/JXJ/7XgyN
H2h65fwi9FfIV+QV5k9ievEK8x+Z6PcLDm/m/sC1OMz4OqaXzr+4U3olX5HK
/ElMj//vpd6fvvubu76+7+e+CPeYPwL7O/ik+vunL//7f4lbrvNWl5k/AvP3
PxW33P0V4Ou+Q9zw9cwfwdun+x/8k7ji8FO/pHgU+keMe+7+CM365Y+0//rB
Kfp37I/ARf+RuOjuz5Dmb9475v4Ih4lbjk/C0+aPQP6h4oyl+899Rlz0TcRF
P9T8E95o3HP3b2jG5/csbX7P1O/3xP4U+zsnZvZ3hsY9d38Fxtf3iXu+h81f
/0Fcc3wW3F/Buebuz9Dnv/BJ8+W4x/j5ffnLvP9pl8caX79vfD5L7W5jtdtD
jX//EfPlWGD8fXxDLlS7db7v69T+4OL80Pj8tN85are0Y29/cPSdn99Xn3CG
2t//ULtzPn/zux4jLjDF+Pm3Ju3vPVNuVTv09vs9tVvn9y9W+5uvdrfM+Pue
X3Ki5QfQPplnvtf4/P9gvh/LjL/vviHO32f9hq+H+3+4L4j7fzD+3iDfDffv
QOfvN5g/h+fPzLb40wXSyU/z9SnHpz427fd33xFvnxx/S5Lf1fZv5mU3Jevf
Nn5H/OjH8uW42vY/0b+pv//Y/Dsy9S8D1/mL569zfnw9fP7D8fR/9//g+YgL
Vbr/B+ffQH9fbf4fV8qXAe7dd4x/x/vz2+bzgG71D+Ne/+BcdfdXID90d3HR
b7b6brjuh4rr7v4La43Lvpv5QxCP+5m47+7/wHv7Q+KeX2f+C33zu93ERec8
P7b67reJ676RuO6nmv+C5y+5P8Qm4r5/Qdz3nS2+TX3OHeKu32r+DPS3/yfu
+res/ZOf9OlM/gNc9qvEZXd/BsanV4nL7vPDPv8G99241/j7ffV3v2u+HFON
/09+MvW5zt93XxD3B6B90a6c/9+3PqBd0K6crw/3n3axkfH/X6/29SO1Kx//
aB+0iy+YPwDt66FMfg3tB47/7cbvp/1ond3h93/UfDuuMn6/57+dkcl/w/fw
Vcb3J169rXw19rH9BdoX+4Dbm/8Gxz8g342h+YNwPH93f45MfebAdf7i9VWR
XyZfjeUWn0Ln7xeN9t/I5o/25a+h025q8w9B5+/evui3M+Tb4ftz7vsxw/w9
Ir9dvh2HWfzO/fcOM3+PNyi+Dud9PeO7nyGe9V9m/Bvgvn9UHHjnv5O3PVtc
cs+PCu68cejT9tupvx1Hdy62899PMu6289/HjZvtfHr25W8Sl/t81eOjw73W
OFTfanwUuNpw4t9qfPjgkipvzuuLmvH1h8P7lUdyju1/vF9cbTjxzoeP/GFx
tVdZfo9z+z9u/hrj9tzPML55n3/Du/X899Nzn2t8+luN2+988776SOf6O1/9
3/T8/lbPbbHx1eGmw1F3fvrVen48t1ONj45vwC167s53ZXxnX/F/WX7kNOP6
/8r46PAh2fd6yPjnPN9/0XP9ovHTz5Evyph8UQ4yfxTxdypxGEs4Iej4bmws
343XmD/LNsZN/6H5n2Tq38fRf27c9vvMH+Uu467PMX8W57ofaPUR9MvjxE0/
3PxVPD7n/inOZb/b3i999atXGJf9SPNP4fktSep7fta5/9x39z9x353Drb5u
W/Olcb4995/7vsz4+eabM3C+Pb44b9F9d77+HXp+PDfn5/fFT3l+PLfjjH/P
84Gj7/x87j/33fn4E+UT8Fz8/cy4uFK+NivN3wZfmeuUv/dma59Hy1cDn5nf
HJv6y+CXsUa+GE38s92/Oka+Hc/Lt+Px21P/Gb5J6kPari/Dl0a+GFtaftGn
LP/7yUz+9zXy3fDxr9l3OXBpk4dy9NKmju3AiF+574b70/TV3x+j+8d9O8v8
Sbj/3PfrLL95mu7fE7pvvzL/kxv0/39F9/1B8yfhulKOe7e+IFffw/1XHL/Y
yvxJYv9X9/Ua8zfh/v2h7pv7l1TJ/T9wyhI9B7+/xt8YoMPVlw9b6Xx9eOx/
lvF/wNcBDv884+9/yrj17n9AXp/7AKBTH3+luO3O719iXPjZxufnecH5X2J8
f+e2z1I+KvqG4sJTl+p8/r76I+4P92Uf8784ye7rica/5/6cZ/cJ/ZO6v+KG
le4PUJtvgfPzaQncV+fj0z65b87X39B8C7x+l/vLffXxo68+BF8Q+ZjgZxL3
z30PbjL/EuqGn5QvxkG2Prnf+BcHGf/ih+L2f0zcfvcP4f68Tdz+t9j6mu+7
ubj6p5q/SN/+H/fnu+L272n5D3vq+43pez1t/h8LdT/4/bvmD/FD80X5qPkT
TJQfdKC+99vMv6Bv/5P3/2m6L1ua/wDfn+/9b+ZfQL/BR+Vw808hnw4fFPc/
+Yz5Ynze/E3SePtg8G7jm2xtvhbuf9Icf5zqt45T/daZnfEZ3wzvH1wf1+X+
HXw/+WyU65s/R4bvNEg//zjVd56p38fF+3t7fT98PNy/w31d3P9jvvlCuD+E
+zb4/kYffwpfhqflyzDaH2Kd+iD5Mri/hK3fyDMp/fyc9xnzf0j5NQuHzsdx
X4uDzB+Cz/9r+U58x/wp0PGpONv8KV5nvhA5fwj4CJ5/yL/Ps/8PPZMfFsdb
fmVH7zu+Tx/N9WvXl6Pr7ls95VpEfYLnZ5TfzuhWl1R7fKtPX5pyAyrnf3G9
1BHva/nhfTr5rviTbm38/Ix/djFR/UjVu85SHews4+NSV0+dL7/RM/7M1UR1
m1d1+Mm9+mh/2wnr6bqqzWPI6XNMnzHaX7KcqJ7xn++8/3I6df87qQ4ZHgD6
vaP9F0P/hemfNl3z+4o67buNj903PsDXub1nfFj+W/Wn7bePT+Gb0uHbfLvn
ePwOlmeO936fGR/JO+8cz/izPKM3v2NcG4w+fztuZb5fdUdGr5Xvxu/O9aV5
i1l9RUbfUPmA/Hbd8io79+/aNG+so7Pvxe/M9dXu843OfPRdPcevyBwv/8f4
7Tr5bvx2XfHI4qbM8df2HK/nVvM78/2Yd3eO5+/vyugD8j3123WL63WeL/HW
mzL6ROcHufGD+mPncKZ6yyXO+KPE8e6PIq54sTjhjP/I5weljQMlOnwB6pjd
n2qblDtYbzfS36EeS/272vlD5vsPUv2xin0U96/aPuW+deovThBvS3GH2v3V
4FGRx3+D1a8onz7y370+5QfihXmePLpx++pbrP7mQvG+Dtf+p88fNk+5ePXh
tn+6l3hP4j915g+qJ6gtjyd0485Fnj468ZBjLA8f/faUm9ipH4EnlvqztPUh
F4mHtZvVYaAfn3IRyb+M443LV3/W6oNem3If68us/mdhygXs1N9cnnL7Kq+v
gUf2K+XxL7H6FdUlVdRZeH3SFuKFpT5jbXzwXSm3sX6H1d/0jT99/nRLUl+T
YqhxAj3D9wxd5xuM7sdZ/mdn/m/80jg+wye1z+/wSUPP+EeEnuE3h57hf4ae
4VuGnuFThp7hl4ae4X+GnuF3tu1jNJ+zHZ9G80vj/Bk+Z+gZfmXoGf5p6Bm+
ZegZPmqMLxm+axyf4aOW6Bm+Zxyf4cOGnuF/2vPr8D/j/mf4pv58nV8aeoZf
GnqG/xp6hu/a6vpJ+53HJ8LfruTfE9Uz5x/8dv3q8I9jvKH+/LePT93zk3/6
5kSvY/6Unm/Z0MeXvvPLPynGDfZD0Jv9XfYXJpXf07/RbX+p9v0l8luafZIn
Ks9PukL+Ifydf/vxw8zx1J39i8YR97+0/Z969P5PxOU64we+7PAT3T+573if
18y16yP/e1fqpG38IH8Ivt+45Q/BZ/wTjSPuf2n5R53jvf7P69ut/kn75+31
sT+0S7PvUQ9tfwj/rSX6O345frz2l+L/Q4f7wLjh9elNfQb39YnqYP0bnf8/
9SFsj++Lb+K/lOOPMq/I8V34/3vGD9cn/Pn/PefPr+84U+78lhdR+PHkMy9O
nmur277oSz6/+G/l3yXPteuvAQfIz993/IJ0X7xzf/rOvzjN6+7offcH/lw6
Lk/8/lEvB6fLdcu76Hy/vs9/uefvu79992/FhN7vwXUpnE8hf7NS/omF+ydO
T30da/ojevN72Rj7ED4/3yb1lSy2s/2DvuPFfavTfurxldi3KHx+ga8fnDT8
tNDxZeS9hB8a+v2p72BxkPzC0M33MPzG0PFro75rsY3vfyW/tKa+5ted98Nq
+a2pfxYefzDfQ/L44vyvSn3/Cn8/z5afGXyd5nfL/8Pvq6nz+EVxSlJP9BR5
IfW/iJ/6L/KbQ8ePDg6cv99nyc8N/kszf2n3tz8jPzLGGY8/7JX6Xsb/h26+
i+HHiI7f3n2N/575lTxV4McW8zDL7/mY/M7Yf/X5Gb6TzbzuCfX39vn9IPXF
DD879Dvk18a8BL9JdHw55Z9XfEJ+evH9FB/YZ+R7rt1/SH+37cN86+n/oWfe
zwN0/JYUZyi9f+t/HM/FJ/ZJPjc4j6GTn4q/wtby2UbHL1g+wOXW5k9+tfye
4ZK9y/zZz0l910v3f5even1K44Nc/sr81eX3HPx577/4IfN+2M3iFxzXxA9f
3dlf5/+nrhMfbPSHUt/08jjzX8cPW/7YJX7Zdn6tq3fs1P8fqXkl/e8J818/
Rn7KnMf7L37YzG8Ot/WxfN8LXXfp/u/4geu6S3y+7fnge1/qOYV+ufyy5Z9d
wguL9iG/6B2UX/mM/KStfVTHNe2iVDsJnfey76OhG7eU+Hnc333EdePv0y0+
tm/y/wff396vK8dy8bfR/a67vjb+ahwPT8/4g/F870q5bvDz4nj+bvxBi7/8
sjA+YOhw6YyfFzr8NeMDxueLP1YY/y+ON24a/MTQxb8rjD8Z5zduG/zGOB4+
sfEn43jqeYwvGLr4ZvHe8/65ZcqtCx4kuvh6pfEt4/mJ31gYvzGOp67N+Jae
H1Qav9CeX3DjaucLwkM0fmd8Pn83PmWcX3y8wviU9v03KI3fGceflXL94EfG
8c3vdn05b+5//MyP/tPMfzcreT9tM3L+m1+/Ur+Ti3/hC3BiyoGc8Pk1nyjl
X92pH5M/b6l5RuH+35qvlPLdrdzfm/WZ/KsL96+Wfy7zpMr9ueWPW2seVrv/
tvzLS/mXd/J7Nd8rNQ+s3H+buJ58iTvvV80HmSfW7v/O/ZJvbu3+3eIDVPKH
r0f7wz9RaR7f6b/y3y01Dy9G+3vvXcuXuMsXbObjJfnb7i9P/5Q/eAUPOL3+
Fwr5z1cef2J9qnVOvVA+1eiKf5XyhS7df17+8ayjavePn631gNZpNf0YXf7N
hXyba/eHl797pXVg7f7uffl1o/vP1cPfrvPD/Pn1tn5u6xP4P238iPj56pQr
3fFfgwvO/t33rL5vVcq97tQfrE652/W51v+/mXLN64OTOMe/j78pF7z2/n9N
yh3v7J8bd7uGx23f366v7Z/XpNxvjvfvX9v3j883bnqNHwL61SmXvdM/HxX3
PL3/k+3zD7Tn1/ZPuOusc+Cx2/0t7f7G51+bcuUVB27Hl2tS7nj9d9Z/4IKn
n9/yy4x7Xjs/4+qUy97hG38z5ZrTfkq7/squ3/fPS/sd19f8Xjl2SyZ+5Hkr
vr4k3kX8y/fXjdtZev7AHil3tXzC9kfhiipvo/T9V/mR1fIpq339o/wLWx92
8itq+aAVv7L90dXiVa7M8GGMa1r7/Hgz8QoPz+R3b59yVSvfP9e+aSV+YuRh
oGtfnryewvfn4XnuluHPGVc2eJnoym8pj1GegPc/49qWPn+EJ/n2Zp+28P3Z
G1Nub+n7/8pLqPX5nfW98ouKdP3bnt+4sqXv/98r3udQ6ySfHyv/x+ID7fpf
+TeV8m46+/PMP+XPUq/z4t9XxvvP81p9fdv8zr8fz0y5NuWZI/Ojo26rs76S
P1ghfzDVs7TrQ+UrF+xfTrf8ZfqV/MEy+38vFPI/66wPle9MHjQ+TJ351Rcz
139u6vtU+/x0bcqFqR+2/Hn5y1XEb71/3J36WhU+/9P+Kb5YnfWf/O1K5eGX
O1n+vfledepH5c9XyZ+vfsCuX/nw5dzM8+e5i6/S4ROflHIJO8+X+TfP+RK7
P2n77NY/kH+Qa/8c33DDys77vfl97xj1rx4/b+Z7jw43bbgU4ky08y/OP2jq
aytvP+jwVw5OeJNx/rG+82/RcHE69RHN73qo+rzK4+MTu756uMFvvb7bhx9T
fd4si9/r/ANxGdnn7jw/cds67b/5vXpIXef3Et7Cf9fzu32s5/rHX971r5Sv
/C+MF9Hev080XIX6MpvfTez5Xj0G1+N+e758v9z5qXuiDsDnZ09a3M3jOx53
OtriWxtb3Gm+xc/4PitTH4Q61du4nMefiMtx3p0svvU6xbVWKq7l92+6xSV9
/vAli3tl8mMiLvVti3+m5320k39I3Opuxa2Osfgq8Q3iip39N40HOo/ufxvf
0vPR/Gm3Tv9QXBX/ksLnj8R3ua7VFl+jPdyS5Gc7X35nHb9NJ75Mf0vzj9v4
6f9U3PNKxT19/2e6xQ09vvwHiguneUzt+HWU4sKc9xsWXyVeNUXxK98/5H1M
fMb3T9P8xXdqftLuz35L6+37k/hb+36+X/Eq4lf3Wf+mPWofFQ5AHP9ltd+7
kvhP2/4XKF5H/M7z187XevtVSXypbf9/qHiN9tlr31/Xvmo1U/FD31+9QP1n
D8WHvmD79+doPax96E77J555puKbvn9KPO8Mxfc8vkY8S/v4pe/fM79apvjq
ObZ/e63iZVsofub5X6y3iV89ZvkLxAOJD3beT0l+7M71l+39o8+rhoq/OX+P
+SjxU98/pz3MVfx1ru3f99V/9uVPZvKfBujvTbnWFbxg9L/R/b6y4XbVy40v
lHJtd+msj+E+LNJ98vwNq6vvrI9PFy+DPAnm4eiv1f7QBQ0Xst5IvEh049aO
e/uFhzS34SMVy8VLQue43PwGXpn4ZSU8M3R4AP+n4QPU7LeiGxehw2+hnv9f
xQ+AZ4C+u+bVDzVciXon44+sK96Ajq+PMv+i/bT/IW5UDc8Lva9+EF5o026e
Yb85ri/lgXP/2/5j3NwSXiq6xV06+TvGpa1+VzxRdOO2dtrXn4pX2tTxbdfh
Q14t3uf+4lefIh4oOjwJns83xBtGN251pz45k783QH9SPFLmBaPn12uHP9D8
+mM2fsE7Ff+0kz+CnwD+BaeJ947+t+KtMn/cxPrX6T3xB3ivMxr+a/kO8WDR
f5Fyi8tNzF/sXSkXuYSXjA5v6pXHvcifKv5EPKpo3+Kxi89eTRWvPb1/wTUs
PX5P3FR808762bhB1TzxhNCJX3wpE79gXaTf9TTxntLjg8tTwutBN+5up/3C
C8dHZp61P3h04tMVvr9qXKFO+7tEvMgbGn5keYt4kuh9+aXrGxe/tPXtrik3
qf6kjf9/Jq7RqxXn20C8o3g+Sf39K0rPv4dLJs5YOV28MnTjMtXwmuz71Usz
9QVbpFzdcR+/7hXPTPuw9TXGR2t+18MtMvGBbyb7Q89VJ9r1w487oOGTVfeJ
V4Yu3kv9m6YfVu7vZ9z6Tvw4zct6onB+5dUpl64TPzYuben8RF1/8bDiY843
CL+QnV70bSh2kp8D+nPw5O54kS8nXms7f6/FC1zb/K6crwsPbqvER7N9vszr
tm64kNXhikOi99XPvz/1bens72Xyywdx/tTXo7O/R/vJxY/wYzhQfOuvyq8h
2qf8PuT/UX/S3g+7pvsKnfxUnjs+zvhxoP+x/CLYn/D28U75fTCP8PEN3xT5
V1SL5GeBjh8P32NLW7/i+9LM335T4QeDvjb1pal/x9rXiT3x8StSX5wavxJ0
8sl2aLjenecPV3duw9WtT7L8NfZnL2y4s53nD9dX43R1q43PffUH3zcuva+P
8M24rvHN6KwP4Rqf3HCNg3ecfj6+pId03i/EZfFP2dXiE7el3N8SHnR6/C61
/I8670fjDteftvk7XOCG7/mT4AWj78W+eDOO1W+38QtusfjTFTxqdMabZt40
SfOnNn7Qx9/5gnjqjCuusx92ZMMd7+heX+b6Q+LFKy+/M//eUTx68jJcN256
Z/6EL9CHmnGwo1cpt71zfe8WT5391QyfKLv/oWadje/+ecqF7+jUK6xt7lPn
+u4VD4/6X++fH7b6wOk2Pzmsh5+ieXW9YTPPrt9u8+vH5OeCf7z3T+dCe37D
FPECeb7eP+ERlg2fsHpYvEL0d6W+Rp3x9THxEHn/72br1y3EG4Tb5vy9UxXX
hx98mMWnnxJXVvOAyt//ze+rhwcqfr/G4nvfFZdZfOzqWfGarX1l+Vb8+12Z
+k6e76bNOrWjq949OAyua9wv5T/fWd8qX7A4oOHadY7Hd4l+6LpxA7vXn+Y1
dI6HC7m66Qedzx8Y99b1sZQL2I1/Kj9iofqn669OubD1+rY+6OMHme9S5/32
cfFWFZfuvL82SH0TBr6+hPeqdUZnfWG+YvWhtn59Y1IXQH1PG/87K+XmVt+0
9SO827nNOrb+kq1fN2zW1dVnm3V2fbStrzP1dwN0ePQHNuvM2vl3fXw3/J7g
K/r9hyd+RMMXL+aLN47OcX/VcBk7z+c58f4fb97zpb/f+SYafzr1UcR/vtzE
6epJFp+D9/hz8Sl9f0zczHJSM851+KLPpNzMCt4l+gzjpvv+5qLUF61z//AV
Upyl8PhKml9+UOf+vU2+RorjdeJ3XBfzMI//eX7GQxbfZl3yjSYOF3486A+n
vkG1x//eJF+j+U2csvb4JL5AdzZxsuqfLT7WVz/axx+8PvWd66yfr019zzrx
Ga+fd10Xkt3/XpX6pnU/X/mPmid0zl+nvnSd87899XXr6J4/4vr68gtg3PX2
9VnjD/j82HxdO/wzuCfyJy3+wtZfyt8tqfvx+HfzO5//cFvqmxF+DvH9Ut8O
eJ1x/LHyU2jmAVt0+j95I/Cd8RNB7+NTpvu/+3fuL9wIrcM7+pHGJXZd42qJ
757rrG81j+ycP51fvK2jW95hR8d3YsOmHXV0fH8ObtZh5Tds/WW+zZ39jevl
V6M6gXK17X9l6tsH6PjhnNSs40tfv9ep71Lp8UP428uUt+zr21PkF/STZp1d
/omtr/v4o/ekXOr63bY/BFf5qeY9VFxm7x/njnt+0/aqn5rUxNHKoyx+RvyO
+Mo/ikeNPlW+I3/a9JNO//h+6mta+/4lvqPEib5m8a0+/gB+vDq+vsniS/OU
b8111RbfWtLDN8nwDeLzjStef9r2D+fJ1+Ufm33M+i7bv2Tfa2qGH7mvfCuI
sz5g8WHnevv8x3xdistt/nWB8gnuaOLc5QKLb/9RyrWvff2ojx3XOrW+2Nan
fXxc6m2mKi+cfCL0Pj6mcy2d//Dfw8+mniXquE3f3epqnG/380L595Xn36fn
Xzj081N3AcfO+ZXGpevUr8LHFJ+iGs23i+/XqR/g+yxN+Nvt+1X1uxVcTK/f
/TNx63hPeH44/Ezy2z2/Hq4dXEzPn18rbt3NWl96fjj8TPL/c3xMjvP8dtUH
BPeys74XV45xwvPbVZ8Q9Q8ef9rL4k5eXwEXD+6l58fDvYOb6fUXcOdy8wuf
93r+PPzL3TL8qjniznFer9+Afwn30vPvmf+pvqPy+g74l+yve/4c/MwFqm/I
8TFVn1F5fYbqU6J+xOtT4GdS/zHZ6i/g2ql+osO36xtfnMt9x0j9aTtPW9/m
XG7+nX5+qy83fYWdf7mdn/mbja9xvHO7ffxxLvcddvxKy6vN1Vek942flt9t
1x/HL7e8GPfHdW43/477h+8y57fjfd+Qf8f1G7cbjvdEj/e48lTzf1lucbG7
zB+af9v1h058c3nm/L5uW2z+c87Vvs78w33e7v7i8LuXZ87v8yL393FuN/+2
71fa94vjfV4xNH/DDrcbnnd6/ZVdfxw/sfkHfKuWc4U+6cWfS8cavuTS4WTr
X33HD+wnw++u0/d+y7fsO/6/dv62vn+4+MWfofiZw31e4vnhV8Kt9Pgq/075
E+384zzT32Q6PKMFxrGM6zd/139Snonr/F5kOvkuzrFEh3/J77uNn913vO97
5PyP4YOtsPP3HQ9v8kyLA6ETHyNutavND/qOZ14xy+Ikfv4vWxwufb4df6LQ
4Vfy29d/5P0tMo4lOn9fktHhVfLb+QLkjZCX4/MP9NkZvdK6Ar7+UOsN9LQ/
DQZvNr4V/vT7pP20nKi+ja0rxN+Pz2fd8k9aP4weH9p1C+sZdOJ+Of4H9Wtc
3952faxb0rxKflp+NusK1hvoH9C6RT549XStZ9Dha7NugbON7usK1hvoS2zd
wnoGnXULXG042+g32rrA/QOdS7tS6xF0Xzd8XOsJdPr7LPV/ONzovm5hHx3d
/dXhcKNfonXBWq0L4Gijw9/+gvo36xF0XzfsoPUE+jRb9+AHgM74ADcbjjb6
RbYuYr2UPr9HK7jZrDfS59+uW+Bw2/ONdQvrGXT42ZdqXTFV6w10X7ewnkFn
3QJXG842eh8fd0XP/AK+JpwB8fzj+7OeSH2M2vVF83ul+3OEflLC59w9E994
ITh529r4k/I1c3yS/OcT10jHv5ZfBl8TTo+v759P+JzfKx41/oa4LuWY6oLG
xOFEh6+5KOFvro7jb074nD/N8jd5v8HhRL8j4WvC32z3R1M+5wsd/qa4PBF/
9/3zTRM+J/OI9vmnfM3Ng7OJ/j7xOclrO0WcTvQLxdckP9fzY05I+Jzs/7X8
jZSvyf58275PT/ic7N+08VX4msTVHxBnEx0+J3VF8n8L/diEr7l++Byip3zO
rTv7D18Vf5P5KRzO9Pmyr7N3l8+S8Dlf2eGvwN+kbuwT4nCip7zc4CBY/2r9
t7z/4uvB/H//0fHViZ5/PLM+yep98d2+4219NubrM+pHON77Z/o8uvldqV/z
dcMrkjz9Nv84Pb6dX/adP23Pg3Hn4/SdP/U7Hox7+0x5V4PxdJ++8/kD//y+
+7c24UENxn39Ny8Zr6hfaPc37P6O+f3tO3863qO34599/rh/ft/9s/N38pPs
/g78/nr8j3+jM7+fnJnfW/8beP87KeHn+j5Iy8dl3wBObnp+5v2v6bxfuS/0
y8l2fbz3txIXFw4h+iXi375T3Ft4lejwc+Fein8aOnxc8U9rOLno8HHFXw1O
Lrr4sMHF8ecHPzfdP2jzkzkO7q2/n/n/03n4q+N4+Ldwb+HgopNvAzcXji46
/Fu4t/5+JB803T9o1z/wb5mf+vgDPzfdP9jLrz+4t3Bw0cX/LeDmwtG15xNc
XPGL/fnX4idTPx/Xp/YTPsHiJ3v7qODiip8cesr16vJx4Wc659nbv3533p8W
P+u8f+Bn5vyndPxYT/wt+/nwM8Xnrj6nOnP0CzQvhMtyl+rE0eFrUicAZxMd
fibczEtVhx/Xr/Eb7uZfqI4eHb7mzfr/4Gyinyt+pteBo8/RvJ742wWqA0eH
n/mAcQji/HpfsH6Gw4l+sfrzF62OHx3+5gU6DxxOdPiZXiePPjeJH7V18uir
xM9cbZyG9Pr3Di4AHE508vf5nJXiKKTHk3fcchLQxRMQV+DXFRxN9Jv0flOe
JOuh+HzqHhS3q5aozh8dfiYcBjia6f0JXzLlQ/9B6Fq3Vc8qj/EFcQrQm/7w
WGH+kLb+fE1JHWPG36FIudb8+Py06/8EvywX/5qcvDe3D841OvxquNXOH3m/
+Ndn6u/n2/uL/x+u9cW2/hX3pKwV/3D+CPUncKyniTeDzt+Jj4ijHNcnHkm5
XVL/18aX4F/TfzcU7wSd+cCV4uN4fSX8a96vF9r6l/4JtxqONTr8a+qinP+w
jd43cKs9vwv+Nb7Yzi/5uvjVcN3hCaHDvyZ+Do8Inf5JXcbo+PQLBdzrPcUL
QpefXMQ5nX9EfvJ8/V28pPh8+NbEQU8Vrya9/g3Ke8TVcf4R/Gv+PtvmF/Ct
1Y47/Ls+Pm7Kt1+nE/8avb/FTze+dKvFl4ibmT9u6LurPsP8VePzvy5+J/kN
3G90+Jzmr9q2T/E3zf80vj/8TuZvK21/iLpJ8z+N64e/af6mcTz8zpRz1b5f
4W+av260jy3E70z5V+37A/6m+evG9cHvNP/UNj4j/qb5p1p86fdj/kudLDr8
TfPvDV35OTH/JU8KHf6m+feGLn/WwvxZLT72bGH+vnb9R8T6xPfX4HOa/258
PvWl5r8bz0f7GYX5E8fnw+c0f9zO+o/f3j9T34auf5Id37d/3Tm/+MElcQDX
4VfTL0frG4mL9HTn/Q9/Gu706OMPjH7p+tfFp75V8+fR5z84uNOuwzOg/2WO
L+FOZ75/7A+7/kHxp59U3Nt16qOpfxp9/4/U/Z/c+fxrxK+m/2WOD+505v5G
/xt9/oeJG3fOr/tf3qK4aab9RP125v4HPydz/9g3yLWfkjhd5v5QV9q5v9Sd
Xqa4+Oj339NFjn/4wIs/S4bEP/d7if3vDPFpzlJd2ej9/6OWNu/to6Y085+P
L031tq5xno1v8FOp+/f8CPiucCtWiWOBnq6/di4/oTp49B3Fx4WLO02cXHR4
/sw/N1CdM/o52g84T+vPI6z+ZJZ9P/cHoD5rjfLsqdNCh4/L+s75XF9Tu7gw
mV+27//Xio8LF3dTcXLT69s5+Jan2v3h/pL3/YTd377nv0rf71F9v5/Z9+N5
s8+8p93fvuffPJe9pjTrwL2WNvfh8Cnoyi9R/+jeH9p3jq97l/Ubj//M1Hw8
x5+EL3pFhj/JfD/H91Q+fdHD54x59Urjc7IeyvFJj9V6LceXhC+azu/a9Rnj
Xo5veonWIzm+Kf9/D3+zyvE3eZ45/ibxmxx/8xmtZ3L8Vz1fm9+1/NcrkvVP
ln9a9vBP6xz/lM9NOaUt/xTeXI7vqedX5Piwev5Vjg8rPmmV45Pq/THW9/44
Wfu/D4nHlepPjfE94QCiN3zfm9BrOGJ+frhWcHhcp/1tKs6TnX/Yd372h+EY
uM593VSci//q9Q3s+prfV4+xD7WB6nzT658/xj4c9c5+fuqW4Tmkej1Gu6PO
1Y9XnLL+/kt8frr+Yc/1Dyd6/TNHXv9gfPZvvf6rx4grnKo6Jz+e5/uWzPMN
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
lvULHFp0q/+kn4Z+g/izaR5h618afFmtb7XeDV1xzXp/rc+8/tr4s3UaL2z5
svi2aD0a+q5pXncJRxidfRl+T7P837PFD0aHI4wOf9j2KQbo1J9wvNY7cX7x
eOL8/nzT9/fOJRxidPh0HL+ROMNx/3v4uuyHwZ0lnhbPX++t3bQ/A8c2bZ/t
vuLBVt8Ln5b4HJzauD7lXcKl9fbPeM/4/KQ4v+jsR7B/sJ44weiMJyn3t30+
8hcrvy6u788svreD6lOOVPxnM3GC0TXeEX+oNR6aPoj6Cd+/hF/rdeDopfi3
9yv+Rj5htD/xbXl/w7lFT7kZXT4T/N7Ttf8Dxzd9vvn66zni+96p/SvtZ4UO
P/dHWp+fIo4u+nnKS5ivOOZt4vBG+3hxf2buGOu8GZYfsraHr7vY+HTOt6Pe
B+7uYcaXcm5djq/77YxuXFx+xieqp/WzLYdmovrL/fymvu76qK/z+rvM8YOJ
6pw/rdNrz//GpG685dSh72r6LNP5u3Py0GvzRfT1ZZ8u/+/aOXnohxk31+MD
fbpzcz3+t1o6+dUXmc76yjl5E9Wdm+vzC3Tyn2eZzvs3Nz/u03l/wckbN3+F
Pp3xzvb/i4nqjJ/kL7n/d1rXH/sfcf+PMP0i0xl/nJOH7uPLt0eOP5FfXWb4
scataPs3vNgVL+34ATp1tR9WHeH+I/kXcLN/pjyWdvyl3v5Eq0NET9cjg8Fk
W59sk3Kvqu3Mv6fv+B9rfvNz5Vk94P7laV1C1Mmjr03X9eXDdvyOqhvYpKkb
qKkjiPOrv3/R4ojoxEPmJvsErc5xr9Q+gfd/ywvqHE/8WP5zlfvPWV5C5/rO
SeseOv3/pHRftXT/yXPU3znO+z/Hz80cPy9dF5WXZPK/WSd5/etrVbdyTFO3
EnUs6P9b84mFmmd8xuYXd6d1JRX5quhW99GZn1j9bKn34dD1lPvifH3qZn+u
f/8o03+7fBrrv+X+tv8B1xKuHLxL9KXGtfyaeJepHnGTce//JxnX0vtn5vsP
0Hdw7qTVp1L3+gtxLReJd4n+es0fjhXX8r1Wf7rEuJNev0td6kLj6KPz7wfF
tfT9h8eNG+n9i7plOPfzxatEd66k91/nYsLRR+fzNhfX8ogMH3eluJnOx4U3
+3fiRp5n/et541KeLV4l+pXGlez4pxkX86viZaLzeePiWjrflvFBdcq183HJ
d1Kddun1yb9WXfSY4vqV1c/cbFxLz5+ibto5+ujULcPRh3eJfqjmD5uIa3m7
1Yf7+KGOMY7u7/e77P1u9Y0dfyrOC18n588B5yPDrxrwd48vGp+ncD5PH5/O
6p8z8we/Py1/m/Ws6oJKr3+y+rDy21YfZvVJhdcnTU/rwwqvD3ta9W0LjPOB
bvVbpddvWX1bx7+S9RBxRK/fsvqmjn+ueBm81+ujrX7L6ptKz4+x+rnS6+dm
pPV/nfXFH6T1c+L5tvtPVv/VGT+Yd7Mv5vVzVv9VeP2X1Rd2/BGfTOvfSq9/
m57WhxU+/lv9W+H1b1YfWHh9IPMmtUM9n7a+zeoDS68PHO3b044f/Ds3/9f8
vdzHOHmZ8/MzntE7n//ffP6Mnp9fcP89Dx2dfFXLYw19cbJ+fO1LPj91886p
RGf9WKZ5poOJHs9+oHMqJ3r+YRL/2Kyj990f4sUWR57w/UvjO2/I6DvXFsec
8Oe/3PP33d+++ye+fSE+Tim+vb2/4VtO6uwf9vWvjB6fD48PTt82I9fXEz7/
wPV0/v9csZ/WAeji92b5yuL3Up9XUq+HLn5vofq1Uvze0D+merfU37B9v8DL
I2/G95+o51PcL+r90KkHTOOX7k8VvrUd/w7xnbN8berteL/Psfxs8k9Vn1bO
svgF9Y7O8UO/SPWScPD8/byZ6g2dc5c+v50tPta+n8XXjve7x8/Evy6Un1qK
fx069aDiZ+t3u/6Gl0f/8/ot8cNr8t68Pkj88FL88FL88NDFP8/yt6knhKP3
iPI90OHxqb6zEP/c+nc+vn9Asn6fUu6XvCdb/zvVfxTub53y3geDpeZvZ/q4
6z6vH70+2Licbhx69B+rXlD3qXxMdZjoqn8tVPdaHqQ6WPQL1B/2EIf+C+on
6PiSDMWJHyqfL56fePBw4j2+q/rTSnWn5RKLD6v+tniVcd7RVX9a/Ilx3NG/
rPfOXeLM+/pd8aQOJx4d/2I49l9O3mMt30F1z1EHnV7/pPoMcd59/a54Z4fj
jn6O9m+PN848+v3iwcOJv8/8V4OfKY49PMr4fI0rcOqd/8f+yxTjxKMvEA/+
MnHir7D9GXjzM41Dj/4t5SPcb5x4dNVHF2caJz7uj+7nMnHoqVNGt/5bq/+G
Di8ajrT3v4nNj/P+lrzfyY/Uez70yUn/bjnV6OIGl3Ckt7L133riRc8SR1p8
4Dhe66nya8apRj9ZPGnnTKM/Lt7zVONAx+eL5yxOcvUhcZ7RtT+j9fvWpcfP
4UV/yjjS6Cn/8h317lbfSv9kHxOONbrij+X7xIH2+Pnx4jl/zzjP6AvEm36D
cajR4UV/yjjS6Cn/8jW17qdd/wvipG5d+/44POkdxZnW8wpdz5Pn21k/Hy9e
9CzjSKNvn/BBd6nFJw99ous/51z2HD+Y6PmJf+n9VjqfneOdkzda34j5Uzw/
9secwzf6+JaT5zqcvNtsfsz5rxaHz/n8dv2d+LRdfyf/G905e65/QJy8R4wf
wPh4vTh+7xDHL6OX0uP+/EF6fzrxJbs/rB+K0df/bGd/OtUf7tRHHiT9J+L4
PSyOX0avpXfur3PyXHdOXqb91O4vYd8vOHmuf1N1O1pf5NpPmcYJfP66zstd
nw5cd19Y379m/PI669CT/IF1Ss8/l393h+OGPkP1aOn6rW1faX7FM4Xn3/Vd
n+q/inR91PYf8snJM3c+iPY1q53E6Xut7W8eqbxcfHl8fdj3/X5h9+fTdn/S
+MiazvrvU6rbhtN3t63ftG9ewuF7re2f933/vvvX9/z9+ufY9fc93771Fbxj
OMjuj057H81Z/k98aXGQh7Y/oP3C0jnI6fdbp6QO5HHz36aebDNxkP39Py7e
sXOQ0dP1xwH17rb/pv3LclPjGMf9UVwcTvHz5l+t6yuXi6Ps6yf5GwYH2f3T
L9d+7o3GaUaXv2G1g3OYpStfuIRj7Osn7efhk124P7b8/coPGUc5fb7rls5B
jvah/W752hX7mD+3vl8Jh3mx7T8crf3S48VB3tXmr/JXLOEgu/8645f2nwv3
R9XnFavFQfb9De3nFjsZBxn9omR923KW0Sc2f4v8n3HPL0h5KJHfGs9vg4QH
0vU3+oH4Hldc/h8/3x1+1Nb3KY+O87f3z87fya9NeQ/4N3Xqr7LnT3lwbZ0N
elrvOBj4+Eh9dZOXMns4x+IL1G803/+OsTW2vrfrH/fr77v/dv3jfv1pPQbX
3/af9ZN6reBvhJ7Ww7R1Muj2fMf8+fZ9fpqv3OUX2ecP/PP7ng+8vPT5vJB7
PkN/Pu7L4/nLafx7/U58Zbbiw2n+ZxtfSuOzv6k8fvWDJH7fcvbQ90ri5y1n
D5349X2KWz9g3+9VSXz66U7+Whr/f7YT/0nj00908m+J/84ljmXxR8Wd8CXs
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
53yip/OPV3Tml335i8RV4Hz6+HSFeK1wXD9i6y/anXM60d8r3iLvXd//ytSv
DtDl71ISJ/6qrc/5/soPqCpbn7Kun28cx3i+Pfyt/RTfk29T6fs/8GTFvS+e
tfdLX34MdUlbizN7uMXH4D/ynjpHnFn0w8WrPc44tuh/o3yWK8U5XW77k/BM
5xrnNG0/+fph9l2WGucUHZ7pycY5RYeXynV7fAu+mXMgR7fvrr8MPEf5klXL
bX8RXuT/EUfyL23/kv0LrR877Vv+N1Hfeo3Fhy1/ivl7fL7mZXUpzqTPz/B/
OUAczfssvg0vU9zrar6tH/Wx4zNGcjq7/Le5Fh8mrv6w+E+eHw2Pkt9+f5w/
meGz1OKzDN2fAT7UzeJCwYlCn5weP7a/HQ+Pijz/faw+zfhQFfWm6NRnvEXz
2I+IM4UOPwpulNfnWH145fXhzPdTrlTbflOe5GCwn30/+FCLxYWCE4VOvq/y
gIvt4UxJf53yI/5Y84sPiiOFTr4ueSbu38D6kjzkg8SZQr818e3+ZQVHKtqv
8rm/Li7Ux8WJQiefG39Y938hnxcuFJwodHhQ5E9dIM4UOuthuFArxYlCJx7F
eeBMoZMv/tfiQsGJQn+jzVvniDMV31/5wnCh4EShX6V8YfwB7jR++Jf19zfp
c+BEoZO/BVcKzlRcv/LR4UCNmf+D1i3KL9qkXCTOVPr88T3fsoYjhU6+OFwo
OFHo8KXWEVdqGpwp6fCjlmn/d2NxpNDJ//y2cSRdt/zQ0Afpj3FiOvrAdeND
BicS3caPWuNH3B/Gi5RD1eopH7LlRKbHP2fcOX769XOUN3iecSLRV2ne9qh+
/0x5UujM69ZYHhU69S5wIzcVRxK96Zd7LZ2r302e3+FL0c9QPPcsi/OiMy7Q
Ty9M5gH9x/P/Mz5soDgkuu8bePyMf/N7Tzue/Qjz5yvT62+5s3AoJ3r819T/
L9Rvr9/g3xckeZzt+fGHvixz/I6qt4IrOU2cyfT+HDXlfP1ujv/4FHTqoVYb
ZxKd/W7mFas0z3DdOZToK6x/e/9P642iDsn14K/Bc0anLi/lZ7f1rTovfLjK
+XH7JvOO58SHa/c3Jyd/D45kHJ/y4bbv1E/59Q+SH//+y4b72Pdn3iw+V+X5
ncyv+TucOfT07xvU4nPF9T+jvGPyaDy/81jl1fJ34vjo6d8fDY4cOnw48kq9
/vMSrSvpv3Dm0GcqL1f8tk58Db5cep/a+Ab5LnDh4AGgKx5SwZUTn62083Pe
jr+4ri/mD3Dm0MnnIG/a67OZ76f+Im1+P3nf5GXDiUMXH68QHw//yND1/IIL
6vnl8OX4O/sE9nyjrop6OfTzku+9Te355dwv/g5nDh2unPiGFRy5tH/k63ed
S8W/0TP1jxM+f5+e4Vv0nX8wUT3Dr437l6lvic9P+Vbkr7T1M5n6i9Az9Tk1
eqa+JY7P1KfE9Z8+uv4kzr/n6PqcOP8Jo+tPYnxJ+Vbsb7bPJ1PfE9eXqd+I
47cYXf8T+pyEb0X8vK2fydT/WPyyU78S3y9T/xSfn6lvCf3m0fUt8fnU7yxK
63fi8zP1OXH+TH1OHJ/yrdh/bdd3mfqluL59kvn+YPzNxqea9OLPpcMm/rBU
PhDt+uDl8uvs8wf++S+3/1v8ZOjxk9TPfDDu/S9tT936gDReNxhP81jb/Lz0
+DY+Zefv1FfOS9or+VNtfV/f+VM/ucG4t780nnnd8IpkH6vz+eP++X33L/Ub
6tZ3puMR9Z3t+tfu78Dv78TOv7Ppzs+Pzx/45/fdv77z2/0d8/vbx48zvhT7
53H8gcn6e/f6L8SpQk/X88vEh277l/Ej69H8yL7593MF3CmPD8KXgisFZwod
PtVrkvnjLnF9zDf/h7hTl4lDhQ5/SpyjWpyj+PwmrjVlymHJ7+Nj/QZ/6jhx
px6y/Ab4Vbw/D7P8TfhTcKcUX4/PJ99zTjK/bvsP+Ytwp95o9f3wGeBWwbFC
hz8Fd0rXH/eXeiDW30eLY4UOfwrulO8PXCl+FevvXS2/gfobuBMrxKFC530O
tyrHp/qIuFRwqtAb/sIHp+ya/D49nh98KrUz2lc8P7WbkjrQ/yvOFTr7rmqH
qq9o43vGZ6zgNKJb/yvV/+L64YuYz8IAnXUzvk3OX+87fnLSP4NzFdcPn1H8
ygpOI7r8TSvqfuE8xvMjrqx53+7iOKLvIT4jdcWfE6cRHR7jIuVvLRHnER1+
Y63/D44jOnxG6j7gNKLDdyROBucRfVXCrdmcOqW4Pupy8Y9eKc4jOv0PLiOc
RnT676U6z53iPMb9S7g9g/rV5q/J+5r3vurJ43jxXgu4jHAa0+tfoX0tfBT+
0/NL6uIm1VoPxPefZ/PGOeI8omvdEVxG8XTj+uukrmXr8hBxHtEXKy94sf6/
GeI4osNnpG79LHEa0eF9wR34oTiP6J/XfYPb+C1xHNEntv5dx9a/Xf6bHT+Y
qJ76Q0UcL64/rb/t+kNbfRL+y6HPTOsrOuu/tWn9TeX+hJZfjv/khK/P8g/D
Txnd8kM76zPjW1VwrtCNj1WJj9XGJz/cfL9PZ75f3/2x/JHO+tf4VjWcK3Tj
Y1Vwsib6/fvuX9/z77v+vuebxl27+zP/Peuv7WvjDJd+vNb/hfuvp/o6JZxG
P//3NG9/VBxGPx7uOJxF9D9Izr9zcBr9/G/VOuOb4jBmrr+iTitz/cFpdF3r
+wrOouu0H8+/YN+/EFfxanEWM7o4gN3xkXEWzuLo69+59Pr/9PpWFOR5jdbX
FHAa/frWiqv4iDiLGb2U3vl84iO6f5nPf6GA05hpP7XaT+f+kH+l75d5Pmsq
OI2Z9lOq/cTnm39A7f4BffO/Zj/nH8bS+WM7v1HeQXDllH8Qn0+8eknqkxQ6
/e6J1Acr9L8SX+5XqY9UfD71EeThbC5OHXq6vtkpOHToxMvZx6fOBh0+HfM/
OHXo8OXgysGZQ6fuOp3/tetz+HLbpz5mcTx+Y7cmdfgtPwa+3KXKE5gqzhz6
NMt7/Yw4denzWTe4cnDm0OHTfUH963hx6uz6gisHZw4dPh1cOjh16PDlzKcs
jv+A8i720Pp0ujh16On6MHzQ4vyXiC9nPmLxfNkvI89mrTh16Bcl6+fwKYvP
73s/mf9W7XzSNP4c/hbx/c1/ovT4l/kf1O5/kPKzJsV7At38Mzp8YPOHqNwf
4tjUP6N2/4xNU3+IDh/Y/BM6fFvzh+j4q5p/QuX+CebPUbk/h/mLdPYvzZ+j
w79J4+/kV7b+EubP0eEDm79E7f4S5l9Su3+J+Wt08p+fT/0nOnxg89eo3V/D
/Ec69Vnmn1F5/NL8R2rny2bya8bR4bdYHDT6F3ydHF8IvkPKdZj4+eEnpP2m
1ak/TuuO2/NT35irn5/Y+XfJ5ndT35bL3+27PvKi07qdiV9/3/3vu37y+9N2
2+p9z4/88DQv3PU3mi/LxD//5Z6/7/n03X/iilcqP4J8A3TmBfOVB6B8gdDT
/MXdajh06F/XeY1jF/qqNK9FeZRdf2DqzuYlz/mpAh4x71fPXzkizbuoL7Tx
Hb4cXDnPX4BPR/x7Q+WDoPP/w5Xz+rrL07yZ6lTl06DDl7sn5dyVqb5b8C/h
1KGTl1HrPnh+B3w6uNJef3Z5mvcBhzC+P3y69yu/43x7f+FnuF3KgYvP57gz
U85dfD78ObgV7r+yjc5rHDufXwVfcJryXdDpF3Dn9lS+UHp/9uJzO+/fu4wL
xr/Re8d38cOoy4Mjhg4fjLpCOGFp+4JPs1XEGez7ZeNb4iYFVwQOGPoF4odx
nzx++JC4Kh8Q9+uhhGfU8sPghsERQ7f91YHPL08VP4zx3fmvze+VQ94v8E7Q
yWtmfF1o6wv4X3C//l4cMHTVRRbk76heMo4/QfyvE1XX6/md4vLVcMPE6wsd
PhjcAjhh6PDB4IJ5fiJ8sEp1q3DC0Im7PZTJ771B/MPUn6KN//Tt3xPP2011
YXASvX3S/uAkosM/3Fhcq9+x/Dv4ibQ/55PAPzxN9xcOIvqiJG/lB9QjhQ7/
8HTtC8JBRO+bXzS/6yHtC04iOvxDuDpwENHniJ94p+qaVO8UOvxD9jl9//lw
8RNpd3AU0e9VXedW4kqINxE68cDDVBfn7Qs+InWh64mTiA5fjrp9OHPoqqsv
qKtXvX0cf+KLPzcMv6L39gbi0aBTNwhXTvX8bXxEdV3nqX1tLk6df/+rxJWD
s4Ge7g/9+/hm/tbXiy8Hx+k4cebi+SiuCXfA2yd8ObhycObQl2l84r33jDh1
6fW/UHxCXCI4c+hDrfeoL4FTh56Zv0b77cs/gS8HVw7OHPoOmrfBpTtfnLq4
vz3xffhycCHgzKFT98u88Kfi1KH38eecO8a/0S2/qMOnh0+Wxrc79XnB7eN9
iA6fjPbl8cuviC8GV0zvo9CDT6Y8T9V7hn6G2tv+qrv0+Enf/hB8MdptyvNo
+WSMbx5/4n1L/vYGCQ+r5ZNRN6p60tDhj52h8fFQccjQfyX+2DHi5oinE7rq
faP+t1MfIj4ZeSo+fsIfoy4eDhl6KT7h/arbdL5f3/p5MLnhE9J+g5dl7Yf2
AecQXfkTFVzC621/5DzFRebr77eJc4jetz+avp93Ds5hHC8+IVxC+iO66taj
rt3Hvz2Vn3WI7v/nxSmM9q1xnzx4zz9aK34hXJBfimOIvoX4hKp7qicp3oMu
riF1N/V3xTlE30HrhyPFJdhMHEN0+HJw5ahHj/YjPh3PH94cOnw5xm84c+ji
GsHvr04Qpw49Ez+J9pXGIweDgy1/Eb4cdfNw5tDh0/H84dShw5fDV5H3Ufr5
LZdAnI84Hr4c7QLOXPr8VxRw6XL8udPFrYFDhw5fDq4cnDl0+hvt99GmPU94
/3hqD3/O3mud8ec94p/Rv+GgocMvY/7/aqt/hX9G/J5/o2fiY+PoZ4t/RhwG
Dho6fDOeH5wzdPhlcMt+LY4ZOvwzuGdw0NDhl8EHmJHw1lr+2Zaan95j8zO4
InDN4JWh0+6Jj8E5s+MruCRPinOGvqn4gRFHsvvbVz9IPTP63eIMosMPRIcj
iA4/EB2OYPp8Nor57WxxAtHhC3L8Iqu/gg+I7vub8AXRnT+R5letUx+q/Uj0
oeIr6L5/yfNBhzOIDj8QfX9xBNH7+HPwzZan8Ze4/o3FR2P+CicN/Wnxz+gf
Xt+UiR+Po8NHo//ASUP/rvhmrI/gnKHDR9tF8184aeg8D9YXvn/Sl18jLncB
94z3GXpf/jd8tLVav8FJQ18m/tktWt98Sxy0eD56Lrzf5ooDiE5/kv9GVVr9
7XTxAXnuXl8IHzDNH2nXR9RL8jnbiQOITj0L17dGHEH0vvymMxJ+zQsVHEF0
9u85/1RxAtHh/3G8+8f0xe/V3+P+nSlOYNzf5P32iviNDv/sZsWP4KCh36x6
ruBwiaOGDv+M+CQcNHTt58tfZU2nfnDe3P/4uWnIugROWujin12s+OG+4qCh
896Tj3j5JsvfZr+X+KiPb/DPyH+Gg4YOP434LBw19HS9ORgssPoH+H0/Ehfm
FHH80MkbY/w5RBxA9I3F72P+M1UcP/QblK/zFd3fR8QBTO/v3CFxDjh/6OL2
VeyfzEx4R08Vr9f8fVvd1/vFAUSH78d9hfOHDr8Pbp94S3H/4P8F908cQPTM
/lS0f7gY56Xr27i+P9e87sRM/b24WTF+w8FCh5/G+nCmOGroi8Vd4/0Dhw29
+b1yeL+uHx4UunxHIr6GHwI6fDXmL8yH0OGncf/hqKFvLf4a3DWv/xX/v/66
uGo/s/Xde8Xv477C8UPn78SvZhqfAL4fz2cjcf7Q1d7j/B4f0W/GhxLOHzpc
NXQ4fujiCsb5ff8Cvh+6jw/kb3H95DOh9/HnnKt2nbWvBeKzsX7Z0fgzffVf
irfXcNmcjwp/De6a3v9x/pQ/9wz5IdH/WO+yftR6Ms4PP+9i+o84euh+X7x/
ws9L8yfb/Mq+/XH4eui0B2uf2fzhlD+3hnhGPH89r5rvB2cPnfEErr3z7eGz
wYdQPC+OP1t5V9/S/st8cd7S659U3njyfTecfN9twwetfg8+2zGKryne5u+n
kvqExeK8ocNvg9vm7R8+Hlw8OHnoByg+BVfvO5Y/m8lfiOfHePh5cfFSnmvL
1yO+s5E4e+ga76LfajyM64c/tzjDn2P/gPEbTlx6/fn8Cvhxqb98O37Dh4ML
V4gThw7fDq4dnDtvv/rATv3lfeLfUdd2tjh46A+KL8f6HM4cOvFAuHRj4tSh
87nMs+DQoTt/zvPjFokrR/xiif6N/injx6jeoV3fJXmLk8oVxm9AX66/L8/o
1KV4fYrVr3T0NG9yndL5U+nxed3rEDLXV3l+pvnLZ/XByJ//dDx5Cpaf4Ppy
0++UXl1/x+ovn/qGkt9+vPu8uH5Nj/6Kv9n87n0P+E7F78z1ddb3E9WJ63h8
Z6K6c1K9fVyT0TneOb0vVWecOszGpz7dnl/8znx+cCBfqq7nVvB7dPuFw+L9
cxL9N1Ofxnxw4Zjzn2jp1H07v6GpH7hVXIeunvIb1yupR0eHN3mi6s5H8yHb
uvB9bP+cunP4b9Sjj/5+fI/2+71TdeFfU12484mOt7rzdVWPjr59kh+1S/mM
6tHRva6cenP0ZnyfslR15Uun6t/oC1TX/QblSfn8irrxT6lunHpy9NfruPep
7nuW7U+q/rsmf0B14HE8cZ27VHfu+0de1069O/oRen/drbruiyy+Q924rp86
+Dieum/5c3Xyq9azuvUPqZ49vf415JmVqpMPPc2ffEe5u8U39Lzq16qu/HnV
m6M35/3g0ub36Uv5N7rXhW9l60OvOxfnIM5PXF7tk/YaOlwl1f+U8JbQnfu2
3N5vzmfZx/of/WorcZW8fz3w4s+SMR0/3M+OH6Q/496/9xFXiX493fjKfcf3
6acZV0n1wXF/bjVuk+qD4/6oPrg+h3WE6gnQqTdQfXPUI6DXxm1SfXNcn+qb
K60fStU3x/VRj6H67ajXQFf9tuKrayrqEdCdm/Rq27917hN+5Oj0f+bdqu8u
0+NbLhS8KPRVSV3r5uUbLD9P9fMV/uorVQ+C/lHjJsFTQlf9fqX6rRI/eHT4
jaqvr1RfH9/vvCS+srfqx94Z+h7GVRKfIK4f/2DxCQrxCeJ48QkK8Qkq8QlC
F19BdS3PB28J/THjNsFzivuv+4YPo/gKoffNv+k4Keel3X/xukHntxp/VeNF
O77p/a71+ZROfgj1jXAnJtv7Gf4S9SPOX+u7vtlqt6pDKp1/+oeqK1KdUSnO
VRz/iHEtnlA+GjrrXdUJlQttf4q6n8+Ka/F74l2gw7WQz305mt++t7jI7ySO
HffPuRSrrH58tuJZt4sr4fOHjxoXA14GevCfxbXw/H/6/2biZnh+tPiT9R7i
Rvj7+wHjUqwRrwKduqSLxJWYZ/MH52Kca/X/vP/hWlxi8Tf6/7i4Gedbfhr7
D9PFnVhi+8tXqu5MnD39+z/Fr5VPrTq/conlz52ncedOcSecL3ua6sJUJ1bB
u0Cnru/74loQb0KnvjflvLTxX+MbFt6/9h3Z7/jp8Js6/RteLJ8/2T7f6vvr
0fX9LZ/Wxwer3yi8fsPqW0qvb7H6itLrK6y+pfT6FqvPqbw+x+pPCq8/sfqc
0utzrP6k9voTq88ovT7D6k8qrz+x+ozC6zOs/qfT/61+qfD6Jav/Kb3+x+pX
Cq9fsfqfwut/rH6l9PoVq48qvT7K6ncKr9+x+pbC61usfqf0+h2rbyq9vsnq
c2qvz7H6psLrm9QvYn3ew2d/yfPn9Pzd8cOOH/xXz09etL//0Imzp/UsHj/d
GU5a53jy9jx+is57Ks1X9vya/PnZl/b8aI2/w6Hmf2k+SP/14c9xbs/1wR30
+qnm+L8azlG/Tfe7+u8/4zf3/xuj73/286+4/D9+rhnj899qn6/98zHFBSrP
n36595f9+dz5++LLzrXx9rtvMj/t8g3xZ2Gd7uvzvvnr48bN8PkTXI5TxeWY
L14H+s3G5fD8EPw3/k7cDJ9fPm9cjrPF60DHf2ITcTluVz4Z+g7OvZCPBTr+
LPJlqReJt4HO+/UmcTHgZaD/WlwP+XJUlfGxmb+uFJdjhdWf8H6Tb0l5hOXf
LTHuBTwMdLga1L3davx1/DuOhYshXgY6/h/y/QjeR3r9zF9/v3yj5f+m89dD
8TEJ3bkZPn92Lod8YuJ44ofHisvxXuWDoF9p3AxfXziXQz4u9nzXreV7U3j+
2SD96bw/bN8m9gsyx3feT834dLn8DBYOJ5tu/hjlaH+Ktu7zQru/zd+PWto8
p67/g/lXFKP9O8L/opb/RehedyD/h/h88y+JfV508y+p5F8SuvlbFPK3iOdr
/h6aP/7Evn97f7z9mf9JKf+TuL/mj1FQ5+nfX/ubxSr7/ubfUfn4Zv4fqp9v
72/f8zd/lGID+/7m/1I9a/e37/mbf0nn+pv32l5Tmn6319Lm/rb+MMzb3CcD
fWA/L1V3bprrzmUbra+jvIbtOrp40eKO7d15/zqXzXXu17+qDtN1uGdXiXvm
unPVXD9YXLRviouW+f7BdXOd/nOt8hsy96fW/enozj1z3blqrj8oLtqPxEXL
3N/guo0+f8tly9z/Uve/czzz2UfETcvc/+CyZe6f8vy37px/iubV14iblrk/
wWXLfL/gsuXyC3L5AymPdzBIOTjt+l7r+uBMoH9V8YFNzIcEnfXn0+Yjg876
W+vuaE/ozgVZoM9DZ/1J/jOcDXTiK7z3fH1LfAafkXu1HkZnfnWk+dxE+9P8
YIH+rvld5/2zj+ICcCa8/7DPgA9Mev6Wu+Hrfz4vXee332+a1u+sKzz+dJdx
ReCcoBO/YN1Enaf3H8UtgvOCTnyH9aHnR25pXBA4HujEv4g78H3S5/tsta7i
Qqyj0J0Lsq0+z9pnNcN8cNCHi1/8GcOf0udfqxTfxh/L94+Ij3Of5tj+DfHX
m7V+favtvzn3zPfXuK/M8/aw/S3nqn3f9g/ZX2Cf5wHb35mr/YmYP/1/2t4E
XJOqvvO/TLRBVAQXXFBHjSxi8D8GiSBX3zKt0UiD6JOYCI7iEsSoqEDUyShc
YmIywYUYljQufzXLBAVFNqH7NlWZFkFsOiCNIbLYElHRiGCiJibBcXy/n1Nz
PnXLuiTPvA/P8z6Xb1e9tZxTdc7vfBet31BfTl25/YjWF5kPo/N5rdYP6R/k
lnp9zb5tXj/Dl5t1sHdo/evSyp97W/FLA6d+Tb7N72r99dTUv/8o/edqra/C
C/3jvMdeqfXNevy2G3X8grO+wTqi1w9zXYq+/yqtD+Kr9v28h+72+lvWH1hn
9frqmVm/qPM1+/knehTqF14/fL18Bez/Yv5i9B0Fr9cTti2+IH4b4Na9Wl/O
vOP/sGMvfv3G5Xtr/9Zl3yt67dXun/cS+7c+3roE81ftW3aC9I+1nnBhYU30
PiPHv+Tjn7r+1LXmf1+y6OM3L9f6D44/579o/eYZ1fN822Kdlz64v8u+v1O/
f3rNu106rspjHvz+sn9/6v7U9epLFk/Q/nV/lnx/pviT2+W7Y34+/vy17wmf
H4/f5asS/aD23/uq7B2/FXB8S14R35IL42cCfm58UdDdXi/9yd7RHbKfb2l9
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
J19jHFh+/6yqvSwseH2X7fHlsr/MqcHfN8JPte/XiP9b8/vxlbte/mLgB6U+
lnHqYPsXVr51/f2xr9wY/zc+evSTAc5xp05R8Cl/mHdnfWL+ffJm/q7x3TJ+
YlzdHz/jy4wr24wzS/ukfvT0+ErZf/6SrJ/w/fj4dYHfJt8s/LTq+9f7ch2v
9fuLU9/6UHhMX45fFzjrG1nXYJ2jbH9V1keyLtLi1wWeny2+XGP6nTH/HOpq
4cW3zhewrxZ+W97/mL/OX1f+Gr3PBji6n8ui+1mOT4fOT7zqfn7H+vqTg+/w
k/9/zSK4fW92j0/HavdvfK6XOnsZ/Cnx52CcYf+dkf0vgF+RuvFNdQ5pOT78
OU6uczALfkru95XhhZ2i8Uv01M3aOke13L9zwpuLPrv4dIAznjyhzjntf1+8
M6+P3CTeID4d4PjmnhRemp8/5o3h01HwjF/JebV+t/D7wiuDTwj+wbTrq8P7
8/r6deJVJme2qY+/5wV6fG9eHT4d4Dw/8dXAZ6M+/p53x/GW+5u6zXJ4cZ7f
xU+hJWcVnw5w/Dfw3dik9ePwbfB36L4Znw1weJv4chwcnw7wU3M9nxje5vtU
32ddBx0Gekpw/Llqfx7XLy9Cl9Sg8wWn/oWvVv5u6u2vXzww2x+o7bO/Dt7t
q+PDBY6/Fs8X+BTg+HPBLxjTR9a+W3x6f634IDX4bIH/cvy50Mf/z/h0gbM+
Gp+lJj5L5fzw33pdfLfw4QLHf2udfLjA8dfCVys+kGX7c+PPhT5nL/F78NfC
Vys+VeX4kztW9P0vjk8XOP0fXy37b9X1rQdF39jzO/DXwlcLH8v6/B8EPzV5
AP3zE3+tl8dXC58tcPy5eC4cqvcn/R9fLXy2wBm/4su1z4j/Vu4j96/ge1X+
W70PVzn++Gvhq4XPFjj+XA/K+BqfLnD8t9IOm4/Ghwtc+o8Jfx33g4E+ZMn+
G7U/xw9nvxCfDm0vnXLfPuSvM/DfkD/HwH/nKSv+fz4D/cdIfmrRfzTRf5Tj
l/6gi/6gbC99xsB/Q/qM1vpb6Q8G+lLpbxr740l/0z1G/oDSXwz4E9JfFJ8O
cOlT0h/7+oj0LTN8OsCl7xm8n6XvaaLv6d//tb6jtT+f9B2zh8m/TvqUDp8N
cOlbkrPYj0+k/xnk50r/M7O+W/qnzvp26XMG/hvS53T4dIBL/zTDhwO87g9F
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
/FF6fp/8U+K/0/NDpY9rLld9Rvo48uJ1/EXfN+B/Sx9YchTApT+e4ZMCLn+q
Lv5U/fnX+sXG/hPSL7b4qJT2V/uHDPy5pV8rPk3g8g/s7F80NT+Rfq+zvm7+
XfR77Vqt30v/WnyYwKUv7qIvLscn/6XW/ofy12nir1N+X/rA1vpD6QMH/nnS
NzbRNxZc+sh2b/kzyV+gjb+A6gvFv2xz/MvK+qL0m130m4P1S9rV0Vq/lL9M
F3+Zwfsz/okD/yb517UXqj4v/dNA3yN9Uhd9Utl+ZP5a2t+I/rqcn/ynBv6P
8hdq4i9U8Kn1femTSn90+6Dd4KPj9oHvjtuX/BNm8U8ovy/9/ubo90v7kD6z
fZD8j6VfbKNfLNdf/jotPjvg9tfZIn8d+X8O/HXk/1l8Wnz/8VWxv4f8Vbs/
qdrDaP1iCVz+sg0+LeDyF53hw+L7G//T7grxW+Wf2uHTAi5/2e5bqj/LX3Zm
fzvzG+wPKf/X7jLVn+X/2sb/Vfsv/rodPizg8s8sPkng8s/M86d/P8hftHN9
Xf6kXfxJCy5/1i7+rOafcN8Xap+lgT9nh4+S7y++SPEPLbj8Rwf8Zvmzdvgk
gcufdaA/lz9tZ/2F/FO7+KcO1t/G+Hfyp+3wUQKf8teRv0Tn9TX5dwz8W+Qv
1+DjovN3/XAJXPrbGT4vvn/RLyenpfdvkT4748wHFlz+Os1x8oeRv8vM/ivy
9+zsvyl9/9IJ8ueR/r2N/r3g8l9bG/+1Mr6Tv0cXf49B/yr88Pgkgcs/so1/
ZGm/0ie30SeX6yN98lLtkzTQjxefI3Dp41t8ksDlb1R8jsDlr9PFX6dcf/mr
NvFXLfuXv0LxOQKfqu/K/66N/91g/RbfF3xgjMdfssFHpr5+xX8Fvexg/Qvf
GOtr5H8120/8L/kvDfx35M878A+Qf01r/pX8a1p8ZIxzRWufmIG/6+x8+efI
v7OJf6fbJ/4/g+sj/59Z/H8G+x/jV8rfqsHHyDjXDZ8icPknoa8drF9yffEx
8v61vlDap/x9Uwft+Uvyf21dX5b/6wwfmbp9Fn/a7onyh5G/7WD9Xv6/nfON
5f/b2H9f/tmd8wfkzxsdUZ8/Ln/eLv68ZXv5H2/O32X8Lf/TJv6n/fq5fIuo
B/j6se4af9ZyfvJ3bfAxKvev9r9t8CGqr2/xv21uFT9d/uJN/MULLn/aJv60
5frJn3bgHyj/3yb+v4P5Bf46y/LXkX/IgD8kf5TO/lHyt1uyv4381Wb2b5O/
dmf/bvnrNPjIgMt/pvue56e1P2rz4BF9X/xROnyEwOX/MvP1kX/fLP594p+N
r4/KP7y9Xvw3+QfN7B8of50GHyJw+b/O4v86OH98Z56m+qL8+Zr48zXGOaPa
p2bgz9Rdq/VD+yc731X+uYP3o/wfu/PEX5T/YLNN/jsj69MLxpkHwaM1Tv0Z
HyHjHDc+QeBT/jrKB+jQC4JPrZ/LP7PDBwdc/s3xV+/7n/IH8n1yeT7LH3KG
jw+4/CHJ/ynnL3/oWfyh++dXnS/Q4aMDrnyBDh8e8FyIog9yfcP+OpvkryN/
6I6cMXD5Q7fxh/b+G3/fU3wsv9vbjeiPlpRvv2q85ncX/W25P8kNL/xX18+n
cP3/gX839UDqg9aHPV/4GcIZ78x52GsavsHJ3YBXaH7hFL6h8t29/8CfZS/l
DlgfM4Ufkech7df+UODob6y/om6UcVKzJH/4Kfwa5S45/2RbcPQL1hfZN9P8
kimccV3qYOV7tXgn30bzS6Zw+NDnxFfpHPkrUU/iOWf95V7C3yWc/z8fJzyk
+Uq+wbeqX/97nx9bRvD5N/WghQXjW+MHxvfK+98NX58B7n6/8v7RNe4wwHk+
bxnBd/qDB1z7lAOvb/k2vjHjXb4H/mX5/5eO4N1FV2374HF7Nnwbx7ecb+PU
+543gl+gdWvj9n0b2/7Cke15n106sr15cSPHX8YlY9tvndj+eSPbL8zvW/k2
fqHm1SPnP4rnvnV8jxx/n28wgm8dw/+D7/f59zWL6A/tb4U/Rv1e5FP8qxr5
V/n93Pk9C44uZf6732vx2ap/v+gnFz0+eED0hnlPdF6/Owo9XfR10dsVHD3e
L0WfF71ewdFLsi6wSf4ol0Zv+PHoD71+cHDqZegX/2WuZyw4er299R4GPyN6
S967Xn9+e/SAfk+Dfy58B+YNcx+o3r+Ddeffi/7zX+Z60II/Knq+j0bf9+W5
3q/g26KX9Hsa/ImpR/JevWOuVy3b7xI95mEj/tanRY/Ifg9T/fK46GHRx355
rpctOLxJ9I/RQxb8hugNl1M3tL/RYvScub+N64ufrnLr7tVEL1q2f2X0krk/
uX/9+k/Ru26L/nWuhy34P0cve3H0s++Z62kL7vezx9+sHx5Q+9wUPPzW2UPU
j8Hr58HCQq1Tpn73gKKf+1/px+Aa16ddnrdY449o/JwoePqr+zE4/ZV+jM4W
PPrk5r55TnxO+R/0V/dj8H9Lf6XubX8k+rWfE+Dnpr/BO3L/jn62QTeLjha8
5IblOWB+U/TbDbrtd6Yfg2f+3/Kc2UfPD/aHrtj1D8bHZ6Yfuj5Of3I/A48+
vejS3b/pr/Tjs9OP6+O/O749uzRbxa9lf+i6n6/nQ+273/djcPrrJerHdfu4
V4Mu2f1/j/TXPdSPwaN/b9C9b0g/Bv/ZPA+OynPiRfLPpr475k9L/xzzp5x/
F9+s7JfPGN73z4fGVyvPhe7h+Xti/0vg8Z+YTfhPzMb8J6jLjPF34q8xG/PX
iD9EO+EPMRvzh8Afd8JfZDbmL8L7eMI/o/guj/hnzCb8M5ox/wz6x4T/SvPT
/Vf63NgRfcZswp+kGfMnib9KO+GvMhvzV9mu3CL7g9Ttc1hfon/9fNV+u8WV
tx/rP90iPJzNej/y/p3a/0L4cb6+8+9ty6yLz+fn/5d/xU/snT63+MbwGvBJ
8v4PD//a48MczzLr3zfLXzn7X17d/h8z6F/g5CfO61/fHzw/fvrxnbfIusNN
Kx7f7Yv3iz4KHzJfnzenPv1R1V/5/V2zvurx6/z7hkXyne2/vLr7d80i6y/b
V7x/ty9PHP/y/+vjJ7fM9eXV3d9ueceffn8XxvZv33fPT4+OX3I9fxz6K/M7
nl/a/9n+8oenrl7PT/p8h6/Ejxd/XnyGwfFDxh95d63v4Tdcz9/68T9+xeyX
3wHn3+Pfu3J99jnN3lWdr+8/58Vvd48c13dznOCPil/zsfFvxgcY/JT4+b48
/r73io80ePyMm7pO3re/8+Inja/r8+LzC852XHf3n/z+jN/FZ1jH3/xrjpvz
AP9Y/ITxF/7P0u/gx1zPL/v6AX7O+DvjU637o/n1I7198bdmP+BptuX9knyA
8n6In9RsY3ymNsVnamx7/gannix/irJ9/BUa+SuYX9TIn0Lrt09u5B9Rzg+/
ffkreP23k39Eab+sf8kforT/+GvM5K+h439yJ3+Ssv/4e8zk71G2jz9JJ3+S
sn38J1r5T4jfs0sj/4my//hrNPLXKDjvW/mflOsbf49G/h5le/Ig5H9S8Phb
zORvUfD4o3TyRynnF3+XRv4umn/ePZN/SX99s34l/5Kyf8Yj8ncZmd8Wf5F+
fD+x/pf+In+b80o+x7bowsCtD7w9fkLUP74SvyLwj8WPiO3tP4NfVL3/nn+L
3xI4fk7g6LXArb8+L35F4O4/+E3V+99d+z9Ix/dYHd+TG23v8+90/uX4Lggv
FHx9dDrg54cfUB9/339ujx9Xff17/zn8qHR9y/nhxxR/2c7+nuT96fqW64ff
E/i31P9z/Vtd/1n9+4fr9w8ov5/rM9P1KfvP9Wl0fXo8fl9qP52Ov9Xx9/yH
ifWx+N0VfqjrK6lPF3+bF6u+BN8QH8J3qH6V+miDT6DrK6n7lH4zUh/uviwf
RfDUxzO+ut+gf3x1Xvdp7VMHnvo89ftB/9h1Xnds4G9cq/pj6scdPoOfUf3p
efO6ZouP4HNU30x9PLlKPzPoH/Pn4vOLv8SRqi89Kbzy1OUH/eNj87pmV/vo
9PXN1KcbfB4vVn0r6x+se3ReP0ldt8UH0fXdef38/yv9xusfWZ9gXaL7qOqn
87re3tRlB/Xd1BVLv/lr1RfRwxwhH0Vw+I9dre8tOPxQ6ivmN8jfcVAf4v1P
7onX90f0OWX/I/qOgqN/2avm75b2nzynolt2vhP+u7+e43d9bM77XVPmfea/
jOijC47fU52j0o8f8CX6QvqV62PhNcB7GPAbpq4P/mmbKn+F+2v7gX9LOX/z
55yPFH0b+TIDfrT5xW4/5l9/QPeP339cfn9Zv39M2g/1T/NXrM9br+trftR6
HX/4abOvpX77NtVvGU85Bw/8huhJ8XE7X/6I8N8OjD71xjmfr+DoMdFnun2f
Fz0n/87Pb/SUD6n8sYbtd/NI+2Xes3v0m4fN65gF37XSu/Y+FOD4oewTf5Sv
KB9o/t0t7zpSf8Lv52dePvf/+fW5Xqxs/0P0qFfN9alzPXw//+iiF90e/aj1
A9GtF36A8/2KXvfRc/3uPO+n//1PVeO7H7bRI5f9w6v+UfTL9s8zr9zjE/wo
1sefYsucz1nuv3PfPX5Cj/b86NPOnvNNy/7r9tvrxN3+/iTj2ujRC74mfG/G
WW5/R4VPfWj41dYX44fw+vgjhM9fcOq65KuGz13wW6OHSc7HgF+Hn0w9L+Tz
4+dLxkO85+9p/Ro/JfyVzB/5rHJxw3cv+Brl1h6u/vUOPT9P1vOT8Sf6l9fO
9TBl/5n/wT9t4xdS7g964udFXxy9cdk/fin/I/4pzjdDb9dEf/e1OV96UN8h
1573DfgFyuU9S+0vupcGf4QNcz3M4PkLP8Htj/6Lb8BfzPUOqi/8Q/FNip9H
Ob510Uu8LPoJt1/nxrs+gt8R/kde36SedWD0c25/6D3ujP7jo3M9SMGXK34l
us6+fTuX2Osjj0hddbfoO16g9wO55c+MfugTcz1RwWv+6HfbV2v98IvKPbY/
I3pn9M/RQ5ft4Q9vGOEP1347PP/69vOi+CWxzhY91sj6wHD95l7xy/mb6GZf
oOP/g9Tnzo1/0xb5W/9C+N7487j/1e/3xw3qz/iVoRuzvh4/pfr937cf/IRy
/Knv36L+Mz7+2zfz6lvjX/Ro5Rfit4T/UvyY+vFV/IrwL7L/wonxm8J/Kuvo
5fwelXr3qfGvus/cz6psf+gEf/Sb0eviO+32Qb0IH42F6nPnbG30wKy7jqzv
LR+U99Qt6l/4Fa2Pf1H0cOX4vhQ9L/re7+v98JjooXmvu33gO0Td5vFzP4dy
fjdEbx3+ymB+sGv0yOhK/HzD77D4H879BMrvH5f3IrrxQ5VPd2f0xhmntR6f
PS967vjOtNF7F/yb0UMzPttb7e81Gv8fo/H/8fHz2Cn+HvGDKzh6++izBvNH
/IQOiu/Fn871nuX42O73ou93+0Avj37+I3p+1/x16n59+zu+0uOTU9S/P6ib
HB5/g8H6VfwCnxpd6rFzPw/9/g7d80bmjxz3D/IeerTWn1hPqf3d+vkpvgm7
xb/A7euH8Vv4dvwX4sdQcPwKPhj/gt30/Hpg6hv4f6yZ+4H07bfSZ+zAd8Gn
9CO/pFx74/DiLow/l3HzY4zjV4h/oXF0g2mng/kfvC/8ET1+ov6a5+AA76Kn
Q1/n/V8UPS/6XuOev3v/abaj6+/kuuQ8Bji5fvjXGP/V+F1RV3P/O3qCHzWl
H/h4/KzgGb9O4+uXxA8MfzD3v9ovlPHJHbo/a4r/mPtffGUa/HHXzf1myv7j
i8FzdPD83B4/Lca//1nz1+fGj4zjtD4UPzP8zaz/nX+P8yfYDn+3+L0VfEqf
xd/44xmP7rjZKfpY49+JXyj1U+N5bhddq3H8cPHHNY6fYMYJA5zrmTrNAM95
8buD36eumXY+2P7wSi/c56yBvyl+QeTeG6cefmf8o4zj94f/3yc1/p/S1/xm
/CBYX3H/WIzfBv4bbv8nVHpXzq+fP2be0OAP7PnDM6LXzTy18/z0huhN8Vkz
PxN9+JVZ9/P8ED8G/Bku1fwUPS362rdp/owfUu2ryedO5o3d5+OP9b80f+T9
Rl3A9QHa5x7xv/T1j+9Y8T+OH1nZnvXZ0+Kv6fuD3+S/xn/S72/OZMfww8yv
eBLrkvGP/CXV3+Dd5fmSdYSevwMvC/9OP78yL+nwv3yb5if4kX44/qTxKy37
/7vKz3Rhwfwz8mW3xx/F1zd1lRZ/YNdXnh5e/iXpH76+6MHRh39M9TuOC/26
63+sP6zLdf2A6tvHxi/j7+Of8euqv52V9dpaf9/X/86Knvwvoi+/WvVJ/MAO
ij/Y7qqPbaz0v48q1xl8Sj/7wvjZsG5qnOfRmfFfH/HHGeX/5kBG+YmPjJ8P
80Pj+AG9Iv5A3n/m/Rp/9fj74jdHfdX4iP9gwfH7Rkfo9nXiBP96Sp+In3bm
Wc1zNL/6p/hdU4e7r+rf8+/ty18Nv/ON6l/4jWccMXuLxg9/FD9ufNDuq/rA
y+KnfkH81Vce3+zSUR+Z8yF7/uSUvpq/a//tHsfPalv8rQb15cpPivfb/6Uf
i98WuW7G8euinQ348dX4Y8/B8xt/Jvkg9uefusr94n9p/Dfi5595WLOj5l+0
u3Uj+tWnxK+Cdbabtf4Fn6V+7/O5Ez/Khjrxn2l+Hv/dwnv5lOanzOs/EX/L
N2h+PKWPJ28gPrLNMVr/yXtldnHyGz6j90ud97Cw0Gj8TB4C+QhvVX0MXjTv
qSPneRdle/IwkiswaP+nht93VfxLztH6JH5Nr45/k+tXrPc2FW+qvz+bJtZv
8aNcH3/KD6i+9O3weTjuPVXfmvIf+JOqfT92cHw7zdcV23fEf/LFWl98QvxG
z47/qNcvWb+4YEQ/fVH8qsLjbLapPrxj5Qdaxu9l+2fHDxZ/WI/P/i51YfzF
XN/OvHGWXJXuEM0f87OFP+98qil/ButXblV9ekr/fY103WP+LP9e/4aab194
xgWff1+D/qW5XPoX9OHoTK0vhbdX69f69ildaGP+JrrSWtfT69fQjRbdt/hF
6MfhMVwjflb4V0Vnav4VulHmgeYX/WV0oehEx/Th6MLNj0L/PVafQdc55k9O
fQ3dt+s/J0b3yX6PED8P/Te6b/OrqOugQzV/b9+8v9F9+/2Hfpz3/zXiX6H/
Hhuf7hrdJ/s1/w9davhbA30qulN0qOYHohtlndL8xu3RhaITHdOHozM1vw/9
d9F9i98Y/l7RjRwh/h76cHSm5t/Zd+Wqe9j/7bvC3+Dz74Wlejs+1vfsUHxa
6v0P8uvL+dm3xf3/am1/tbY3L2Sj/AcX5NuCjws4/ixbRrb3utk6+Svbt4W/
wRkfbhnZ3nXVQb6I6kbL8g/Df0XH3652/1s0b3F+mcel9o/jb51f3/6yP/At
2r99VexvOvBtwc+lPr9G51e236L36tXyv7dvC3/r+Dsdv9vnqH8a783PSMcN
fvNPPpuW5/4nm5d/Qe3/4x/7ySd6hUuWDxCOfvth0nGX6zf/LPE9oo8YxdFv
b5OOG5x6ILy/68IDNG6dN/gjo+dG131kdN7g8+f+Cza/N9/z+tibij8gfIpj
pNMG/7O8D0/Lt/VBU9vb9wydOHjWd9qPjuyfv0/N95u1PXlav6M6Azh5xfif
7Zg6zGq3f5fm5c4/pt7C937av+f1rs88KnpvdN/3iw4cfH7cT1q7Pt/z3z+s
+J+fEr3Ye6QDB78u4+Xb8/29jKPBGV/fonE2uMelu2e8Cj7Xb1+/fGDGnwdK
f1r3X94LfHr/E/kXld+nv/9Vxr3uX/i10K+PyXgYnHEpvif4oJTfz7h3h4x7
j8RHJTj+KFdm3LtzxsPg/5pxKeNX+39n3bQ5J+PeDRkPgzOeZZ0Sn5RyfzKu
xPcEHxTwT2bcir7y88pvYtz5+xl34oMCvo/GzWdmPA1O/8P3BB8U8A/md5+Q
/TDeBn+xxpWMN8HxI6F/nprxbDl/jTvflPEoOP4p9NOfW9nfvfie4IMCXvR3
GVdH71BwxqWMX51PyXj2Yxn3Ru9TcI978UkBZ1y6MeNSfFDAGff+6Lr4H+Gj
EvwxGff+asa9L814GHz+3fs7HFDNA4fjT+u/0Y+P+Zu9utKf7zsy/kRfPtSv
oy8f0zdH/z0b039H392N6bvRnz9sRN+deks7pl9nv8wLrV/O/rsxfTv68zF9
O/rxCf12N6bf/nD048/96frtMi+0fpu/x/T96Mcn9O+zCf17N6Z/z/HPxvTv
6MvH9OHwtcb0//CJx/Tpyxt/8lnk/bP/yPgO35KMQwc4327/2f/y1P7hXR2n
fA9w7s/9qpww/C/OXqZ+fYLyW9geXu5B8ifP9yLt8/Aqh7Lsf3Fq/9SVd1R+
4fy7W+S+1D7ew+N72j08vvn3ecunpw57XOWzzfFfukzds86J7n8/OZON85vB
abf3q3ImhvfvhIn7t6D7l+NfnDj+xanjx6fg70aOv4w7Vzz+85apy+6ofEq2
/+n3d2Hp9J96f89bHNs//g2XxbdhOT4O3j/f93T+xXXBtwEfB3Dq+fDkXxsf
CPB6/H7X7P7xeSh4/BvwbXig8udOTV0e35qr4wMBXs9vdis+D+D4N+Db8JH4
OICjG+T6XxUfCHD8G54e3wZ8HOrze3LxfcAHAvz2+Dd8P/zfu+PjAI7/w2Xh
l+ADAY5/w1vj2/C78XEAPzPrQ/X4r3//1b7d/zbDx6E+/t3K+A8fiHJ80e2Q
/7wpPg7g+D+gu8cHAvy6+Dcwf99T+eHro7sr+VLxgQCn36H7uyY+D+A8926O
bwM+DuDJE2jhKeIDAf7+3Pc/Do/ilfF5AJ/yd5iqD6b+3YlHV84ffbv8P8v5
oR+Sf2rZf/xNO/mbFhx9u/w/C45+Xf6mBU/9Of6yxb+04OadonMHz/pHI//c
gme+pPFdn/+T+WYr/9yCf7rK1Sv+qAX/jejT5Y9acPTt8n8tOPp0+fOW+/Mk
8fbRudf393sz+fMWHH27/FcLjj5d/r2l/6NvZ93pAHTuwdGvy1+34Fkf6cTj
KeeHvv2c2n+4bI9+Xf63BV/Qx/0n/hRNfCkG/Yv1WPqN8b+M/0nygwb1DfxN
8DVZef8PL/3GOPw6fE9W3v+Ti6+J8fPjj0L/GNm+wddk5PxL/1h5/19L/W/r
4PhyfbrkXg/w+JM06BtW3n/vXzWyffE1Gbm+pX8Yf2n8TW7P+3Hl7e/TnBJ+
yEj7Kb4mI9cf3cDg+HP9cn+2jrWfBl+TketT+s3I+bXfCU/COPr7k+t87wbc
+Vd/FR04+Ei+UNk//g3wYlxf5v0Pb8DPR/OOnM+ZvIiW3Ajnz6M/QHewl57v
8Wvo8G0wv4F+T/3b65N/Uo3fSr5ywYv/Q67fBl0//BvwbTB/Gf8Hxlf2V8G/
AZ+sZflbTV2/DYyrMk7Bx6G+v/39eYLuz1T74fqsH7k+3B/qkPvo/ky1H3Tb
G0aOn3Edvg5bdf2m8m82ZD2Uda1NWh9FX1+/t/j0+nx0+ej0wb8c/T28XXT4
5fpW+s/vtujs3T6lT+rfz9HXsx909uDRRZTnu8ePzOf/MLr6pyl/Dn3+EeEF
hy9ccPT1XBH7r6HP5/nOeB88m5X5ufNT8bWnfTPeAUdfj64+esqCo8+Hd4xO
H/x3J9r3rtHnZ92m2S06fXDGz+ju0eGD835NTl3xiQBHfw8vHB0++G9r/XHh
NfX6Iv4i9Xuiz/et5wMLC67voXvAdyT5YeX4av+HW1p8SMCTC9jhK5L6atke
fxLan/V/zMe5vsnXK9uP5DMWHH+R5ITP8Bkp9y/+JGP+LLQ/2teuqv/gL1J0
q/EZAcefBF8SfErAT4u/CM9F88/wJ6HdfSk+JeDwptFt3T7Xc5X94z+C74jb
F7ovfEf+MT4k4Pg3oIshRxn8xvg/UKd9Z3wgwF1/dD41vFx8G6KXKfuHD8E8
GR8IcPIo/zK+DfipgDM+oT5if7A8Dzt00nleluPD/wFdj9vnlfFvgN9wRXwc
wDfk+fSBtK+T4wNRX/9/IMez+U58HMCpa9H+nhofCHCex7VvQ99+a77rwlLt
A9H7N6DbwscBHF/dw9N/d4kPRLm/tb9DyeMFx7+hje4KHwdw/B/wTbh3fCDA
p/LhpvhFtd8jz7f++YD+n+cX8xnw+fc1izeN1LefFf1/PT/q60vo99Hto+MH
R/9/dHjT4VOX46e9odu/Xf6L0v/PPH9Gv89+nA+J/p/2hQ8AOPVwdPvOf0f/
//7wsp8SHwDw7dH383z85+j8wdH3nxhdKjp/8N/M+O+YkfEf+n/mDX5+ou9H
14/OHzy86AZetP0z8A+p16X43Emubmm/6EXq9jO+/nFg9AH4flwv/vc7U9+9
Iv//7PiIgMv/o3V+9EnV+/lu9ETl+uD/8eDo5p0PjH8I7cPPv5/NfPJhuf43
xQcEnOf+e0fmD/iDnBTd3SHxCQGPrqHB9yN6h7I9/iG0i0PjIwK+R9Yl8QV5
b3xCwPFvwLchepGC4//A/cfPARz/Bp7f+CGA8++5//hAlPaZ/lT7NvTtq+bT
Mw7u+SvRpbT4NjhfnPke85918YEo7SfHi2+D86M9fzxE80d8m2gXed409fZ3
zfB9cPv5l/g7HBFdaPSiBce/Ad0QPg7gN6S/PSTtN+254PJ3aPB5AJ/yd3jV
BD/uRfEXUP24HP858Qdg/P9I8XfMT71Q/FR09/KfWQLHX4D+jc9A2X/+5v7h
IwC+c/wBeP6ui08AOP4C+ArgMwCOPwD6m9rPoPcXYHz6fY3P8A+I/2DxAwCf
f1+zyPrlGq1f8u/fHN0fPgLg5EVzX83/9X03/wR9AePPC+LjAY4/B9vj0wGO
Pwc4Ph3gF6f+96Hg34gPBzj8enwvXf/Gf4P9sx4CTh42uPVd9vXz+ge8NnB8
OOr7M84PWM66F+ub+HSU9pt1Kcbnvv4bxe82/xv/AcavJ8SHAPyY+AvQP7y+
hX+A9INL4PgP0H/wIQDHP+DrmR8dGx8BcPwHLsv4Fx8C8Lyfu6dmfmH/8O21
/0CZj4PjL8D8CZ8BcPwDOC/XR/EfODHzN3wIwPEXwFcAnwFw9FncP3Lowbmf
1IdPEP/3rvhvsL3b9zvjvwHufPnw4cr6d8bjZfvL4s9RfELi01Huf+2vMfC/
p7+A49MBTj0ZHB8O8PiClP3jswGOP8eY/vDK9D+u33fjwwE+lS+Nv8DjUj/C
ZwAcfwLGB7fEp6AcX/wFqE/iMwCOPwH9Y4P6F2fCvOR48WPwF8DXM/XEcnzU
4/ElOFT1Y9ZNqI/6+ZZ6XvuQ1PdS7ys4efefT3029dqC1/PNhaXah+DH87v4
Y6C7xCcDHH8NeAQPj88GOP4Y+GL8W3wywFn/e0+u7+nx2SjXJ/lP1Dl2Er+I
9+Xe8cXYsdIT3znbL+P3Z+W6/mF8NurtH0d9pMv7vuD4Y+CL8f/HJ6O0v/hr
4PuHzwY4uuTaN4PPtL/D2zKuc04ceHTpZf5i/c7O8SdgfohPAbj1O9YH0S6O
HeOfHTD3N6C+VvyCg+NfwPgFHwPwo+JPQLvGpwAcf4OdM78Jf7TgjI8/Gd+C
v9H87lfijzGWP0u7pX7VSB/BuJXnx/r4aIDjf1Gv3w78Xwo/b1fx2/AtYP+v
ik8G+Knxv2B7r1/gnwHu5wPrQ2V7rQ+tm/B3oD1tHdGH4X/A/OWB4s/XeRzU
mfvndxP/g5tSf7f/EPM9fA2op4LX/g6sL/bvb/wN8DWIH2DZv3NNr41PBfiU
PgZ/CnDW08v9j79FfV359P4V4JnPlO1r/X45jnL/6vf3Dg0+F7p/5fn6gPhY
lPYx4e9Q/A9Sv0s9r+DvCT/u7Ky/fDY+CnX7u6P0g0b5Mvgf4HuADwI467cb
R9Y/v5l1f3wR3P4/FP8JfCfyPC/Ht3/qU/hWXCT/B/wpal+K/v7xPPyv8Z24
tfJL6v0r3pL6Dj4W4HneNYyT8zws+JS/w5Q+En8Fr4OBXxx/hpoH9OSyPf4L
vP/xYQBfiH8E6z/4SIBr3XjJ85+sV7X4SmQ9q+D4NzA/x8cBnHrg3qlv4gNR
2l/WZ6gvrBG/F38HfH/t73D1hL6UuuStI/q0KX326vwbnAvX378p3LnC9t++
h/tfMI4eFX3qQ5UvfINyf/18/yfhzpf47ehR0aleq3wycoMfHX3po5QfbN/E
Ef/BUZy/x+pnxs8UflaVy1HWj2arxvO+GXs/T+FZP5mNjS+n8Dq3pNQXm9Xi
5AajI32U8oPpL6rvt6vFkxfQvSv89ncpn3B1/YvxWq9DA+f9sH+VP9zzV7T9
gren/5jnLNz851Vv//563tjU79uS39PAT3J+D/8enpDzeXjvxr+osX8RvKxN
lY9d75+n93bj/BzyuZM/1Dh/aKnmpXSe/1N3c53b268f2R59NzpT5+9YX+p8
J/HOBv2Pdb31GmeBw3tL/lHj/CPxwhrnQ9Ffyb1yvs/U8TGe8DgD/OM177Bx
flQZl4xsn9ymbi/5KIGHH0gudbdyvtNund/T4Jul2/b7DV04PkbOJ4nerdm/
9klaAFf/G/TPub78okXqIPur/2+WLvzP5A/BfGyX6LYPlf7RunD04uDw0l8R
Xfj++CQFv1y67WX5E6HvxscIvTh4dMPdp+WTBB6+SYMPkf0RlqKrsM8Q+J7p
d6+QDxK4deX4GIHze2dFF76v1qfOqNcNio8SOP3ifvIhAj87ug37DOn+NVui
y/b88NPSlaM3r9t3rwtHLw7O/s6M7vxQ1S/I79kW3bb9idBt2MdI97fBJ2mj
/I+S99i9MrrtvaQPPi+6CnyMoq8oOLrwPeyTFHxqfLna9+tP336AL4FvrvSy
C0ufkf9ZrYcc+lPWetNhfaPmc/Y8T/CaLzH0r9b+B/7P8HXmPjJXLTp/Y2r/
O1b11KH/Xr3eRZ2775/oQefPwdOXz6zme3dqPXPo76jjX/bxT11/Hf+Sj7+u
tw35n3W9fpgfhi/r/Pi+tPwG+bPq/g7yKaZ+v56PDv3x9fuL/v2p+8P+6/tz
x9j9WfL9qX0Rhv4I/9H546YqF/0HM+ejvzF617r+0R9fnWve62DBfy16WurX
xyof/aroXal7uP2cGL1rPT/sxx/wd8lJ9/zjjOhV0bG6/6FHZd3M65dXVbnp
dwzmn+SWo4P9hvhzfxo9LvqRjytfHb3tYnS4i8pP36/KLd9t8H78RpVL/jPN
5VrfPS162fCyB/4Kl1W55f84M3+eXPU3R6f7ZuWr/16Vm37/Zl/lp5N7Di/c
/Xtb9K71/Le/PuhpvxCd7RdUf0DvWvM3+/xzcs3r+kCf/4ye1jpb8PgWda+J
j8kvyL9Iviid/VHS0ZbwSTlA49dXxlfkK/IxAa/nDw/qvi3/DXxF8DF5iPxF
7p39xSelfYX8Uer51XMyfuvHFz+bv38tPiWeH74+vh/2IQE/J74be8onpZx/
fEHeJZ8TcPLhPhkfFfuzcD3WyaeknH/2l/3P7J+SXOnm2vigeP6Hn8kj43Py
evmrwGv7M/msgPN38EF+Eb4jvy0fE3DGn1fHJ8XzE/79b8vHpN6e+XXvgwI+
9X44oGr/+zdPXbl+0lnHahwda55P5f4fHPzvo5P9WnSyK++/17GujN+n8/uH
/ntRdLLPiU4W/L/Uxz/wB9Lxd+bPgFsHa/xT4X2fKX0Vfi/nRWfbVHzyAd54
/UbXZ+CPruszWJ+rj7/XwRq3jtXHZ53tCN7V65GD6zfQl9V4r2MdaT9d2s/I
/nsdq/H/Gh1r3t9j7adJ+ynnx3pw/Ck7+1Mq17xzfeaIOvd78HxVbvWgfka/
ts4VXLncQ//9Ord6kF+tXNNB/5g6P+WiD/pHnr9lfHWG3v+bsl/rcMvxZzvr
bFd7/sqFL3Uw8GvqXItB/gbroRu1TgrOfq3DBWd9NXXbzvXbw3R9PD6aur5T
7Wfq+Lfl/JlX+v041X7gQy7KBwQ89aguvoPNO+V/De8ovoKlDgy+R/w+9pAP
CDh+H/iAnC1/atpFfP+656u+g174T+Lj4foafhyXyKcD/Nz4hYzl1+H3gQ/I
c+WPjh9JfAFb+2PHf7K7b3xIPid+SepZ3Vj+ZvwFu/gKNhvkf03/Sf2rdX3t
3+L3EV/LWav6ZsaP3VHxKXmR9HHxDWnPlg8JePw3O/uAgMf/skt9stQrS/tM
v4jvZLeP6pPwQeNDP/Cfx+/DPiD1/u9ur4nPyFb5r0+tv7L+w/jV+Uh1rsuQ
P5D8kjY63db5JcnX6JKv0Tlfo87NfPY9fr4nv7GxThc8+eJt8sVb54tnfN8m
/7lz/rPqT0tuv8nPgPfQOD+DK7WyDrfkww51tsGTvzFL/kbj/I3t0ctaR1vw
6GWtowVP/liT/LHG+WPJLyr5ic4vSv5Lm/yXzvkv+Lfbxx08/Gx42Y3z4abq
q+Gnt9bxgk+NH9DFXikdLHjyT8nHHLQv9LTobK3/Qe8Lb835eFxX7o/z2cPP
ny1LJwuO3lU62AXw5A8WH1i3v/n3eYvxXZy5/kpue3jxM+fvRR820PmCPyR6
WuoCL1T/Sj5py/qo80mjf2is4wVPPnnJr3I+OXpcdLrOR0x+2yz5bY3z28IP
n22Xj0V9/RaWVvbJKPqBzj4U4PhJJH+uWzl/7paBDwY4+mjq6KfEx6LefuvA
ZwP8sPhlvFw+GuDhv88ukQ8FePLtZgfJZwKcut52+WCA41cR3fDM+d8bq/Hp
owbte6r+nvrsbPf4WBym53/ybYuPhfNtp8avybdvo2ttnG+Pn4V9LsA3TfAr
tH4z4M8lX6nUl52vxHVZWefb+38dIJ0uePKVWuuIwdEDoxN+ofpf/X7fc1Af
m5o/ouddks4XPPro4htlfyX4geiInc+EHjj52o3ztcPvb9DxOj/z+dHjHiqd
Lnj46x3+wc7nQ++LDtj5ZvB3nVMCjt52m3S45fxTD5HOdgEc/a51wHX72baI
jvcr6l/oidFlOX8O/e2d0RF/VO+Hqflx8usa/OGcX5f8S/wZB/Uj9LrW8YKH
H96gM3b+He+1H0hHDI6eN/mvrfNf0evm/dTtrvaV/MmuzrEd5At21gmDwzdZ
K58GcPwWkl/XOb8u+egtPhHOL4+/UHtjfB5+oOcz9Y9GPhTgtZ/EwsLNGl8k
H7LbJp+Gcn7xWwgvvHE+HvOf5JcO5ofxq27t8wCefD14443z9eLn0u0inwnw
H+L3cFXtAwGefPIWHwjnk++b8fet8Xl4tJ5fyRft8Hlwvijt5hj5SIBP8VvX
RM/Ic8U4vLpflQ4cnL+dYw6e/G3WNwc4ueHkahhnfpx87sH26I/JMTeOntE6
R3D0jHtL56jza5RTXnDa9co6x5K/XuoKxpOv3llHCR79M/WbwfP5HeJHOv8a
Pbh1+KV9RE8cX5zuExpfk3tdr2+snn8RfVS5v34+R1+ArqBzvuMPoxf8tnSE
4KdHz8f73/576PngQVgfgr4D33Dna6Pns86vvv/bF8PT6JzfS6528k87559O
8cvNT/XzmfuKD4Dx6NupDw7Gf3nua32jx+PrPPABqK/fAxv7AIDXudn/adB+
p+rH1C0vlA8A+BT/BT0+6/LGqZuSg+PrB2/xXPlcgKPXd44bePh07cHSEYPH
HxD+w6C+L37SgueX6J3RQXt+gZ45vovt2Zq/ur4PT9z3zzpkcPTMr5fOGRy9
cXwh2y2aX6M3lg55ARw9Mzpn83en9BP4gVwonxBw/D6iK2qcD4u/yKvjQ+Lx
Rd7rbXydBu93zgTfEPuvFr+QR899RB6t+lz8Q1p0sw8Wv4L92qcEPPrbDh8R
54dP8fPiz9YeKJ8IcPwe8IFwfYX1l+PjU+Hrl7pd18RnwvU7juv4FX0sij9k
+7X4SFg/xLzkbPlIgLOeznVz/Q+/iP8RH4n/rvrk5+IXgY+E+efL1fph8ako
7XtKvxP/soFOFRw9rnXg4Pz9vBH+//y7W9x1RZ1qaf+Ndarg0e8375MOFhw9
qnWq4PePHpV57sjxl/VP4++LHpvnrp+fr5H+wuNj9O5blZMJjp45vkzNGs2/
4j9ZdEFHq/7N9cWX4JnqX+hRyUm/XOODE6MXhYf231QfeFn0ouhI3f/xHyB3
xfnoU/ov60uMo6c/XDp78Cn+a/ydig7eOPPbPaSzB6/HF48bjC+n1s/hT5wZ
nb2fT/gl7CQfBXD6n3NUweNPW/iP52v9C1/6el2dT/FPbNZLhw3O+rl10uD4
WnwrvJLHa34bf8MOHfZZnl9P6PvwJ/3RU2ofiHL+eW/Ft6p5q94/dR7QwsKx
Gj8/Kn4Pp8YH4j6qn1G/o77yifhAgOMnYZ8JcPyFD4wPwY1av4x/XkOd6E9V
36r5FcXnoNw//AaemjrZsaovwYeyjwE46zqbR/RV9fxh6M+Nnto6a/D493Y/
Ix13ff3u01hnDv6i6K2ps7o+LH77wJ80/muddd7gfxBe9rnRqW9RfRs9+rOk
UwfPzy6hg3+P5qdT+tIp/Rl68K3SiRd8Qn+KPg3/nocqvxR9Wz2u6O8v+jXO
s9axDfRpDTo1cOtOX618UvRr6NasP4Uv8pHo0tYpv1S5NMm37Pl58CnQrb1C
+abo09ClHaz8UuXGzJxP+vE6VyX5mL1/s3J/GuePHqm61tuVL/rh8D3IQXX+
Kfq292Ve+Urlj6JPQ5d2lfJR4fugaztL+afKFRrkj6IXI3/qfsoX/XSdKzPI
P7Wu9Brlj/K+5HfOVD4q47Xk9gzyT5UrVHRq9f0vuUjNduWTwudCt7aofNPz
6tyf5p+VX/pfww94Yvr3MconLbmm0a3toXxTxn31t/Vp6MZ7Hds9w4s+fEw/
Xupf6MSNHzCCw1dUPojGf3fMlG/RGD99BEeXofyO0j8YryjfomzP/980grMe
q/yCcn3ot8o3WfX21N+Ur1K2p38qH6bx9sr/KLh9d8zf8bzQ+s+p7dGXK19l
1fuv8+H6HGJw+LDKpyk4fytfZ2Zc+TEFRx+u/Bjd3963xfm19nV5gvAp/cHq
8of//fpT9G/kS6KDA9+10rfdNZif1/q47w+uP3mSr4/uzePrWt+222D9o9bH
wZ/q/YHQv7278t/o21+tb1sz8Ic8s9LHsT715ILX+rZrW3Ru9fG5ft6PL2+K
vu0Z0bUdHJ0b+Eejj0MXZ373Vyt92z+UPEbwWh9HP+rbR61v++og/6XWxzH/
7t+v6NvQtZmfjT6O/Ep0cuC1vu2Owfy+1sfx73p/91r/9qMZOjjwWt+2dVBf
Rx9HPqTnp+jfbozuzevDI+/HpRq/x/2v4Oi/a913v3/4h/V97beHH1r3yx6H
nyT/81XvH/5P3S97nPV15WOU/bM+N8bfndo/6w9j80vWX+r7vvrjo/4sf7VV
H//qrv/48VOfqvuFtx+/f9Qv5O+p83tcVz+XVv/7/9H9T92fqevv9x46U/CD
0r+elnnna6NTBWf+eUA1ft234K9Urv2tqk/M9RBr187HJWs3z79fuRac+44O
0/656E9fnt9BhwqOfvVBWVdBxwpez7+e1KBTBX+9cuej0yw44xHGny+OjrWc
f/Sg0omW4zs3esnTqvFnP36BVysdbn/+2e8rap1rz3/JdZPOt+yf83pdzhMd
KnjtG3V35vt9fRO+1C9Hh/rR6FTBnXuf9ZWyPdvF97X5n9Gxgtfzzwc1W6NT
BWe//I7Xb+bz85eunV/Xl26ef59Y2hfjd3Sr+4ifs7rxY59fvFX+reKnD/Sr
0j809gcQP7XwVMHX1fy6gX5V/MvB+pr0VcwzutUe39T5af155vGb+AEDfab0
d8xjy+9Lv1fyNFd7/lPXT/q11v4FWn8Y5BdJf9egwwOXfo95UMGnrs/U9Z1q
P1PHP3X+U+3nwOr98YjudSP1C3Tb6LjB0U/Trsx/Rv9L/jF5yN4/8yt4Tivj
OxQduPc/i677vOi8R46/5AWvvP/HFh248YyvZ87vqnHyvfr6G3WfX8w6E3nI
I3hD3vLI9Wntb6zr06ADN878LTrn2crHf3fJQ/bxfSXrK7dHxz2Cd8HHrh/5
ZyO/f0vJMx5pPw15yCPnN0PHPXJ+rdf/1H6is39mwdGn/n7q1OhUweFX4ONF
3j046x3UpdCxgm+PPpU6curHBSfPvtRB0bkGp1+gW0XHCo4+lfqt81X2Ee+S
vHpw9KnywSvX95PRt+ID+Xnlw6BPvTLPsZ2jUwVH30qdGZ0rOPrUjakjo1MF
R99Kfd35clm36MinX1R+6/PRt6b9nxqda31/b28/U/v4lf0/Ju+vX8179qXR
uZb7G32qfPT69h996w5ZhzkSnWvw1C1nT0jdEh0rOPrUi2ufu4KHV9eRb78h
Oldw+NvUFbO+0LfPCf1q8nNmys8p+NT8Gv2h8mHK8aEvVP5NwcmfU75NuX7k
hb9nZPyDflD5xeX8yQPl+W5/b/JAlQ9acPSHys8peJ2XWfJzCo7+kOe7/bfm
39csKz+y4MknKnUn68fRDypfrudnRX+ofJ6C/2b0g0fX+WXl+JPP2yift2yP
vlD5Sj0/LvpC5R+W/aMvVP6R2vcdM+W7FDz5B63yD0r7UV1gwK+O/34n//3S
fqbG57Q7nr/osMGT/9wq/7kcH3nItE/rI5Kv2ipftfx+/ONn8o8v20/Vd5K/
OVP+5oA/yHVEhw1OXrL858vvo59WvlvBo7tulV9c9p/8mUb5M/35zfNTWuWn
lOsT/+lW+QQFR5+q/KJyf5L/M1P+T//7aVeMT9CxgqNPVX5R+X30rcrHKtvz
PFC+utp3z/t2+ybPnXZF3nu9/daZ8pHK9uSdKx+p4OhbaV8b9HxCn6p82/79
k3q+8qXK/kfqhwv19l8t96HWuZZ8xZnyFQuOvlX54SP8reH8Dn2q8rMKnvzW
Vvmtuj8LnfJhyva1H1PR7xc8+Wed8s8KzpXi+qFDBEe/SPtBxwiO/lD502V7
9IvKlynb1/rVki9Tru9UfQD9ofKJy/VLPlGZ/6Bj1PHPlF9ajh9emvJtCo4+
UflbBScvdKnOlyq/j35R+bkFR5+o/J+Cb6jrAoP1++SPyL+tn39OrU+w3aFp
n/bnn393y7QPdNDgnI/yuQsOH0z5IgWfqh/V79eSz1Nw9MvKdy7nj/6Z9uHn
W/KvGuXD+vhnyicpOPpm5ZcVHP2y8rcKnnziol9FBw2Ovln5NwUv+tQ6X6ic
f/IPG+Uflu3Rp6JLJY+8tK/US5Q/WrYfWZ8q7avWa5T8orI9+lTlFxXcvkfJ
lyrHR9648sdd326VT1a2R59Ku0CnWtpX6i7KRyrHl3zcVvm45ffRtxZda3Su
ZfvoU5UvV34/+dmN8rP7+z9RHzxhQr/qXEg/v9BP0v/Nr0P/yPgfHSS4dZPO
1x1Zn1wCRz9Z18f67dFH0r/RSYInP3qm/OiCo59UPlPB0T8qv7irj+/gopv0
8wd9pPIVC57zXVA+YMHRTyr/vODJ52qVz1Xw+KaU+27+LM8Fvo8U/wq+Ftuj
YwaP7rbsH50yOHmr4L4/6B7B0SGDJ9+0U75pwZOvXfbvfGL0y+Dmr9PulD9b
9p/82U75swXP9zL7R8cMnnzZ8vvJl230+6P61Q3RRTI+3KR8Y/SVjG/RWYIv
p75J/zH/d2R9fwkcfSX9C50l+Jejj2T+hE4SHH0lukp0luC1/uS7rf1Bp9Zf
0E8ekfkVebHgdR7rwoL5M+gr0VWiswRHP4kvDzpKcPLYyf9GRwzu++r8d/TF
4JeIv4u+uF6f6Ovv6IfB6U/l/kd/rHztgk+tf9X61VtadMjg6IuVf172j36Y
7e3vPcWvCJ+5U7552f+UfhV9ZZv6EjpLcPSZ9I+nRqcJjr4SXeUsOktw8owZ
X5wcnWY5vnl+3jLjWsYb4MyXqC+S1w2OPrPoMl8z12mCw6tDd+nn25XRV34m
9b8rorMEvzH6TNb13xmdZmk/Vb1rYanWYfb6X+ULFhz9MNcXPTA4+l/GT+iA
waNr65TvOri+PBfQ84Kj/4Xn4fxc6kXUp26f16vK/tkf1xWdMDj6YOXzavsB
P6i079ofcqhffVXGdUeP8JOTb1v2M6a/ZH6JDhP8auk2V84vvmaZ42c8A45+
E92m54/oM5X/XHDyOpVfXPZP3ie6TfJAwRkvKT+04Oh/ua7WT/i6HyL+NvpE
5b8WHH0v26Pzra9fn7uCThgc/a/yu8v20SWX/uP6EPpg8JXHN70v1FnVe35a
v8r5sz60TvnF6DuZv6DzBH9m5Xde9Gtl/+g7a3/v/vmCfvPozG/J0wXnfNFl
3i7/70l+RfSb78/88ynRcZbzT3vg+bMuOt2yva7b1eL3o8+t1+d7fIq/iO5M
+fBl+yl+yUnV+/vukncNDr9K+dwj/JahfhV9J7pO8qbBWW9EF7oYnWjdPsu6
4pL95eMrNkP3Sb2x3v6ulvqi2z/Pe57P6GjBWY9g/eAfo8MFH+GPLtT736VR
fnr5/T2iv0V3+97ocMEvir4WnfHLo7MFt270Qq1fTvFXyfNFV0o9Cxz9KO9v
dKTg1p9slL4Efez2rP+gk63vT193dPtEP8v6FTpa8C9Fn8r8HJ0q+Dujp7gi
dcyzo3MFn48PPrcMj2On6FjL/Z/Qr6JP3VK/H9X+dsv8dKiPqXmLu5Vv41vy
/7eM4Asrfgb6WOb33T3FrYMzbh/ie4r/pz94wLVPOfD6lm/jvNf8fpvCPx+8
veiqbR88bs/yPXJ8xWfonuL2ATN+/gTOe/RQvT9Xi5dxmsZnxreM4Nahg2+t
j3+A6/7N+B75/c79YwrX/ev4Xrn97jaiHxvPN1Q+abdQfQb5bIP6GHrwo8PL
d/9QftHAf0X5TTPnNx1W8fNfuXldePrgym/qnC+i/KnW+VPKX2qcv2Te+yB/
Srx65y+Zt+98JeUXNc4vUn5V4/wq5VM1zqdSPtPAX1T5VDPnUymfacDfN6/f
+V3Kn+qcr6F8p8b5Tsqfmjl/SvlbA/835U91zp/aJ/z8+feJm/N3aV/pCEt8
u31vkq5yOXpL8N1+8vnI8v4/+WxePkDbT+3/DdJVorcEf2/Wi+EH3j96TvCN
4VMxPjk+es5y/6SrfKD4N9Ztvj16TvA/zLjhFMYZ0XOCPz26SPL/0EuCf1O6
S/SY4OgmyYUmbxC8k+7zWdGDgqOv+EjGf5+PnhO81lc/OTm/zy34E6WL/N3o
Jcv9z3xpQ3gam6LHBH+LdJO/Ez0l+OXSfd4WPSh4PX/aJf4HY/rq3Rr0ouDX
RVd5bXSVe6o+QL577b/QX993ZzxKzsa+0XOCkyd4Y9Y30VvW+98a379bWvSc
4Bek3tll/rlr9JzgI/nbBc//XgJ3/5nCzZvx+ijX9caLX//j/zYuml9h3ti9
qjyPO2de9zU/ybzRE7T/Oo9n2+ILKr/26f2/v5pPXLJ4QuX3eOfMdTevv5Hb
lfNfvnflx9r7i3B8tV/m4PiXffxT1/90rbscp+N/veadrm953XSNjv8s1RXW
VH5ig/u75Ps79ft1Hu4li14f1e8v+fen7s9p2T/3x/vX/Vn2/Zma/9j3w/1H
+ewD/yPlszfoDcCVD97hZwqu/PSikwFXfnpHHha48sEb9Abl/FMf2iW8fes7
rQtALwCufPTw6Pvnn/LRO/QKvj+sE8Wnp+DKn8/479Haf8/bXw6fHxzfoqxr
Fr0AuPLXm72kP1T+ehOfm0H7JT/rUPHLVFfu0DOA41/0ivD+vb5mXcGXozcA
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
V+j6gCcHuYm+WO3zsR35y+YvsD3rjuipjXPdUocZ7J/85U3KJ2B78mGj3x7g
L6x00337nOJHo0c5qZ5HFHwn6d6cz1PmR9H1OL+j5n8O8x/n76/bFm/KOtQp
Wj/9c+lirpR/HPW7p0cXY38+61oyzyv9+w3SxWSeqPH/y9fOv0/enL/L8/fZ
mb9n3s48vhyfc1GOVv4j14/v/aIn8/VLXaL52+jxyv6l60LvBT7/7pbDAyrr
leAXpz76ofAHvxw9GTj1lZLPF70X+M+mPvP1rIP5+XBJxiX5znpDv/47xb+f
yn/k+iTHc9C+xb9aMv/qrdI1fVH6Vup734uuyf5rjOtfEd3RhdEjgZ8bXRPz
6us1P2V+lnlZk3la2Z52gX7mjOhVff7SJ/b8UelG0ZOCMz7ZsXqv8unrn6l7
zi6Ufyy6UXRe9t/g+uS6NNFnFfytmb/CO0WvWtpfzudh0e3tr/oi54su8Kjo
BY1zRubPlf4X3d4WrR9Kn9heLX4DeOb9I/4YOzQZ1zTXyb/YutcLpG8Ev1el
e+3vj3Wp5r+BR3fakXdrvM5/7Ot3U/qWwj/66fmQGfegG+uP37q0G6JXA4fX
cWl0aeFhF5z1kzPrdZTyfD5Uurzo68v5TfEvqW99JXUh9IDgR2R9I+saLXo8
cNZHsi7SovcDz4Uo/of2F5rS/1CfGsuHpL4l/63h/kf0QRzfyjkD03gb/cPG
6B6WlS81sv0SOPqF+1c5VH37QP+A7sH5UqxbnlDlVPXtE93hSdEtDOpL0T+g
e3C+1Clp31dG13CK2ifrFegWvqn8KPQP6B6cD0V+wNoqx6pvP+dE/1DnSPXP
/5of+tyiYwBn/E2O1Qe1PgRvazm6BfMXfi76B3KinA91RepdN1U5Vv37E/3D
ydE9OD+K+/2k6Bbeo/Fh4c9F97A+4xjwnM/s6ugW/H5E/1DnTPX111PTL58Y
XcP7tH58Suo6r6xyqPr6yE3RP9Q5Uz3/Bn0DuoZNWv+bymccyYcrx6d81oWf
V/5N8nCaOp+xn7+M5NeU4x/Jbynbo89Dl4dOD3wkf6df/1s5v6bsfyR/pty/
kfyZsv+R/J2y/5H8mYKP5POU3x/Jbyn4SH5PwUfyecr1H8mnGaxvKp+o7H8k
v6bgI/k1BR/J3ynXZyR/pxz/SP5O2X4kf6jge1X6vJduRqcHnmY/+n5SvvEA
n9pe6w+Nca2vjo7fal5D//6b2r/4QYP1W9UHOP6yf/EHB+c3tX+N7wbHp/nF
YP9Tx6f1wXt8/Ku7/uPHr/rfAJ+6f+K3DHDVvwfHP/X7/9H9T92fqes/pQ/i
34/1n4yful8PLw6dA7jWlwb+0Zp/DPQDqj8N9EHwM9bXPqDavoyvO48/0Efy
3jO/pok+Av2D86E4/m7k+D9e59p2H1d+VK3/fmrhGYJr/QYfuH79MeONx6Uu
Y/0D+gjGgc6HeleuD89l6x/QR+TfDfKjpu6P6j/47JTzP716Lzx6oA+i/awf
aT/kI7DudqbuH++1L+T3z9Dvq77XHa32I34X47tyfFP52cqH75y/o3z45u3K
11E+ebuofB7lt3fO31F+e3c/5eson7zbQ/k86OM+El3cOuXn4L/E9X/Ayvk4
5LN3n9b6gvLZu+3Kz1F+fdHJgZ9Rjc/u13l9BH0curiDxc9GX0dOjvNxlP/e
/bPye5T/3h2j/Bz6R/LrO+f7mJ90pvJ7Phx9HDk8zt9BX5f1+dkrla+Dfg7d
3CuUz4M+Dl2c83eo29Jvr1G+TtonvrDdJcrnQf9D/3D+GrlqzF+cr8Z6DfgX
xV9C/8P+7Y+8Nvoh8E8pX43n1QHV9r3/3unRO7C989Ooxxdc+WjwRXT+5ffj
D6fj6+f3tH+d/6D9H1AdX+/fRv2C/Ts/Df3QU6rr3/Oz0P/o+ur+7Rlebdl+
0P51fQftH/wC5ZPk+re6/uX4oz9rnhz868pXy/WZ6fqU+5frM9P1KXj0Z+X6
f0r5atRtdfwFn/KHEj9osP41NX8QP6p9g/KlxA8a5FNJH1R0FuDSZ3TOhxI/
qrlc+VXiR7Ve/xM/bKAvF7+sc/1a/Ool65fEn52Zfyr+Vef6ovhXzeeUHyX+
2Mz5VuKfDfKrxL9rvX4r/l1znPKlpF9oHiz/IvHjOudLiT/amX8pflOpF4CL
3zVzfpB9tZ0PJH7TzPlC0qfNzJ+XPqjo3MDF75o5f0j8rgF/WPy2QT6R+HEz
t1/x+2dXKv9nan4r/tggf0j8sZnzf8R/G7Q/8ecG+UPiDw7ygzy/O0njc+ln
Zs4XEr9v5vwg8Zdb5weJPzDgV2p9vPuy8s1ol7UPcX//pL9rHyT/JOmf2oco
n2xqfqv1r7XoiNz+aJfnK19N/J4BP1n6huRB9M9H8dc3h7/e64fq9bGiAyrt
t14fG+SfjdRXSvseWd8txyd+3mD9XvywZr3y0aQPaq9Rvpr4AQP+n9bP2ws1
PpnSB4l/spa/y/Wr9a1LJ0g/I31h+13lT4l/052i9UPxbzrzk8XPik605x+K
/9Y5H0v6IPzdy/WX/mNm/Yr4PUXHAS5+T9GBuH2N1R/EbxroO8SfLDoPcOnr
1kZfV+6f+FcDfZD4V4P5lfQPnfUb4t+0j1f+lfTP7Y3KL5qq/4p/1Dk/af5d
+EftWuUXib/XPFv5SuJHFh0auPRj7fHSd0sf1D1Y+UTiN7VnKT9J/KaB/lf8
rO5vla8kfle7n/KTxI9uD1H+kfSXbfSXZXvxz7rjlH80VZ+SPqa5S/lI0n/n
PvXrl9LfdmuUXyb+xmD9WfyKQb7ZyPpAaX8j/NGyvfRz3cHyX5A+qnF+2VT9
V/yKmfPNxK8Z5K+JPzR4/4r/XXRA4OIfN85PE7+s6IDAxb/qBvlotT6o6ITA
rQ9yvo78Cwb5WPIv6M5R/o78Hbpr5S8rf4iSww0+sj60BC5/DPJMy/byR2jW
KX9H/g3tovKB5P8Af6Lg8sdIfb7P75E/RvMm5fPIH6RjnQFc/hXdZeIXyL+i
u035PPIH6c5Uvo/0/+0vKr9M+v/uaOXLWJ/wEuVnyV+hcz6Q/CU658vIXwJ/
xnJ88hfoTle+jfwP2oOVbyP/hPZ45dfIX6JzPo38JQb8WflrtPHXKPuX/0N7
ufJpaO/MG5w/I3+NogMDF/9v4M8tfvyAPyX9Qef8O+ljZ86XG1mfXQIXf7C5
Qflz4l9GZ9wfv/il3f7KV5M+KPqTvr4vfUr0Q/37Vf4EA3+iEX/Igou/2zqf
TvrRzvl20ic0L1L+3FS+lvTvrfOFxK9snV8kfuWy84XEf+2cbyR+b3eU8ouk
z2rN35Y+qDlE+UPyh+huU36R+OGd9V9T6+fS726OfrfMj+WfkDpF3/6kj2/e
qXw/6UeKjsXbRz8yyP+Tfi/rUOP+eb+lfD/5iwz4z9LfdFcof0z6m0G+34j+
u+Dyp+jOU31f/gPNNumHpF/qnB8n/dLM+W9eX/f6s/R5zcXKd5N/S+d8OOm/
Oue/Sf81yFcc4W+U9jmlD5J/xUAfJP+KooOp22fx15jtp/wo+XPMzM+Ufwn8
ioLLv2SQbyT/n/iP9e8/+Yt031L+kfxFuv2Vb+T1/Uu1vi//hkF+mPwbig7L
1491AuurtP7bHKp8Jfl3NPa/kH9Hc6vyg+SPNHP+kPw1ZvYHkb/GQP8s/5LN
8S8pz8ep/A7rXswPl76j6GjApc9ddj6b9KGD/DX5AxWdTLm/tT6o6GDApZ/p
rE+Sv0Pn/DbpO4oOyuc/lq8l/TF5fAWf4p/J/2iQ/yT9U3O96lPSBw3ym+Rf
UXRSPn90M86Pk7646HCMc0b3Ur6c9GUj9dnen3XMXwhdzcr6/6JfH+SbST/d
PEL5ZSP8vwXv/6/rnLNBfQrd0xnOLwvOcXcr558VfZDzteRvtpm/waf4idL/
d3cpX0v+M539W6byt6RvH+RjSd++UOuYBv42zUblZ8kfrdtb+V7yR+vQEYHn
Z/GfG9w/64O2SB8kf5vO/jzyt+nMT8dPzd/CuW9Lvn9T+AEZ7x6Q5+YBen6q
Lj/QD0/hG2re4kCfgp8219f6qyNqXuogPwi+p3ywy/73qXmR5RtcvMnuXcJH
8hfb1eIj+fbNanHxUhvzG6bwkfzpcn+fL/wM4eL9lu/V4iP5jmX/24LD83T+
EPUj+XyX/Y/kP7erxTdVdZnig15+Px1llD+9f/oLdQvnx45sv1Sf32D9q5zf
CP+3We32I/zuDnyEH122H+E3l+1H+Mvl+o7wu8v+R/jLZf8j6yc6/8H6wOD4
xP9VfXjAHy/3b4T/Xn5/hD/eePv1E9svj2w/wo8uxzfCjxY/ZcD/Lvsf4XeX
7Uf43eX6jfDjB/Nv8d/L9iv3Kz59/vBY/4G/6JwetY9me+WL2G9/Ts0b67y9
6raD7cU7GWw/tX+NKwb8IfKHx/JRp46P92NT5xiv+vhXd33Hjx8/rDq32NuP
35+NNS9qgE/tf2r7qes7df2yftM+rPru+yd5X/X4o38+nxjdM+NcP//Q9ZKP
sW/0vuBnRFf87ox/PX7apdZtd/CtwW+O7jn5b+1i9NDgV0VXnf2X4wT/Rq0r
HvjrPSC6Wu6D62eXRde8MetyzrdGtxseREueGbh04d27ohcHf2OtO+/M7/zF
Wtc98O/7ueiOyXfz+B9defLxZt+QP650zd0XoncG/7VaN98dGz09+GnRVef3
O4+fXlXrnvM+6Ncv31Hrurs3R+9d39/HanzYP5+3RbfNeXv8SN4f+THkAYLz
fn9i1Q8G45vuHVU779s3fMyl9JP3qn/Q7s9MP/D619PTrmnnz1D7pl/U/aTv
H7RH2vElar+0S9rpLWqf70m/+Xz6kfmltFva8bvVfulXf1f1s75/Jdewbat+
1Pef09Nuacenqf0md7CjnV6n9kl/OCb9aJP6zxvSbvF/eIPa78b0K/rZJvWv
b6Tf0I/uUP+h3Z+RfuD69FvSrmnnb1H7JneHfvJh9Q/W7z9X9YO+/Z+bdo2/
w7lq39Sbtlb+Bj0+NT/m7+eNjN8Xa176wH8j96M9MP/OuHgvg/2rbjvAVTcb
HP8NWVdAFzVyfl09zuhxeFvbsh/jC+KdGj8t68roWgbb/+TTLe6a/RhHl4eu
zDh+Qe/L7xh/era7JPsxrrrlsH6S/3+//DvjqqsOcP4/dUvj8DZ/kG/nC/9e
eKOsy3n8YN2K9aXwQe+MPuOj4buC/07NC20/lfUIcHiTf5P6NHxK8F3DS4U3
Yn7Wb4SX+cCs7+yY9R5d3476vPOxnxLeOTyPm7PeAj41/p1/b1uE9/iVig98
J3yK5l/Dr4CvCi7dxexj4UOBvzC818OyvuT3/4k1b7U5WetXB2W96RNZH2K9
CPy6mhc88JdlPYl8lj/Lepa2b2hHbj/frXU77UfUPnIhl8idcfti3eKDaSe7
qX08sF7X69asfP+L/5bvP/q4+jnZt098rXdLO3T7+2Hu67dzn31/aVcHpp3d
6PaV+/78tIOzdf9H5kel/R0v3cl2tT/azeFpR24/56VdPDXt5Fi1j7rusUO3
pPZFu6Eduf2w7pl22P2p2s9U/Ze//e/ADxcv1fibwsvAt8k427Ef42vDC2H9
xzi8CfgfxvHLYz/G63b37AEOr6ueH/b4eTXvY4CvCW8TX4iR69vodwqObmqn
7Mf4d8IrQT9snP9/Z/6d8V8N7wXek/HUnRr+nXH0Hnz/RfSO4NJNdm+Tv81U
feZe0dXl/dS9IHzruv2ct3hQ+Pm3yF9Kur0OPR/4M2rdZ/e18CnBb6h1pa31
pfDrr8y8AD0nOHlO6JvQO4EfFd3oodHf+fmGbhF+KXxTcOliWz9ff7PWTbZ+
/qDL/Hz4k/8rfErwX6p1o4PnC3lW1JePEb+VPDH4n5eGDwr+xZo3371Q95f7
xn30/aNd/Y+0M/sncV+b3Gff35H6XWl/1n3crPb1iNzX3XKfX6D7y317Zu7j
J3T/8n5qv5Z29ja1L+VOzHx/P1vzZhu3v3VpVy9LO3P7Em93wD8iL4F2slnt
44Kal9ydpfbBfUe/vEH3v15/+277arWfqfXD54eXf2i+za//ZnQPrNs6f3av
mvffoQco12difWWkfrsEflF0H9RJtsl/gb+z7tuiNwGXrqF7W/iu5fpF9/sX
4afDVwdva13FYPzxR9FFRGfWwTcB317rOrpbtX5Ov4Bf5+fD39W6lg6+AviJ
ue7oL/6brv9rtH51jNaf4A3xfWT4RODomtaHv/aB8NnAd3r5XJf5jvAP4COA
7yhfLNdfP1Xlmv6whQ8FDm/qw+Evw6cCJy/zoOgPdo8eAfx94W0xfvD9e1l4
VReEP2R+DXyxrfin6vkh3ufg/s2/u0X4vc+s+GJ3mvfcHRK+CjjrfhtG1uen
1g/3Tb+9Nf340eq/9Av6yYnqHyPrI0vg6DrWpx9tUf/5g/Tbc9OPt6j//kKt
q+7cf2te6+MG80fxUmbmpzwq/fLU9NP7qH/al8z370U1L6h1/xOvsz1L/eO4
6ArR1aI3BL8zuugfRp/3kuj1wG8I75Q64vny97AuyfV9eK3ro6+E7wr+pfgC
oN/8fvSc4I8Jr7aun/fXX7zX9vHhw5bjC693p+gL4fuCfzO8a3xtfP2n1ree
V+sKWvSQ5f5M8FPQVaPTP0bPH547F+c59Bk9f+Bd/Uyeg7+u5x+6KPwTHqrn
E2eCPsXPR55b8E89voC3tRV+q55P4kUOnm88t+D3e/wBb47n1Do9n9ZIt9Do
+XZq2u1VacfnqP2i+3112qnbJ/1i4ap5P3H/+GytOy56ZF9f+sn7V+YvtmP8
cXSxtOPnqP1+u9b1dnuq/V+Qdk079/VFt0s7HrTflddvF8Cn+FPb4zvQ5dv8
+zW1r8Ts8PhNgD8p7493RX/0S/LnZb1gXf7/B7R+wJHuGn6pnx//VPseNPcN
Hxj8CfF1ODv8x6/IP7irfScG79/ttW9Dh58DuHRVjfOz3iH+zMniv8D3Jv9g
r+i5wI+N78vfR3/569Fjgj8yujHqM74+8+/ti18Nf/qN8id/dnRr8E/ho4Jf
VOvmBvXR50aXhq7Kz4cLat3e4Plifp7z5WmPm0f4QVk3nO2edniY2t+u8iX1
9YEXu0/aidsHflE/SjvbWe1LupnB9Sl+HI+et6NHq/2gq3197vOLdX/J3eYb
PyHwW6PrDX9gwC+c4oegK35e/GvwswGvx2+3DNbH636ztfgRlfYZXTX+O6+N
3hrc/cL9g/rhHmnnPj/xpgft9++kG7A/P+36wrRzn98Fde7EYPxOu0ef6fbP
fdme++Tjf17tG9T4+o/wd8r9Y31X96kc/8dr36Pudb7+uW91O+7v3xR/dYTf
X/CX1LqCAc7/f0X+nd+frH+wPvaJ6DnApUsbtM86T4P+3+vTybsjX+8t0aOA
b6h1d4Pry3boM9+q7fldjsO/P8XPNX/Q73/0oOhP7Z8GH7f+7vUFu/3k85Hl
/X/y2bx4QMUz7I+fb+uH4efybf9er/vbv2YKN6/d/sa0e3i9rJOAj+j7C+5x
vetXzJc3iEe72u1dN3P9i/1uGtn/e7T9E7T9kp6bHp/5verxydT21q/8Vd7D
3v/pI/v3uHKDtjev3euf8Hv5vnYk/wje7lbh5rWb30b/ol/tJf0x+AfVD8Gn
+LsPFS/y4fkbvOY/7tZ5/rafeGNj/Eh4kfbH3lW8Lvgo5fpW/MnHljop+E3i
jSUfphz/V8XLgq8FXvMnWb/r/XcuE28LHiQ4vLM8hwf8SPPG4JOB17kn3yx8
NfCa/7im8CDBa/7k9wftp+Y/XtvCgwSv+ZPUP/rxPbyx14c3Bg8SvOZP/mgG
jxK85j9uLTma4DV/8u7CJwOHN/bW8MbgSYLX/Mc7Sh2nvr+P1furf//UuUB3
0A8H9et8Bu8Xr/v7+SBeylL97/v1Tbb3/av/vnD549W/n97evG+vzz5T826/
/8079/ioft9RH+n9+3T8iz7+qevnuqyP3+NO97+p49e8Y8n50OYV+f5N/b7n
Nd7/1PXX9V3y9eV5+sQ8X+Hp6vgz/tihgecLDt/11Pw7eLzg8HPJ4YKnW+//
ySV3nud1jfe8dnLKwM0b53kIjl8Az1eet2X/eZ46hwz81DzP/yjneXWe9/X9
+ceWceGmPO/BeV/w/oDnC35dnnfblJMFTt5W8bfL8xYcfq5z2sDpP/B6X5vn
PTjP8+/n+X53nvfl/PK+uCz74X0CDj+X5+vv5nkLfmaex4xvTs3zGvz9eZ7/
cZ7v5HyBw8+Fl/uRPG/r63NH0THxvK7b/90t/+6aPO/B103wd78vXqX9qU9Y
kdfG585Z/GQKb93+KObNfSd8OnDz1uCzge8q3pr9t+BfPji8OvtHw5/cKp8S
cPiX8C4fqHxi63r8/G3Ci7PPBThXCl6b/SXhT35MPnLgfy9e3r8pX928No//
f0W8ucPk/wG/El7lecovNi/O+ePwK+FVXiF/dbe7QzQ/XBTvG544+Cbxxp+a
fw9uXrbHx+Z9O5/0BvG2nY9h3rn5H+aNX6t8ZfPSXR85Tbxs5xssrMj75vPj
5594284X4V+C71rx0Xv+N/iG7K++//cp/jGn53jBzft2/+Jvtn+A8mMvEO8b
Pji4eePOt4Wfa59itd/Cy4Pnq+tT+vXx8g82Lxuebmk/ed48RD66Pn98Y9bJ
/8O8cJ53dfu5q7VPMTi+d0fIRxj8y+Jlw9MF53kFrzf+PG19fP9kn+iF+vjG
x+/wto+Vj3K5PnkeMf9fl+cVuPi7hccLDj/3T+UzDW5e+HXyl35Jnfsw4Gfi
6/aXyqEAt27V8wv4myfKJ7Fuf9cs37SiT/KPjz+8Pnib9meGf/n18PKODV8P
HN7fZfKpBI8/YYOPpPVZ25ULYn/7o8SLg4cJTi5EyYkI3w98Y3h5W+QDCw5/
E97mCeEDgh8T3p19NMHh3cHLhKcJ/pvhzR0tn1FweHm0H/tXfky8vCtG/M2d
MwJu3rXzeVfmdfO5c/Ys8bLrnNeyjrwMXvPNi39KmZ+wP/DLxDuPv17BTxDv
2vUv87rhe4Obl+38P/PK/fyD322fX3COh/oxxwt+V3jdbA/fG/zK/M328T8s
+IvE67b/5V7ihcMDB6c/tspJAf+ieNv3zvMA3LxrcnjAb8zzBl7vO/M8Aud5
U/Ny+/YlXvnSOapPmFcNTxd8j/T3w9P/d8nzAHxD+jvj803KJ4LfW3i9r5k/
j8B53sAj53kE/lnxyt1+rszz4DN5PlyR50U5vjxPPpDny8l53oDT3+n/PA/A
42cV3kmfIwQu/i5+x2V78/pcP35V1i2OHlm/gJcLLxS+Lji8NXid8DzB8ZPF
Z87+sjuuyFvq+YEL4kW9Q/n28D/hfcIDBYc39RD5TIPDD7XPLfhR4j3B8wQ/
Nbyq4m+n58/V4lVdLX+s+fc1y/Ce1si/F34o749LlD9oXhU8UHD416w72T/r
MPG24XGX9iveqNenaA9vkU8g+MXhbcKz9vrCVP2R7cjR8f0ld+nz8gkHNy8V
vio4/Oudw+tMjnXBzRv1+j680Vvlc1bf326Z+1fzRXt/tL3lIwc+5a9lXqjz
V+CX4iP6lPTX8vufq3lx/wxfLji8N+dggcMvhVfq9QX4od9Xzgc4/NKjleMB
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
jZBfUvPT8esR98H4qdZXx/+n9TPRDxgS/YAh4b8fHP89cRnEd+H96fQ1ZE/4
/4eE/39I+P+HhP9/cPprsjv9K9kT/YVBvzH6C0OivzA4/QXZE/2JwelPKK7+
+Pzmnl+rjVtZ/u7R8XeLH9Xp6/w54nLUT6n85mPCb14SfvMh4Tcvjt+ccS2j
r1ecvpnwGwl//Drhjx8df7zw0I4fXXGvsx9fn2J0+gaBvzT87ln8XfMj4Rcf
Hb94Aa6C8Vv9pdPX0fxI+NfHhH+9JPzrg+NfPxK4Cuovan45/TvxBST89qGb
bfjtR8dvr3Ot42/X/HD6JfuA66D+heaP458nLsLohxWnHyZcQqI/VxL9uZLo
p8W8NPppJdFPK4l+Wnl8/VHhA3v9R+I2jH5dSfTrSqJfVxL9upLo9xWn38e4
HvlX9yXx913E1Rn/U9wq4RcOXmHy90r/GPy5G9krv+3o+G2rvuLo9BXFO5/w
/68df33lX18n/Ouj4xfX/tXx20pf2enrKJ/U6bPI3+D4eau+2+j03cjvSf0u
jZfjh678y6PjX34r4rrkP76siRf2/MQfRNyX+q4aP6ffcEsz/r3+wHmI+5I/
X3Flxw/PuDLjb1UfaXT6SNtr2XH6OlrfHb/y1cC1EN+S8asGrubx9QeL0x9U
XA08HhvZFfdz+rlVf29I9B3Xib5jSfQdi9N3/EPE9Yif+ds27ub0L0enfxn6
YUafUf2f6PuNib5fcfp+xBVRP7vFPfX6xer/RD9xSPQTS6KfWJx+ovbfTj9Q
/Z/oS45OX5K4Juofal1M+PtLwt8/Ov5+4ZacvnbVN77Z6RvrSZy+jnAVTt+E
uA3qdxC3wfWv6teNTr+u8ooVp3/W5lP2+gV3Andl9AWK0xf4WNN/vT45cWPE
t6hd8zw5oQ8zOn0Y9b/TP9H8dvoEFS9bnP5f1Y8bnX6c+tfpK1T9g+L0D8SX
8PbH128vTj9bfBWJvlMXR5Zd+t9OX0dxRacfo/51+gpVP7HLo5e96u8Vp7+n
9cPpQ7wFcW3q25OfnPriGb5A/ev0m05E3Jv6Q9Jndvo6jKszPqu4q9OXrPqE
60SfMOLqjM8eD9wJ8Sfb9/KNN2+vF5+qf8v+dOAuiH9BXHZzIfArVd++kKdD
du3vbwcPiOx63h+pcdnzgV+5tcWldOdb9Y905c8AvuVH6/MJZ0F8ye/W/miv
F8f341rgbl6F+Lb650LwOMiu/ZPTr8fzDWcgvq337j/VfjkG8et4/vrcZyD+
rfcm0b8bEv27tdO/a/kQev23qi87OH3Zqku6dvqkej6nX3crcD1GX25w+nJq
v9NXI66H+rdVP3Vw+qlqv9OHE1+E028jfwX1yebj7lP7H0Jcn/qtik86fbWq
77V2+l6q3+n7kjeP+AD1j9Mn0/vj9HFld/qqwhU4/eSMvyLL/1/dfumVD5eH
1ofhKnvr79K5bxof2Ffz9gfG9Wv+3Wk//8JH1kO9/qDqv/Mv/9dJ//Dhnwu/
HP1zmV37f+mLcP8j++XGvsf2d/bt9RO7157+b+/+1Y88vNa1td++o99fA7va
c8JTrv+tP/iJB9fPrVdnP2Hebp9vf9I/2+c7vPbrAxpvzK8nlUfe/42P7n76
sOGwD2yv7fOtNvPjfH/MF80jzh9TfiP7r9ff31XnwW/Mj//Aflha/6GW1+85
T2Vvx3u1ug7jr/G+ot6X45/dX/NhP+bJ0vHJ2qf+uMz0j+bLRZhHi/u3zqfD
6jzj/MrWD/1fNj6u/ML6k/n9ovrc8ovttX3HlHWt5xDbv9lr+7fjf+ywXZ+O
6uymfLRP5a6r9dCe1Z+Vz/o36793Pnjvp37p5O+Nun7t7//psb9/3eS/O9T5
cffTXv/vz3z7v4nvUm1vafvvwM6Hj/rGS8ul3xlv+dc3vuDdL5rOB+dce8lL
jvzmkVP8cPvvsO/7lS+c+cnV/xn3/7PTH3zhxd8d//nzPvrWL//ihH8z7dsk
9mh/1r57X/SSv/rhs15WtuN0bLe+vbi2B+3s1re6Lo18/09I7M//4JPPvPbK
w4Ynv/J9P/WB5z8wvms7jlH/m9B/+9B/r/rW264qL/qhOj8eGT+0ecqfPfTG
yf/xW/V5vl7H8TSMH8alG5/ocPN+XV7HTf3D8cvK31DHRb/5OMbnQLVfe83/
+/mbHdrPqffVOHF8zP03GL9R42S+j7a85o3mEefP82r9zzD1H1HHXfOA41/3
E6PGmeObjd/S919Xxl/1+/d/6gU/e/93fqRs36PJf4T9QXd+zPYPe3y/N679
2/4/etiux5P/tbW/rLTrcGfXOt21X8/l9tfv2/bPUPsn7o/93fAbpn9q++s6
dG/0L97fclrzHYjzw8B2Yn7Y/Un9PtV+Oaq037H717/z2Hy8T9+VsvD74sYP
P/z+Hl60X5f9nnq/36nfN74fx7343af9l7d9q15/qDxze43y2fNn/ad95xWL
9s99+/l+cv3Ozn/RoWb9rPMuyn8I7yfXpWsx/9v29+ub3guUL3srf3SUv3r+
/Yz2sX+/VMdHOKyLMT567/D8UX/dv0T9A94fvXdoX/Sf5j3eg6Ft/wPjJfV6
Eca/XU9WK75f6q8DZn9yVVt+cw3KH6jfA+wDov1P2n5fYp+o74zsmt/7zfxW
ftaNdV6pv2W/HOX3o3y2v73j3M/+9XPPeULZvl/3j9vv8RGsv6Cd6H/hBeM9
DLvWjbvruHH9UEvc/K3rSXlWXWe4vmTlM/+N+u0KY8++r9xfc31B/6zYP9hf
7XJ/pXmlecb5dc5jP5/Z/WCdp1djfmreHVnnIeef2lXPUd335731ud6z0P/F
+XGgzlv12/z8vX/UPOT8M+evFcenHffJzt+z/dn73a4Hq1U9x0T/w7+xoX8j
u397ntP7c4y7/4b3R/kVy2fzb3stO7oP6/8x+H/oP5K/7WWtH26Kr9b5VteB
dT1nhX0fvsvz33ffPp07rqjnjnoOCrvOz+on9/6e87j3z/yv/vtb388d9362
f7/amOff1fPfwOd/7Oe23Z+pz3cJxr9tX78/quV3XPm6fvCcHPfXenxcc53w
Gc+p56/nmPNX5r/RelDXhzo+wSu6fkcdzw/Wfc09db+D8kXlVI/smf9b8wJ+
gKl8nXfwU0R5rh8cP9V/jqlf8xZ+oCK72vts49/Q86of2X/GPxb9r79XP7L/
6nkp4n/3ov+z+AD3L7Rn/aPfv8m8v9ovfq05x9zn1s9u/a3f3aL1rX6PMT6P
rKtfoNCuetv15/vez60/Wn7pUuMhXf1YX2N//fq7f/PR/z62+7nfft+j/920
c3GzDvXrC883OF91/gedn38TcZKl5bP7vwPnrjtQf1Ye/j+zvjy8br/L+snL
n/CS8x/977adM7/+8Uf/u2Pn7Sb+4urP2q/v5SWIc8j+Xrw3l6J/L0f/X8H+
/wDiajUO0t7f+wfM/r3z77jyS/0P+L7z/Mjvd/SP8T9GefN9X/z8mZ3n+2vM
+Rzf72ific+F3exvwn485u0JKG/2X2E/b37/Fe03548ojw4x8/vg+3fAvr89
x/b76/n7x7l3s4b/gXc8RP9o1/5r8F11/gd3f+6L6D/F+r/L9T+7P+rfsP6s
/+lXYP8y7qT9vuyKt2v/eW9936N8fZ8ZB0L/RfPYf3rfPo592NLyjDsxvpLV
r/fRxc/r92XXfV+uR1zs63W9Wdr+6n8auY+X/UTsG4+dP99FXEvrgRvfszG+
2fvB71unHwy/C5+PfkH5C2WHf13njKx9m6Xtb/v98OofnfJn4R8f5M+SHf71
Nb+v2fNn/Ufcjtufqf0btJ/je44Z3w+3/snOrnrc/k88Mtz/wV6qfWD9Bzt+
rV/93pHnF/rd5Y839ohzmf4Z6f+i353nO+y/y13m+RW3kj9ddqyvQ11fw57F
P3TeAP4m5ifjUnofZZf/3Z3vjT3GT//W/ukA9k9HwK/J90f7Fpzf4vk1rzQu
NyJ+w/drf/J+0Y7v54bfT/o95Q+VXXHfD7V+1BifFX5oB76iG1/NZ4e/aMej
/77I33JV6wdw5bv2Zesb47601/6JuBPtij+1cZCu/aW2v+vfLP7BuA/xAdn+
gHEh+te2/rm/272qvh9/jPPF1n7jDvw4Yc/aL/8+zpdhx7pu4ttT3EjzWfaL
6nyXf+IU7A+Bn1rPx/fot5z6T99T539s/76fv5k9w78uxf+q3+7E+r3sfOqf
P/u+HZ/4N/Tc8ksy/sl5afAx4ceYx99+Wvivrv5z4ddj/Ix+VeKL5B/QOr4G
vop+Q+Jzsu+T+qftt8lu/D8b2ef99h3+EH7B5fc/1PrN/Iry+rfDl8v/7+Kz
eq9d/LGebwbl+V2H8+nxOJ88B+cT+rXpn468vvqdug74B/q16R+v6++OW3/b
/rLrS7xfjO9m47u93rmruMzLZ/Gffv9ey++48ln8Q/1yRRsHiPafiHXlWPif
Mv8Cx03j0Zaf9uXd9wdxP57PGdej/8G8P6ul5RlXvBv+C35f+f1lXILfv+z9
PYC4A/EB2fnvXDwfz3dcP7k+D4iLKA4S99/yr+/UfcDA9TniHzXuEXGQajf4
M/p/LP7cxO87/ypx0EvrN/GpsrS8ie9F/+rfwE9O/Yv3l/7j7P4mfnnQ/Uv/
tokfh92sP/TfM/4az2/wV1371T72L/zrI59/3m8/PT/3bVwfsvszrsH1IytP
vz/Xb+O/iPZh/XT4cXv/rH+qf3pH/umLUB77gw4fx+cj/gTn+5Hn+6XjM4+T
69avYuIH9v3I+m+P5e3+Yh5HMdm1r7oG319z/81e7///q/31fLs7j1NYPH41
LnJMjeNP49fumx4Y6d/S9/qPzPeTfmf6v4B/G5x/1OHz58/10/iY81ncH/iE
zn9v6o/xy9Z3+gWIf+a+J/OfsX+BbxouwfjS70D/Gf2SjA9k+HTF0zQuX4J/
mn5vjh/iryP9Oya+F/Vjf9Xln2Trb1Y/n5/7U/jXev2ypDz9mvQPba9xvikv
x/vZzs/Ij0B5v/7Q78LxMefXrP6N7IrbOHzEsvZNfh2e37L28/1y8R/3/vHc
z/vz+2niPwXrWLSv7a/++wf8YKH/TvsDl1+J+g3+gOfiqf+z9mXrg/CHiF8t
Lp+dH7L2M642//2Y/PKMbwmvIvs9iG/N9+s0/+W/SeLTdv4fgN/exMfs/GJc
gOvT9fDrMz52CuICX0V8jHE/17/Ms0H5weUntv3p90fqMRcfcesD445ufrv4
i/ZVzOPB83d5PLKb+HfYgV/t/NPIn+n8h9n+JeMfAD57ID4b+NchwQ935y/6
rZh/Rb8X/Y8mvhl2438Le4ZPNP65wucnjlh24x91/dOd741/Me5v4othV9zB
8cfoudz6Q7+fyX9eJ/nPa5f/TL8a4w81v7Qk+eG2/LxfeXo+Pf98PwS+aZ3g
m2z9jKsQ/0O7wX8Vi/+a9YtP95dftPUrTval7T/Y+rPvcza/5BdFfLTrv8dv
X7Z/nPzG9L/S78z9FXEN8/l/vn/kF5af2vmn3f6Ufm36l/F8Gz4f5x/3r/Tr
078tPH7lJyr0T5v8bbTv0PHRiNOVpXbu283zMz86a/9mqd3kdw9L7Wb/HO0z
+eFhN/npfH5bf2Y3+fnovy4/NuyGn4Xju3LfL5N/urg81y1z/mT+K8eH+T3Z
/TcYP+bf7rH9vn0mfzjqz9pv8s9t+fnzdf5+6ze8v8nvDLvhZ8H98/FFwzbG
vqHd5E9F/Wb/3cVXVJ7xOZOf6+rfsH60u+tfww8QdpOfHfbtteM3CrvhDwq7
4Y8Ku+EXCvuhrs+GX2qQ3fDrRf8a/qSwG36naL/hbwq74W9a3P+G3wrl0++r
XX9M/izKd/nDmX9w09q7/N/F/kWTH7y4fSZ/ues/XV38+4AZH8NfEHbDvzTV
P58/GXb6fa7F+dvwk+D+fn0z/IJsP/NDw27yl8MO/0Oh/zzzH2b8H/TL8/yd
7R8Nv9nQ9n/H78r5a/cHhp8rKx/PZ/jFov2GPyzshj9s6p95/rWwG34113+F
53/Djxp2w58zxR/n85en+usPcEZhN/nzYb9+Pv877JovZxt8q+GfCbvas0f+
jw3tujp8LvjD4nxq+GGLsQ/kj6XfvfKjdfgM8J915dW/8/GBjh9upB3x5Shv
8j/CbvL3MT87fmjcv+P/xfvb8RcvxgcZ/PXi58vKG/6roW2///4afiz4hzt+
r6G1d/xdnD8F83vx8xv+Moxfx7/bxddd/k/G72H4KYi/sPPP8GPZ8U3wB937
ZfiP8Xz+fKP6LzP1Z/fP3l/DjxL3z/g9gG+x7cM4hN3wO4Xd8MNE+ww/TJTP
zn+G36obv2eb84PhZwt7e99jO/+e4W/r5t9lZv7qfQJ/Xdi57zLxYZxbpvHN
yq/wMx9f9PVn5TmvTfyc+Z+Lyy9r//T9N/gEWx75RR0+gX4/rn9Z+zO72d9E
/4O/weKPde7i+RH8Dh1+FvwfJeH/2LTXvP3g9+j8dwY/1eHbhP/k94n7evJz
gH+jOPy0+o/+KfBvlA6/3PKTFOLL5/fdU//o/u24Tnbzfkb/I/+ws2fjk9mz
9ht8Wtwf8enOft3sujvVf6jl9feuf7P+07+t/6jNb3D+gdH5B9p9YeBMUL7r
/2gf8l8NvqPDF7L9g/OvIL+qML+K50ae7zJ+EeSnmPjVdG40+MId4AvDDv6N
XfJvqFk6lzh+x/k836X47w7/yPbtZO2T3475ecBnFJe/pvWN+fWyu/cD+cld
/fR7d/Gp1r/R6XMYfpgoj/ynLr6M/O4uP1z4fuDDo37OK+Jz+F5yf855z/35
Mv5Yz68D/1qnf2P4H6I8+GG6/IsVfubnr7eD/6YQHwV+m0L8IPh/CvNzwF9T
iH8y6/eq7T+/f3lvsj/juczsn5lfMK0f8JtQX0vtce838WfMj/libZ/Oycy/
yZ4P8U27PyVPAO3Eacpu+AWdvZB/EN/HdcLfMjj+FuAku/qBsw274acJe4Zv
MPkJaF/wA3b85sif3mH+NPB1Hb83+E+K4T8pmAd2fizMHwi75reutIOfpOs/
4AO7+pe9n5NflXbwr/TfD5zr6R8x+Q9RPuN3y+rP/EcmPwXt8/o4Zn+9kj3D
34A/p5C/Evyf3fuD/IyR+OFsfw/+gEL+APp9mJ8D/G13/gX+tjD/vTZE+Xfd
+ZP9M48fmfxCPN/y/SR/i9lfRf2Iz7j82uLyKxGf6fp/Gf6kK7+R3fDrRHnE
fzt+U8SnOvw/8q+795/7OoPfLg6/DHyAy18rWB/CjnNPh180+99sf4n+9/49
s/+M8sZ/tDblO3ymOR9H/5+Cc+t8fka3/47yZv+dnQ+68XH5hdtrd76M+5vz
T9jvafyGlt/Axrdvwb7W5N+TX2px/F3+Ccc/nbUP+SPd97uNG1t+g+L4Dfj8
ht+hOH4H1k//3bzfdHo+8q+a/PbR5bcP8Fvy/Ib8+Y7fm35Twx8QP84/n/AH
FOIk2L8Jf4LtP97f6NOW1exP/v1Zyv/q5u+832d5+RYfbvOTbP1Z+aX9u5r9
yfX/DH9bYftV3vjHopv26j/I6se+r8tfytZH7hvd+uP6z/DPRvuhn2POzxH/
6/jfDX8Aynv8M/B1Lr9tdPldPDeY/P6DPh9ifxs4Efaf+o3nhyy+Z/gLu+d3
+X2Gf9E9X4cvMPyd3fxy5VfwCxn/kP1+636JfrR9v/S9dfrRvw6/jNHPPuj4
p/CRarfRh4hu4PNl+qLZ+pvlJ+j5nT7G5ShPfQb6xdh++bVwfkH7J78I87dN
fnXc/2L0L/kt6Bfh/KVfzbXf5Udn85N+Obd/cf4d4U1c/nH2fdW53/F3ZPsn
+hW4v1/6/XH70/b81vPXZPi2peu38y8RF5TV7+yu/Py+anl+Cv3jBj9I/3nY
jf+wLLUb/z7OT4G/H+fzAwIfORIfaeI/Dj+X4ZPs+Dp8GHkjaYffopt/FV+9
dvhq5BUb/NTU76b9lh9F/rf3GDvmVZc/BPyay18ZHf7MvH9d/zv/KvCVpW1v
nj9m+Aem96PlB+zib8DHFp5Pgc808ZXY93b+ze018l86/JJ5/pXsyB/o/Ldm
f4r2ef+k0QfB+Hb767CrpfPPYfff3fuP8wPa/zj6pfPng7Ab/0XYs/wG/b69
7/fpI87zMxdnT/Jbu/HP7g/c3pr5dwdZf9iRfzoafilbPvu+Ib9noD3jR9Hf
J89H++L7H2r92fqmmlz91G3k/DH6b2E3/OPx/lGXkfmT2+sB8p9H/YY/fVxa
3ug7hN3w64dd/nDH3599vxE3KSZ/jvNjGv82f67Lb9LwtjiKaX1D/tya+XPI
H+z5iZP9oeHvif294SeK+rP8AMM/FOUNPxrODx0/lem//v0Af67Td9vr+xt2
9ouJP9jy6f76ENvHfmP+jf7SrU84V9n94wHz/iK/YcX8BuQXdvuL7PmQv9Lh
k5f1X3Y+8esv/C/d/tfgS6bn3+P5keWhf7fh/irDzxp+5Chv8DVhN/gani/p
/4ny+i64/BCD/wm7nmceB2fxf4v73+APwm7w8bF+GnzvILvhbw67wV/Qf0x8
RZQ3+B8+H/ErUd7gS7r3az6OYPGLzn/T9b/J7xlwf/1s+Hx7LL9ieZP/4uI/
XfnMbvJvuvXnYOs3+RkOv9DhHxA/6PSxoc9U5vN7O3xP3N/gz0pb3usLGXzT
2Lavw29H+UPFz5r8pKl/5vn3GX9gfg7nF/Nzwm7yi6L/TP5QlDf5Q4O7P/Xd
Tf7Uur1/pw8X9Rt972h/xt+Y1c9xY/8YfdmwZ9/XrP4Vfsz6ZNd/nV+oo2ee
f8XnN/kxU/vm81+ivMl/6eZn66ef4rsm/wfP5/3TRv9g4P1d/xp9hrAbfQY3
vm79tXaDr4z+M/jeKJ/hUw1+NMqb/JihrX/KT2B8LTufGHxslF+an4b8nCn+
NJ8f0c0/Xdk+g6/e6/iGmfaU32k+v2mv92d+RLwfJv9kss/nf0X9S+Nfzj8/
fy7q4/POTr+o469M+BsP+v70i87zG3blV0vtiM86fkbb/0Zf251PBz6fwTdk
5aP9Bv8Q7TP4Dfjvu/h3lDf4jChv8IPj0vJG/66LT4M/IvoP+L+102d3/ELo
P8OfM+2LGR8CvqHjnwD+q+MX5L7YxecdfwZ4Ibr++THMT86vzP9s9A3Drud2
/ELb6+3B78b10egzRv1XYdzpnzL6wWE3+qzd/G/7zcYPuv7Xfi7hhyrt7+36
193/B1x/Z8/ml+EXn/zHiX9+2fN19rg/+Js7//Ae6++eH/iatdOHS/jnyJ8+
tPfv+OGjfsPPHfUb/vewG32SsBv9B9d+x/82OP63ZfPz8Pg94yf0+zM+Av2M
jt9t6fi779tB7h+6+h1/WuafP9T5m+GzMH86/ljGFZ1/3/EPZf2H73/Hj5v5
5zN8islfiv43+RfxfTL4t2n8qn4b9Pfw/B3+Leo3+Myo3+ALo36D/4v+y/D3
2fOZ/l9s5/nd8NPFz4Z24NKIL0b/dfnXwOd2+ZvIH+rwicDfdv2X2f/JPP5q
aMtP/GHUFzT6cfH8Jn7W+bddfn4bV+zz0018lP7HOJczf1TzyfkPDP4k7p+t
f0b/K8qb9Wtx/ZndfJ+y+ldL7Wb/T///oPJO/1M18v061P0XcRPz/B8H//wm
fybqJ27G8LdQHyPKG32XKJ89n9EPwf7T668YfSrcP/aHjj+lOP4U6Mt094c+
YIc/zMpDX63jR8nml8Yv4e9g+dVSO/HvjM9AH6/7Phzq/YnbIL8Hzk8d/1rW
/9Cf7fJTs/bBv9Txy5nv24b9y3Oes59t7MRp79XOfTTtyG/p7M4/bvInuvi3
i3/Mx9Wn/mf/MH5k+A/CbvL7w647zePcbP7/VH6evyDshp8g+s/wE8T4Gf6G
qJ/rJuNTiC8MjC8AvzAY/ouo3sRfR+gTx/3hn98x8QFbP/AtnX8rK5/Z+f6Y
+LT1P5v8dcSHu/z7Ln5MHKrsOB93+APDP7B27WN8W7+Hvnjc3+Q/Rfll+c9d
/ljUb/K7uucnTrKt3+9/1BL3frft3fv8kcHh/1esYI/1m/zFaH/mn8ny40z+
/57nj2t/pt9g+BEW94/JXzzY/u/s2fcti88Yfomufrc/gH5Fdz42+NKwzz9X
ir8Pu8FfH2r9K9lNfo9bf7vyxI3w/J/ln4A/suIwvu982PLbDDwfba/BHzOQ
Pwb8N4X8N+D/6fzz4Lfp8BOt/2zyE8fzJftD/eV8HMz6H6O88f/DP9j5n6N+
4/+N5zPx5aGt38df2n/3+eWIv3b6s/O4sKl+4tLI34Lvc5c/bM4/Zen948HM
+wf/62D8HwedH6X/Az/a4vqz80n2fFn95vy2eH1Bfn1hfj1xOzyfLuU32eP4
hh38AR2+KSufnc+W3d/7d038ZlhqB/5qz+XVfPiZFtvvafg9v9ftf5mXyfU5
s0N/duD6a/Kfu+d3dpMf3T2/Rox2E5/u7GcbO5/bjK/lpzX56/b5Df9BOj+Q
3xP2LP/N5F9xftB/EvWb/Oqwm/zWxc8H/cDOfwF9u+78Dn3Pbv8PXp4uvxm8
Sl1+gfrDnV80Pnb9n88/7MY3+X7Z+rUvcPj+tH2NPVt/svKu/V1+ffZ9i/qz
99vkh4bd8BMMqJ/778XPb/gLFve/4TcoSf9E/xp8aLQf+UXd+rPX7xfLL8X/
6z0lvhj48jXfb+S3DSa/LdYtvp/AlQ58v9k/zL/K1i/kl3XnYz1/W24aP85r
zj/ykxn957A7/4DDp1yO8ad/HfkJnf8Y+GrnP92086OPjzl+iax8Zof+iPEP
hD5Gdz6Gvky3/+W8Ij4L/ORdftXFmLfcv7fP1a/P2fwBLnZg+5Gf0s0f4OKy
/Zkdn/k42J7zd3r/eIsLtvnLWfucPdsfZ+8X2u/8d+n+2a0/hxrfNPi/g61/
NW/v8NWM/9n9MfxGG85/xL+HeXxFh0/sns/x17T8Jkd1/qesvMHnRXmDf+3w
IRk+2PHbmfyKoW1fh2/f4/jn/bua/cnxjwZfT/+p3R8e6vw1+Qdxf4Ovjfub
/Jmwq13z63TePpPfUGTP9ofZ+8dzI7+fWNcHtk9+PfD7RnmeG/n9BL6j4+cE
vrJ7/4Cf7s6n89/Vqf2ZHetDF18z+JRufLmOLB1/znvuPw/1/TP+w2595Tp9
iPcPu/E/Rv18buL3Db4q7PI/I74S9qx92fff4FuHpP3WbvA3w2r2J9fXZbvd
+SDZ/wwO/7Ls+xDfN/Rzt7536xfwCdY/oyvtnNc/6P1jlv+B8i7+a+3Z+GX7
k6X1u/k5/9z6ye0GP7fYf5Ktz2Z9RP90+NCwn4JzEeOj2fNl+L+svMFXLr5/
9n0x36+B5dt+7+t3dhNfzMY3yht86x7nh1+/9X+uvMkviPub/UVh++bvs9Q/
4ttv4sPEdzB/A/V3+GTG19L32z7ffP5H1P9/AUjlD7M=
   "], $CellContext`vertices0$$ = {{1., -1., -1., 1.}, {
   1., -0.29289321881345254`, -1., 1.}, {-1., 1., -1., 
   1.}, {-0.29289321881345254`, 1., -1., 1.}, {1., -1., 1., 1.}, {
   1., -0.29289321881345254`, 1., 1.}, {-1., 1., 1., 
   1.}, {-0.29289321881345254`, 1., 1., 1.}}, $CellContext`l0$$ = 
   1, $CellContext`V100$$ = 0.043752329739829225`, $CellContext`L$$ = 
   11.427962875879341`, $CellContext`relativeOn$$ = 
   False, $CellContext`infty$$ = False, $CellContext`opacity$$ = 
   1, $CellContext`boxed$$ = 
   True, $CellContext`planeChoice$$, $CellContext`n1$$ = 
   1, $CellContext`n2$$ = 0, $CellContext`n3$$ = 0, $CellContext`cutOn$$ = 
   False, $CellContext`drawCutPlane$$ = False, $CellContext`cutPosition$$ = 
   0.1, $CellContext`previewNum$$ = 15, $CellContext`Num$$ = 
   100, $CellContext`tMin$$ = 0.0001, $CellContext`t$$ = 
   80, $CellContext`\[Alpha]1$$ = 3.2, $CellContext`\[Beta]1$$ = 
   2.1, $CellContext`\[CapitalDelta]100posz$$ = 
   0, $CellContext`\[CapitalDelta]100posx$$ = 
   0, $CellContext`\[CapitalDelta]100negx$$ = 
   0, $CellContext`\[CapitalDelta]100posy$$ = 
   0, $CellContext`\[CapitalDelta]100negy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]posz$$ = 
   0, $CellContext`\[CapitalDelta]\[Alpha]z$$ = 
   0, $CellContext`\[CapitalDelta]\[Alpha]negyposx$$ = 
   0, $CellContext`\[CapitalDelta]\[Alpha]negynegx$$ = 
   0, $CellContext`\[CapitalDelta]\[Alpha]negxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]posy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negx$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negz$$ = 
   0, $CellContext`\[CapitalDelta]\[Alpha]posxposy$$ = 
   0, $CellContext`\[Gamma]1$$ = 
   4, $CellContext`\[CapitalDelta]\[Beta]posx$$ = 0, $CellContext`mult100$$ = 
   1, $CellContext`mult\[Alpha]$$ = 1, $CellContext`mult\[Beta]$$ = 
   1, $CellContext`mult\[Gamma]$$ = 1, $CellContext`ds$$ = {
   1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0.5, 2, 2, 2, 2, 2, 2, 2, 
    2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
     2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2}, $CellContext`ds1$$ = CompressedData["
1:eJxTTMoPSmVkYGDwYoCBD/bE0jae0/6ydr23X+MT8aJq2284LWs8wXV55SOC
8mes69PmLfgGp//9B4H7GOKk0jCfHDsQfNX20Ud7XLTBoagzn+V+EKQtZRZE
f/z4Bicfl3no4uj60MXR6c83Ft84OukjTnqhtcbFt71fCdIGoR+KD556h5OP
yzx0cXR96OLoNAB/QT43
   "], $CellContext`tiltAngles$$ = CompressedData["
1:eJxTTMoPymNiYGDwAmIQPQpGATUBAL3xAgE=
   "], $CellContext`normals$$ = CompressedData["
1:eJx1kGEKgDAIha2xg3SdfnaEDlD3Z4xqMOnjoQ/E6dOnczvv41rNbP+s2I/n
g7+XaRFnCbfARi6KnwnlyDNH6IwoNpltosn9VdfrqMOabJeSeFqf2up5A3K8
icfa6zn+d7y5B3VKwLNHb1+Eo56jJ5471cTT2qxXz3+R4wyPtddzeh/uQZ0a
8OzR+1ThqOdoiR94Ad3pjOg=
   "], $CellContext`tiltedNormals$$ = CompressedData["
1:eJx1kGEKgDAIha2xg3SdfnaEDlD3Z4xqMOnjoQ/E6dOnczvv41rNbP+s2I/n
g7+XaRFnCbfARi6KnwnlyDNH6IwoNpltosn9VdfrqMOabJeSeFqf2up5A3K8
icfa6zn+d7y5B3VKwLNHb1+Eo56jJ5471cTT2qxXz3+R4wyPtddzeh/uQZ0a
8OzR+1ThqOdoiR94Ad3pjOg=
   "], $CellContext`calcTilt$$ = Hold[
    If[
     Not[$CellContext`infty$$], $CellContext`allNormals$$ = 
      Join[$CellContext`tiltedNormals$$, 
        Complement[$CellContext`normals$$, $CellContext`tiltedNormals$$, 
         SameTest -> (Chop[
            Norm[# - #2]] == 0& )]]; $CellContext`ds1$$ = 
      Join[$CellContext`ds$$, 
        Table[
        20000000000, {$CellContext`i, 1, Length[$CellContext`allNormals$$] - 
          Length[$CellContext`normals$$]}]]; $CellContext`pts0$$ = 
      MapThread[#2 (#/
         Norm[#])& , {$CellContext`allNormals$$, $CellContext`ds1$$}]; \
$CellContext`planes0$$ = MapThread[Append[-#, 
         Dot[#, #2]]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; \
$CellContext`nodes0$$ = Union[
        Map[Append[#, 1]& , 
         Quiet[
          Cases[
           Map[LinearSolve[
             (If[Det[#] != 0, #, 0 #]& )[
              Map[Most, #]], -Map[Last, #]]& , 
            Subsets[$CellContext`planes0$$, {3}]], 
           Blank[List]]]]]; $CellContext`vertices0$$ = DeleteDuplicates[
        Select[$CellContext`nodes0$$, Chop[
           Min[
            Dot[$CellContext`planes0$$, #]]] >= 0& ], Chop[
          Norm[# - #2]] == 0& ]; $CellContext`pts0$$ = Table[
        Most[
         Part[$CellContext`vertices0$$, 
          Part[
           Ordering[
            Dot[$CellContext`vertices0$$, 
             Part[$CellContext`planes0$$, $CellContext`i]], 1], 
           1]]], {$CellContext`i, 1, 
         Length[$CellContext`planes0$$]}]; $CellContext`ds1$$ = 
      MapThread[
       Dot[#, #2]/
        Norm[#]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; 
     Null, $CellContext`tiltedNormals$$ = $CellContext`normals$$; \
$CellContext`allNormals$$ = $CellContext`normals$$; $CellContext`ds1$$ = \
$CellContext`ds$$; Null]], $CellContext`calcSection$$ = 
   Hold[$CellContext`timePolygon2D$$ = {}; $CellContext`n$$ = 
     Normalize[$CellContext`n$$]; If[
      And[
      Part[$CellContext`n$$, 1] != 0, Part[$CellContext`n$$, 2] != 0, 
       Part[$CellContext`n$$, 3] != 0], $CellContext`projX$$ = 
      Normalize[{0, 0, 1} - 
        Dot[{0, 0, 1}, $CellContext`n$$] $CellContext`n$$], 
      If[
       Or[Abs[
          Part[$CellContext`n$$, 1]] == 1, Part[$CellContext`n$$, 3] != 
        0], $CellContext`projX$$ = 
        Normalize[{0, 1, 0} - 
          Dot[{0, 1, 0}, $CellContext`n$$] $CellContext`n$$]; 
       Null, $CellContext`projX$$ = 
        Normalize[{1, 0, 0} - 
          Dot[{1, 0, 0}, $CellContext`n$$] $CellContext`n$$]; Null]]; If[Total[
        Cross[$CellContext`n$$, $CellContext`projX$$]] < 
      0, $CellContext`projY$$ = 
      Cross[$CellContext`projX$$, $CellContext`n$$], $CellContext`projY$$ = 
      Cross[$CellContext`n$$, $CellContext`projX$$]]; \
$CellContext`timeGrid1$$ = 
     Range[$CellContext`tMin$$, $CellContext`t$$, ($CellContext`t$$ - \
$CellContext`tMin$$)/
       ControlActive[$CellContext`previewNum$$, $CellContext`Num$$]]; \
$CellContext`textX$$ = 1; $CellContext`textY$$ = 
     1; $CellContext`timeStepLines$$ = Append[
       Range[$CellContext`tMin$$, $CellContext`t$$, $CellContext`timeStep$$], \
$CellContext`t$$]; $CellContext`timingTest$$ = {}; 
    If[$CellContext`constantVelocity$$, 
      Module[{$CellContext`i$, $CellContext`poly$}, $CellContext`polygons$$ = \
{}; $CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
         Length[$CellContext`timeGrid1$$]; $CellContext`polygons2D$$ = {}; \
$CellContext`Llist$$ = {}; $CellContext`timingTest$$ = {}; While[
          
          And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ >= 
           1], $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
             $CellContext`pts1[False, $CellContext`L$$, 
              
              Part[$CellContext`timeGrid1$$, $CellContext`i$], \
$CellContext`allNormals$$], 
             If[$CellContext`cutPosition$$ == 0, 
               0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
          AppendTo[$CellContext`polygons2D$$, 
            ($CellContext`polygon3D[
             Map[If[
                Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                And[
                Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                 0], {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
              Part[
               #["vertices"], 
               #["face"]]], 
             #["colors"]]& )[$CellContext`poly$]]; 
          AppendTo[$CellContext`polygons$$, 
            ($CellContext`polygon3D[
             Map[$CellContext`verticeTransform2$$[
               $CellContext`verticeTransform1$$[#]]& , If[
                Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                #["vertices"], 
                #["face"]]], 
             #["colors"]]& )[$CellContext`poly$]]; Decrement[$CellContext`i$]; 
          Null]; If[
         Last[$CellContext`polygons$$] == {}, 
          AppendTo[$CellContext`timeStepLines$$, 
            
            Part[$CellContext`timeGrid1$$, $CellContext`i$ + 
             2]]; $CellContext`timeStepLines$$ = Sort[
             
             Select[$CellContext`timeStepLines$$, # >= 
              Part[$CellContext`timeGrid1$$, $CellContext`i$ + 2]& ]]; Null]; 
        Null]; Module[{$CellContext`i$, $CellContext`poly$}, \
$CellContext`timeStepLines2D$$ = {}; $CellContext`timeStepLines3D$$ = {}; \
$CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
         Length[$CellContext`timeStepLines$$] - 
          1; $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
           $CellContext`pts1[False, $CellContext`L$$, 
            
            Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
             1], $CellContext`allNormals$$], 
           If[$CellContext`cutPosition$$ == 0, 
             0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
        AppendTo[$CellContext`timeStepLines2D$$, 
          ($CellContext`polygon3D[
           Map[If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
              And[
              Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
               0], {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
            Part[
             #["vertices"], 
             #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; 
        AppendTo[$CellContext`timeStepLines3D$$, 
          ($CellContext`polygon3D[
           Map[$CellContext`verticeTransform2$$[
             $CellContext`verticeTransform1$$[#]]& , If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
              #["vertices"], 
              #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; While[
          
          And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ > 
           1], $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
             $CellContext`pts1[False, $CellContext`L$$, 
              
              Part[$CellContext`timeStepLines$$, $CellContext`i$], \
$CellContext`allNormals$$], 
             If[$CellContext`cutPosition$$ == 0, 
               0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
          AppendTo[$CellContext`timeStepLines2D$$, 
            ($CellContext`polygon[
             Map[If[
                Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                And[
                Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                 0], {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
              Part[
               #["vertices"], 
               #["face"]]], 
             ConstantArray[0, 
              Length[
               #["colors"]]]]& )[$CellContext`poly$]]; 
          AppendTo[$CellContext`timeStepLines3D$$, 
             ($CellContext`polygon[
              Map[$CellContext`verticeTransform2$$[
                $CellContext`verticeTransform1$$[#]]& , If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                 #["vertices"], 
                 #["face"]]], 
              ConstantArray[0, 
               Length[
                #["colors"]]]]& )[$CellContext`poly$]] 
           Decrement[$CellContext`i$]; 
          Null]; $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
           $CellContext`pts1[False, $CellContext`L$$, 
            Part[$CellContext`timeStepLines$$, 1], $CellContext`allNormals$$],
            If[$CellContext`cutPosition$$ == 0, 
             0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
        AppendTo[$CellContext`timeStepLines2D$$, 
          ($CellContext`polygon3D[
           Map[If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
              And[
              Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
               0], {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
            Part[
             #["vertices"], 
             #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; 
        AppendTo[$CellContext`timeStepLines3D$$, 
          ($CellContext`polygon3D[
           Map[$CellContext`verticeTransform2$$[
             $CellContext`verticeTransform1$$[#]]& , If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
              #["vertices"], 
              #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]]; Null, 
      Module[{$CellContext`i$, $CellContext`poly$, \
$CellContext`tempVelocity$, $CellContext`tempL$}, $CellContext`polygons$$ = \
{}; $CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
         Length[$CellContext`timeGrid1$$]; $CellContext`polygons2D$$ = {}; \
$CellContext`Llist$$ = {}; $CellContext`timingTest$$ = {}; While[
           And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ >= 1], 
           Quiet[$CellContext`tempVelocity$ = 
             NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                 Part[$CellContext`timeGrid1$$, $CellContext`i$]}]/
              Part[$CellContext`timeGrid1$$, $CellContext`i$]]; \
$CellContext`tempL$ = $CellContext`l0$$/(
             2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
              $CellContext`pts1[False, $CellContext`tempL$, 
               
               Part[$CellContext`timeGrid1$$, $CellContext`i$], \
$CellContext`allNormals$$], 
              If[$CellContext`cutPosition$$ == 0, 
                0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
           AppendTo[$CellContext`polygons2D$$, 
             ($CellContext`polygon3D[
              Map[If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                 And[
                 Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                  0], {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
               Part[
                #["vertices"], 
                #["face"]]], 
              #["colors"]]& )[$CellContext`poly$]]; 
           AppendTo[$CellContext`polygons$$, 
              ($CellContext`polygon3D[
               Map[$CellContext`verticeTransform2$$[
                 $CellContext`verticeTransform1$$[#]]& , If[
                  Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                  1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                  #["vertices"], 
                  #["face"]]], 
               #["colors"]]& )[$CellContext`poly$]] 
            Decrement[$CellContext`i$]; Null] 
         If[Last[$CellContext`polygons$$] == {}, 
           AppendTo[$CellContext`timeStepLines$$, 
             
             Part[$CellContext`timeGrid1$$, $CellContext`i$ + 
              2]]; $CellContext`timeStepLines$$ = Sort[
              
              Select[$CellContext`timeStepLines$$, # >= 
               Part[$CellContext`timeGrid1$$, $CellContext`i$ + 2]& ]]; Null]; 
        Null]; Module[{$CellContext`i$, $CellContext`poly$, \
$CellContext`tempVelocity$, $CellContext`tempL$}, \
$CellContext`timeStepLines2D$$ = {}; $CellContext`timeStepLines3D$$ = {}; \
$CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
         Length[$CellContext`timeStepLines$$] - 1; 
        Quiet[$CellContext`tempVelocity$ = 
          NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
              Part[$CellContext`timeStepLines$$, $CellContext`i$ + 1]}]/
           Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
            1]]; $CellContext`tempL$ = $CellContext`l0$$/(
          2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
           $CellContext`pts1[False, $CellContext`tempL$, 
            
            Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
             1], $CellContext`allNormals$$], 
           If[$CellContext`cutPosition$$ == 0, 
             0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
        AppendTo[$CellContext`timeStepLines2D$$, 
          ($CellContext`polygon3D[
           Map[If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
              And[
              Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
               0], {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
            Part[
             #["vertices"], 
             #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; 
        AppendTo[$CellContext`timeStepLines3D$$, 
          ($CellContext`polygon3D[
           Map[$CellContext`verticeTransform2$$[
             $CellContext`verticeTransform1$$[#]]& , If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
              #["vertices"], 
              #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; While[
          And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ > 1], 
          Quiet[$CellContext`tempVelocity$ = 
            NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                Part[$CellContext`timeStepLines$$, $CellContext`i$]}]/
             Part[$CellContext`timeStepLines$$, $CellContext`i$]]; \
$CellContext`tempL$ = $CellContext`l0$$/(
            2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
             $CellContext`pts1[False, $CellContext`tempL$, 
              
              Part[$CellContext`timeStepLines$$, $CellContext`i$], \
$CellContext`allNormals$$], 
             If[$CellContext`cutPosition$$ == 0, 
               0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
          AppendTo[$CellContext`timeStepLines2D$$, 
            ($CellContext`polygon[
             Map[If[
                Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                And[
                Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                 0], {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
              Part[
               #["vertices"], 
               #["face"]]], 
             ConstantArray[0, 
              Length[
               #["colors"]]]]& )[$CellContext`poly$]]; 
          AppendTo[$CellContext`timeStepLines3D$$, 
            ($CellContext`polygon[
             Map[$CellContext`verticeTransform2$$[
               $CellContext`verticeTransform1$$[#]]& , If[
                Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                #["vertices"], 
                #["face"]]], 
             ConstantArray[0, 
              Length[
               #["colors"]]]]& )[$CellContext`poly$]]; 
          Decrement[$CellContext`i$]; Null]; 
        Quiet[$CellContext`tempVelocity$ = 
          NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
              Part[$CellContext`timeStepLines$$, 1]}]/
           Part[$CellContext`timeStepLines$$, 
            1]]; $CellContext`tempL$ = $CellContext`l0$$/(
          2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
           $CellContext`pts1[False, $CellContext`tempL$, 
            Part[$CellContext`timeStepLines$$, 1], $CellContext`allNormals$$],
            If[$CellContext`cutPosition$$ == 0, 
             0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
        AppendTo[$CellContext`timeStepLines2D$$, 
          ($CellContext`polygon3D[
           Map[If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
              And[
              Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
               0], {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
            Part[
             #["vertices"], 
             #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; 
        AppendTo[$CellContext`timeStepLines3D$$, 
          ($CellContext`polygon3D[
           Map[$CellContext`verticeTransform2$$[
             $CellContext`verticeTransform1$$[#]]& , If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
              #["vertices"], 
              #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]]; 
      Null]; $CellContext`textX$$ = Max[
       Part[
        Part[
         Part[$CellContext`timeStepLines2D$$, 1], 1], All, 
        1]]; $CellContext`textY$$ = Max[
       Part[
        Part[
         Part[$CellContext`timeStepLines2D$$, 1], 1], All, 
        2]]; $CellContext`timePolygonColor$$ = Which[
       Or[Sort[
          Abs[$CellContext`n$$]] == {0, 0, 1}, 
        RegionMember[
         ConvexHullRegion[{{
            Part[$CellContext`ds$$, 3], 
            Part[$CellContext`ds$$, 5], 0.}, {
            Part[$CellContext`ds$$, 3], -Part[$CellContext`ds$$, 5], 0.}, {-
            Part[$CellContext`ds$$, 3], 
            Part[$CellContext`ds$$, 5], 0.}, {-Part[$CellContext`ds$$, 3], -
            Part[$CellContext`ds$$, 5], 0.}, {
            Part[$CellContext`ds$$, 3], 
            Part[$CellContext`ds$$, 5], 
            Part[$CellContext`ds$$, 2]}, {
            Part[$CellContext`ds$$, 3], -Part[$CellContext`ds$$, 5], 
            Part[$CellContext`ds$$, 2]}, {-Part[$CellContext`ds$$, 3], 
            Part[$CellContext`ds$$, 5], 
            Part[$CellContext`ds$$, 2]}, {-Part[$CellContext`ds$$, 3], -
            Part[$CellContext`ds$$, 5], 
            Part[$CellContext`ds$$, 2]}}], Part[
           Part[
            Last[$CellContext`timeStepLines3D$$], 1], 1] - {0.01, 0.01, 0}]], 
       Darker[
        GrayLevel[0.7], 0], Sort[
         Abs[$CellContext`n$$]] == Normalize[{0, 1, 1}], 
       Darker[
        Lighter[Magenta, 0.4], 0], Sort[
         Abs[$CellContext`n$$]] == Normalize[{1, 1, 1}], 
       Darker[
        Blend[{Yellow, Green}, 0.7], 
        0]]; $CellContext`timePolygon2D$$ = {$CellContext`timePolygonColor$$, 
       Polygon[
        Part[
         Last[$CellContext`timeStepLines2D$$], 
         1]]}; $CellContext`timePolygon3D$$ = \
{$CellContext`timePolygonColor$$, 
       Polygon[
        Part[
         Last[$CellContext`timeStepLines3D$$], 1]]}; 
    Null], $CellContext`calcCutOff$$ = Hold[If[
      Not[$CellContext`individualGrowthFactors$$], $CellContext`f00neg1$$ = 
       1 + $CellContext`\[CapitalDelta]100negz$$; $CellContext`f00pos1$$ = 
       1 + $CellContext`\[CapitalDelta]100posz$$; $CellContext`fpos100$$ = 
       1 + $CellContext`\[CapitalDelta]100posx$$; $CellContext`fneg100$$ = 
       1 + $CellContext`\[CapitalDelta]100negx$$; $CellContext`f0pos10$$ = 
       1 + $CellContext`\[CapitalDelta]100posy$$; $CellContext`f0neg10$$ = 
       1 + $CellContext`\[CapitalDelta]100negy$$; \
$CellContext`fpos1pos1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]posxposy$$); \
$CellContext`fneg1pos1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negxposy$$); \
$CellContext`fpos1neg1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negyposx$$); \
$CellContext`fneg1neg1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negynegx$$); \
$CellContext`fpos1pos1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]posxposy$$); \
$CellContext`fneg1pos1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]negxposy$$); \
$CellContext`fpos1neg1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]negyposx$$); \
$CellContext`fneg1neg1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]negynegx$$); \
$CellContext`f0pos1pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posy$$) 
        1; $CellContext`fpos10pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posx$$) 
        1; $CellContext`fpos1pos10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Beta]posxposy$$); \
$CellContext`f0neg1pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negy$$) 
        1; $CellContext`fpos10neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posx$$) 
        1; $CellContext`fpos1neg10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Beta]negyposx$$); \
$CellContext`f0pos1neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posy$$) 
        1; $CellContext`fneg10pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negx$$) 
        1; $CellContext`fneg1pos10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Beta]negxposy$$); \
$CellContext`f0neg1neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negy$$) 
        1; $CellContext`fneg10neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negx$$) 
        1; $CellContext`fneg1neg10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Beta]negynegx$$); \
$CellContext`fpos1pos1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Gamma]posxposy$$); \
$CellContext`fpos1pos3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$); \
$CellContext`fpos3pos1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$); \
$CellContext`fpos1pos1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxposy$$); \
$CellContext`fpos1neg3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$); \
$CellContext`fneg3pos1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$); \
$CellContext`fpos1neg1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$); \
$CellContext`fpos1neg3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$); \
$CellContext`fneg1pos1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxposy$$); \
$CellContext`fneg1neg3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$); \
$CellContext`fneg3pos1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$); \
$CellContext`fneg3neg1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$); \
$CellContext`fpos1neg1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$); \
$CellContext`fpos1pos3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$); \
$CellContext`fneg1pos1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Gamma]negxposy$$); \
$CellContext`fneg1pos3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$); \
$CellContext`fpos3pos1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$); \
$CellContext`fpos3neg1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$); \
$CellContext`fneg1neg1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$); \
$CellContext`fneg1pos3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$); \
$CellContext`fpos3neg1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$); \
$CellContext`fneg1neg1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$); \
$CellContext`fneg1neg3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$); \
$CellContext`fneg3neg1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$); \
$CellContext`fpos1pos1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Delta]posxposy$$); \
$CellContext`fpos1pos5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$); \
$CellContext`fpos5pos1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$); \
$CellContext`fpos1pos1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxposy$$); \
$CellContext`fpos1neg5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$); \
$CellContext`fneg5pos1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg5xposy$$); \
$CellContext`fpos1neg1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxnegy$$); \
$CellContext`fpos1neg5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$); \
$CellContext`fneg1pos1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxposy$$); \
$CellContext`fneg1neg5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$); \
$CellContext`fneg5pos1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg5xposy$$); \
$CellContext`fneg5neg1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$); \
$CellContext`fpos1neg1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Delta]posxnegy$$); \
$CellContext`fpos1pos5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$); \
$CellContext`fneg1pos1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Delta]negxposy$$); \
$CellContext`fneg1pos5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxpos5y$$); \
$CellContext`fpos5pos1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$); \
$CellContext`fpos5neg1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$); \
$CellContext`fneg1neg1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Delta]negxnegy$$); \
$CellContext`fneg1pos5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxpos5y$$); \
$CellContext`fpos5neg1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$); \
$CellContext`fneg1neg1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxnegy$$); \
$CellContext`fneg1neg5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$); \
$CellContext`fneg5neg1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$); \
$CellContext`factorList$$ = {$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$}; 
      Null, {$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$} = $CellContext`factorList$$; 
      Null]; $CellContext`timePolygon2D$$ = {}; $CellContext`timePolygon3D$$ = \
{}; $CellContext`verticeTransform1$$ = RotationTransform[
       If[$CellContext`transformAxisSystem$$, (-Pi)/4, 0], {0, 0, 
       1}]; $CellContext`verticeTransform2$$ = RotationTransform[
       If[$CellContext`transformAxisSystem$$, (-Pi)/2, 0], {0, 1, 0}]; 
    If[$CellContext`constantVelocity$$, $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 10^(-3), 
      Quiet[$CellContext`V100$$ = 
       NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
           If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
        If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]]; 
    Quiet[$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$)]; 
    Quiet[$CellContext`velocityPlot$$ = 
       Plot[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 
         10^(-3), {$CellContext`x, 0, $CellContext`t$$}, 
         AxesLabel -> {"time (hr)", "Growth Velocity (mm/hr)"}]; 
      Null]; $CellContext`timeStepLines3D$$ = {}; $CellContext`pts$$ = \
$CellContext`pts1[$CellContext`infty$$, $CellContext`L$$, $CellContext`t$$, \
$CellContext`allNormals$$]; 
    Part[$CellContext`pts$$, 26] = {0, 0, 
      0}; $CellContext`p$$ = \
$CellContext`polyhedron[$CellContext`allNormals$$, $CellContext`pts$$]; \
$CellContext`vertices$$ = Map[$CellContext`verticeTransform2$$[
        $CellContext`verticeTransform1$$[#]]& , 
       $CellContext`p$$["vertices"]]; $CellContext`faces$$ = $CellContext`p$$[
      "faces"]; $CellContext`v$$ = 
     Length[$CellContext`vertices$$]; $CellContext`f$$ = Count[
       $CellContext`p$$["faces"], 
       Except[{}]]; $CellContext`e$$ = $CellContext`v$$ + $CellContext`f$$ - 
      2; $CellContext`downP$$ = \
$CellContext`polyhedron[$CellContext`allNormals$$, 
       Map[$CellContext`param1[#, 
          $CellContext`d[#], $CellContext`infty$$, $CellContext`L$$, \
$CellContext`t$$] #& , $CellContext`allNormals$$]]; \
$CellContext`calcVertices$$ = $CellContext`downP$$[
      "vertices"]; $CellContext`calcFaces$$ = $CellContext`downP$$[
      "faces"]; $CellContext`rotatedVertices2D$$ = 
     Map[RotationTransform[
       45 Degree][#]& , (1/(2 $CellContext`L$$)) $CellContext`l0$$ 
       Part[$CellContext`vertices$$, All, 
         Span[1, 2]]]; $CellContext`rotatedVertices3D$$ = 
     Map[RotationTransform[
       45 Degree, {0, 0, 1}][#]& , (1/(
        2 $CellContext`L$$)) $CellContext`l0$$ $CellContext`vertices$$]; \
$CellContext`CalcrotatedVertices2D$$ = 
     Map[RotationTransform[
       45 Degree][#]& , (1/(2 $CellContext`L$$)) $CellContext`l0$$ 
       Part[$CellContext`calcVertices$$, All, 
         Span[1, 2]]]; $CellContext`CalcrotatedVertices3D$$ = 
     Map[RotationTransform[
       45 Degree, {0, 0, 1}][#]& , (1/(
        2 $CellContext`L$$)) $CellContext`l0$$ $CellContext`calcVertices$$]; \
$CellContext`polyGraphics$$ = Graphics3D[{
        Specularity[0.5, 6], 
        GraphicsComplex[If[
           Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
           1, $CellContext`l0$$] 
         If[$CellContext`infty$$, 1, 1/(
           2 $CellContext`L$$)] $CellContext`vertices$$, {
          Opacity[
           Dynamic[$CellContext`opacity$$]], 
          Table[
           If[Part[$CellContext`faces$$, $CellContext`i] != {}, {
             Block[{$CellContext`k = Total[
                 Map[Abs, 
                  Part[$CellContext`allNormals$$, $CellContext`i]]]}, 
              Switch[
               Part[
                Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
               Darker[
                GrayLevel[0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 1]]]], 2, 
               Darker[
                Lighter[Magenta, 0.4], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 2]]]], 3, 
               Darker[
                Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 3]]]], 5, 
               Darker[Blue, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 5]]]], 7, 
               Darker[Yellow, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 7]]]]]], {
              EdgeForm[
               Thickness[Medium]], 
              Polygon[
               
               Part[$CellContext`faces$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
            Length[$CellContext`allNormals$$]}], 
          PointSize[0.015], Red, 
          Opacity[1], 
          Dynamic[
           If[$CellContext`hideVertices$$, {}, 
            Point[
             Range[$CellContext`v$$]]]]}]}, Axes -> True, 
       AxesLabel -> {"x", "y", "z"}]; $CellContext`volume$$ = Volume[
       ConvexHullRegion[(1/(
         2 $CellContext`L$$)) $CellContext`l0$$ $CellContext`vertices$$]]; \
$CellContext`maxHeight$$ = 
     Max[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
       Part[$CellContext`vertices$$, All, 3]]; $CellContext`largestwidth$$ = 
     Max[
        Part[$CellContext`rotatedVertices2D$$, All, 1]] - Min[
       Part[$CellContext`rotatedVertices2D$$, All, 
        1]]; $CellContext`largestlength$$ = Max[
        Part[$CellContext`rotatedVertices2D$$, All, 2]] - Min[
       Part[$CellContext`rotatedVertices2D$$, All, 
        2]]; $CellContext`bottomWidth$$ = 
     If[Part[$CellContext`faces$$, 14] != {}, Max[
         Part[
          Map[
          RotationTransform[
           45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
             Part[$CellContext`vertices$$, 
              Part[$CellContext`faces$$, 14]], All, 
             Span[1, 2]]], All, 1]] - Min[
        Part[
         Map[
         RotationTransform[
          45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
            Part[$CellContext`vertices$$, 
             Part[$CellContext`faces$$, 14]], All, 
            Span[1, 2]]], All, 1]], 0]; $CellContext`bottomLength$$ = 
     If[Part[$CellContext`faces$$, 14] != {}, Max[
         Part[
          Map[
          RotationTransform[
           45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
             Part[$CellContext`vertices$$, 
              Part[$CellContext`faces$$, 14]], All, 
             Span[1, 2]]], All, 2]] - Min[
        Part[
         Map[
         RotationTransform[
          45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
            Part[$CellContext`vertices$$, 
             Part[$CellContext`faces$$, 14]], All, 
            Span[1, 2]]], All, 2]], 0]; $CellContext`topWidth$$ = 
     If[Part[$CellContext`faces$$, 7] != {}, Max[
         Part[
          Map[
          RotationTransform[
           45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
             Part[$CellContext`vertices$$, 
              Part[$CellContext`faces$$, 7]], All, 
             Span[1, 2]]], All, 1]] - Min[
        Part[
         Map[
         RotationTransform[
          45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
            Part[$CellContext`vertices$$, 
             Part[$CellContext`faces$$, 7]], All, 
            Span[1, 2]]], All, 1]], 0]; $CellContext`topLength$$ = 
     If[Part[$CellContext`faces$$, 7] != {}, Max[
         Part[
          Map[
          RotationTransform[
           45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
             Part[$CellContext`vertices$$, 
              Part[$CellContext`faces$$, 7]], All, 
             Span[1, 2]]], All, 2]] - Min[
        Part[
         Map[
         RotationTransform[
          45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
            Part[$CellContext`vertices$$, 
             Part[$CellContext`faces$$, 7]], All, 
            Span[1, 2]]], All, 2]], 
       0]; $CellContext`averageGrowthFactors$$ = {{
       "\!\(\*SubscriptBox[\(f\), \({10} 0\)]\)", ($CellContext`fpos100$$ + \
$CellContext`fneg100$$ + $CellContext`f0pos10$$ + $CellContext`f0neg10$$)/
        4}, {"\!\(\*SubscriptBox[\(f\), \({11} 0\)]\)", \
($CellContext`fpos1pos10$$ + $CellContext`fpos1neg10$$ + \
$CellContext`fneg1pos10$$ + $CellContext`fneg1neg10$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({10} 1\)]\)", ($CellContext`fpos10pos1$$ + \
$CellContext`fneg10pos1$$ + $CellContext`f0pos1pos1$$ + \
$CellContext`f0neg1pos1$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({10} \*OverscriptBox[\(1\), \(_\)]\)]\)", \
($CellContext`fpos10neg1$$ + $CellContext`fneg10neg1$$ + \
$CellContext`f0pos1neg1$$ + $CellContext`f0neg1neg1$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(1\), \(_\)]\)]\)", \
($CellContext`fpos1pos1pos1$$ + $CellContext`fpos1neg1pos1$$ + \
$CellContext`fneg1pos1pos1$$ + $CellContext`fneg1neg1pos1$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(1\), \(_\)]\)]\)", \
($CellContext`fpos1pos1neg1$$ + $CellContext`fpos1neg1neg1$$ + \
$CellContext`fneg1pos1neg1$$ + $CellContext`fneg1neg1neg1$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(3\), \(_\)]\)]\)", \
($CellContext`fpos1pos1neg3$$ + $CellContext`fpos1neg1neg3$$ + \
$CellContext`fneg1pos1neg3$$ + $CellContext`fneg1neg1neg3$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({11} 3\)]\)", \
($CellContext`fpos1pos1pos3$$ + $CellContext`fpos1neg1pos3$$ + \
$CellContext`fneg1pos1pos3$$ + $CellContext`fneg1neg1pos3$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({31} 1\)]\)", \
($CellContext`fpos3pos1pos1$$ + $CellContext`fpos3neg1pos1$$ + \
$CellContext`fneg3pos1pos1$$ + $CellContext`fneg3neg1pos1$$ + \
$CellContext`fpos1pos3pos1$$ + $CellContext`fpos1neg3pos1$$ + \
$CellContext`fneg1pos3pos1$$ + $CellContext`fneg1neg3pos1$$)/8}, {
       "\!\(\*SubscriptBox[\(f\), \({31} \*OverscriptBox[\(1\), \(_\)]\)]\)", \
($CellContext`fpos3pos1neg1$$ + $CellContext`fpos3neg1neg1$$ + \
$CellContext`fneg3pos1neg1$$ + $CellContext`fneg3neg1neg1$$ + \
$CellContext`fpos1pos3neg1$$ + $CellContext`fpos1neg3neg1$$ + \
$CellContext`fneg1pos3neg1$$ + $CellContext`fneg1neg3neg1$$)/8}, {
       "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(5\), \(_\)]\)]\)", \
($CellContext`fpos1pos1neg5$$ + $CellContext`fpos1neg1neg5$$ + \
$CellContext`fneg1pos1neg5$$ + $CellContext`fneg1neg1neg5$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({11} 5\)]\)", \
($CellContext`fpos1pos1pos5$$ + $CellContext`fpos1neg1pos5$$ + \
$CellContext`fneg1pos1pos5$$ + $CellContext`fneg1neg1pos5$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({51} 5\)]\)", \
($CellContext`fpos5pos1pos1$$ + $CellContext`fpos5neg1pos1$$ + \
$CellContext`fneg5pos1pos1$$ + $CellContext`fneg5neg1pos1$$ + \
$CellContext`fpos1pos5pos1$$ + $CellContext`fpos1neg5pos1$$ + \
$CellContext`fneg1pos5pos1$$ + $CellContext`fneg1neg5pos1$$)/8}, {
       "\!\(\*SubscriptBox[\(f\), \({51} \*OverscriptBox[\(5\), \(_\)]\)]\)", \
($CellContext`fpos5pos1neg1$$ + $CellContext`fpos5neg1neg1$$ + \
$CellContext`fneg5pos1neg1$$ + $CellContext`fneg5neg1neg1$$ + \
$CellContext`fpos1pos5neg1$$ + $CellContext`fpos1neg5neg1$$ + \
$CellContext`fneg1pos5neg1$$ + $CellContext`fneg1neg5neg1$$)/
        8}}; $CellContext`faceArea$$ = {}; 
    For[$CellContext`i = 1, $CellContext`i <= Length[$CellContext`faces$$], 
      Increment[$CellContext`i], 
      If[True, 
       AppendTo[$CellContext`faceArea$$, 
        ToString[
         If[Part[$CellContext`faces$$, $CellContext`i] == {}, 0, 
          ToString[
           Area[
            
            Polygon[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`vertices$$, 
               
               Part[$CellContext`faces$$, $CellContext`i]]]]]]]]]]; \
$CellContext`velocities$$ = {{
       "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \(-z\)]\)) ", 
        ToString[$CellContext`f00neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((001)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \(+z\)]\))  ", 
        ToString[$CellContext`f00pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((100)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \({100} + x\)]\)) ", 
        ToString[$CellContext`fpos100$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 00)\)]\) = \
(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - x\)]\))  ", 
        ToString[$CellContext`fneg100$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((010)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \({100} + y\)]\)) ", 
        ToString[$CellContext`f0pos10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \(_\)] 0)\)]\) \
= (1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - y\)]\))  ", 
        ToString[$CellContext`f0neg10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\)) ", 
        ToString[$CellContext`fpos1pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(+x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos1pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+y\)]\))  ", 
        ToString[$CellContext`f0pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+x\)]\))  ", 
        ToString[$CellContext`fpos10pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(+x\), \(+y\))\)]\)) ", 
        ToString[$CellContext`fpos1pos10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\))  ", 
        ToString[$CellContext`f0neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+x\)]\))  ", 
        ToString[$CellContext`fpos10neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 0)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(+x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+y\)]\))  ", 
        ToString[$CellContext`f0pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  ", 
        ToString[$CellContext`fneg10pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ \
0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\))  ", 
        ToString[$CellContext`f0neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  ", 
        ToString[$CellContext`fneg10neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \
\(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((113)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos1pos1pos3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((131)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", 
        ToString[$CellContext`fpos1pos3pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((311)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos3pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos1pos1neg3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] 1)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) y)\)]\))  ", 
        ToString[$CellContext`fpos1neg3pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] 11)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg3pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1neg3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) \
y)\)]\))  ", 
        ToString[$CellContext`fpos1neg3neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1neg3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) \
y)\)]\))  ", 
        ToString[$CellContext`fneg1neg3pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\
\))\)]\))  ", 
        ToString[$CellContext`fneg3pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\
\))\)]\))  ", 
        ToString[$CellContext`fneg3neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 3)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1pos3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", 
        ToString[$CellContext`fpos1pos3neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 13)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1pos3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 31)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) y)\)]\))  ", 
        ToString[$CellContext`fneg1pos3pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos3pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos3neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 3)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1pos3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 3 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) \
y)\)]\))  ", 
        ToString[$CellContext`fneg1pos3neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\
\))\)]\))  ", 
        ToString[$CellContext`fpos3neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1neg3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) y)\)]\))  ", 
        ToString[$CellContext`fneg1neg3neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\))\)]\))  ", 
        ToString[$CellContext`fneg3neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((115)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos1pos1pos5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((151)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
        ToString[$CellContext`fpos1pos5pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((511)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos5pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos1pos1neg5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] 1)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) y)\)]\))  ", 
        ToString[$CellContext`fpos1neg5pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] 11)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg5pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1neg5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) \
y)\)]\))  ", 
        ToString[$CellContext`fpos1neg5neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1neg5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) \
y)\)]\))  ", 
        ToString[$CellContext`fneg1neg5pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\
\))\)]\))  ", 
        ToString[$CellContext`fneg5pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\
\))\)]\))  ", 
        ToString[$CellContext`fneg5neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 5)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1pos5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
        ToString[$CellContext`fpos1pos5neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 15)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1pos5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 51)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) y)\)]\))  ", 
        ToString[$CellContext`fneg1pos5pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos5pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos5neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 5)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1pos5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 5 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) \
y)\)]\))  ", 
        ToString[$CellContext`fneg1pos5neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\
\))\)]\))  ", 
        ToString[$CellContext`fpos5neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1neg5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) y)\)]\))  ", 
        ToString[$CellContext`fneg1neg5neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\))\)]\))  ", 
        ToString[$CellContext`fneg5neg1neg1$$]}}; $CellContext`cutFactors$$ = \
{{"", "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
        "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
        "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
        "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
        "\!\(\*SubscriptBox[\(L\), \({111}\)]\)", 
        "\!\(\*SubscriptBox[\(L\), \({11 \*OverscriptBox[\(1\), \
\(_\)]}\)]\)"}, {"(1 0 0)", 
        Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
         Part[$CellContext`vertices$$, All, 1]], 
        Max[
         Part[
          
          Select[($CellContext`l0$$/(
            2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 1] == 
           Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 1]]& ], All, 3]], "(1 1 0)", 
        Max[
         Part[$CellContext`rotatedVertices2D$$, All, 2]], 
        Mean[
         Part[
          Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Max[
             Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 3]], 
        "(1 1 1)", 
        If[Part[$CellContext`faces$$, 7] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 7]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`vertices$$, 
            Flatten[
             Position[$CellContext`rotatedVertices3D$$, 
              Part[
               Select[$CellContext`rotatedVertices3D$$, And[Part[#, 2] == Max[
                   Part[$CellContext`rotatedVertices2D$$, All, 2]], 
                 Part[#, 3] == Max[
                   Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 
                    3]]]& ], 1]]]]]], 
        If[Part[$CellContext`calcFaces$$, 11] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 11]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`calcVertices$$, 
            Flatten[
             Position[$CellContext`CalcrotatedVertices3D$$, 
              Part[
               
               Select[$CellContext`CalcrotatedVertices3D$$, And[
                Part[#, 2] == Max[
                   Part[$CellContext`CalcrotatedVertices2D$$, All, 2]], 
                 Part[#, 3] == Min[
                   Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 2] == 
                    Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {
       "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 0 0)", 
        Abs[
         Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
          Part[$CellContext`vertices$$, All, 1]]], 
        Max[
         Part[
          
          Select[($CellContext`l0$$/(
            2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 1] == 
           Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 1]]& ], All, 3]], 
        "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 0)", 
        Abs[
         Min[
          Part[$CellContext`rotatedVertices2D$$, All, 1]]], 
        Mean[
         Part[
          Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Min[
             Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 3]], 
        "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 1)", 
        If[Part[$CellContext`faces$$, 8] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 8]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`vertices$$, 
            Flatten[
             Position[$CellContext`rotatedVertices3D$$, 
              Part[
               Select[$CellContext`rotatedVertices3D$$, And[Part[#, 1] == Min[
                   Part[$CellContext`rotatedVertices2D$$, All, 1]], 
                 Part[#, 3] == Max[
                   Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 
                    3]]]& ], 1]]]]]], 
        If[Part[$CellContext`calcFaces$$, 12] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 12]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`calcVertices$$, 
            Flatten[
             Position[$CellContext`CalcrotatedVertices3D$$, 
              Part[
               
               Select[$CellContext`CalcrotatedVertices3D$$, And[
                Part[#, 1] == Min[
                   Part[$CellContext`CalcrotatedVertices2D$$, All, 1]], 
                 Part[#, 3] == Min[
                   Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 1] == 
                    Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {"(0 1 0)", 
        Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
         Part[$CellContext`vertices$$, All, 2]], 
        Max[
         Part[
          
          Select[($CellContext`l0$$/(
            2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 2] == 
           Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 2]]& ], All, 3]], 
        "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 
        Max[
         Part[$CellContext`rotatedVertices2D$$, All, 1]], 
        Mean[
         Part[
          Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Max[
             Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 3]], 
        "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 1)", 
        If[Part[$CellContext`faces$$, 9] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 9]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`vertices$$, 
            Flatten[
             Position[$CellContext`rotatedVertices3D$$, 
              Part[
               Select[$CellContext`rotatedVertices3D$$, And[Part[#, 1] == Max[
                   Part[$CellContext`rotatedVertices2D$$, All, 1]], 
                 Part[#, 3] == Max[
                   Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 
                    3]]]& ], 1]]]]]], 
        If[Part[$CellContext`calcFaces$$, 13] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 13]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`calcVertices$$, 
            Flatten[
             Position[$CellContext`CalcrotatedVertices3D$$, 
              Part[
               
               Select[$CellContext`CalcrotatedVertices3D$$, And[
                Part[#, 1] == Max[
                   Part[$CellContext`CalcrotatedVertices2D$$, All, 1]], 
                 Part[#, 3] == Min[
                   Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 1] == 
                    Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {
       "(0 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 
        Abs[
         Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
          Part[$CellContext`vertices$$, All, 2]]], 
        Max[
         Part[
          
          Select[($CellContext`l0$$/(
            2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 2] == 
           Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 2]]& ], All, 3]], 
        "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 0)", 
        Abs[
         Min[
          Part[$CellContext`rotatedVertices2D$$, All, 2]]], 
        Mean[
         Part[
          Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Min[
             Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 3]], 
        "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 1)", 
        If[Part[$CellContext`faces$$, 10] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 10]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`vertices$$, 
            Flatten[
             Position[$CellContext`rotatedVertices3D$$, 
              Part[
               Select[$CellContext`rotatedVertices3D$$, And[Part[#, 2] == Min[
                   Part[$CellContext`rotatedVertices2D$$, All, 2]], 
                 Part[#, 3] == Max[
                   Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 
                    3]]]& ], 1]]]]]], 
        If[Part[$CellContext`calcFaces$$, 14] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 14]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`calcVertices$$, 
            Flatten[
             Position[$CellContext`CalcrotatedVertices3D$$, 
              Part[
               
               Select[$CellContext`CalcrotatedVertices3D$$, And[
                Part[#, 2] == Min[
                   Part[$CellContext`CalcrotatedVertices2D$$, All, 2]], 
                 Part[#, 3] == Min[
                   Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 2] == 
                    Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]]& ], 
                    All, 3]]]& ], 1]]]]]]}}; $CellContext`type$$ = StringJoin[
       Map["(" <> StringJoin[
          Map[ToString, #]] <> ")"& , 
        DeleteDuplicates[
         Map[Sort[#, Greater]& , 
          Map[Abs, 
           Map[Part[
             Nearest[$CellContext`normals$$, #], 1]& , 
            Extract[$CellContext`allNormals$$, 
             Rest[
              Position[$CellContext`faces$$, 
               Except[{}], 1]]]]]]]]]; $CellContext`info$$ = 
     ToString[$CellContext`f$$] <> " Faces, " <> ToString[$CellContext`e$$] <> 
      " Edges, " <> ToString[$CellContext`v$$] <> " Vertices."; 
    Null], $CellContext`calcCutOn$$ = Hold[
   ReleaseHold[$CellContext`calcCutOff$$]; 
    Quiet[$CellContext`velocityPlot$$ = 
       Plot[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 
         10^(-3), {$CellContext`x, 0, $CellContext`t$$}, 
         AxesLabel -> {"time (hr)", "Growth Velocity (mm/hr)"}]; 
      Null]; $CellContext`normals1$$ = 
     Append[$CellContext`allNormals$$, $CellContext`n$$]; $CellContext`p1$$ = \
$CellContext`polyhedron[$CellContext`normals1$$, 
       Append[
        $CellContext`pts1[
        False, $CellContext`L$$, $CellContext`t$$, \
$CellContext`allNormals$$], $CellContext`cutPosition$$ 
        2 $CellContext`L$$ $CellContext`n$$]]; $CellContext`vertices1$$ = If[
        Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
        1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) 
      Map[$CellContext`verticeTransform2$$[
         $CellContext`verticeTransform1$$[#]]& , 
        $CellContext`p1$$[
        "vertices"]]; $CellContext`faces1$$ = $CellContext`p1$$[
      "faces"]; $CellContext`v1$$ = 
     Length[$CellContext`vertices1$$]; $CellContext`f1$$ = Count[
       $CellContext`p1$$["faces"], 
       Except[{}]]; $CellContext`e1$$ = $CellContext`v1$$ + $CellContext`f1$$ - 
      2; $CellContext`type$$ = StringJoin[
       Map["(" <> StringJoin[
          Map[ToString, #]] <> ")"& , 
        DeleteDuplicates[
         Map[Sort[#, Greater]& , 
          Map[Abs, 
           Map[Part[
             Nearest[$CellContext`normals$$, #], 1]& , 
            Extract[$CellContext`allNormals$$, 
             Rest[
              Position[$CellContext`faces$$, 
               Except[{}], 1]]]]]]]]]; $CellContext`info$$ = 
     ToString[$CellContext`f1$$] <> " Faces, " <> ToString[$CellContext`e1$$] <> 
      " Edges, " <> ToString[$CellContext`v1$$] <> 
      " Vertices."; $CellContext`polyGraphics$$ = Graphics3D[{
        Specularity[0.5, 6], 
        GraphicsComplex[$CellContext`vertices1$$, {
          Dynamic[
           Opacity[$CellContext`opacity$$]], 
          Dynamic[
           Table[
            If[Part[$CellContext`faces1$$, $CellContext`i] != {}, {
              Block[{$CellContext`k = Total[
                  Map[Abs, 
                   Part[$CellContext`normals1$$, $CellContext`i]]]}, 
               Switch[
                Part[
                 Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
                Darker[
                 GrayLevel[0.7], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 1]]]], 2, 
                Darker[
                 Lighter[Magenta, 0.4], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 2]]]], 3, 
                Darker[
                 Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 3]]]], 5, 
                Darker[Blue, 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 5]]]], 7, 
                Darker[Yellow, 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 7]]]]]], {
               EdgeForm[
                Thickness[Medium]], 
               Polygon[
                
                Part[$CellContext`faces1$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
             Length[
              
              If[$CellContext`drawCutPlane$$, $CellContext`normals1$$, \
$CellContext`allNormals$$]]}]], 
          PointSize[0.015], Red, 
          Opacity[1], 
          Dynamic[
           If[$CellContext`hideVertices$$, {}, 
            Point[
             Range[$CellContext`v$$]]]]}]}, Axes -> True, 
       AxesLabel -> {"x", "y", "z"}]; 
    ReleaseHold[$CellContext`calcSection$$]], $CellContext`printOn$$ = 
   False, $CellContext`exportCurrentState$$ = 
   "1:eJxTTMoPSotjYGAoZgESPpnFJZmMQEbR/\
rJtk7akLbMvZgXy3BJzilMRLLAKsPqQotLUYhGQuGtCQU5iXqpzRn5mcqqKiqGhiUmaF7KxaczIPE+\
QEQZQkglI6hriUQAisckbIqtCk4cYikcBktF45JGNwekCQ6wuRNKKXQFEBlkZdhPwqEB2A9ZgRHEEz\
oA2RLUKrzMIxBYhdxKKTSIjA58FhL1JKD0QCkrsnsCIcLy+\
IGwHEZFBTLo0xilvjDMojYmKS6gzsFsAkcIdUIStQPYqXjuITPnoZqCYT9ihuG0xJpwykRTgiw/\
CPsFmArLhBKMUZ+\
7A6wvMZIfXEYQtIbakwR9pRMQJntIAQZrilDfFGaCmpOQR7BZApHAHOGErkD2J1w4i8wi6GSjmE3Yo\
bltM8aUujDyCLz6IyyM4PEJclOJMM3h9gZlH8DqCsCXE5hH8kUZEnGBTAm7lZTLACGwNwaJZM0Fgp3\
0mP0hZCpAo0nWWef3ITMo+\
MwDEgyjgdCg6ewYEGBwyWVBMJYZgxCRQm5bYVCARTKQSRQxg8MCeaF0MZNkztAnUOICG2Qd70hg2nt\
P+sna9ty9a4xPxomrbbySGrPEE1+WVj4hTc8a6Pm3egm9IjH//QeA+\
NinyGAxQUHTsQPBV20cf7fExDA5Fnfks94M4hqXMguiPH9/\
gFcFjMqYUpnZMKUzG5xuLbxyd9BEvY6G1xsW3vV+JYxiEfig+\
eOodXhE8JmNKYWrHlMJgoHVDmRjQi1tY93BUZlRmVGZUZlRmVGZUhoYySCPJDAzIPQv8HYFiQQbwQH\
NyaUmUY0VmMWSUGUk0EqtoBEIU0k3BZr4mB7BhN825O+f5b2CD4/\
bPuqw9X2QckFwG6tuAuzSk9V3wE6xUNg9EQLtcN+0RnTNQQzgTFPIA2jo7cg==", \
$CellContext`exportInitialState$$ = 
   "1:eJxTTMoPShNhYGAoZgESPpnFJZmMMF5IUWlqmheGHG6CiVSiiAEMHtgTrYuBLHuGNoEaB2lM\
yDxPUMAbQMhRmVGZUZlRmVGZUZlRGVrKFLMCSbfEnOJUBCuNGVl1JkgdpLUCIopmzQSBnfaZKSCerr\
PM60dmUvYI3ZkBIPH9ZdsmbUlbZg9VzulQdPYMCDA4ZIIMhhiKSgAAwURPnA==", \
$CellContext`stateString$$, $CellContext`dsCurrent$$ = {
   0, 0.043752329739829225` $CellContext`param1[{0, 0, 1}, 1., False, 3.2, 
      2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.043752329739829225` $CellContext`param1[{1, 0, 0}, 1., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.043752329739829225` $CellContext`param1[{-1, 0, 0}, 1., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.043752329739829225` $CellContext`param1[{0, 1, 0}, 1., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.043752329739829225` $CellContext`param1[{0, -1, 0}, 1., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{1, 1, 1}, 1.7071067811865475`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{-1, 1, 1}, 3.0000000000000004`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{1, -1, 1}, 3.0000000000000004`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{-1, -1, 1}, 1., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{1, 1, -1}, 1.7071067811865475`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{-1, 1, -1}, 3.0000000000000004`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{1, -1, -1}, 3.0000000000000004`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{-1, -1, -1}, 1., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{0, 1, 1}, 2., False, 3.2, 2.1, 4, 
      1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{1, 0, 1}, 2., False, 3.2, 2.1, 4, 
      1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{1, 1, 0}, 0.7071067811865475, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{0, -1, 1}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{1, 0, -1}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{1, -1, 0}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{0, 1, -1}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{-1, 0, 1}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{-1, 1, 0}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{0, -1, -1}, 2., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{-1, 0, -1}, 2., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{-1, -1, 0}, 0., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, 1, 3}, 3.707106781186547, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, 3, 1}, 3.707106781186547, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{3, 1, 1}, 3.707106781186547, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, 1, -3}, 3.707106781186547, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, -3, 1}, 5., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-3, 1, 1}, 5., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, -1, -3}, 5., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, -3, -1}, 5., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, 1, -3}, 5., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, -3, 1}, 3., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-3, 1, -1}, 5., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-3, -1, 1}, 3., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, -1, 3}, 5., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, 3, -1}, 3.707106781186547, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, 1, 3}, 5., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, 3, 1}, 5., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{3, 1, -1}, 3.707106781186547, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{3, -1, 1}, 5., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, -1, 3}, 3., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, 3, -1}, 5., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{3, -1, -1}, 5., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, -1, -3}, 3., False, 3.2, 
      2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, -3, -1}, 3., False, 3.2, 
      2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-3, -1, -1}, 3., False, 3.2, 
      2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, 1, 5}, 5.707106781186548, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, 5, 1}, 5.707106781186548, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{5, 1, 1}, 5.707106781186548, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, 1, -5}, 5.707106781186548, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, -5, 1}, 7., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-5, 1, 1}, 7., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, -1, -5}, 7., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, -5, -1}, 7., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, 1, -5}, 7., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, -5, 1}, 5., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-5, 1, -1}, 7., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-5, -1, 1}, 5., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, -1, 5}, 7., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, 5, -1}, 5.707106781186548, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, 1, 5}, 7., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, 5, 1}, 7., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{5, 1, -1}, 5.707106781186548, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{5, -1, 1}, 7., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, -1, 5}, 5., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, 5, -1}, 7., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{5, -1, -1}, 7., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, -1, -5}, 5., False, 3.2, 
      2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, -5, -1}, 5., False, 3.2, 
      2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-5, -1, -1}, 5., False, 3.2, 
      2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 
      80]}, $CellContext`faceArea$$ = {
   "0", "0", "0.287843", "0", "0.287843", "0", "17.3359", "5.05796", 
    "5.05796", "0", "17.3359", "5.05796", "5.05796", "0", "2.69558", 
    "2.69558", "12.6885", "0", "2.69558", "4.61106", "2.69558", "0", 
    "4.61106", "0", "0", "48.4483", "0.810392", "0.306591", "0.306591", 
    "0.810392", "0", "0", "0.0398007", "0", "0.0398007", "0", "0", "0", 
    "0.0398007", "0.306591", "0.0398007", "0.306591", "0.306591", "0.306591", 
    "0.71264", "0.306591", "0.306591", "0.71264", "0", "0", "0", "0", "0", 
    "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
     "0", "0", "0", "0", "0", "0"}, $CellContext`volume$$ = 
   103.50010088128253`, $CellContext`showArea$$ = 
   False, $CellContext`hideVertices$$ = True, $CellContext`maxHeight$$ = 
   2.8571481182280456`, $CellContext`intersectionHeight$$, \
$CellContext`largestlength$$ = 
   8.009541899225416, $CellContext`largestwidth$$ = 
   8.009541899225416, $CellContext`bottomWidth$$ = 
   0, $CellContext`bottomLength$$ = 0, $CellContext`topWidth$$ = 
   5.184762420897513, $CellContext`topLength$$ = 
   5.184762420897513, $CellContext`growDown$$ = 
   False, $CellContext`showVelocity$$ = 
   False, $CellContext`velocities$$ = {{
    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \(_\)])\)]\) = (1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\), \(-z\)]\)) ", "1"}, {
    "\!\(\*SubscriptBox[\(f\), \((001)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \(+z\)]\))  ", "1"}, {
    "\!\(\*SubscriptBox[\(f\), \((100)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \({100} + x\)]\)) ", "1"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 00)\)]\) = (1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - x\)]\))  ", "1"}, {
    "\!\(\*SubscriptBox[\(f\), \((010)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \({100} + y\)]\)) ", "1"}, {
    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \(_\)] 0)\)]\) = \
(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - y\)]\))  ", "1"}, {
    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\)) ", "0.541266"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(-x\), \(+y\))\)]\))  ", "0.541266"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(+x\), \(-y\))\)]\))  ", "0.541266"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(-y\))\)]\))  ", "0.541266"}, {
    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\))  ", 
     "0.541266"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(+y\))\)]\))  ", "0.541266"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \
\(-y\))\)]\))  ", "0.541266"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(-y\))\)]\))  ", 
     "0.541266"}, {
    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+y\)]\))  ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+x\)]\))  ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(+x\), \(+y\))\)]\)) ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(-y\)]\))  ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+x\)]\))  ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 0)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(+x\), \(-y\))\)]\))  ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+y\)]\))  ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(-x\)]\))  ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ 0)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(-x\), \(+y\))\)]\))  ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\))  ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \
\(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \
\(-y\))\)]\))  ", "0.673435"}, {
    "\!\(\*SubscriptBox[\(f\), \((113)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((131)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((311)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) y)\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] 11)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\))\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \
\(-y\))\)]\))  ", "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) \
y)\)]\))  ", "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(+y\))\)]\))  ", "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) \
y)\)]\))  ", "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\
\))\)]\))  ", "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\
\))\)]\))  ", "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 3)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-y\))\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 13)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+y\))\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 31)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) y)\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\))\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 3)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(-y\))\)]\))  ", "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 3 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) \
y)\)]\))  ", "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\
\))\)]\))  ", "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-y\))\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) y)\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\))\)]\))  ", 
     "Sqrt[11]\n--------\n   4"}, {
    "\!\(\*SubscriptBox[\(f\), \((115)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((151)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((511)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) y)\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] 11)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \
\(-y\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) \
y)\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(+y\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) \
y)\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\
\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\
\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 5)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(-y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 15)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 51)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) y)\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 5)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(-y\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 5 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) \
y)\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\
\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) y)\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}}, $CellContext`areaAndVelocityString$$, \
$CellContext`showAreaAndVelocities$$ = 
   True, $CellContext`polygons2D$$, $CellContext`cutZAxis$$, \
$CellContext`cutYAxis$$, $CellContext`cutXAxis$$, $CellContext`timeStep$$ = 
   15, $CellContext`timeStepLines$$, $CellContext`timeStepLines3D$$ = {}, \
$CellContext`timeStepLines2D$$, $CellContext`timingTest$$, $CellContext`\
\[CapitalDelta]\[Beta]posxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negyposx$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negynegx$$ = 
   0, $CellContext`Llist$$, $CellContext`velocityA$$ = 
   2089, $CellContext`velocityB$$ = 1.124, $CellContext`velocityC$$ = 
   7.239, $CellContext`velocityPlot$$ = Graphics[
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Line[CompressedData["
1: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
dVGHTULbvPHCx48Esj3WKKSwSPgHjQLuXw==
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 80}, {0.013758771123132701`, 
          0.12537599056966447`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0.013758771123132733`}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"], {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.013758771123132733`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
     Axes -> {True, True}, AxesLabel -> {
       HoldForm["time (hr)"], 
       HoldForm["Growth Velocity (mm/hr)"]}, 
     AxesOrigin -> {0, 0.013758771123132701`}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 80}, {0.013758771123132701`, 0.12537599056966447`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, 
     Ticks -> {Automatic, Automatic}}], $CellContext`ShowVelocityPlot$$ = 
   False, $CellContext`textX$$, $CellContext`textY$$, \
$CellContext`constantVelocity$$ = 
   False, $CellContext`constantVelocityValue$$ = 
   100, $CellContext`projX$$, $CellContext`projY$$, \
$CellContext`timePolygon2D$$ = {}, $CellContext`timePolygon3D$$ = {}, \
$CellContext`timePolygonColor$$, $CellContext`exportShape$$ = 
   Hold[$CellContext`ExportCrystal$$ = Graphics3D[{
        Specularity[0.5, 6], 
        GraphicsComplex[If[
           Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
           1, $CellContext`l0$$] 
         If[$CellContext`infty$$, 1, 1/(
           2 $CellContext`L$$)] $CellContext`vertices$$, {
          Opacity[
           Dynamic[$CellContext`opacity$$]], 
          Table[
           If[Part[$CellContext`faces$$, $CellContext`i] != {}, {
             Block[{$CellContext`k = Total[
                 Map[Abs, 
                  Part[$CellContext`allNormals$$, $CellContext`i]]]}, 
              Switch[
               Part[
                Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
               Darker[
                GrayLevel[0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 1]]]], 2, 
               Darker[
                Lighter[Magenta, 0.4], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 2]]]], 3, 
               Darker[
                Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 3]]]], 5, 
               Darker[Blue, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 5]]]], 7, 
               Darker[Yellow, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 7]]]]]], {
              EdgeForm[
               Thickness[Medium]], 
              Polygon[
               
               Part[$CellContext`faces$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
            Length[$CellContext`allNormals$$]}], 
          PointSize[0.015], Red, 
          Opacity[1], 
          Dynamic[
           If[$CellContext`hideVertices$$, {}, 
            Point[
             Range[$CellContext`v$$]]]]}]}, Axes -> True, 
       AxesLabel -> {"x", "y", "z"}]; 
    Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
      ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
      ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
      ToString[$CellContext`\[Gamma]1$$] <> " " <> $CellContext`cadFileName$$ <> 
      ".stl", $CellContext`ExportCrystal$$]; 
    Null], $CellContext`parameterConfigFileName$$, \
$CellContext`cadFileName$$, $CellContext`exportConfig$$ = Hold[
    Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
     ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
     ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
     ToString[$CellContext`\[Gamma]1$$] <> 
     " " <> $CellContext`parameterConfigFileName$$ <> 
     ".txt", $CellContext`exportCurrentState$$]], \
$CellContext`exportCutFileName$$, $CellContext`saveDirectory$$ = 
   "C:\\Users\\alims\\OneDrive\\Documents", $CellContext`ExportCrystal$$, \
$CellContext`exportCutImage$$ = Hold[
    Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
     ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
     ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
     ToString[$CellContext`\[Gamma]1$$] <> 
     " " <> $CellContext`exportCutFileName$$ <> ".jpeg", 
     Graphics[{$CellContext`polygons2D$$, $CellContext`timePolygon2D$$, 
       Thickness[0.002], $CellContext`timeStepLines2D$$, 
       Text["Time of first appearance = " <> ToString[
          NumberForm[
           If[Min[$CellContext`timeStepLines$$] == $CellContext`tMin$$, 0, 
            Min[$CellContext`timeStepLines$$]], {10, 2}]] <> 
        " hrs\nTime of growth completion = " <> ToString[
          NumberForm[$CellContext`t$$, {10, 2}]] <> " hrs\nTime Intervals = " <> 
        ToString[
          NumberForm[$CellContext`timeStep$$, {10, 2}]] <> " hrs/step" <> 
        "\n\[Alpha] = " <> ToString[$CellContext`\[Alpha]1$$] <> 
        ", \[Beta] = " <> ToString[$CellContext`\[Beta]1$$] <> 
        "\n\[Gamma] = " <> ToString[$CellContext`\[Gamma]1$$] <> 
        "\nCut Plane: " <> StringReplace[
          
          ToString[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}], {
          "-1" -> "\!\(\*OverscriptBox[\(1\), \(_\)]\)", "{" -> "(", "}" -> 
           ")", "," -> " "}] <> "\nCut Distance " <> 
        ToString[$CellContext`cutPosition$$], {$CellContext`textX$$, \
$CellContext`textY$$ + 1}]}, Axes -> True, 
      AxesLabel -> {"(mm)", "(mm)"}]]], $CellContext`cutFactors$$ = {{
    "", "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
     "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
     "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
     "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
     "\!\(\*SubscriptBox[\(L\), \({111}\)]\)", 
     "\!\(\*SubscriptBox[\(L\), \({11 \*OverscriptBox[\(1\), \(_\)]}\)]\)"}, {
    "(1 0 0)", 4.326355311118568, 0.24999999999999908`, "(1 1 0)", 
     4.004770949612708, 0.07550240066199207, "(1 1 1)", 2.880130011125764, 
     2.880130011125764}, {
    "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 0 0)", 4.326355311118568, 
     0.24999999999999908`, "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 0)", 
     4.004770949612708, 0.07550240066199207, 
     "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 1)", 3.626582259041153, 
     3.626582259041153}, {
    "(0 1 0)", 3.7713616806011405`, 2.592862930050851, 
     "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 4.004770949612708, 
     0.07550240066199207, "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 1)", 
     3.626582259041153, 3.626582259041153}, {
    "(0 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 3.7713616806011405`, 
     2.592862930050851, 
     "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 0)", 4.004770949612708, 0.07550240066199207, 
     "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 1)", 4.43322642505769, 
     2.471881720661901}}, $CellContext`rotatedVertices2D$$ = CompressedData["
1:eJxlkEsoxGEUxWcGgxnMKORVUpIpMl55RP+7UcpCWFEWxIaipLyilFJW08ws
LEwJmdKIxqOk6bshO8IICxtkLSnKyKvOncXf4ut0f53v3Ed+z1Bbn8lgMNT/
vj+dyrkpHHWaqM889po7FcdQAmdvYe67czOGhlNDR9cRM0MJnG/Ha5sq7o2U
ud25nN0cz1AC517kTqMPVDiNINeNPlAGpzTk3qEPlMEp+TUv0LWUzL6bkg+H
x8hVp1c9/SsJPPjW1v309aYJF59w8VVbggcTHjOv+UcyU3beNVHh4TrTxkOs
na3r7oXZ9i913rJvv0yysi+SE9q5iGiVo0W7DUELr850W70v31oF6mXU+v+i
wheRI7mSo8+VWv8f8yrMS6LCsTfhDoS9CXdQwsUnXHzoJ3sQ9pY7EOZTmI+w
t8Id/v0XFS45uEM0R58rtf7/VZZ/z5Bu44zQYUlW2MiJjnJz6UIiz580Fnha
PzXh4nOBW+ADJ/gInOBTwsWHXIU+dHwX8LvObDS339GS7/vWRHVcoWZR4cWT
qqbx0chbnueBMpstqjpOqKMq/Adhz7en
   "], $CellContext`rotatedVertices3D$$ = CompressedData["
1:eJxlUl1IU2EY3r9ty6agoTkoZ0hSmmXRD7PzBUlBF9LWRQZdTPKiBIsQpqXB
KAi6Emeg4EhmOAijWBZIrPORUUQ/WooGDSLDqy4qhAlONIPn+WKnA+fi+Xnf
9znve8qbLwVaLCaTyb/+Wtff7rK5ynCtRbQ4Oha93XbZ9mul4/IXB7GArvi+
Su9S7UOruFKYmpjNOmRRvOtHzXMbMXXFf+48dKLum1mUPD4b33IyTx59409O
vrMTU1f8eeS4jlycCyyhK74dOXqRi3OBJXTFFyFHGrmOYS6whK74/MWto+eG
8mVsrnq5KmqWOweOZwY657X972eaLw5vkG2ZQGhhNaMN+YbDNSN2QR/r6KeP
dfQfcCWfXY065EiivWTT2JLG7yKmTn76sOXBvK1Auu/39t8Mruqz6cHibacn
tKnG8YJPG90yli1LjX3Maj5Xa9ZZbxH7wjue1Cdd8l4k5O77vaaZ8NSBj4MP
+guXX+eZ/+tPPzF1zh3EPM6vwFzO43z2MfIBzDX2px970LEHdXdi6uSxd95B
GO4lcAfdcC9VZ7iXzjr6kVNDTsE9YO869iB8uXvQ8b2C34W967iDCObuQfWn
n5i64e4Cd9Arcu+u5rOPkQ/k3l31p3+mNPHUVOyRm1MvqkunzfLC3SPWpq4p
zVm117G73ylvv2rYHj21ot3w3jmz8NYm6GNdCP4e+Fyoi8APH+sE/fAJ1OmR
3P6qjnmQQ0cuwTwv06OJng8ecWu8qbE89u//J6Zu4HXw6j8kpk5+1zX9YMN3
s3wU/dm6x+ORX9f+PpMaMXUDL8AL8sTUyf8BUxNsvQ==
   "], $CellContext`calcVertices$$ = CompressedData["
1:eJx1lE8oRGEUxQeFUiyFJAsbsZCM2PgWs5CljUH5m1IWlJXSNDvCghoToZnF
LAxZacZL1EGxUlYShcJYkJTNlAUzvXsf8+osXrfvd8937+2e917tyGT3WL7H
4/FlnoLM85q6nL1I9hpr76PxO68OZSNVmxPxSkM4lEcGxn8eS5pxNpyrd3G8
CJ9KDIbvlxoBK+Bdf6gzhEP7pSTvkXkIR1T6KX+UeQjHkPTTeaMyD+HA9Ohx
6UINYtl6i+323Nc9RrmeNa/Rndd44qqH5OHBe1Gxo1u6KXzt22n56yN55c82
x+pG61f1nddEs7G/zYTsiJDwlNyft+/Ze8r0c3OpZ7Ylr/V35Sw6zTt65dpP
723+nyfDdS7tG82t63CtOydc+7vnms/dgxGdw4PZWN9snkSve9NzQPLKyf5B
9g/iL4i/7P0BeX9AfATxHcRfEH9B/AXxF8RHEN9B/AXxF8RfEH9B/AXxF0H9
vzzMNr1VtJrIeeenb9/vfO9bcr6Q/JFEvad61U256hE9iB5rsrft8tuO9Kkf
V7GurfhKgyGczQ8yP+JyPyz1LKlPOJblrH3S3plE0PI7Z80rJ3oQPX4B6ouN
Ug==
   "], $CellContext`downP$$ = $CellContext`result$2182680, \
$CellContext`calcFaces$$ = {{}, {}, {1, 5, 3, 4, 6, 2}, {}, {7, 11, 9, 10, 12,
     8}, {}, {13, 15, 16, 18, 17, 14}, {19, 23, 24, 22, 21, 20}, {25, 29, 30, 
    28, 27, 26}, {19, 32, 31, 25, 26, 20}, {33, 38, 37, 35, 36, 34}, {39, 41, 
    42, 44, 43, 40}, {45, 47, 48, 50, 49, 46}, {39, 45, 46, 51, 52, 40}, {13, 
    53, 21, 22, 54, 14}, {15, 55, 27, 28, 56, 16}, {1, 18, 17, 7, 8, 33, 34, 
    2}, {}, {35, 57, 47, 48, 58, 36}, {3, 30, 29, 59, 60, 49, 50, 4}, {37, 61,
     41, 42, 62, 38}, {}, {9, 24, 23, 63, 64, 43, 44, 10}, {}, {}, {31, 59, 
    60, 51, 52, 64, 63, 32}, {13, 53, 66, 65, 55, 15}, {7, 17, 14, 54, 11}, {
    1, 18, 16, 56, 5}, {35, 57, 67, 68, 61, 37}, {25, 59, 29}, {19, 63, 23}, {
    45, 67, 57, 47}, {46, 60, 49}, {39, 68, 61, 41}, {25, 59, 31}, {40, 64, 
    43}, {19, 63, 32}, {26, 65, 55, 27}, {8, 33, 38, 62, 12}, {20, 66, 53, 
    21}, {9, 24, 22, 54, 11}, {2, 34, 36, 58, 6}, {3, 30, 28, 56, 5}, {20, 66,
     65, 26}, {10, 44, 42, 62, 12}, {4, 50, 48, 58, 6}, {39, 68, 67, 45}, {46,
     60, 51}, {40, 64, 
    52}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, $CellContext`CalcrotatedVertices2D$$ = \
CompressedData["
1:eJxTTMoPSmViYGBwAWIQ/ct+j1wdH49D3oc/FQW32RzQ+SF9Nmv2a/M5iCyq
ea23jwWDr5pe81ROltfB8aTNpvNnWDH4UPMOoJl/AM38A2jmw/kqEPMOuEDN
Q+enXzfKVOL+uF9npvu3mZWP7DlXrNKL7OU8sFBpcbneMri8PZq8A0ze5laA
rngEB9w9UD7c/25bjuW8duQ9kCDWbjnnI+OBeI7Fidl3v+93ANu/eX8clH/l
zhxRhZDD9i0HHq2q/cZzQIkr+zenLRPcP0E2gr+OszMeQOPDzHdAM98ezXx7
NPMd0Mx3QDMfxnewAPsHFp9MB6D8AzA+If8TCj9C4Y8eXujhSWn4oYcXenjS
OvxWPvZbvmX/p/2Z8+2YI2su2CftutJtIsNzoElmasTT0ywOyyHy9olQ+RSI
vEMDkfKhUPfkQu1D5xOyHxZeMPei809Z16fNW/DJ/t5/EDhvD+XvR+PjlAcA
06z/wQ==
   "], $CellContext`CalcrotatedVertices3D$$ = CompressedData["
1:eJx9kl1Ik1EYx+f8yOXraGJGZKtGQaANES+SVudZWaOiFUPD3VhKfqFWXpgK
a0XaB0ReBF4IlpWQtbqIEgKJngcEIwuMkAIrLxQvRBC3iwkWmLlzBu+BpxfO
zY8/7/M7z//sqrkUqLVaLJaytZO6dlbEO2fYbsDFpT8dl39kwPGRnjYj8lUw
HMt7PC+xwA65T0IL7vdpkCvzDMc99aE55/Zs8H70vJ74nA7jOW+XpwamBcNR
ziU1V5h9dK58SM3da/bROe5OzKUyOfeB9GE41n8vbnRlRbGwzxfv65wRh4Nb
fYWvNoHtWcQdvGejx67BdvfTdLBlnQpW9caEzAsmD3reM3Vm35bKzOS9upoD
3acrFhUHnR8bHmte8GbT+bzbpf3RFPJ7r2zLoKg4lzlY3fRrGWHd/w0ekXOr
JJ/82b95Z/moULybZiJX4wa5Njb9th20giF91N4CHsfKhw0pFJZzNQ5hsw8o
n5NmH8H4CMYHlI/d7AOMD+g++9f3pt6tlbrMnHTO7B+Z/SPTLzH9cu+HmPeD
TI/E9I5Mv8T0i0y/Olf7RKZHYnpHpl9i+kWmX50nfZh+kekXn8/6h4Yxho0D
h1KDoS9ivvN+8a0TDqgZmbxbkm/QjfzeyrlPadB2p+FFvGBJDCXyolrLX0jk
4brMt/4/T0weK+S9WqTnWXDu+LY6KxjO+RPjn+xR7eGo/D/DcfzAtbqHj2Ji
evXfNyF8N4vyivwOkBwZrueJydNfmRvuIw==
   "], $CellContext`\[CapitalDelta]\[Gamma]3z$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]pos1z$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]neg1z$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]posxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]negxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]pos1z$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]neg1z$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]5z$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]neg5xposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]negxpos5y$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]posxnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]posxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]negxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]negxnegy$$ = 
   0, $CellContext`\[Delta]1$$ = 5, $CellContext`\[CapitalDelta]100negz$$ = 
   0, $CellContext`plateThickness$$ = 0.4, $CellContext`cutLoss$$ = 
   0.1, $CellContext`beginningCutPosition$$ = -1, \
$CellContext`endCutPosition$$ = 1, $CellContext`verticeTransform1$$ = 
   TransformationFunction[{{
     2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {-2^Rational[-1, 2], 2^
      Rational[-1, 2], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
     1}}], $CellContext`verticeTransform2$$ = 
   TransformationFunction[{{0, 0, -1, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 
    0, 1}}], $CellContext`transformAxisSystem$$ = 
   True, $CellContext`f00neg1$$ = 1, $CellContext`f00pos1$$ = 
   1, $CellContext`fpos100$$ = 1, $CellContext`fneg100$$ = 
   1, $CellContext`f0pos10$$ = 1, $CellContext`f0neg10$$ = 
   1, $CellContext`fpos1pos1pos1$$ = 
   0.5412658773652741, $CellContext`fneg1pos1pos1$$ = 
   0.5412658773652741, $CellContext`fpos1neg1pos1$$ = 
   0.5412658773652741, $CellContext`fneg1neg1pos1$$ = 
   0.5412658773652741, $CellContext`fpos1pos1neg1$$ = 
   0.5412658773652741, $CellContext`fneg1pos1neg1$$ = 
   0.5412658773652741, $CellContext`fpos1neg1neg1$$ = 
   0.5412658773652741, $CellContext`fneg1neg1neg1$$ = 
   0.5412658773652741, $CellContext`f0pos1pos1$$ = 
   0.6734350297014738, $CellContext`fpos10pos1$$ = 
   0.6734350297014738, $CellContext`fpos1pos10$$ = 
   0.6734350297014738, $CellContext`f0neg1pos1$$ = 
   0.6734350297014738, $CellContext`fpos10neg1$$ = 
   0.6734350297014738, $CellContext`fpos1neg10$$ = 
   0.6734350297014738, $CellContext`f0pos1neg1$$ = 
   0.6734350297014738, $CellContext`fneg10pos1$$ = 
   0.6734350297014738, $CellContext`fneg1pos10$$ = 
   0.6734350297014738, $CellContext`f0neg1neg1$$ = 
   0.6734350297014738, $CellContext`fneg10neg1$$ = 
   0.6734350297014738, $CellContext`fneg1neg10$$ = 
   0.6734350297014738, $CellContext`fpos1pos1pos3$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos1pos3pos1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos3pos1pos1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos1pos1neg3$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos1neg3pos1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg3pos1pos1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos1neg1neg3$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos1neg3neg1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg1pos1neg3$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg1neg3pos1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg3pos1neg1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg3neg1pos1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos1neg1pos3$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos1pos3neg1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg1pos1pos3$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg1pos3pos1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos3pos1neg1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos3neg1pos1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg1neg1pos3$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg1pos3neg1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos3neg1neg1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg1neg1neg3$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg1neg3neg1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fneg3neg1neg1$$ = Rational[1, 4] 
   11^Rational[1, 2], $CellContext`fpos1pos1pos5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1pos5pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos5pos1pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1pos1neg5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1neg5pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg5pos1pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1neg1neg5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1neg5neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1pos1neg5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1neg5pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg5pos1neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg5neg1pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1neg1pos5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1pos5neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1pos1pos5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1pos5pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos5pos1neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos5neg1pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1neg1pos5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1pos5neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos5neg1neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1neg1neg5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1neg5neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg5neg1neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`individualGrowthFactors$$ = 
   False, $CellContext`factorSelection$$, $CellContext`factorList$$ = {
   1, 1, 1, 1, 1, 1, 0.5412658773652741, 0.5412658773652741, 
    0.5412658773652741, 0.5412658773652741, 0.5412658773652741, 
    0.5412658773652741, 0.5412658773652741, 0.5412658773652741, 
    0.6734350297014738, 0.6734350297014738, 0.6734350297014738, 
    0.6734350297014738, 0.6734350297014738, 0.6734350297014738, 
    0.6734350297014738, 0.6734350297014738, 0.6734350297014738, 
    0.6734350297014738, 0.6734350297014738, 0.6734350297014738, 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[1, 4] 11^Rational[1, 2], Rational[1, 4] 11^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 
    3^Rational[1, 2]}, $CellContext`exportIndividualParameters$$ = Hold[
    Export[$CellContext`saveDirectory$$ <> 
     "Individual Parameter Config " <> $CellContext`parameterConfigFileName$$ <> 
     ".txt", 
     Compress[{$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$}]]], $CellContext`exportPlateCuts$$, \
$CellContext`plateCutsName$$, $CellContext`averageGrowthFactors$$ = {{
    "\!\(\*SubscriptBox[\(f\), \({10} 0\)]\)", 1}, {
    "\!\(\*SubscriptBox[\(f\), \({11} 0\)]\)", 0.6734350297014738}, {
    "\!\(\*SubscriptBox[\(f\), \({10} 1\)]\)", 0.6734350297014738}, {
    "\!\(\*SubscriptBox[\(f\), \({10} \*OverscriptBox[\(1\), \(_\)]\)]\)", 
     0.6734350297014738}, {
    "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(1\), \(_\)]\)]\)", 
     0.5412658773652741}, {
    "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(1\), \(_\)]\)]\)", 
     0.5412658773652741}, {
    "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(3\), \(_\)]\)]\)", 
     Rational[1, 4] 11^Rational[1, 2]}, {
    "\!\(\*SubscriptBox[\(f\), \({11} 3\)]\)", Rational[1, 4] 
     11^Rational[1, 2]}, {
    "\!\(\*SubscriptBox[\(f\), \({31} 1\)]\)", Rational[1, 4] 
     11^Rational[1, 2]}, {
    "\!\(\*SubscriptBox[\(f\), \({31} \*OverscriptBox[\(1\), \(_\)]\)]\)", 
     Rational[1, 4] 11^Rational[1, 2]}, {
    "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(5\), \(_\)]\)]\)", 
     Rational[3, 5] 3^Rational[1, 2]}, {
    "\!\(\*SubscriptBox[\(f\), \({11} 5\)]\)", Rational[3, 5] 
     3^Rational[1, 2]}, {
    "\!\(\*SubscriptBox[\(f\), \({51} 5\)]\)", Rational[3, 5] 
     3^Rational[1, 2]}, {
    "\!\(\*SubscriptBox[\(f\), \({51} \*OverscriptBox[\(5\), \(_\)]\)]\)", 
     Rational[3, 5] 3^Rational[1, 2]}}}, 
   TagBox[GridBox[{
      {
       TemplateBox[{
         PanelBox[
          TagBox[
           GridBox[{{"\"Transform Axis System\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{$CellContext`transformAxisSystem$$, {
                   True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Draw a box with axes\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`boxed$$, True}, {
                   True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Hide vertices\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`hideVertices$$, True}, {
                   True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Show Area and Velocities\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`showAreaAndVelocities$$, 
                    True}, {True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Opacity\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`opacity$$], 
                    Dynamic[$CellContext`opacity$$], {0, 1}, Medium, Small, 
                    Automatic, True, Automatic, False, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {147.546, {5., 8.}}], DynamicUpdating -> 
                  True], DynamicModuleValues :> {}], BaselinePosition -> 
                Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`opacity$$], {0, 1}, {}]]}, {
              TagBox[
               DynamicModuleBox[{Typeset`var$$ = True}, 
                InterpretationBox[
                 StyleBox[
                  PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"Initial shape\"", StripOnInput -> False, FontSize -> 
                    Medium, FontWeight -> Bold]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"Initial shape\"", StripOnInput -> False, FontSize -> 
                    Medium, FontWeight -> Bold]}, {"", 
                    PaneBox[
                    TagBox[
                    
                    GridBox[{{
                    "\"Reference size \\!\\(\\*SubscriptBox[\\(l\\), \\(0\\)]\
\\) (mm)\"", 
                    TagBox[
                    PaneBox[
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                    Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                    Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`l0$$, ($CellContext`l0$$ = #; \
$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$))& ], 
                    
                    Dynamic[$CellContext`l0$$, ($CellContext`l0$$ = #; \
$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$))& ], {0.1, 10}, 
                    Medium, Small, 
                    Dynamic[
                    Not[$CellContext`infty$$]], True, Automatic, True, True, 
                    True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                    ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                    DynamicUpdating -> True], DynamicModuleValues :> {}], 
                    BaselinePosition -> Baseline, ImageMargins -> 0], 
                    Manipulate`InterpretManipulator[
                    
                    Dynamic[$CellContext`l0$$, ($CellContext`l0$$ = #; \
$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$))& ], {0.1, 10}, {
                    Enabled -> Dynamic[
                    Not[$CellContext`infty$$]], Appearance -> "Labeled"}]]}, {
                    "\"Initial Height (factor)\"", 
                    TagBox[
                    PaneBox[
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                    Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                    Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "Manipulator06"][
                    Dynamic[
                    Part[$CellContext`ds$$, 7], (
                    Part[$CellContext`ds$$, 7] = #; 
                    ReleaseHold[$CellContext`calcTilt$$]; Null)& ], 
                    Dynamic[
                    Part[$CellContext`ds$$, 7], (
                    Part[$CellContext`ds$$, 7] = #; 
                    ReleaseHold[$CellContext`calcTilt$$]; Null)& ], {0.01, 1},
                     Medium, Small, Automatic, False, Automatic, True, True, 
                    True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                    ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                    DynamicUpdating -> True], DynamicModuleValues :> {}], 
                    BaselinePosition -> Baseline, ImageMargins -> 0], 
                    Manipulate`InterpretManipulator[
                    Dynamic[
                    Part[$CellContext`ds$$, 7], (
                    Part[$CellContext`ds$$, 7] = #; 
                    ReleaseHold[$CellContext`calcTilt$$]; Null)& ], {
                    0.01, 1}, {
                    Appearance -> "Labeled", ContinuousAction -> False}]]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                   Dynamic[
                    TrueQ[Typeset`var$$]], Alignment -> Automatic, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                   ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                  False], 
                 OpenerView[{
                   Style["Initial shape", Bold, Medium], 
                   
                   Grid[{{"Reference size \!\(\*SubscriptBox[\(l\), \(0\)]\) \
(mm)", 
                    Manipulator[
                    
                    Dynamic[$CellContext`l0$$, ($CellContext`l0$$ = #; \
$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$))& ], {0.1, 10}, 
                    Enabled -> Dynamic[
                    Not[$CellContext`infty$$]], Appearance -> "Labeled"]}, {
                    "Initial Height (factor)", 
                    Manipulator[
                    Dynamic[
                    Part[$CellContext`ds$$, 7], (
                    Part[$CellContext`ds$$, 7] = #; 
                    ReleaseHold[$CellContext`calcTilt$$]; Null)& ], {0.01, 1},
                     Appearance -> "Labeled", ContinuousAction -> False]}}]}, 
                  True]], DynamicModuleValues :> {}], Setting[#, {0}]& ], 
              "\[SpanFromLeft]"}, {
              StyleBox[
              "\"Cut settings\"", StripOnInput -> False, FontSize -> Medium, 
               FontWeight -> Bold], ""}, {"\"Cut at time t\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{$CellContext`cutOn$$, {False, True}}, 
                  Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"cut normal \\!\\(\\*SubscriptBox[\\(n\\), \\(x\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`n1$$, ($CellContext`n1$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], 
                    
                    Dynamic[$CellContext`n1$$, ($CellContext`n1$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], {-1, 1, 1}, Medium, Small, Automatic, True, 
                    Automatic, True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`n1$$, ($CellContext`n1$$ = 
                  Round[#]; $CellContext`n$$ = 
                  Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                  Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                 Null)& ], {-1, 1, 1}, {Appearance -> "Labeled"}]]}, {
             "\"cut normal \\!\\(\\*SubscriptBox[\\(n\\), \\(y\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`n2$$, ($CellContext`n2$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], 
                    
                    Dynamic[$CellContext`n2$$, ($CellContext`n2$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], {-1, 1, 1}, Medium, Small, Automatic, True, 
                    Automatic, True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`n2$$, ($CellContext`n2$$ = 
                  Round[#]; $CellContext`n$$ = 
                  Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                  Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                 Null)& ], {-1, 1, 1}, {Appearance -> "Labeled"}]]}, {
             "\"cut normal \\!\\(\\*SubscriptBox[\\(n\\), \\(z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`n3$$, ($CellContext`n3$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], 
                    
                    Dynamic[$CellContext`n3$$, ($CellContext`n3$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], {-1, 1, 1}, Medium, Small, Automatic, True, 
                    Automatic, True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`n3$$, ($CellContext`n3$$ = 
                  Round[#]; $CellContext`n$$ = 
                  Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                  Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                 Null)& ], {-1, 1, 1}, {Appearance -> "Labeled"}]]}, {
             "\"Cut plane distance from 0\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`cutPosition$$], 
                    Dynamic[$CellContext`cutPosition$$], 
                    
                    Dynamic[{(-(
                    Sqrt[3] $CellContext`V100$$/$CellContext`l0$$)) \
($CellContext`t$$ + $CellContext`l0$$/(2 $CellContext`V100$$)), (
                    Sqrt[3] $CellContext`V100$$/$CellContext`l0$$) \
($CellContext`t$$ + $CellContext`l0$$/(2 $CellContext`V100$$))}], Medium, 
                    Small, Automatic, True, Automatic, True, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`cutPosition$$], 
                
                Dynamic[{(-(
                    Sqrt[3] $CellContext`V100$$/$CellContext`l0$$)) \
($CellContext`t$$ + $CellContext`l0$$/(2 $CellContext`V100$$)), (
                   Sqrt[3] $CellContext`V100$$/$CellContext`l0$$) \
($CellContext`t$$ + $CellContext`l0$$/(2 $CellContext`V100$$))}], {
                Appearance -> "Labeled"}]]}, {"\"Preview quality\"", 
              InterpretationBox[
               StyleBox[
                GridBox[{{
                   SliderBox[
                    Dynamic[$CellContext`previewNum$$], {10, 300, 1}, 
                    Appearance -> Automatic, DefaultBaseStyle -> 
                    "LabeledSlider"], 
                   InputFieldBox[
                    Dynamic[$CellContext`previewNum$$], Appearance -> 
                    "Frameless", ContinuousAction -> True, DefaultBaseStyle -> 
                    "LabeledSlider", FieldSize -> {{5, 10}, {1, 2}}, 
                    ImageMargins -> 0]}}, AutoDelete -> False, 
                 BaselinePosition -> {{1, 1}, Axis}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], Deployed -> True, StripOnInput -> False, 
                FontFamily :> CurrentValue["ControlsFontFamily"]], 
               LabeledSlider[
                Dynamic[$CellContext`previewNum$$], {10, 300, 1}]]}, {
             "\"Number of steps\"", 
              InterpretationBox[
               StyleBox[
                GridBox[{{
                   SliderBox[
                    Dynamic[$CellContext`Num$$], {10, 1000, 1}, Appearance -> 
                    Automatic, ContinuousAction -> False, DefaultBaseStyle -> 
                    "LabeledSlider"], 
                   InputFieldBox[
                    Dynamic[$CellContext`Num$$], Appearance -> "Frameless", 
                    ContinuousAction -> False, DefaultBaseStyle -> 
                    "LabeledSlider", FieldSize -> {{5, 10}, {1, 2}}, 
                    ImageMargins -> 0]}}, AutoDelete -> False, 
                 BaselinePosition -> {{1, 1}, Axis}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], Deployed -> True, StripOnInput -> False, 
                FontFamily :> CurrentValue["ControlsFontFamily"]], 
               LabeledSlider[
                Dynamic[$CellContext`Num$$], {10, 1000, 1}, ContinuousAction -> 
                False]]}, {"\"tMin for section\"", 
              InterpretationBox[
               StyleBox[
                GridBox[{{
                   SliderBox[
                    Dynamic[
                    BoxForm`RemapVariable[$CellContext`tMin$$, {0.0001, 
                    Min[0.01, $CellContext`t$$ - 0.01]}], 
                    BoxForm`RemapValue[#, $CellContext`tMin$$, {0.0001, 
                    Min[0.01, $CellContext`t$$ - 0.01]}]& ], {0., 1.}, 
                    Appearance -> Automatic, DefaultBaseStyle -> 
                    "LabeledSlider"], 
                   InputFieldBox[
                    Dynamic[$CellContext`tMin$$], Appearance -> "Frameless", 
                    ContinuousAction -> True, DefaultBaseStyle -> 
                    "LabeledSlider", FieldSize -> {{5, 10}, {1, 2}}, 
                    ImageMargins -> 0]}}, AutoDelete -> False, 
                 BaselinePosition -> {{1, 1}, Axis}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], Deployed -> True, StripOnInput -> False, 
                FontFamily :> CurrentValue["ControlsFontFamily"]], 
               LabeledSlider[
                Dynamic[
                 BoxForm`RemapVariable[$CellContext`tMin$$, {0.0001, 
                   Min[0.01, $CellContext`t$$ - 0.01]}], 
                 BoxForm`RemapValue[#, $CellContext`tMin$$, {0.0001, 
                   Min[0.01, $CellContext`t$$ - 0.01]}]& ], {0., 1.}]]}, {
             "\"Time Step (hrs)\"", 
              InterpretationBox[
               StyleBox[
                GridBox[{{
                   SliderBox[
                    Dynamic[$CellContext`timeStep$$], {
                    Dynamic[$CellContext`t$$/100], 
                    Dynamic[$CellContext`t$$], 
                    Dynamic[$CellContext`t$$/1000]}, Appearance -> Automatic, 
                    DefaultBaseStyle -> "LabeledSlider"], 
                   InputFieldBox[
                    Dynamic[$CellContext`timeStep$$], Appearance -> 
                    "Frameless", ContinuousAction -> True, DefaultBaseStyle -> 
                    "LabeledSlider", FieldSize -> {{5, 10}, {1, 2}}, 
                    ImageMargins -> 0]}}, AutoDelete -> False, 
                 BaselinePosition -> {{1, 1}, Axis}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], Deployed -> True, StripOnInput -> False, 
                FontFamily :> CurrentValue["ControlsFontFamily"]], 
               LabeledSlider[
                Dynamic[$CellContext`timeStep$$], {
                 Dynamic[$CellContext`t$$/100], 
                 Dynamic[$CellContext`t$$], 
                 Dynamic[$CellContext`t$$/1000]}]]}, {
              StyleBox[
              "\"Growth settings\"", StripOnInput -> False, FontSize -> 
               Medium, FontWeight -> Bold], ""}, {
             "\"Calculate Equilibrium Shape\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{$CellContext`infty$$, {True, False}}, 
                  Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Time of growth (hrs)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = 1, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`t$$, ($CellContext`t$$ = #; 
                    If[$CellContext`constantVelocity$$, $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 10^(-3), 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                    
                    Dynamic[$CellContext`t$$, ($CellContext`t$$ = #; 
                    If[$CellContext`constantVelocity$$, $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 10^(-3), 
                    
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                    Dynamic[{
                    If[$CellContext`cutOn$$, $CellContext`tMin$$ + 0.01, 0], 
                    1000}], Medium, Small, 
                    Dynamic[
                    Not[$CellContext`infty$$]], True, Automatic, True, True, 
                    True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`t$$, ($CellContext`t$$ = #; 
                 If[$CellContext`constantVelocity$$, $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 10^(-3), 
                   
                   Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]]; 
                 Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                Dynamic[{
                  If[$CellContext`cutOn$$, $CellContext`tMin$$ + 0.01, 0], 
                  1000}], {
                Appearance -> "Labeled", AnimationRate -> 1, Enabled -> 
                 Dynamic[
                   Not[$CellContext`infty$$]]}]]}, {
             "\"Allow (\\!\\(\\*OverscriptBox[\\(1\\), \\(_\\)]\\) \
\\!\\(\\*OverscriptBox[\\(1\\), \\(_\\)]\\) 0) growth\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{$CellContext`growDown$$, {True, False}}, 
                  Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
              StyleBox[
              "\"Constant Velocity\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"Enable Constant Velocity\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`constantVelocity$$, 
                    False}, {True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Constant Growth Velocity (\[Micro]m/hr)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`constantVelocityValue$$, \
($CellContext`constantVelocityValue$$ = #; $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 
                    10^(-3); $CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$); Null)& ], 
                    
                    Dynamic[$CellContext`constantVelocityValue$$, \
($CellContext`constantVelocityValue$$ = #; $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 
                    10^(-3); $CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$); Null)& ], {0.1, 1000}, Medium, 
                    Small, 
                    Dynamic[$CellContext`constantVelocity$$], True, Automatic,
                     True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`constantVelocityValue$$, \
($CellContext`constantVelocityValue$$ = #; $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 
                   10^(-3); $CellContext`L$$ = $CellContext`l0$$/(
                   2 $CellContext`V100$$); Null)& ], {0.1, 1000}, {
                Appearance -> "Labeled", Enabled -> 
                 Dynamic[$CellContext`constantVelocity$$]}]]}, {
              StyleBox[
              "\"Time Dependent Velocity:\\n v(t) = \
\\!\\(\\*FractionBox[\\(\\(A\\)\\(\\\\ \\)\\), SuperscriptBox[\\((C + t)\\), \
\\(B\\)]]\\) (\[Micro]m/hr)\"", StripOnInput -> False, FontSize -> Small, 
               FontWeight -> Bold], ""}, {"\"Show Velocity Plot\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`ShowVelocityPlot$$, 
                    False}, {True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Velocity A Coefficient\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`velocityA$$, \
($CellContext`velocityA$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                    
                    Dynamic[$CellContext`velocityA$$, \
($CellContext`velocityA$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {0, 5000}, Medium, Small, 
                    Dynamic[
                    Not[$CellContext`constantVelocity$$]], True, Automatic, 
                    True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`velocityA$$, ($CellContext`velocityA$$ = \
#; Quiet[$CellContext`V100$$ = 
                   NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                 Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {0, 5000}, {
                Appearance -> "Labeled", Enabled -> Dynamic[
                   Not[$CellContext`constantVelocity$$]]}]]}, {
             "\"Velocity B Coefficient\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`velocityB$$, \
($CellContext`velocityB$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                    
                    Dynamic[$CellContext`velocityB$$, \
($CellContext`velocityB$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {-1, 10}, Medium, Small, 
                    Dynamic[
                    Not[$CellContext`constantVelocity$$]], True, Automatic, 
                    True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`velocityB$$, ($CellContext`velocityB$$ = \
#; Quiet[$CellContext`V100$$ = 
                   NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                 Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {-1, 10}, {
                Appearance -> "Labeled", Enabled -> Dynamic[
                   Not[$CellContext`constantVelocity$$]]}]]}, {
             "\"Velocity C Coefficient\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`velocityC$$, \
($CellContext`velocityC$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                    
                    Dynamic[$CellContext`velocityC$$, \
($CellContext`velocityC$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {0.0001, 5000}, Medium, 
                    Small, 
                    Dynamic[
                    Not[$CellContext`constantVelocity$$]], True, Automatic, 
                    True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`velocityC$$, ($CellContext`velocityC$$ = \
#; Quiet[$CellContext`V100$$ = 
                   NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                 Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {0.0001, 5000}, {
                Appearance -> "Labeled", Enabled -> Dynamic[
                   Not[$CellContext`constantVelocity$$]]}]]}, {
              TagBox[
               DynamicModuleBox[{Typeset`var$$ = False}, 
                InterpretationBox[
                 StyleBox[
                  PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"Individual Growth Parameters\"", StripOnInput -> False,
                     FontSize -> Medium, FontWeight -> Bold]}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"Individual Growth Parameters\"", StripOnInput -> False,
                     FontSize -> Medium, FontWeight -> Bold]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{"\"Enable Individual Growth Factors\"", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    
                    Manipulate`Control[{$CellContext`individualGrowthFactors$$\
, {True, False}}, Automatic], StandardForm]], "Control"]}, {
                    "\"Selected Parameter\"", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    
                    Manipulate`Control[{{$CellContext`factorSelection$$, 
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)"}, {
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}}, 
                    Automatic, 
                    Enabled -> $CellContext`individualGrowthFactors$$], 
                    StandardForm]], "Control"]}, {"\"Parameter Value\"", 
                    TagBox[
                    PaneBox[
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                    Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                    Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "Manipulator06"][
                    Dynamic[
                    Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]], (Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]] = #; 
                    ReleaseHold[$CellContext`calcCutOff$$])& ], 
                    Dynamic[
                    Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]], (Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]] = #; 
                    ReleaseHold[$CellContext`calcCutOff$$])& ], {0, 4}, 
                    Medium, Small, 
                    Dynamic[$CellContext`individualGrowthFactors$$], False, 
                    Automatic, True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]]], DynamicUpdating -> True], 
                    DynamicModuleValues :> Automatic], BaselinePosition -> 
                    Baseline, ImageMargins -> 0], 
                    Manipulate`InterpretManipulator[
                    Dynamic[
                    Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]], (Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]] = #; 
                    ReleaseHold[$CellContext`calcCutOff$$])& ], {0, 4}, {
                    Appearance -> "Labeled", ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`individualGrowthFactors$$]}]]}, {
                    ButtonBox[
                    "\"Export Individual Growth Factor Configuration\"", 
                    Appearance -> Automatic, ButtonFunction :> 
                    ReleaseHold[$CellContext`exportIndividualParameters$$], 
                    Evaluator -> Automatic, Method -> "Preemptive"], ""}, {
                    ButtonBox[
                    "\"Upload Individual Growth Factor Configuration\"", 
                    Appearance -> Automatic, 
                    ButtonFunction :> ($CellContext`factorList$$ = Uncompress[
                    Import[
                    SystemDialogInput["FileOpen", ".txt"]]]; 
                    ReleaseHold[$CellContext`calcCutOff$$]), Evaluator -> 
                    Automatic, Method -> "Queued"], ""}}, AutoDelete -> False,
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                   Dynamic[
                    TrueQ[Typeset`var$$]], Alignment -> Automatic, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                   ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                  False], 
                 OpenerView[{
                   Style["Individual Growth Parameters", Bold, Medium], 
                   Grid[{{"Enable Individual Growth Factors", 
                    
                    Control[{$CellContext`individualGrowthFactors$$, {
                    True, False}}]}, {"Selected Parameter", 
                    
                    Control[{{$CellContext`factorSelection$$, 
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)"}, {
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, 
                    Enabled -> $CellContext`individualGrowthFactors$$}]}, {
                    "Parameter Value", 
                    Manipulator[
                    Dynamic[
                    Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]], (Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]] = #; 
                    ReleaseHold[$CellContext`calcCutOff$$])& ], {0, 4}, 
                    Appearance -> "Labeled", ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`individualGrowthFactors$$]]}, {
                    Button["Export Individual Growth Factor Configuration", 
                    ReleaseHold[$CellContext`exportIndividualParameters$$]]}, {
                    Button[
                    "Upload Individual Growth Factor Configuration", \
$CellContext`factorList$$ = Uncompress[
                    Import[
                    SystemDialogInput["FileOpen", ".txt"]]]; 
                    ReleaseHold[$CellContext`calcCutOff$$], Method -> 
                    "Queued"]}}]}, False]], DynamicModuleValues :> {}], 
               Setting[#, {0}]& ], "\[SpanFromLeft]"}, {
              StyleBox[
              "\"General parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {"\"\[Alpha]\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[Alpha]1$$], 
                    Dynamic[$CellContext`\[Alpha]1$$], {0.1, 10}, Medium, 
                    Small, Automatic, True, Automatic, True, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[Alpha]1$$], {0.1, 10}, {
                Appearance -> "Labeled"}]]}, {"\"\[Beta]\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[Beta]1$$], 
                    Dynamic[$CellContext`\[Beta]1$$], {0.1, 10}, Medium, 
                    Small, Automatic, True, Automatic, True, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[Beta]1$$], {0.1, 10}, {
                Appearance -> "Labeled"}]]}, {"\"\[Gamma]\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[Gamma]1$$], 
                    Dynamic[$CellContext`\[Gamma]1$$], {0.1, 10}, Medium, 
                    Small, Automatic, True, Automatic, True, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[Gamma]1$$], {0.1, 10}, {
                Appearance -> "Labeled"}]]}, {"\"\[Delta]\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[Delta]1$$], 
                    Dynamic[$CellContext`\[Delta]1$$], {0.1, 10}, Medium, 
                    Small, Automatic, True, Automatic, True, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[Delta]1$$], {0.1, 10}, {
                Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"{1 0 0} parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\(+z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100posz$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100posz$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100posz$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\(-z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100negz$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100negz$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100negz$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\({100} + x\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100posx$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100posx$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100posx$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\({100} + y\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100posy$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100posy$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100posy$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\({100} - x\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100negx$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100negx$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100negx$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\({100} - y\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100negy$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100negy$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100negy$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"{1 1 1} parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Alpha]\\), \
\\(-z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]z$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]z$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Alpha]z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Alpha]\\), \
\\((\\(+x\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]posxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]posxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Alpha]posxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Alpha]\\), \
\\((\\(+x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negyposx$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negyposx$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negyposx$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Alpha]\\), \\((\\(+\
\\(-x\\)\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Alpha]\\), \
\\((\\(-x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negynegx$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negynegx$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negynegx$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"{1 1 0} parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(+z\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posz$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posz$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]posz$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(-z\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negz$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negz$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negz$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\((\\(+x\
\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]posxposy$$], {-0.9,
                 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\((\\(+x\
\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negyposx$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negyposx$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negyposx$$], {-0.9,
                 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\((\\(-x\
\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negxposy$$], {-0.9,
                 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\((\\(-x\
\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negynegx$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negynegx$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negynegx$$], {-0.9,
                 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(+x\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posx$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posx$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]posx$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(+y\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posy$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posy$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]posy$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(-x\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negx$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negx$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negx$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(-y\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negy$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negy$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negy$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"{1 1 3} parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \\(\\(-3\
\\) z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]3z$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]3z$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]3z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \\(\\(+1\
\\) z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos1z$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos1z$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos1z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\[CapitalDelta]\[Gamma]\\!\\(\\*SubscriptBox[\\(-\\), \\(1  z\
\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg1z$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg1z$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg1z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(+x\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(+x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-x\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\(\\((\\(+3\\) x, \\(+y\\))\\)\\(,\\)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(+3\\) x, \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(+x\\), \\(-3\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(+x\\), \\(+3\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-3\\) x, \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-3\\) x, \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-x\\), \\(-3\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-x\\), \\(+3\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"{1 1 5} parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \\(\\(-5\
\\) z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]5z$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]5z$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]5z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \\(\\(+1\
\\) z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos1z$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos1z$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos1z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\[CapitalDelta]\[Delta]\\!\\(\\*SubscriptBox[\\(-\\), \\(1  z\
\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg1z$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg1z$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg1z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(+x\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(+x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-x\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\(\\((\\(+5\\) x, \\(+y\\))\\)\\(,\\)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(+5\\) x, \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(+x\\), \\(-5\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxneg5y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxneg5y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxneg5y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(+x\\), \\(+5\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxpos5y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxpos5y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxpos5y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-5\\) x, \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-5\\) x, \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-x\\), \\(-5\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxneg5y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxneg5y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxneg5y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-x\\), \\(+5\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"Export Options\"", StripOnInput -> False, FontSize -> Medium,
                FontWeight -> Bold], ""}, {
              ButtonBox[
              "\"Choose Save Directory\"", Appearance -> Automatic, 
               ButtonFunction :> ($CellContext`saveDirectory$$ = 
                SystemDialogInput["Directory"]), Evaluator -> Automatic, 
               Method -> "Queued"], ""}, {
              StyleBox[
              "\"Export Crystal Shape\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {"\"CAD File Name\"", 
              InputFieldBox[
               Dynamic[$CellContext`cadFileName$$], String]}, {
              ButtonBox[
              "\"Export Shape\"", Appearance -> Automatic, ButtonFunction :> 
               ReleaseHold[$CellContext`exportShape$$], Evaluator -> 
               Automatic, Method -> "Preemptive"], ""}, {
              StyleBox[
              "\"Cut\"", StripOnInput -> False, FontSize -> Small, FontWeight -> 
               Bold], ""}, {"\"Cut Image File Name\"", 
              InputFieldBox[
               Dynamic[$CellContext`exportCutFileName$$], String]}, {
              ButtonBox[
              "\"Export Cut Image\"", Appearance -> Automatic, ButtonFunction :> 
               ReleaseHold[$CellContext`exportCutImage$$], Evaluator -> 
               Automatic, Method -> "Preemptive"], ""}, {
              StyleBox[
              "\"Plate Cuts\"", StripOnInput -> False, FontSize -> Small, 
               FontWeight -> Bold], ""}, {"\"Plate Cuts File Name\"", 
              InputFieldBox[
               Dynamic[$CellContext`plateCutsName$$], String]}, {
              ButtonBox[
              "\"Export Plate Cuts Image\"", Appearance -> Automatic, 
               ButtonFunction :> ReleaseHold[$CellContext`exportPlateCuts$$], 
               Evaluator -> Automatic, Method -> "Preemptive"], ""}, {
              StyleBox[
              "\"Parameter Settings\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"Parameter Config File Name\"", 
              InputFieldBox[
               Dynamic[$CellContext`parameterConfigFileName$$], String]}, {
              ButtonBox[
              "\"Export Parameter Configuration\"", Appearance -> Automatic, 
               ButtonFunction :> ReleaseHold[$CellContext`exportConfig$$], 
               Evaluator -> Automatic, Method -> "Preemptive"], ""}, {
              ButtonBox[
              "\"Upload Config File\"", Appearance -> Automatic, 
               ButtonFunction :> ({$CellContext`l0$$, $CellContext`V100$$, \
$CellContext`relativeOn$$, $CellContext`infty$$, $CellContext`opacity$$, \
$CellContext`boxed$$, $CellContext`planeChoice$$, $CellContext`normals$$, \
$CellContext`n$$, $CellContext`cutOn$$, $CellContext`drawCutPlane$$, \
$CellContext`cutPosition$$, $CellContext`previewNum$$, $CellContext`Num$$, \
$CellContext`tMin$$, $CellContext`t$$, $CellContext`\[Alpha]1$$, \
$CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, $CellContext`\
\[CapitalDelta]100posz$$, $CellContext`\[CapitalDelta]100posx$$, \
$CellContext`\[CapitalDelta]100posy$$, \
$CellContext`\[CapitalDelta]\[Alpha]z$$, \
$CellContext`\[CapitalDelta]\[Beta]posz$$, \
$CellContext`\[CapitalDelta]\[Beta]negz$$, \
$CellContext`\[CapitalDelta]\[Beta]posy$$, $CellContext`\[CapitalDelta]\
\[Alpha]posxposy$$, $CellContext`\[CapitalDelta]\[Alpha]negyposx$$, \
$CellContext`mult100$$, $CellContext`mult\[Alpha]$$, \
$CellContext`mult\[Beta]$$, $CellContext`mult\[Gamma]$$, $CellContext`ds$$, \
$CellContext`ds1$$, $CellContext`tiltAngles$$, $CellContext`growDown$$, \
$CellContext`\[CapitalDelta]\[Beta]posx$$, $CellContext`showVelocity$$, \
$CellContext`\[CapitalDelta]100negx$$, $CellContext`\[CapitalDelta]100negy$$, \
$CellContext`\[CapitalDelta]\[Alpha]negxposy$$, $CellContext`\[CapitalDelta]\
\[Alpha]negynegx$$, $CellContext`\[CapitalDelta]\[Beta]negx$$, $CellContext`\
\[CapitalDelta]\[Beta]negy$$, $CellContext`cutZAxis$$, \
$CellContext`cutYAxis$$, $CellContext`cutXAxis$$, $CellContext`timeStep$$, \
$CellContext`\[CapitalDelta]\[Beta]posxposy$$, $CellContext`\[CapitalDelta]\
\[Beta]negyposx$$, $CellContext`\[CapitalDelta]\[Beta]negxposy$$, \
$CellContext`\[CapitalDelta]\[Beta]negynegx$$, $CellContext`velocityA$$, \
$CellContext`velocityB$$, $CellContext`velocityC$$, \
$CellContext`constantVelocity$$, $CellContext`constantVelocityValue$$, \
$CellContext`t$$, $CellContext`\[CapitalDelta]\[Gamma]3z$$, $CellContext`\
\[CapitalDelta]\[Gamma]pos1z$$, $CellContext`\[CapitalDelta]\[Gamma]neg1z$$, \
$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]pos3xnegy$$, $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]neg3xposy$$, $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxpos3y$$, $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxposy$$, $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$, \
$CellContext`\[Delta]1$$, $CellContext`\[CapitalDelta]\[Delta]5z$$, \
$CellContext`\[CapitalDelta]\[Delta]pos1z$$, $CellContext`\[CapitalDelta]\
\[Delta]neg1z$$, $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$, \
$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$, $CellContext`\[CapitalDelta]\
\[Delta]posxneg5y$$, $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$, \
$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$, $CellContext`\[CapitalDelta]\
\[Delta]neg5xnegy$$, $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$, \
$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$, $CellContext`\[CapitalDelta]\
\[Delta]posxnegy$$, $CellContext`\[CapitalDelta]\[Delta]posxposy$$, \
$CellContext`\[CapitalDelta]\[Delta]negxposy$$, $CellContext`\[CapitalDelta]\
\[Delta]negxnegy$$, $CellContext`\[CapitalDelta]100negz$$, \
$CellContext`plateThickness$$, $CellContext`cutLoss$$, \
$CellContext`beginningCutPosition$$, $CellContext`endCutPosition$$} = 
                Uncompress[
                  Import[
                   SystemDialogInput["FileOpen", ".txt"]]]), Evaluator -> 
               Automatic, Method -> "Queued"], ""}, {
             "\"Print Parameter Configuration\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`printOn$$, False}, {
                   True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Insert Saved Parameter Configugration\"", 
              InputFieldBox[
               Dynamic[$CellContext`stateString$$], String]}, {
              ButtonBox[
              "\"Apply Settings\"", Appearance -> Automatic, 
               ButtonFunction :> ({$CellContext`l0$$, $CellContext`V100$$, \
$CellContext`relativeOn$$, $CellContext`infty$$, $CellContext`opacity$$, \
$CellContext`boxed$$, $CellContext`planeChoice$$, $CellContext`normals$$, \
$CellContext`n$$, $CellContext`cutOn$$, $CellContext`drawCutPlane$$, \
$CellContext`cutPosition$$, $CellContext`previewNum$$, $CellContext`Num$$, \
$CellContext`tMin$$, $CellContext`t$$, $CellContext`\[Alpha]1$$, \
$CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, $CellContext`\
\[CapitalDelta]100posz$$, $CellContext`\[CapitalDelta]100posx$$, \
$CellContext`\[CapitalDelta]100posy$$, \
$CellContext`\[CapitalDelta]\[Alpha]z$$, \
$CellContext`\[CapitalDelta]\[Beta]posz$$, \
$CellContext`\[CapitalDelta]\[Beta]negz$$, \
$CellContext`\[CapitalDelta]\[Beta]posy$$, $CellContext`\[CapitalDelta]\
\[Alpha]posxposy$$, $CellContext`\[CapitalDelta]\[Alpha]negyposx$$, \
$CellContext`mult100$$, $CellContext`mult\[Alpha]$$, \
$CellContext`mult\[Beta]$$, $CellContext`mult\[Gamma]$$, $CellContext`ds$$, \
$CellContext`ds1$$, $CellContext`tiltAngles$$, $CellContext`growDown$$, \
$CellContext`\[CapitalDelta]\[Beta]posx$$, $CellContext`showVelocity$$, \
$CellContext`\[CapitalDelta]100negx$$, $CellContext`\[CapitalDelta]100negy$$, \
$CellContext`\[CapitalDelta]\[Alpha]negxposy$$, $CellContext`\[CapitalDelta]\
\[Alpha]negynegx$$, $CellContext`\[CapitalDelta]\[Beta]negx$$, $CellContext`\
\[CapitalDelta]\[Beta]negy$$, $CellContext`cutZAxis$$, \
$CellContext`cutYAxis$$, $CellContext`cutXAxis$$, $CellContext`timeStep$$, \
$CellContext`\[CapitalDelta]\[Beta]posxposy$$, $CellContext`\[CapitalDelta]\
\[Beta]negyposx$$, $CellContext`\[CapitalDelta]\[Beta]negxposy$$, \
$CellContext`\[CapitalDelta]\[Beta]negynegx$$, $CellContext`velocityA$$, \
$CellContext`velocityB$$, $CellContext`velocityC$$, \
$CellContext`constantVelocity$$, $CellContext`constantVelocityValue$$, \
$CellContext`t$$, $CellContext`\[CapitalDelta]\[Gamma]3z$$, $CellContext`\
\[CapitalDelta]\[Gamma]pos1z$$, $CellContext`\[CapitalDelta]\[Gamma]neg1z$$, \
$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]pos3xnegy$$, $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]neg3xposy$$, $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxpos3y$$, $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxposy$$, $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$, \
$CellContext`\[Delta]1$$, $CellContext`\[CapitalDelta]\[Delta]5z$$, \
$CellContext`\[CapitalDelta]\[Delta]pos1z$$, $CellContext`\[CapitalDelta]\
\[Delta]neg1z$$, $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$, \
$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$, $CellContext`\[CapitalDelta]\
\[Delta]posxneg5y$$, $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$, \
$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$, $CellContext`\[CapitalDelta]\
\[Delta]neg5xnegy$$, $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$, \
$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$, $CellContext`\[CapitalDelta]\
\[Delta]posxnegy$$, $CellContext`\[CapitalDelta]\[Delta]posxposy$$, \
$CellContext`\[CapitalDelta]\[Delta]negxposy$$, $CellContext`\[CapitalDelta]\
\[Delta]negxnegy$$, $CellContext`\[CapitalDelta]100negz$$, \
$CellContext`plateThickness$$, $CellContext`cutLoss$$, \
$CellContext`beginningCutPosition$$, $CellContext`endCutPosition$$} = 
                 Uncompress[$CellContext`stateString$$]; 
                ReleaseHold[$CellContext`calcTilt$$]), Evaluator -> Automatic,
                Method -> "Preemptive"], ""}}, AutoDelete -> False, 
            GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
         DynamicBox[
          ToBoxes[If[
             Not[$CellContext`cutOn$$], 
             ReleaseHold[$CellContext`calcCutOff$$]; $CellContext`polygons$$ = \
{}; Null, $CellContext`infty$$ = False; ReleaseHold[$CellContext`calcCutOn$$]; 
             Null]; $CellContext`dsCurrent$$ = Prepend[
              Map[
              Norm[#] ($CellContext`V100$$/$CellContext`l0$$) \
$CellContext`param1[#, 
                 $CellContext`d[#], $CellContext`infty$$, $CellContext`\
\[Alpha]1$$, $CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, \
$CellContext`mult100$$, $CellContext`mult\[Alpha]$$, \
$CellContext`mult\[Beta]$$, $CellContext`mult\[Gamma]$$, $CellContext`L$$, \
$CellContext`t$$]& , 
               Rest[$CellContext`normals$$]], 
              0]; $CellContext`exportCurrentState$$ = 
            Compress[{$CellContext`l0$$, $CellContext`V100$$, \
$CellContext`relativeOn$$, $CellContext`infty$$, $CellContext`opacity$$, \
$CellContext`boxed$$, $CellContext`planeChoice$$, $CellContext`normals$$, \
$CellContext`n$$, $CellContext`cutOn$$, $CellContext`drawCutPlane$$, \
$CellContext`cutPosition$$, $CellContext`previewNum$$, $CellContext`Num$$, \
$CellContext`tMin$$, $CellContext`t$$, $CellContext`\[Alpha]1$$, \
$CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, $CellContext`\
\[CapitalDelta]100posz$$, $CellContext`\[CapitalDelta]100posx$$, \
$CellContext`\[CapitalDelta]100posy$$, \
$CellContext`\[CapitalDelta]\[Alpha]z$$, \
$CellContext`\[CapitalDelta]\[Beta]posz$$, \
$CellContext`\[CapitalDelta]\[Beta]negz$$, \
$CellContext`\[CapitalDelta]\[Beta]posy$$, $CellContext`\[CapitalDelta]\
\[Alpha]posxposy$$, $CellContext`\[CapitalDelta]\[Alpha]negyposx$$, \
$CellContext`mult100$$, $CellContext`mult\[Alpha]$$, \
$CellContext`mult\[Beta]$$, $CellContext`mult\[Gamma]$$, $CellContext`ds$$, \
$CellContext`ds1$$, $CellContext`tiltAngles$$, $CellContext`growDown$$, \
$CellContext`\[CapitalDelta]\[Beta]posx$$, $CellContext`showVelocity$$, \
$CellContext`\[CapitalDelta]100negx$$, $CellContext`\[CapitalDelta]100negy$$, \
$CellContext`\[CapitalDelta]\[Alpha]negxposy$$, $CellContext`\[CapitalDelta]\
\[Alpha]negynegx$$, $CellContext`\[CapitalDelta]\[Beta]negx$$, $CellContext`\
\[CapitalDelta]\[Beta]negy$$, $CellContext`cutZAxis$$, \
$CellContext`cutYAxis$$, $CellContext`cutXAxis$$, $CellContext`timeStep$$, \
$CellContext`\[CapitalDelta]\[Beta]posxposy$$, $CellContext`\[CapitalDelta]\
\[Beta]negyposx$$, $CellContext`\[CapitalDelta]\[Beta]negxposy$$, \
$CellContext`\[CapitalDelta]\[Beta]negynegx$$, $CellContext`velocityA$$, \
$CellContext`velocityB$$, $CellContext`velocityC$$, \
$CellContext`constantVelocity$$, $CellContext`constantVelocityValue$$, \
$CellContext`t$$, $CellContext`\[CapitalDelta]\[Gamma]3z$$, $CellContext`\
\[CapitalDelta]\[Gamma]pos1z$$, $CellContext`\[CapitalDelta]\[Gamma]neg1z$$, \
$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]pos3xnegy$$, $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]neg3xposy$$, $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxpos3y$$, $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxposy$$, $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$, \
$CellContext`\[Delta]1$$, $CellContext`\[CapitalDelta]\[Delta]5z$$, \
$CellContext`\[CapitalDelta]\[Delta]pos1z$$, $CellContext`\[CapitalDelta]\
\[Delta]neg1z$$, $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$, \
$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$, $CellContext`\[CapitalDelta]\
\[Delta]posxneg5y$$, $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$, \
$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$, $CellContext`\[CapitalDelta]\
\[Delta]neg5xnegy$$, $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$, \
$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$, $CellContext`\[CapitalDelta]\
\[Delta]posxnegy$$, $CellContext`\[CapitalDelta]\[Delta]posxposy$$, \
$CellContext`\[CapitalDelta]\[Delta]negxposy$$, $CellContext`\[CapitalDelta]\
\[Delta]negxnegy$$, $CellContext`\[CapitalDelta]100negz$$, \
$CellContext`plateThickness$$, $CellContext`cutLoss$$, \
$CellContext`beginningCutPosition$$, $CellContext`endCutPosition$$}]; \
$CellContext`exportInitialState$$ = 
            Compress[{$CellContext`l0$$, $CellContext`boxed$$, \
$CellContext`ds$$, $CellContext`tiltAngles$$, $CellContext`cutOn$$, \
$CellContext`drawCutPlane$$, $CellContext`n$$, $CellContext`cutPosition$$, \
$CellContext`Num$$, $CellContext`tMin$$, $CellContext`infty$$, \
$CellContext`t$$, $CellContext`V100$$, $CellContext`\[Alpha]1$$, \
$CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, $CellContext`mult100$$, \
$CellContext`mult\[Alpha]$$, $CellContext`mult\[Beta]$$, $CellContext`mult\
\[Gamma]$$}]; Grid[{{
               Dynamic[
                Show[$CellContext`polyGraphics$$, 
                 Graphics3D[$CellContext`polygons$$], 
                 Graphics3D[{
                   Thickness[0.003], $CellContext`timeStepLines3D$$}], 
                 Graphics3D[$CellContext`timePolygon3D$$], Boxed -> 
                 Dynamic[$CellContext`boxed$$], Axes -> 
                 Dynamic[$CellContext`boxed$$], ImageSize -> 500, Lighting -> 
                 "Neutral"]], "", ""}, {
               Dynamic[
                Show[
                "Vertices:", $CellContext`vertices$$, 
                 "Points", $CellContext`pts$$]]}, {
               Dynamic[
                If[$CellContext`cutOn$$, 
                 Show[
                  
                  Graphics[{$CellContext`polygons2D$$, \
$CellContext`timePolygon2D$$, 
                    Thickness[0.002], $CellContext`timeStepLines2D$$, 
                    Text["Time of first appearance = " <> ToString[
                    NumberForm[
                    If[
                    Min[$CellContext`timeStepLines$$] == $CellContext`tMin$$, 
                    0, 
                    Min[$CellContext`timeStepLines$$]], {10, 2}]] <> 
                    " hrs\nTime of growth completion = " <> ToString[
                    NumberForm[$CellContext`t$$, {10, 2}]] <> 
                    " hrs\nTime Intervals = " <> ToString[
                    NumberForm[$CellContext`timeStep$$, {10, 2}]] <> 
                    " hrs/step" <> "\n\[Alpha] = " <> 
                    ToString[$CellContext`\[Alpha]1$$] <> ", \[Beta] = " <> 
                    ToString[$CellContext`\[Beta]1$$] <> "\n\[Gamma] = " <> 
                    ToString[$CellContext`\[Gamma]1$$] <> "\nCut Plane: " <> 
                    StringReplace[
                    
                    ToString[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}], {
                    "-1" -> "\!\(\*OverscriptBox[\(1\), \(_\)]\)", "{" -> "(",
                     "}" -> ")", "," -> " "}] <> "\nCut Distance " <> 
                    ToString[$CellContext`cutPosition$$], \
{$CellContext`textX$$, $CellContext`textY$$ + 1}]}, Axes -> True, 
                   AxesLabel -> {"(mm)", "(mm)"}], Boxed -> 
                  Dynamic[$CellContext`boxed$$], Axes -> 
                  Dynamic[$CellContext`boxed$$], ImageSize -> 500], ""]]}, {
               Dynamic[
                If[$CellContext`ShowVelocityPlot$$, 
                 Show[$CellContext`velocityPlot$$, ImageSize -> 500], ""]]}, {
               Dynamic[
               If[$CellContext`infty$$, "", 
                  If[$CellContext`constantVelocity$$, "Constant Velocity = " <> 
                    ToString[
                    NumberForm[$CellContext`V100$$ 10^3, {10, 2}]], 
                    "Average Growth Velocity = " <> ToString[
                    NumberForm[
                    
                    If[$CellContext`t$$ == 
                    0, $CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`t$$)^$CellContext`velocityB$$, 
                    Quiet[
                    NIntegrate[$CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$, {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]], {
                    10, 2}]]] <> " (\[Micro]m/hr)\n"] <> 
                If[$CellContext`infty$$, "The steady-state shape.\nType: ", 
                  If[
                   Not[$CellContext`relativeOn$$], "Type: ", 
                   "Sizes are relative to \!\(\*SubscriptBox[\(l\), \(0\)]\).\
\nType: "]] <> $CellContext`type$$ <> "\n" <> $CellContext`info$$ <> "\n" <> 
                If[$CellContext`infty$$, "", "Volume = " <> ToString[
                    NumberForm[$CellContext`volume$$, {10, 2}]] <> 
                  " \!\(\*SuperscriptBox[\(mm\), \(3\)]\), Crystal Mass = " <> 
                  ToString[
                    NumberForm[$CellContext`volume$$ (3.5/1000), {10, 2}]] <> 
                  " g (" <> ToString[
                    
                    NumberForm[($CellContext`volume$$ (3.5/1000)) 5, {10, 
                    1}]] <> " ct)\nDiamond Height:" <> ToString[
                    NumberForm[$CellContext`maxHeight$$, {10, 2}]] <> " mm\n" <> 
                  "Largest Rectangle Dimensions: " <> ToString[
                    NumberForm[$CellContext`largestlength$$, {10, 2}]] <> 
                  " mm x " <> ToString[
                    NumberForm[$CellContext`largestwidth$$, {10, 2}]] <> 
                  " mm\n" <> "Bottom Facet Dimensions: " <> ToString[
                    NumberForm[$CellContext`bottomLength$$, {10, 2}]] <> 
                  " mm x " <> ToString[
                    NumberForm[$CellContext`bottomWidth$$, {10, 2}]] <> 
                  " mm\n" <> "Top Facet Dimensions: " <> ToString[
                    NumberForm[$CellContext`topLength$$, {10, 2}]] <> 
                  " mm x " <> ToString[
                    NumberForm[$CellContext`topWidth$$, {10, 2}]] <> " mm\n"],
                 ""]}}], StandardForm], 
          ImageSizeCache -> {
           1059.50322303772, {372.5838373644366, 376.59619096416}}, 
          SynchronousUpdating -> False, 
          TrackedSymbols :> {$CellContext`l0$$, $CellContext`V100$$, \
$CellContext`relativeOn$$, $CellContext`infty$$, $CellContext`opacity$$, \
$CellContext`boxed$$, $CellContext`planeChoice$$, $CellContext`normals$$, \
$CellContext`n$$, $CellContext`cutOn$$, $CellContext`drawCutPlane$$, \
$CellContext`cutPosition$$, $CellContext`previewNum$$, $CellContext`Num$$, \
$CellContext`tMin$$, $CellContext`t$$, $CellContext`\[Alpha]1$$, \
$CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, $CellContext`\
\[CapitalDelta]100posz$$, $CellContext`\[CapitalDelta]100posx$$, \
$CellContext`\[CapitalDelta]100posy$$, \
$CellContext`\[CapitalDelta]\[Alpha]z$$, \
$CellContext`\[CapitalDelta]\[Beta]posz$$, \
$CellContext`\[CapitalDelta]\[Beta]negz$$, \
$CellContext`\[CapitalDelta]\[Beta]posy$$, $CellContext`\[CapitalDelta]\
\[Alpha]posxposy$$, $CellContext`\[CapitalDelta]\[Alpha]negyposx$$, \
$CellContext`mult100$$, $CellContext`mult\[Alpha]$$, \
$CellContext`mult\[Beta]$$, $CellContext`mult\[Gamma]$$, $CellContext`ds$$, \
$CellContext`ds1$$, $CellContext`tiltAngles$$, $CellContext`growDown$$, \
$CellContext`\[CapitalDelta]\[Beta]posx$$, $CellContext`showVelocity$$, \
$CellContext`\[CapitalDelta]100negx$$, $CellContext`\[CapitalDelta]100negy$$, \
$CellContext`\[CapitalDelta]\[Alpha]negxposy$$, $CellContext`\[CapitalDelta]\
\[Alpha]negynegx$$, $CellContext`\[CapitalDelta]\[Beta]negx$$, $CellContext`\
\[CapitalDelta]\[Beta]negy$$, $CellContext`cutZAxis$$, \
$CellContext`cutYAxis$$, $CellContext`cutXAxis$$, $CellContext`timeStep$$, \
$CellContext`\[CapitalDelta]\[Beta]posxposy$$, $CellContext`\[CapitalDelta]\
\[Beta]negyposx$$, $CellContext`\[CapitalDelta]\[Beta]negxposy$$, \
$CellContext`\[CapitalDelta]\[Beta]negynegx$$, $CellContext`velocityA$$, \
$CellContext`velocityB$$, $CellContext`velocityC$$, \
$CellContext`constantVelocity$$, $CellContext`constantVelocityValue$$, \
$CellContext`\[CapitalDelta]\[Gamma]3z$$, \
$CellContext`\[CapitalDelta]\[Gamma]pos1z$$, $CellContext`\[CapitalDelta]\
\[Gamma]neg1z$$, $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$, \
$CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$, $CellContext`\[CapitalDelta]\
\[Gamma]posxneg3y$$, $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$, \
$CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]neg3xnegy$$, $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$, \
$CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]posxnegy$$, $CellContext`\[CapitalDelta]\[Gamma]posxposy$$, \
$CellContext`\[CapitalDelta]\[Gamma]negxposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxnegy$$, $CellContext`\[Delta]1$$, $CellContext`\[CapitalDelta]\
\[Delta]5z$$, $CellContext`\[CapitalDelta]\[Delta]neg1z$$, $CellContext`\
\[CapitalDelta]\[Delta]pos1z$$, \
$CellContext`\[CapitalDelta]\[Delta]pos5xposy$$, $CellContext`\[CapitalDelta]\
\[Delta]pos5xnegy$$, $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$, \
$CellContext`\[CapitalDelta]\[Delta]posxpos5y$$, $CellContext`\[CapitalDelta]\
\[Delta]neg5xposy$$, $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$, \
$CellContext`\[CapitalDelta]\[Delta]negxneg5y$$, $CellContext`\[CapitalDelta]\
\[Delta]negxpos5y$$, $CellContext`\[CapitalDelta]\[Delta]posxnegy$$, \
$CellContext`\[CapitalDelta]\[Delta]posxposy$$, $CellContext`\[CapitalDelta]\
\[Delta]negxposy$$, $CellContext`\[CapitalDelta]\[Delta]negxnegy$$, \
$CellContext`\[CapitalDelta]100negz$$, $CellContext`transformAxisSystem$$, \
$CellContext`factorList$$, $CellContext`individualGrowthFactors$$}]},
        "RowDefault"]},
      {
       DynamicBox[ToBoxes[
         If[$CellContext`printOn$$, 
          "Saved Parameter Settings: \n" <> $CellContext`exportCurrentState$$,
           ""], StandardForm],
        ImageSizeCache->{0., {0., 4.461132906004787}}]},
      {
       DynamicBox[ToBoxes[
         If[$CellContext`showAreaAndVelocities$$, 
          Grid[
           Prepend[
            MapThread[
            Append[#, #2]& , {$CellContext`velocities$$, \
$CellContext`faceArea$$}], {
            "Velocity Factor Definitions", "Factor Value", 
             "Area (\!\(\*SuperscriptBox[\(mm\), \(2\)]\))"}], Alignment -> 
           Left, Frame -> All, Spacings -> {2, 1}], ""], StandardForm],
        ImageSizeCache->{
         365.87105165252683`, {1503.807253747762, 1507.8196073474855`}}]},
      {
       DynamicBox[ToBoxes[
         Grid[
          
          Prepend[$CellContext`averageGrowthFactors$$, {
           "Growth Factors indices", "Average Value"}], Alignment -> Left, 
          Frame -> All, Spacings -> {2, 1}], StandardForm],
        ImageSizeCache->{
         212.21280632019045`, {166.82025684938094`, 170.83261044910438`}}]},
      {
       DynamicBox[ToBoxes[
         Grid[$CellContext`cutFactors$$, Alignment -> Left, Frame -> All, 
          Spacings -> {2, 1}], StandardForm],
        ImageSizeCache->{
         494.7438215255737, {45.5314529603906, 49.54380656011403}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   DynamicModuleValues:>{},
   Initialization:>({$CellContext`verticeTransform1$$ = 
      TransformationFunction[{{
         1/Sqrt[2], 1/Sqrt[2], 0, 0}, {-(1/Sqrt[2]), 1/Sqrt[2], 0, 0}, {0, 0, 
         1, 0}, {0, 0, 0, 1}}], $CellContext`verticeTransform2$$ = 
      TransformationFunction[{{0, 0, -1, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {0, 
        0, 0, 1}}], $CellContext`param1[
        Pattern[$CellContext`n, 
         Blank[]], 
        Pattern[$CellContext`d0, 
         Blank[]], 
        Pattern[$CellContext`infty, 
         Blank[]], 
        Pattern[$CellContext`L, 
         Blank[]], 
        Pattern[$CellContext`t, 
         Blank[]]] := 
      If[$CellContext`infty, 
        1/$CellContext`param0[$CellContext`n], (
          2 $CellContext`L $CellContext`d0)/
         Norm[$CellContext`n]^2 + \
$CellContext`t/$CellContext`param0[$CellContext`n]], $CellContext`param0[
        Pattern[$CellContext`n$, 
         Blank[]]] := Module[{$CellContext`k$ = Part[
           Nearest[FE`normals$$1070, $CellContext`n$, 1], 1]}, 
        If[Chop[
           Norm[$CellContext`n$ - $CellContext`k$]] == 0, 
         Which[
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == 1], 1/FE`f00pos1$$1070, 
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == -1], 1/FE`f00neg1$$1070, 
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == 0, Part[$CellContext`k$, 1] == 1], 1/
          FE`fpos100$$1070, 
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == 0, Part[$CellContext`k$, 1] == -1], 1/
          FE`fneg100$$1070, 
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == 0, Part[$CellContext`k$, 2] == 1], 1/
          FE`f0pos10$$1070, 
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == 0, Part[$CellContext`k$, 2] == -1], 1/
          FE`f0neg10$$1070, $CellContext`n$ == {0, 1, 1}, Sqrt[2]/
          FE`f0pos1pos1$$1070, $CellContext`n$ == {1, 0, 1}, Sqrt[2]/
          FE`fpos10pos1$$1070, $CellContext`n$ == {1, 1, 0}, Sqrt[2]/
          FE`fpos1pos10$$1070, $CellContext`n$ == {0, -1, 1}, Sqrt[2]/
          FE`f0neg1pos1$$1070, $CellContext`n$ == {1, 0, -1}, Sqrt[2]/
          FE`fpos10neg1$$1070, $CellContext`n$ == {1, -1, 0}, Sqrt[2]/
          FE`fpos1neg10$$1070, $CellContext`n$ == {0, 1, -1}, Sqrt[2]/
          FE`f0pos1neg1$$1070, $CellContext`n$ == {-1, 0, 1}, Sqrt[2]/
          FE`fneg10pos1$$1070, $CellContext`n$ == {-1, 1, 0}, Sqrt[2]/
          FE`fneg1pos10$$1070, $CellContext`n$ == {0, -1, -1}, Sqrt[2]/
          FE`f0neg1neg1$$1070, $CellContext`n$ == {-1, 0, -1}, Sqrt[2]/
          FE`fneg10neg1$$1070, $CellContext`n$ == {-1, -1, 0}, Sqrt[2]/
          FE`fneg1neg10$$1070, $CellContext`n$ == {1, 1, 1}, Sqrt[3]/
          FE`fpos1pos1pos1$$1070, $CellContext`n$ == {-1, 1, 1}, Sqrt[3]/
          FE`fneg1pos1pos1$$1070, $CellContext`n$ == {-1, -1, 1}, Sqrt[3]/
          FE`fneg1neg1pos1$$1070, $CellContext`n$ == {1, -1, 1}, Sqrt[3]/
          FE`fpos1neg1pos1$$1070, $CellContext`n$ == {1, 1, -1}, Sqrt[3]/
          FE`fpos1pos1neg1$$1070, $CellContext`n$ == {-1, 1, -1}, Sqrt[3]/
          FE`fneg1pos1neg1$$1070, $CellContext`n$ == {-1, -1, -1}, Sqrt[3]/
          FE`fneg1neg1neg1$$1070, $CellContext`n$ == {1, -1, -1}, Sqrt[3]/
          FE`fpos1neg1neg1$$1070, $CellContext`n$ == {1, 1, 3}, Sqrt[11]/
          FE`fpos1pos1pos3$$1070, $CellContext`n$ == {1, 3, 1}, Sqrt[11]/
          FE`fpos1pos3pos1$$1070, $CellContext`n$ == {3, 1, 1}, Sqrt[11]/
          FE`fpos3pos1pos1$$1070, $CellContext`n$ == {1, 1, -3}, Sqrt[11]/
          FE`fpos1pos1pos3$$1070, $CellContext`n$ == {1, -3, 1}, Sqrt[11]/
          FE`fpos1neg3pos1$$1070, $CellContext`n$ == {-3, 1, 1}, Sqrt[11]/
          FE`fneg3pos1pos1$$1070, $CellContext`n$ == {1, -1, -3}, Sqrt[11]/
          FE`fpos1neg1neg3$$1070, $CellContext`n$ == {1, -3, -1}, Sqrt[11]/
          FE`fpos1neg3neg1$$1070, $CellContext`n$ == {-1, 1, -3}, Sqrt[11]/
          FE`fneg1pos1neg3$$1070, $CellContext`n$ == {-1, -3, 1}, Sqrt[11]/
          FE`fneg1neg3pos1$$1070, $CellContext`n$ == {-3, 1, -1}, Sqrt[11]/
          FE`fneg3pos1neg1$$1070, $CellContext`n$ == {-3, -1, 1}, Sqrt[11]/
          FE`fneg3neg1pos1$$1070, $CellContext`n$ == {1, -1, 3}, Sqrt[11]/
          FE`fpos1neg1pos3$$1070, $CellContext`n$ == {1, 3, -1}, Sqrt[11]/
          FE`fpos1pos3neg1$$1070, $CellContext`n$ == {-1, 1, 3}, Sqrt[11]/
          FE`fneg1pos1pos3$$1070, $CellContext`n$ == {-1, 3, 1}, Sqrt[11]/
          FE`fneg1pos3pos1$$1070, $CellContext`n$ == {3, 1, -1}, Sqrt[11]/
          FE`fpos3pos1neg1$$1070, $CellContext`n$ == {3, -1, 1}, Sqrt[11]/
          FE`fpos3neg1pos1$$1070, $CellContext`n$ == {-1, -1, 3}, Sqrt[11]/
          FE`fneg1neg1pos3$$1070, $CellContext`n$ == {-1, 3, -1}, Sqrt[11]/
          FE`fneg1pos3neg1$$1070, $CellContext`n$ == {3, -1, -1}, Sqrt[11]/
          FE`fpos3neg1neg1$$1070, $CellContext`n$ == {-1, -1, -3}, Sqrt[11]/
          FE`fneg1neg1neg3$$1070, $CellContext`n$ == {-1, -3, -1}, Sqrt[11]/
          FE`fneg1neg3neg1$$1070, $CellContext`n$ == {-3, -1, -1}, Sqrt[11]/
          FE`fneg3neg1neg1$$1070, $CellContext`n$ == {1, 1, 5}, Sqrt[27]/
          FE`fpos1pos1pos5$$1070, $CellContext`n$ == {1, 5, 1}, Sqrt[27]/
          FE`fpos1pos5pos1$$1070, $CellContext`n$ == {5, 1, 1}, Sqrt[27]/
          FE`fpos5pos1pos1$$1070, $CellContext`n$ == {1, 1, -5}, Sqrt[27]/
          FE`fpos1pos1pos5$$1070, $CellContext`n$ == {1, -5, 1}, Sqrt[27]/
          FE`fpos1neg5pos1$$1070, $CellContext`n$ == {-5, 1, 1}, Sqrt[27]/
          FE`fneg5pos1pos1$$1070, $CellContext`n$ == {1, -1, -5}, Sqrt[27]/
          FE`fpos1neg1neg5$$1070, $CellContext`n$ == {1, -5, -1}, Sqrt[27]/
          FE`fpos1neg5neg1$$1070, $CellContext`n$ == {-1, 1, -5}, Sqrt[27]/
          FE`fneg1pos1neg5$$1070, $CellContext`n$ == {-1, -5, 1}, Sqrt[27]/
          FE`fneg1neg5pos1$$1070, $CellContext`n$ == {-5, 1, -1}, Sqrt[27]/
          FE`fneg5pos1neg1$$1070, $CellContext`n$ == {-5, -1, 1}, Sqrt[27]/
          FE`fneg5neg1pos1$$1070, $CellContext`n$ == {1, -1, 5}, Sqrt[27]/
          FE`fpos1neg1pos5$$1070, $CellContext`n$ == {1, 5, -1}, Sqrt[27]/
          FE`fpos1pos5neg1$$1070, $CellContext`n$ == {-1, 1, 5}, Sqrt[27]/
          FE`fneg1pos1pos5$$1070, $CellContext`n$ == {-1, 5, 1}, Sqrt[27]/
          FE`fneg1pos5pos1$$1070, $CellContext`n$ == {5, 1, -1}, Sqrt[27]/
          FE`fpos5pos1neg1$$1070, $CellContext`n$ == {5, -1, 1}, Sqrt[27]/
          FE`fpos5neg1pos1$$1070, $CellContext`n$ == {-1, -1, 5}, Sqrt[27]/
          FE`fneg1neg1pos5$$1070, $CellContext`n$ == {-1, 5, -1}, Sqrt[27]/
          FE`fneg1pos5neg1$$1070, $CellContext`n$ == {5, -1, -1}, Sqrt[27]/
          FE`fpos5neg1neg1$$1070, $CellContext`n$ == {-1, -1, -5}, Sqrt[27]/
          FE`fneg1neg1neg5$$1070, $CellContext`n$ == {-1, -5, -1}, Sqrt[27]/
          FE`fneg1neg5neg1$$1070, $CellContext`n$ == {-5, -1, -1}, Sqrt[27]/
          FE`fneg5neg1neg1$$1070, Sort[
            Map[Abs, $CellContext`n$]] == {1, 1, 3}, FE`\[Gamma]1$$1070], 
         Which[Sort[
            Map[Abs, $CellContext`k$]] == {0, 0, 1}, 1/FE`mult100$$1070, Sort[
            Map[Abs, $CellContext`k$]] == {0, 1, 1}, FE`\[Beta]1$$1070/
          FE`mult\[Beta]$$1070, Sort[
            Map[Abs, $CellContext`k$]] == {1, 1, 1}, FE`\[Alpha]1$$1070/
          FE`mult\[Alpha]$$1070, Sort[
            Map[Abs, $CellContext`k$]] == {1, 1, 3}, FE`\[Gamma]1$$1070/
          FE`mult\[Gamma]$$1070]]], Attributes[$CellContext`n$] = {Temporary},
       Attributes[$CellContext`k$] = {Temporary}, $CellContext`d[
        Pattern[$CellContext`n$, 
         Blank[]]] := Norm[$CellContext`n$] Part[FE`ds1$$1070, 
         Part[
          Position[
           Join[FE`tiltedNormals$$1070, 
            Complement[
            FE`normals$$1070, FE`tiltedNormals$$1070]], $CellContext`n$], 1, 
          1]]}; ($CellContext`saveDirectory$$ = 
      Directory[]; $CellContext`testPlanesParallel = 
      Compile[{{$CellContext`planes, 
          Blank[Real], 3}}, 
        Map[Append[#, 1]& , 
         Cases[
          Map[LinearSolve[
            (If[Det[#] != 0, #, 0 #]& )[
             Map[Most, #]], -Map[Last, #]]& , $CellContext`planes], 
          Blank[List]]], RuntimeAttributes -> {Listable}, RuntimeOptions -> 
        "Speed", Parallelization -> True]; $CellContext`verticeTransform1$$ = 
      RotationTransform[
        If[$CellContext`transformAxisSystem$$, (-Pi)/4, 0], {0, 0, 
        1}]; $CellContext`verticeTransform2$$ = RotationTransform[
        If[$CellContext`transformAxisSystem$$, (-Pi)/4, 0], {0, 1, 
        0}]; $CellContext`normals$$ = CompressedData["
1:eJx1kGEKgDAIha2xg3SdfnaEDlD3Z4xqMOnjoQ/E6dOnczvv41rNbP+s2I/n
g7+XaRFnCbfARi6KnwnlyDNH6IwoNpltosn9VdfrqMOabJeSeFqf2up5A3K8
icfa6zn+d7y5B3VKwLNHb1+Eo56jJ5471cTT2qxXz3+R4wyPtddzeh/uQZ0a
8OzR+1ThqOdoiR94Ad3pjOg=
       "]; $CellContext`tiltAngles$$ = 
      0 Map[Rest, $CellContext`normals$$]; $CellContext`tiltedNormals$$ = \
$CellContext`normals$$; $CellContext`allNormals$$ = $CellContext`normals$$; \
$CellContext`n$$ = {$CellContext`n1$$, $CellContext`n2$$, $CellContext`n3$$}; \
$CellContext`normals1$$ = 
      Append[$CellContext`allNormals$$, $CellContext`n$$]; $CellContext`ds$$ = \
{1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0.5, 2, 2, 2, 2, 2, 2, 2, 2, 
        0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2}; $CellContext`ds1$$ = $CellContext`ds$$; $CellContext`pts0$$ = 
      MapThread[#2 (#/
         Norm[#])& , {$CellContext`allNormals$$, $CellContext`ds1$$}]; \
$CellContext`planes0$$ = MapThread[Append[-#, 
         Dot[#, #2]]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; 
     Quiet[$CellContext`nodes0$$ = $CellContext`testPlanesParallel[
         Subsets[$CellContext`planes0$$, {3}]]]; $CellContext`vertices0$$ = 
      DeleteDuplicates[
        Select[$CellContext`nodes0$$, Chop[
           Min[
            Dot[$CellContext`planes0$$, #]]] >= 0& ], Chop[
          Norm[# - #2]] == 0& ]; $CellContext`pts0$$ = Table[
        Most[
         Part[
          Select[$CellContext`vertices0$$, Dot[#, 
             Part[$CellContext`planes0$$, $CellContext`i]] == Min[
             Dot[$CellContext`vertices0$$, 
              Part[$CellContext`planes0$$, $CellContext`i]]]& , 1], 
          1]], {$CellContext`i, 1, 
         Length[$CellContext`planes0$$]}]; $CellContext`ds1$$ = 
      MapThread[
       Dot[#, #2]/
        Norm[#]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; \
$CellContext`d[
        Pattern[$CellContext`n$, 
         Blank[]]] := Norm[$CellContext`n$] Part[$CellContext`ds1$$, 
         Part[
          Position[
           Join[$CellContext`tiltedNormals$$, 
            
            Complement[$CellContext`normals$$, \
$CellContext`tiltedNormals$$]], $CellContext`n$], 1, 
          1]]; $CellContext`polyhedron[
        Pattern[$CellContext`normals, 
         Blank[]], 
        Pattern[$CellContext`pts, 
         Blank[]]] := 
      Module[{$CellContext`planes, $CellContext`relevantPlanes, \
$CellContext`nodes, $CellContext`vertices, $CellContext`incidence, \
$CellContext`adjacency, $CellContext`faceNodes, $CellContext`faceGraphs, \
$CellContext`orderings, $CellContext`faces, $CellContext`result}, \
$CellContext`planes = MapThread[Append[-#, 
            
            Dot[#, #2]]& , {$CellContext`normals, $CellContext`pts}]; \
$CellContext`planes = DeleteDuplicates[$CellContext`planes, Chop[
             Norm[# - #2]] == 0& ]; 
        Quiet[$CellContext`nodes = $CellContext`testPlanesParallel[
            Subsets[$CellContext`planes, {3}]]]; $CellContext`vertices = 
         DeleteDuplicates[
           Select[$CellContext`nodes, Chop[
              Min[
               Dot[$CellContext`planes, #]]] >= 0& ], Chop[
             Norm[# - #2]] == 0& ]; $CellContext`incidence = SparseArray[
           Outer[Boole[Chop[
               Dot[#, #2]] == 
             0]& , $CellContext`vertices, $CellContext`planes, 
            1]]; $CellContext`adjacency = Map[Boole[# >= 2]& , 
           Dot[$CellContext`incidence, 
            Transpose[$CellContext`incidence]], {2}]; $CellContext`faceNodes = 
         Map[Flatten[
            Position[
             Normal[#], 1]]& , 
           Transpose[$CellContext`incidence]]; $CellContext`faceGraphs = 
         Map[SimpleGraph[
            AdjacencyGraph[
             
             Part[$CellContext`adjacency, #, #]]]& , $CellContext`faceNodes]; \
$CellContext`orderings = Map[Map[First, 
            (If[# != {}, 
             First[#], {}]& )[
             
             FindEulerianCycle[#, 
              1]]]& , $CellContext`faceGraphs]; $CellContext`faces = 
         MapThread[
          Part, {$CellContext`faceNodes, $CellContext`orderings}]; \
$CellContext`result["vertices"] = 
         Map[Most, $CellContext`vertices]; $CellContext`result[
          "faces"] = $CellContext`faces; $CellContext`result]; \
$CellContext`param0[
        Pattern[$CellContext`n$, 
         Blank[]]] := Module[{$CellContext`k$ = Part[
           Nearest[$CellContext`normals$$, $CellContext`n$, 1], 1]}, 
        If[Chop[
           Norm[$CellContext`n$ - $CellContext`k$]] == 0, 
         Which[
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == 1], 1/$CellContext`f00pos1$$, 
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == -1], 1/$CellContext`f00neg1$$, 
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == 0, Part[$CellContext`k$, 1] == 1], 
          1/$CellContext`fpos100$$, 
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == 0, Part[$CellContext`k$, 1] == -1], 
          1/$CellContext`fneg100$$, 
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == 0, Part[$CellContext`k$, 2] == 1], 
          1/$CellContext`f0pos10$$, 
          And[Sort[
             Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
           Part[$CellContext`k$, 3] == 0, Part[$CellContext`k$, 2] == -1], 
          1/$CellContext`f0neg10$$, $CellContext`n$ == {0, 1, 1}, 
          Sqrt[2]/$CellContext`f0pos1pos1$$, $CellContext`n$ == {1, 0, 1}, 
          Sqrt[2]/$CellContext`fpos10pos1$$, $CellContext`n$ == {1, 1, 0}, 
          Sqrt[2]/$CellContext`fpos1pos10$$, $CellContext`n$ == {0, -1, 1}, 
          Sqrt[2]/$CellContext`f0neg1pos1$$, $CellContext`n$ == {1, 0, -1}, 
          Sqrt[2]/$CellContext`fpos10neg1$$, $CellContext`n$ == {1, -1, 0}, 
          Sqrt[2]/$CellContext`fpos1neg10$$, $CellContext`n$ == {0, 1, -1}, 
          Sqrt[2]/$CellContext`f0pos1neg1$$, $CellContext`n$ == {-1, 0, 1}, 
          Sqrt[2]/$CellContext`fneg10pos1$$, $CellContext`n$ == {-1, 1, 0}, 
          Sqrt[2]/$CellContext`fneg1pos10$$, $CellContext`n$ == {0, -1, -1}, 
          Sqrt[2]/$CellContext`f0neg1neg1$$, $CellContext`n$ == {-1, 0, -1}, 
          Sqrt[2]/$CellContext`fneg10neg1$$, $CellContext`n$ == {-1, -1, 0}, 
          Sqrt[2]/$CellContext`fneg1neg10$$, $CellContext`n$ == {1, 1, 1}, 
          Sqrt[3]/$CellContext`fpos1pos1pos1$$, $CellContext`n$ == {-1, 1, 1},
           Sqrt[3]/$CellContext`fneg1pos1pos1$$, $CellContext`n$ == {-1, -1, 
           1}, Sqrt[3]/$CellContext`fneg1neg1pos1$$, $CellContext`n$ == {
           1, -1, 1}, 
          Sqrt[3]/$CellContext`fpos1neg1pos1$$, $CellContext`n$ == {1, 1, -1},
           Sqrt[3]/$CellContext`fpos1pos1neg1$$, $CellContext`n$ == {-1, 
           1, -1}, Sqrt[
           3]/$CellContext`fneg1pos1neg1$$, $CellContext`n$ == {-1, -1, -1}, 
          Sqrt[3]/$CellContext`fneg1neg1neg1$$, $CellContext`n$ == {
           1, -1, -1}, 
          Sqrt[3]/$CellContext`fpos1neg1neg1$$, $CellContext`n$ == {1, 1, 3}, 
          Sqrt[11]/$CellContext`fpos1pos1pos3$$, $CellContext`n$ == {1, 3, 1},
           Sqrt[11]/$CellContext`fpos1pos3pos1$$, $CellContext`n$ == {3, 1, 
           1}, Sqrt[11]/$CellContext`fpos3pos1pos1$$, $CellContext`n$ == {1, 
           1, -3}, Sqrt[11]/$CellContext`fpos1pos1pos3$$, $CellContext`n$ == {
           1, -3, 1}, 
          Sqrt[11]/$CellContext`fpos1neg3pos1$$, $CellContext`n$ == {-3, 1, 
           1}, Sqrt[11]/$CellContext`fneg3pos1pos1$$, $CellContext`n$ == {
           1, -1, -3}, 
          Sqrt[11]/$CellContext`fpos1neg1neg3$$, $CellContext`n$ == {
           1, -3, -1}, 
          Sqrt[11]/$CellContext`fpos1neg3neg1$$, $CellContext`n$ == {-1, 
           1, -3}, Sqrt[
           11]/$CellContext`fneg1pos1neg3$$, $CellContext`n$ == {-1, -3, 1}, 
          Sqrt[11]/$CellContext`fneg1neg3pos1$$, $CellContext`n$ == {-3, 
           1, -1}, Sqrt[
           11]/$CellContext`fneg3pos1neg1$$, $CellContext`n$ == {-3, -1, 1}, 
          Sqrt[11]/$CellContext`fneg3neg1pos1$$, $CellContext`n$ == {1, -1, 
           3}, Sqrt[11]/$CellContext`fpos1neg1pos3$$, $CellContext`n$ == {1, 
           3, -1}, Sqrt[
           11]/$CellContext`fpos1pos3neg1$$, $CellContext`n$ == {-1, 1, 3}, 
          Sqrt[11]/$CellContext`fneg1pos1pos3$$, $CellContext`n$ == {-1, 3, 
           1}, Sqrt[11]/$CellContext`fneg1pos3pos1$$, $CellContext`n$ == {3, 
           1, -1}, Sqrt[11]/$CellContext`fpos3pos1neg1$$, $CellContext`n$ == {
           3, -1, 1}, 
          Sqrt[11]/$CellContext`fpos3neg1pos1$$, $CellContext`n$ == {-1, -1, 
           3}, Sqrt[11]/$CellContext`fneg1neg1pos3$$, $CellContext`n$ == {-1, 
           3, -1}, Sqrt[11]/$CellContext`fneg1pos3neg1$$, $CellContext`n$ == {
           3, -1, -1}, 
          Sqrt[11]/$CellContext`fpos3neg1neg1$$, $CellContext`n$ == {-1, -1, \
-3}, Sqrt[11]/$CellContext`fneg1neg1neg3$$, $CellContext`n$ == {-1, -3, -1}, 
          Sqrt[11]/$CellContext`fneg1neg3neg1$$, $CellContext`n$ == {-3, -1, \
-1}, Sqrt[11]/$CellContext`fneg3neg1neg1$$, $CellContext`n$ == {1, 1, 5}, 
          Sqrt[27]/$CellContext`fpos1pos1pos5$$, $CellContext`n$ == {1, 5, 1},
           Sqrt[27]/$CellContext`fpos1pos5pos1$$, $CellContext`n$ == {5, 1, 
           1}, Sqrt[27]/$CellContext`fpos5pos1pos1$$, $CellContext`n$ == {1, 
           1, -5}, Sqrt[27]/$CellContext`fpos1pos1pos5$$, $CellContext`n$ == {
           1, -5, 1}, 
          Sqrt[27]/$CellContext`fpos1neg5pos1$$, $CellContext`n$ == {-5, 1, 
           1}, Sqrt[27]/$CellContext`fneg5pos1pos1$$, $CellContext`n$ == {
           1, -1, -5}, 
          Sqrt[27]/$CellContext`fpos1neg1neg5$$, $CellContext`n$ == {
           1, -5, -1}, 
          Sqrt[27]/$CellContext`fpos1neg5neg1$$, $CellContext`n$ == {-1, 
           1, -5}, Sqrt[
           27]/$CellContext`fneg1pos1neg5$$, $CellContext`n$ == {-1, -5, 1}, 
          Sqrt[27]/$CellContext`fneg1neg5pos1$$, $CellContext`n$ == {-5, 
           1, -1}, Sqrt[
           27]/$CellContext`fneg5pos1neg1$$, $CellContext`n$ == {-5, -1, 1}, 
          Sqrt[27]/$CellContext`fneg5neg1pos1$$, $CellContext`n$ == {1, -1, 
           5}, Sqrt[27]/$CellContext`fpos1neg1pos5$$, $CellContext`n$ == {1, 
           5, -1}, Sqrt[
           27]/$CellContext`fpos1pos5neg1$$, $CellContext`n$ == {-1, 1, 5}, 
          Sqrt[27]/$CellContext`fneg1pos1pos5$$, $CellContext`n$ == {-1, 5, 
           1}, Sqrt[27]/$CellContext`fneg1pos5pos1$$, $CellContext`n$ == {5, 
           1, -1}, Sqrt[27]/$CellContext`fpos5pos1neg1$$, $CellContext`n$ == {
           5, -1, 1}, 
          Sqrt[27]/$CellContext`fpos5neg1pos1$$, $CellContext`n$ == {-1, -1, 
           5}, Sqrt[27]/$CellContext`fneg1neg1pos5$$, $CellContext`n$ == {-1, 
           5, -1}, Sqrt[27]/$CellContext`fneg1pos5neg1$$, $CellContext`n$ == {
           5, -1, -1}, 
          Sqrt[27]/$CellContext`fpos5neg1neg1$$, $CellContext`n$ == {-1, -1, \
-5}, Sqrt[27]/$CellContext`fneg1neg1neg5$$, $CellContext`n$ == {-1, -5, -1}, 
          Sqrt[27]/$CellContext`fneg1neg5neg1$$, $CellContext`n$ == {-5, -1, \
-1}, Sqrt[27]/$CellContext`fneg5neg1neg1$$, Sort[
            Map[Abs, $CellContext`n$]] == {1, 1, 
           3}, $CellContext`\[Gamma]1$$], 
         Which[Sort[
            Map[Abs, $CellContext`k$]] == {0, 0, 1}, 1/$CellContext`mult100$$,
           Sort[
            Map[Abs, $CellContext`k$]] == {0, 1, 
           1}, $CellContext`\[Beta]1$$/$CellContext`mult\[Beta]$$, Sort[
            Map[Abs, $CellContext`k$]] == {1, 1, 
           1}, $CellContext`\[Alpha]1$$/$CellContext`mult\[Alpha]$$, Sort[
            Map[Abs, $CellContext`k$]] == {1, 1, 
           3}, $CellContext`\[Gamma]1$$/$CellContext`mult\[Gamma]$$]]]; \
$CellContext`param1[
        Pattern[$CellContext`n, 
         Blank[]], 
        Pattern[$CellContext`d0, 
         Blank[]], 
        Pattern[$CellContext`infty, 
         Blank[]], 
        Pattern[$CellContext`L, 
         Blank[]], 
        Pattern[$CellContext`t, 
         Blank[]]] := 
      If[$CellContext`infty, 1/$CellContext`param0[$CellContext`n], 
        2 $CellContext`L $CellContext`d0/
         Norm[$CellContext`n]^2 + \
$CellContext`t/$CellContext`param0[$CellContext`n]]; $CellContext`pts1[
        Pattern[$CellContext`infty, 
         Blank[]], 
        Pattern[$CellContext`L, 
         Blank[]], 
        Pattern[$CellContext`t, 
         Blank[]], 
        Pattern[$CellContext`normals, 
         Blank[]]] := 
      Module[{$CellContext`result}, $CellContext`result = 
         Map[$CellContext`param1[#, 
             $CellContext`d[#], $CellContext`infty, $CellContext`L, \
$CellContext`t] #& , $CellContext`normals]; 
        Part[$CellContext`result, 26] == {0, 0, 
          0}; $CellContext`result]; $CellContext`polyhedron2[
        Pattern[$CellContext`normals, 
         Blank[]], 
        Pattern[$CellContext`pts, 
         Blank[]], 
        Pattern[$CellContext`c, 
         Blank[]]] := 
      Module[{$CellContext`n, $CellContext`p, $CellContext`planes, \
$CellContext`nodes, $CellContext`vertices, $CellContext`incidence, \
$CellContext`adjacency, $CellContext`faceNodes, $CellContext`faceGraph, \
$CellContext`ordering, $CellContext`face, $CellContext`result, \
$CellContext`edges, $CellContext`colors}, $CellContext`p = 
         Part[$CellContext`pts, 1, 1]; $CellContext`n = 
         Last[$CellContext`normals]; $CellContext`planes = 
         MapThread[Append[-#, 
            Dot[#, #2]]& , {$CellContext`normals, 
            Append[$CellContext`pts, $CellContext`c $CellContext`n]}]; 
        If[$CellContext`c == $CellContext`p, $CellContext`planes = 
          Drop[$CellContext`planes, -1]]; 
        Quiet[$CellContext`nodes = Map[Append[#, 1]& , 
            Cases[
             Map[LinearSolve[
               (If[Det[#] != 0, #, 0 #]& )[
                Map[Most, #]], -Map[Last, #]]& , 
              Map[Append[#, 
                Last[$CellContext`planes]]& , 
               Subsets[
                Most[$CellContext`planes], {2}]]], 
             Blank[List]]]]; $CellContext`vertices = DeleteDuplicates[
           Select[$CellContext`nodes, Chop[
              Min[
               Dot[$CellContext`planes, #]]] >= 0& ], Chop[
             Norm[# - #2]] == 0& ]; 
        If[$CellContext`vertices != {}, $CellContext`incidence = SparseArray[
             Outer[Boole[Chop[
                 Dot[#, #2]] == 
               0]& , $CellContext`vertices, $CellContext`planes, 
              1]]; $CellContext`adjacency = Map[Boole[# >= 2]& , 
             Dot[$CellContext`incidence, 
              Transpose[$CellContext`incidence]], {
             2}]; $CellContext`faceNodes = Map[Flatten[
              Position[
               Normal[#], 1]]& , 
             Transpose[$CellContext`incidence]]; $CellContext`faceGraph = (
            SimpleGraph[
             AdjacencyGraph[
              Part[$CellContext`adjacency, #, #]]]& )[
             Last[$CellContext`faceNodes]]; $CellContext`ordering = (Map[
            First, 
             (If[# != {}, 
              First[#], {}]& )[
              
              FindEulerianCycle[#, 
               1]]]& )[$CellContext`faceGraph]; $CellContext`face = Part[
             
             Last[$CellContext`faceNodes], $CellContext`ordering]; \
$CellContext`edges = Transpose[
             ({#, 
              RotateLeft[#]}& )[
              Range[
               Length[$CellContext`face]]]]; $CellContext`colors = Map[Total, 
             Map[Map[Abs, 
               Extract[$CellContext`normals, 
                Flatten[
                 Position[
                  Most[$CellContext`faceNodes], 
                  Alternatives[{
                    BlankNullSequence[], 
                    Part[$CellContext`face, 
                    Part[$CellContext`edges, #, 1]], 
                    Part[$CellContext`face, 
                    Part[$CellContext`edges, #, 2]], 
                    BlankNullSequence[]}, {
                    BlankNullSequence[], 
                    Part[$CellContext`face, 
                    Part[$CellContext`edges, #, 2]], 
                    Part[$CellContext`face, 
                    Part[$CellContext`edges, #, 1]], 
                    BlankNullSequence[]}], 1, 1]]]]& , 
              Range[
               Length[$CellContext`edges]]]]; $CellContext`result["vertices"] = 
           Map[Most, $CellContext`vertices]; $CellContext`result[
            "face"] = $CellContext`face; $CellContext`result[
            "colors"] = $CellContext`colors; 
          Null, $CellContext`result["vertices"] = {}; $CellContext`result[
            "face"] = {}; $CellContext`result["colors"] = {}; 
          Null]; $CellContext`result]; $CellContext`polygon[
        Pattern[$CellContext`vertices, 
         Blank[]], 
        Pattern[$CellContext`colors, 
         Blank[]]] := 
      Module[{$CellContext`edges, $CellContext`angle, $CellContext`k}, 
        If[$CellContext`vertices != {}, $CellContext`edges = Transpose[
            ({#, 
             RotateLeft[#]}& )[
             Range[
              Length[$CellContext`vertices]]]]; 
         GraphicsComplex[$CellContext`vertices, 
           Join[
            Map[{$CellContext`k = Part[$CellContext`colors, #]; Switch[
                Part[
                 Nearest[{0, 1, 2, 3, 5}, $CellContext`k, 1], 1], 0, Black, 1, 
                Darker[
                 GrayLevel[0.7], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 1]]]], 2, 
                Darker[
                 Lighter[Magenta, 0.4], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 2]]]], 3, 
                Darker[
                 Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 3]]]], 5, 
                Darker[Blue, 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 5]]]], 7, 
                Darker[Yellow, 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 7]]]]], Dashed, 
              Line[
               Part[$CellContext`edges, #]]}& , 
             Range[
              Length[$CellContext`vertices]]]]], {}]]; $CellContext`polygon3D[
        Pattern[$CellContext`vertices, 
         Blank[]], 
        Pattern[$CellContext`colors, 
         Blank[]]] := 
      Module[{$CellContext`edges, $CellContext`angle, $CellContext`k}, 
        If[$CellContext`vertices != {}, $CellContext`edges = Transpose[
            ({#, 
             RotateLeft[#]}& )[
             Range[
              Length[$CellContext`vertices]]]]; 
         GraphicsComplex[$CellContext`vertices, 
           Join[
            Map[{$CellContext`k = Part[$CellContext`colors, #]; Switch[
                Part[
                 Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 0, Black, 1, 
                Darker[
                 GrayLevel[0.7], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 1]]]], 2, 
                Darker[
                 Lighter[Magenta, 0.4], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 2]]]], 3, 
                Darker[
                 Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 3]]]], 5, 
                Darker[Blue, 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 5]]]], 7, 
                Darker[Yellow, 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 7]]]]], 
              Line[
               Part[$CellContext`edges, #]]}& , 
             Range[
              
              Length[$CellContext`vertices]]]]], {}]]; \
$CellContext`exportCutImage$$ = Hold[
        Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
         ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
         ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
         ToString[$CellContext`\[Gamma]1$$] <> 
         " " <> $CellContext`exportCutFileName$$ <> ".jpeg", 
         Graphics[{$CellContext`polygons2D$$, $CellContext`timePolygon2D$$, 
           Thickness[0.002], $CellContext`timeStepLines2D$$, 
           Text["Time of first appearance = " <> ToString[
              NumberForm[
               If[Min[$CellContext`timeStepLines$$] == $CellContext`tMin$$, 0, 
                Min[$CellContext`timeStepLines$$]], {10, 2}]] <> 
            " hrs\nTime of growth completion = " <> ToString[
              NumberForm[$CellContext`t$$, {10, 2}]] <> 
            " hrs\nTime Intervals = " <> ToString[
              NumberForm[$CellContext`timeStep$$, {10, 2}]] <> " hrs/step" <> 
            "\n\[Alpha] = " <> ToString[$CellContext`\[Alpha]1$$] <> 
            ", \[Beta] = " <> ToString[$CellContext`\[Beta]1$$] <> 
            "\n\[Gamma] = " <> ToString[$CellContext`\[Gamma]1$$] <> 
            "\nCut Plane: " <> StringReplace[
              
              ToString[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}], {
              "-1" -> "\!\(\*OverscriptBox[\(1\), \(_\)]\)", "{" -> "(", "}" -> 
               ")", "," -> " "}] <> "\nCut Distance " <> 
            ToString[$CellContext`cutPosition$$], {$CellContext`textX$$, \
$CellContext`textY$$ + 1}]}, Axes -> True, 
          AxesLabel -> {"(mm)", "(mm)"}]]]; $CellContext`exportShape$$ = 
      Hold[$CellContext`ExportCrystal$$ = Graphics3D[{
            Specularity[0.5, 6], 
            GraphicsComplex[If[
               Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
               1, $CellContext`l0$$] 
             If[$CellContext`infty$$, 1, 1/(
               2 $CellContext`L$$)] $CellContext`vertices$$, {
              Opacity[
               Dynamic[$CellContext`opacity$$]], 
              Table[
               If[Part[$CellContext`faces$$, $CellContext`i] != {}, {
                 Block[{$CellContext`k = Total[
                    Map[Abs, 
                    Part[$CellContext`allNormals$$, $CellContext`i]]]}, 
                  Switch[
                   Part[
                    Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
                   Darker[
                    GrayLevel[0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 1]]]], 2, 
                   Darker[
                    Lighter[Magenta, 0.4], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 2]]]], 3, 
                   Darker[
                    Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 3]]]], 5, 
                   Darker[Blue, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 5]]]], 7, 
                   Darker[Yellow, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 7]]]]]], {
                  EdgeForm[
                   Thickness[Medium]], 
                  Polygon[
                   
                   Part[$CellContext`faces$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
                Length[$CellContext`allNormals$$]}], 
              PointSize[0.015], Red, 
              Opacity[1], 
              Dynamic[
               If[$CellContext`hideVertices$$, {}, 
                Point[
                 Range[$CellContext`v$$]]]]}]}, Axes -> True, 
           AxesLabel -> {"x", "y", "z"}]; 
        Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
          ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
          ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
          ToString[$CellContext`\[Gamma]1$$] <> 
          " " <> $CellContext`cadFileName$$ <> 
          ".stl", $CellContext`ExportCrystal$$]; 
        Null]; $CellContext`exportIndividualParameters$$ = Hold[
        Export[$CellContext`saveDirectory$$ <> 
         "Individual Parameter Config " <> \
$CellContext`parameterConfigFileName$$ <> ".txt", 
         Compress[{$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$}]]]; $CellContext`exportConfig$$ = Hold[
        Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
         ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
         ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
         ToString[$CellContext`\[Gamma]1$$] <> 
         " " <> $CellContext`parameterConfigFileName$$ <> 
         ".txt", $CellContext`exportCurrentState$$]]; $CellContext`calcTilt$$ = 
      Hold[
        If[
         Not[$CellContext`infty$$], $CellContext`allNormals$$ = 
          Join[$CellContext`tiltedNormals$$, 
            
            Complement[$CellContext`normals$$, $CellContext`tiltedNormals$$, 
             SameTest -> (Chop[
                Norm[# - #2]] == 0& )]]; $CellContext`ds1$$ = 
          Join[$CellContext`ds$$, 
            Table[
            20000000000, {$CellContext`i, 1, 
              Length[$CellContext`allNormals$$] - 
              Length[$CellContext`normals$$]}]]; $CellContext`pts0$$ = 
          MapThread[#2 (#/
             Norm[#])& , {$CellContext`allNormals$$, $CellContext`ds1$$}]; \
$CellContext`planes0$$ = MapThread[Append[-#, 
             
             Dot[#, #2]]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; \
$CellContext`nodes0$$ = Union[
            Map[Append[#, 1]& , 
             Quiet[
              Cases[
               Map[LinearSolve[
                 (If[Det[#] != 0, #, 0 #]& )[
                  Map[Most, #]], -Map[Last, #]]& , 
                Subsets[$CellContext`planes0$$, {3}]], 
               Blank[List]]]]]; $CellContext`vertices0$$ = DeleteDuplicates[
            Select[$CellContext`nodes0$$, Chop[
               Min[
                Dot[$CellContext`planes0$$, #]]] >= 0& ], Chop[
              Norm[# - #2]] == 0& ]; $CellContext`pts0$$ = Table[
            Most[
             Part[$CellContext`vertices0$$, 
              Part[
               Ordering[
                Dot[$CellContext`vertices0$$, 
                 Part[$CellContext`planes0$$, $CellContext`i]], 1], 
               1]]], {$CellContext`i, 1, 
             Length[$CellContext`planes0$$]}]; $CellContext`ds1$$ = 
          MapThread[
           Dot[#, #2]/
            Norm[#]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; 
         Null, $CellContext`tiltedNormals$$ = $CellContext`normals$$; \
$CellContext`allNormals$$ = $CellContext`normals$$; $CellContext`ds1$$ = \
$CellContext`ds$$; Null]]; $CellContext`calcCutOff$$ = Hold[If[
          
          Not[$CellContext`individualGrowthFactors$$], $CellContext`f00neg1$$ = 
           1 + $CellContext`\[CapitalDelta]100negz$$; $CellContext`f00pos1$$ = 
           1 + $CellContext`\[CapitalDelta]100posz$$; $CellContext`fpos100$$ = 
           1 + $CellContext`\[CapitalDelta]100posx$$; $CellContext`fneg100$$ = 
           1 + $CellContext`\[CapitalDelta]100negx$$; $CellContext`f0pos10$$ = 
           1 + $CellContext`\[CapitalDelta]100posy$$; $CellContext`f0neg10$$ = 
           1 + $CellContext`\[CapitalDelta]100negy$$; \
$CellContext`fpos1pos1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Alpha]posxposy$$); \
$CellContext`fneg1pos1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negxposy$$); \
$CellContext`fpos1neg1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negyposx$$); \
$CellContext`fneg1neg1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negynegx$$); \
$CellContext`fpos1pos1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
             1 + $CellContext`\[CapitalDelta]\[Alpha]posxposy$$); \
$CellContext`fneg1pos1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
             1 + $CellContext`\[CapitalDelta]\[Alpha]negxposy$$); \
$CellContext`fpos1neg1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
             1 + $CellContext`\[CapitalDelta]\[Alpha]negyposx$$); \
$CellContext`fneg1neg1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
             1 + $CellContext`\[CapitalDelta]\[Alpha]negynegx$$); \
$CellContext`f0pos1pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]posy$$) 
            1; $CellContext`fpos10pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]posx$$) 
            1; $CellContext`fpos1pos10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Beta]posxposy$$); \
$CellContext`f0neg1pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]negy$$) 
            1; $CellContext`fpos10neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]posx$$) 
            1; $CellContext`fpos1neg10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Beta]negyposx$$); \
$CellContext`f0pos1neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]posy$$) 
            1; $CellContext`fneg10pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]negx$$) 
            1; $CellContext`fneg1pos10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Beta]negxposy$$); \
$CellContext`f0neg1neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]negy$$) 
            1; $CellContext`fneg10neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
             1 + $CellContext`\[CapitalDelta]\[Beta]negx$$) 
            1; $CellContext`fneg1neg10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Beta]negynegx$$); \
$CellContext`fpos1pos1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Gamma]posxposy$$); \
$CellContext`fpos1pos3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$); \
$CellContext`fpos3pos1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$); \
$CellContext`fpos1pos1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]posxposy$$); \
$CellContext`fpos1neg3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$); \
$CellContext`fneg3pos1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$); \
$CellContext`fpos1neg1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$); \
$CellContext`fpos1neg3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$); \
$CellContext`fneg1pos1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]negxposy$$); \
$CellContext`fneg1neg3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$); \
$CellContext`fneg3pos1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$); \
$CellContext`fneg3neg1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$); \
$CellContext`fpos1neg1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$); \
$CellContext`fpos1pos3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$); \
$CellContext`fneg1pos1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Gamma]negxposy$$); \
$CellContext`fneg1pos3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$); \
$CellContext`fpos3pos1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$); \
$CellContext`fpos3neg1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$); \
$CellContext`fneg1neg1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$); \
$CellContext`fneg1pos3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$); \
$CellContext`fpos3neg1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$); \
$CellContext`fneg1neg1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$); \
$CellContext`fneg1neg3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$); \
$CellContext`fneg3neg1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$); \
$CellContext`fpos1pos1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Delta]posxposy$$); \
$CellContext`fpos1pos5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$); \
$CellContext`fpos5pos1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$); \
$CellContext`fpos1pos1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]posxposy$$); \
$CellContext`fpos1neg5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$); \
$CellContext`fneg5pos1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg5xposy$$); \
$CellContext`fpos1neg1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]posxnegy$$); \
$CellContext`fpos1neg5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$); \
$CellContext`fneg1pos1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]negxposy$$); \
$CellContext`fneg1neg5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$); \
$CellContext`fneg5pos1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg5xposy$$); \
$CellContext`fneg5neg1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$); \
$CellContext`fpos1neg1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Delta]posxnegy$$); \
$CellContext`fpos1pos5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$); \
$CellContext`fneg1pos1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Delta]negxposy$$); \
$CellContext`fneg1pos5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]negxpos5y$$); \
$CellContext`fpos5pos1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$); \
$CellContext`fpos5neg1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$); \
$CellContext`fneg1neg1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
            1 (1 + $CellContext`\[CapitalDelta]\[Delta]negxnegy$$); \
$CellContext`fneg1pos5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]negxpos5y$$); \
$CellContext`fpos5neg1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$); \
$CellContext`fneg1neg1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]negxnegy$$); \
$CellContext`fneg1neg5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$); \
$CellContext`fneg5neg1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
             1 + $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$); \
$CellContext`factorList$$ = {$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$}; 
          Null, {$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$} = $CellContext`factorList$$; 
          Null]; $CellContext`timePolygon2D$$ = {}; \
$CellContext`timePolygon3D$$ = {}; $CellContext`verticeTransform1$$ = 
         RotationTransform[
           If[$CellContext`transformAxisSystem$$, (-Pi)/4, 0], {0, 0, 
           1}]; $CellContext`verticeTransform2$$ = RotationTransform[
           If[$CellContext`transformAxisSystem$$, (-Pi)/2, 0], {0, 1, 0}]; 
        If[$CellContext`constantVelocity$$, $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 10^(-3), 
          
          Quiet[$CellContext`V100$$ = 
           NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
               If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
            If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]]; 
        Quiet[$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$)]; 
        Quiet[$CellContext`velocityPlot$$ = 
           Plot[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 
             10^(-3), {$CellContext`x, 0, $CellContext`t$$}, 
             AxesLabel -> {"time (hr)", "Growth Velocity (mm/hr)"}]; 
          Null]; $CellContext`timeStepLines3D$$ = {}; $CellContext`pts$$ = \
$CellContext`pts1[$CellContext`infty$$, $CellContext`L$$, $CellContext`t$$, \
$CellContext`allNormals$$]; 
        Part[$CellContext`pts$$, 26] = {0, 0, 
          0}; $CellContext`p$$ = \
$CellContext`polyhedron[$CellContext`allNormals$$, $CellContext`pts$$]; \
$CellContext`vertices$$ = Map[$CellContext`verticeTransform2$$[
            $CellContext`verticeTransform1$$[#]]& , 
           $CellContext`p$$[
           "vertices"]]; $CellContext`faces$$ = $CellContext`p$$[
          "faces"]; $CellContext`v$$ = 
         Length[$CellContext`vertices$$]; $CellContext`f$$ = Count[
           $CellContext`p$$["faces"], 
           
           Except[{}]]; $CellContext`e$$ = $CellContext`v$$ + \
$CellContext`f$$ - 
          2; $CellContext`downP$$ = \
$CellContext`polyhedron[$CellContext`allNormals$$, 
           Map[$CellContext`param1[#, 
              $CellContext`d[#], $CellContext`infty$$, $CellContext`L$$, \
$CellContext`t$$] #& , $CellContext`allNormals$$]]; \
$CellContext`calcVertices$$ = $CellContext`downP$$[
          "vertices"]; $CellContext`calcFaces$$ = $CellContext`downP$$[
          "faces"]; $CellContext`rotatedVertices2D$$ = 
         Map[RotationTransform[
           45 Degree][#]& , (1/(2 $CellContext`L$$)) $CellContext`l0$$ 
           Part[$CellContext`vertices$$, All, 
             Span[1, 2]]]; $CellContext`rotatedVertices3D$$ = 
         Map[RotationTransform[
           45 Degree, {0, 0, 1}][#]& , (1/(
            2 $CellContext`L$$)) $CellContext`l0$$ $CellContext`vertices$$]; \
$CellContext`CalcrotatedVertices2D$$ = 
         Map[RotationTransform[
           45 Degree][#]& , (1/(2 $CellContext`L$$)) $CellContext`l0$$ 
           Part[$CellContext`calcVertices$$, All, 
             Span[1, 2]]]; $CellContext`CalcrotatedVertices3D$$ = 
         Map[RotationTransform[
           45 Degree, {0, 0, 1}][#]& , (1/(
            2 $CellContext`L$$)) $CellContext`l0$$ \
$CellContext`calcVertices$$]; $CellContext`polyGraphics$$ = Graphics3D[{
            Specularity[0.5, 6], 
            GraphicsComplex[If[
               Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
               1, $CellContext`l0$$] 
             If[$CellContext`infty$$, 1, 1/(
               2 $CellContext`L$$)] $CellContext`vertices$$, {
              Opacity[
               Dynamic[$CellContext`opacity$$]], 
              Table[
               If[Part[$CellContext`faces$$, $CellContext`i] != {}, {
                 Block[{$CellContext`k = Total[
                    Map[Abs, 
                    Part[$CellContext`allNormals$$, $CellContext`i]]]}, 
                  Switch[
                   Part[
                    Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
                   Darker[
                    GrayLevel[0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 1]]]], 2, 
                   Darker[
                    Lighter[Magenta, 0.4], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 2]]]], 3, 
                   Darker[
                    Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 3]]]], 5, 
                   Darker[Blue, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 5]]]], 7, 
                   Darker[Yellow, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 7]]]]]], {
                  EdgeForm[
                   Thickness[Medium]], 
                  Polygon[
                   
                   Part[$CellContext`faces$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
                Length[$CellContext`allNormals$$]}], 
              PointSize[0.015], Red, 
              Opacity[1], 
              Dynamic[
               If[$CellContext`hideVertices$$, {}, 
                Point[
                 Range[$CellContext`v$$]]]]}]}, Axes -> True, 
           AxesLabel -> {"x", "y", "z"}]; $CellContext`volume$$ = Volume[
           
           ConvexHullRegion[(1/(
             2 $CellContext`L$$)) $CellContext`l0$$ $CellContext`vertices$$]]; \
$CellContext`maxHeight$$ = 
         Max[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
           Part[$CellContext`vertices$$, All, 
             3]]; $CellContext`largestwidth$$ = Max[
            Part[$CellContext`rotatedVertices2D$$, All, 1]] - Min[
           
           Part[$CellContext`rotatedVertices2D$$, All, 
            1]]; $CellContext`largestlength$$ = Max[
            Part[$CellContext`rotatedVertices2D$$, All, 2]] - Min[
           
           Part[$CellContext`rotatedVertices2D$$, All, 
            2]]; $CellContext`bottomWidth$$ = 
         If[Part[$CellContext`faces$$, 14] != {}, Max[
             Part[
              Map[
              RotationTransform[
               45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                 Part[$CellContext`vertices$$, 
                  Part[$CellContext`faces$$, 14]], All, 
                 Span[1, 2]]], All, 1]] - Min[
            Part[
             Map[
             RotationTransform[
              45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                Part[$CellContext`vertices$$, 
                 Part[$CellContext`faces$$, 14]], All, 
                Span[1, 2]]], All, 1]], 0]; $CellContext`bottomLength$$ = 
         If[Part[$CellContext`faces$$, 14] != {}, Max[
             Part[
              Map[
              RotationTransform[
               45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                 Part[$CellContext`vertices$$, 
                  Part[$CellContext`faces$$, 14]], All, 
                 Span[1, 2]]], All, 2]] - Min[
            Part[
             Map[
             RotationTransform[
              45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                Part[$CellContext`vertices$$, 
                 Part[$CellContext`faces$$, 14]], All, 
                Span[1, 2]]], All, 2]], 0]; $CellContext`topWidth$$ = 
         If[Part[$CellContext`faces$$, 7] != {}, Max[
             Part[
              Map[
              RotationTransform[
               45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                 Part[$CellContext`vertices$$, 
                  Part[$CellContext`faces$$, 7]], All, 
                 Span[1, 2]]], All, 1]] - Min[
            Part[
             Map[
             RotationTransform[
              45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                Part[$CellContext`vertices$$, 
                 Part[$CellContext`faces$$, 7]], All, 
                Span[1, 2]]], All, 1]], 0]; $CellContext`topLength$$ = 
         If[Part[$CellContext`faces$$, 7] != {}, Max[
             Part[
              Map[
              RotationTransform[
               45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                 Part[$CellContext`vertices$$, 
                  Part[$CellContext`faces$$, 7]], All, 
                 Span[1, 2]]], All, 2]] - Min[
            Part[
             Map[
             RotationTransform[
              45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                Part[$CellContext`vertices$$, 
                 Part[$CellContext`faces$$, 7]], All, 
                Span[1, 2]]], All, 2]], 
           0]; $CellContext`averageGrowthFactors$$ = {{
           "\!\(\*SubscriptBox[\(f\), \({10} 0\)]\)", ($CellContext`fpos100$$ + \
$CellContext`fneg100$$ + $CellContext`f0pos10$$ + $CellContext`f0neg10$$)/
            4}, {"\!\(\*SubscriptBox[\(f\), \({11} 0\)]\)", \
($CellContext`fpos1pos10$$ + $CellContext`fpos1neg10$$ + \
$CellContext`fneg1pos10$$ + $CellContext`fneg1neg10$$)/4}, {
           "\!\(\*SubscriptBox[\(f\), \({10} 1\)]\)", \
($CellContext`fpos10pos1$$ + $CellContext`fneg10pos1$$ + \
$CellContext`f0pos1pos1$$ + $CellContext`f0neg1pos1$$)/4}, {
           "\!\(\*SubscriptBox[\(f\), \({10} \*OverscriptBox[\(1\), \(_\)]\)]\
\)", ($CellContext`fpos10neg1$$ + $CellContext`fneg10neg1$$ + \
$CellContext`f0pos1neg1$$ + $CellContext`f0neg1neg1$$)/4}, {
           "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(1\), \(_\)]\)]\
\)", ($CellContext`fpos1pos1pos1$$ + $CellContext`fpos1neg1pos1$$ + \
$CellContext`fneg1pos1pos1$$ + $CellContext`fneg1neg1pos1$$)/4}, {
           "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(1\), \(_\)]\)]\
\)", ($CellContext`fpos1pos1neg1$$ + $CellContext`fpos1neg1neg1$$ + \
$CellContext`fneg1pos1neg1$$ + $CellContext`fneg1neg1neg1$$)/4}, {
           "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(3\), \(_\)]\)]\
\)", ($CellContext`fpos1pos1neg3$$ + $CellContext`fpos1neg1neg3$$ + \
$CellContext`fneg1pos1neg3$$ + $CellContext`fneg1neg1neg3$$)/4}, {
           "\!\(\*SubscriptBox[\(f\), \({11} 3\)]\)", \
($CellContext`fpos1pos1pos3$$ + $CellContext`fpos1neg1pos3$$ + \
$CellContext`fneg1pos1pos3$$ + $CellContext`fneg1neg1pos3$$)/4}, {
           "\!\(\*SubscriptBox[\(f\), \({31} 1\)]\)", \
($CellContext`fpos3pos1pos1$$ + $CellContext`fpos3neg1pos1$$ + \
$CellContext`fneg3pos1pos1$$ + $CellContext`fneg3neg1pos1$$ + \
$CellContext`fpos1pos3pos1$$ + $CellContext`fpos1neg3pos1$$ + \
$CellContext`fneg1pos3pos1$$ + $CellContext`fneg1neg3pos1$$)/8}, {
           "\!\(\*SubscriptBox[\(f\), \({31} \*OverscriptBox[\(1\), \(_\)]\)]\
\)", ($CellContext`fpos3pos1neg1$$ + $CellContext`fpos3neg1neg1$$ + \
$CellContext`fneg3pos1neg1$$ + $CellContext`fneg3neg1neg1$$ + \
$CellContext`fpos1pos3neg1$$ + $CellContext`fpos1neg3neg1$$ + \
$CellContext`fneg1pos3neg1$$ + $CellContext`fneg1neg3neg1$$)/8}, {
           "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(5\), \(_\)]\)]\
\)", ($CellContext`fpos1pos1neg5$$ + $CellContext`fpos1neg1neg5$$ + \
$CellContext`fneg1pos1neg5$$ + $CellContext`fneg1neg1neg5$$)/4}, {
           "\!\(\*SubscriptBox[\(f\), \({11} 5\)]\)", \
($CellContext`fpos1pos1pos5$$ + $CellContext`fpos1neg1pos5$$ + \
$CellContext`fneg1pos1pos5$$ + $CellContext`fneg1neg1pos5$$)/4}, {
           "\!\(\*SubscriptBox[\(f\), \({51} 5\)]\)", \
($CellContext`fpos5pos1pos1$$ + $CellContext`fpos5neg1pos1$$ + \
$CellContext`fneg5pos1pos1$$ + $CellContext`fneg5neg1pos1$$ + \
$CellContext`fpos1pos5pos1$$ + $CellContext`fpos1neg5pos1$$ + \
$CellContext`fneg1pos5pos1$$ + $CellContext`fneg1neg5pos1$$)/8}, {
           
           "\!\(\*SubscriptBox[\(f\), \({51} \*OverscriptBox[\(5\), \(_\)]\)]\
\)", ($CellContext`fpos5pos1neg1$$ + $CellContext`fpos5neg1neg1$$ + \
$CellContext`fneg5pos1neg1$$ + $CellContext`fneg5neg1neg1$$ + \
$CellContext`fpos1pos5neg1$$ + $CellContext`fpos1neg5neg1$$ + \
$CellContext`fneg1pos5neg1$$ + $CellContext`fneg1neg5neg1$$)/
            8}}; $CellContext`faceArea$$ = {}; 
        For[$CellContext`i = 1, $CellContext`i <= 
          Length[$CellContext`faces$$], 
          Increment[$CellContext`i], 
          If[True, 
           AppendTo[$CellContext`faceArea$$, 
            ToString[
             If[Part[$CellContext`faces$$, $CellContext`i] == {}, 0, 
              ToString[
               Area[
                
                Polygon[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
                 Part[$CellContext`vertices$$, 
                   
                   Part[$CellContext`faces$$, $CellContext`i]]]]]]]]]]; \
$CellContext`velocities$$ = {{
           "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \(_\)])\)]\
\) = (1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \(-z\)]\)) ", 
            ToString[$CellContext`f00neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((001)\)]\) = (1 + \!\(\*SubscriptBox[\
\(\[CapitalDelta]\), \(+z\)]\))  ", 
            ToString[$CellContext`f00pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((100)\)]\) = (1 + \!\(\*SubscriptBox[\
\(\[CapitalDelta]\), \({100} + x\)]\)) ", 
            ToString[$CellContext`fpos100$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 00)\)]\
\) = (1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - x\)]\))  ", 
            ToString[$CellContext`fneg100$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((010)\)]\) = (1 + \!\(\*SubscriptBox[\
\(\[CapitalDelta]\), \({100} + y\)]\)) ", 
            ToString[$CellContext`f0pos10$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \(_\)] \
0)\)]\) = (1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - y\)]\))  ", 
            ToString[$CellContext`f0neg10$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\)) ", 
            ToString[$CellContext`fpos1pos1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ 1)\
\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(+y\))\)]\))  ", 
            ToString[$CellContext`fneg1pos1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \(-y\))\)]\))  ", 
            ToString[$CellContext`fpos1neg1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(-y\))\)]\))  ", 
            ToString[$CellContext`fneg1neg1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \*OverscriptBox[\(1\), \(_\)])\
\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\))  ", 
            ToString[$CellContext`fpos1pos1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(+y\))\)]\))  ", 
            ToString[$CellContext`fneg1pos1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \
\(-y\))\)]\))  ", 
            ToString[$CellContext`fpos1neg1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(-y\))\)]\))  ", 
            ToString[$CellContext`fneg1neg1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+y\)]\))  ", 
            ToString[$CellContext`f0pos1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+x\)]\))  ", 
            ToString[$CellContext`fpos10pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(+x\), \(+y\))\)]\)) ", 
            ToString[$CellContext`fpos1pos10$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] 1)\
\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\))  ", 
            ToString[$CellContext`f0neg1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \*OverscriptBox[\(1\), \(_\)])\
\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+x\)]\))  ", 
            ToString[$CellContext`fpos10neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(+x\), \(-y\))\)]\))  ", 
            ToString[$CellContext`fpos1neg10$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \*OverscriptBox[\(1\), \(_\)])\
\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+y\)]\))  ", 
            ToString[$CellContext`f0pos1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ 1)\
\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  ", 
            ToString[$CellContext`fneg10pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ 0)\
\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \(+y\))\)]\))  ", 
            ToString[$CellContext`fneg1pos10$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\))  ", 
            ToString[$CellContext`f0neg1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  ", 
            ToString[$CellContext`fneg10neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \
\(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \
\(-y\))\)]\))  ", 
            ToString[$CellContext`fneg1neg10$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((113)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", 
            ToString[$CellContext`fpos1pos1pos3$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((131)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", 
            ToString[$CellContext`fpos1pos3pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((311)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", 
            ToString[$CellContext`fpos3pos1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \(_\)])\)]\
\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", 
            ToString[$CellContext`fpos1pos1neg3$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) y)\)]\))  ", 
            ToString[$CellContext`fpos1neg3pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] 11)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\))\)]\))  ", 
            ToString[$CellContext`fneg3pos1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \
\(-y\))\)]\))  ", 
            ToString[$CellContext`fpos1neg1neg3$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) \
y)\)]\))  ", 
            ToString[$CellContext`fpos1neg3neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(+y\))\)]\))  ", 
            ToString[$CellContext`fneg1pos1neg3$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) \
y)\)]\))  ", 
            ToString[$CellContext`fneg1neg3pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\
\))\)]\))  ", 
            ToString[$CellContext`fneg3pos1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\
\))\)]\))  ", 
            ToString[$CellContext`fneg3neg1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
3)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-y\))\)]\))  ", 
            ToString[$CellContext`fpos1neg1pos3$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \(_\)])\)]\
\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", 
            ToString[$CellContext`fpos1pos3neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 13)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+y\))\)]\))  ", 
            ToString[$CellContext`fneg1pos1pos3$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 31)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) y)\)]\))  ", 
            ToString[$CellContext`fneg1pos3pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \(_\)])\)]\
\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", 
            ToString[$CellContext`fpos3pos1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\))\)]\))  ", 
            ToString[$CellContext`fpos3neg1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 3)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(-y\))\)]\))  ", 
            ToString[$CellContext`fneg1neg1pos3$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 3 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) \
y)\)]\))  ", 
            ToString[$CellContext`fneg1pos3neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\
\))\)]\))  ", 
            ToString[$CellContext`fpos3neg1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-y\))\)]\))  ", 
            ToString[$CellContext`fneg1neg1neg3$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) y)\)]\))  ", 
            ToString[$CellContext`fneg1neg3neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\))\)]\))  ", 
            ToString[$CellContext`fneg3neg1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((115)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
            ToString[$CellContext`fpos1pos1pos5$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((151)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
            ToString[$CellContext`fpos1pos5pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((511)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
            ToString[$CellContext`fpos5pos1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \(_\)])\)]\
\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
            ToString[$CellContext`fpos1pos1neg5$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) y)\)]\))  ", 
            ToString[$CellContext`fpos1neg5pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] 11)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\))\)]\))  ", 
            ToString[$CellContext`fneg5pos1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \
\(-y\))\)]\))  ", 
            ToString[$CellContext`fpos1neg1neg5$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) \
y)\)]\))  ", 
            ToString[$CellContext`fpos1neg5neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(+y\))\)]\))  ", 
            ToString[$CellContext`fneg1pos1neg5$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) \
y)\)]\))  ", 
            ToString[$CellContext`fneg1neg5pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\
\))\)]\))  ", 
            ToString[$CellContext`fneg5pos1neg1$$]}, {
           
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\
\))\)]\))  ", 
            ToString[$CellContext`fneg5neg1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
5)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-y\))\)]\))  ", 
            ToString[$CellContext`fpos1neg1pos5$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \(_\)])\)]\
\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
            ToString[$CellContext`fpos1pos5neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 15)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+y\))\)]\))  ", 
            ToString[$CellContext`fneg1pos1pos5$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 51)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) y)\)]\))  ", 
            ToString[$CellContext`fneg1pos5pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \(_\)])\)]\
\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
            ToString[$CellContext`fpos5pos1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\))\)]\))  ", 
            ToString[$CellContext`fpos5neg1pos1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 5)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(-y\))\)]\))  ", 
            ToString[$CellContext`fneg1neg1pos5$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 5 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) \
y)\)]\))  ", 
            ToString[$CellContext`fneg1pos5neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\
\))\)]\))  ", 
            ToString[$CellContext`fpos5neg1neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-y\))\)]\))  ", 
            ToString[$CellContext`fneg1neg1neg5$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) y)\)]\))  ", 
            ToString[$CellContext`fneg1neg5neg1$$]}, {
           "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\))\)]\))  ", 
            
            ToString[$CellContext`fneg5neg1neg1$$]}}; \
$CellContext`cutFactors$$ = {{
           "", "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
            "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
            "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
            "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
            "\!\(\*SubscriptBox[\(L\), \({111}\)]\)", 
            "\!\(\*SubscriptBox[\(L\), \({11 \*OverscriptBox[\(1\), \
\(_\)]}\)]\)"}, {"(1 0 0)", 
            
            Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 1]], 
            Max[
             Part[
              
              Select[($CellContext`l0$$/(
                2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 1] == 
               Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
                 Part[$CellContext`vertices$$, All, 1]]& ], All, 3]], 
            "(1 1 0)", 
            Max[
             Part[$CellContext`rotatedVertices2D$$, All, 2]], 
            Mean[
             Part[
              Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Max[
                 Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 3]],
             "(1 1 1)", 
            If[Part[$CellContext`faces$$, 7] != {}, 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`pts$$, 7]], 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`vertices$$, 
                Flatten[
                 Position[$CellContext`rotatedVertices3D$$, 
                  Part[
                   
                   Select[$CellContext`rotatedVertices3D$$, And[
                    Part[#, 2] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]], 
                    Part[#, 3] == Max[
                    Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 
                    3]]]& ], 1]]]]]], 
            If[Part[$CellContext`calcFaces$$, 11] != {}, 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`pts$$, 11]], 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`calcVertices$$, 
                Flatten[
                 Position[$CellContext`CalcrotatedVertices3D$$, 
                  Part[
                   
                   Select[$CellContext`CalcrotatedVertices3D$$, And[
                    Part[#, 2] == Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]], 
                    Part[#, 3] == Min[
                    Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 2] == 
                    Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {
           "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 0 0)", 
            Abs[
             
             Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
              Part[$CellContext`vertices$$, All, 1]]], 
            Max[
             Part[
              
              Select[($CellContext`l0$$/(
                2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 1] == 
               Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
                 Part[$CellContext`vertices$$, All, 1]]& ], All, 3]], 
            "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 0)", 
            Abs[
             Min[
              Part[$CellContext`rotatedVertices2D$$, All, 1]]], 
            Mean[
             Part[
              Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Min[
                 Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 3]],
             "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 1)", 
            If[Part[$CellContext`faces$$, 8] != {}, 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`pts$$, 8]], 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`vertices$$, 
                Flatten[
                 Position[$CellContext`rotatedVertices3D$$, 
                  Part[
                   
                   Select[$CellContext`rotatedVertices3D$$, And[
                    Part[#, 1] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]], 
                    Part[#, 3] == Max[
                    Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 
                    3]]]& ], 1]]]]]], 
            If[Part[$CellContext`calcFaces$$, 12] != {}, 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`pts$$, 12]], 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`calcVertices$$, 
                Flatten[
                 Position[$CellContext`CalcrotatedVertices3D$$, 
                  Part[
                   
                   Select[$CellContext`CalcrotatedVertices3D$$, And[
                    Part[#, 1] == Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]], 
                    Part[#, 3] == Min[
                    Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 1] == 
                    Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {"(0 1 0)", 
            
            Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 2]], 
            Max[
             Part[
              
              Select[($CellContext`l0$$/(
                2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 2] == 
               Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
                 Part[$CellContext`vertices$$, All, 2]]& ], All, 3]], 
            "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 
            Max[
             Part[$CellContext`rotatedVertices2D$$, All, 1]], 
            Mean[
             Part[
              Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Max[
                 Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 3]],
             "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 1)", 
            If[Part[$CellContext`faces$$, 9] != {}, 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`pts$$, 9]], 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`vertices$$, 
                Flatten[
                 Position[$CellContext`rotatedVertices3D$$, 
                  Part[
                   
                   Select[$CellContext`rotatedVertices3D$$, And[
                    Part[#, 1] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]], 
                    Part[#, 3] == Max[
                    Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 
                    3]]]& ], 1]]]]]], 
            If[Part[$CellContext`calcFaces$$, 13] != {}, 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`pts$$, 13]], 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`calcVertices$$, 
                Flatten[
                 Position[$CellContext`CalcrotatedVertices3D$$, 
                  Part[
                   
                   Select[$CellContext`CalcrotatedVertices3D$$, And[
                    Part[#, 1] == Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]], 
                    Part[#, 3] == Min[
                    Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 1] == 
                    Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {
           "(0 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 
            Abs[
             
             Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
              Part[$CellContext`vertices$$, All, 2]]], 
            Max[
             Part[
              
              Select[($CellContext`l0$$/(
                2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 2] == 
               Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
                 Part[$CellContext`vertices$$, All, 2]]& ], All, 3]], 
            "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 0)", 
            Abs[
             Min[
              Part[$CellContext`rotatedVertices2D$$, All, 2]]], 
            Mean[
             Part[
              Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Min[
                 Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 3]],
             "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 1)", 
            If[Part[$CellContext`faces$$, 10] != {}, 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`pts$$, 10]], 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`vertices$$, 
                Flatten[
                 Position[$CellContext`rotatedVertices3D$$, 
                  Part[
                   
                   Select[$CellContext`rotatedVertices3D$$, And[
                    Part[#, 2] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]], 
                    Part[#, 3] == Max[
                    Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 
                    3]]]& ], 1]]]]]], 
            If[Part[$CellContext`calcFaces$$, 14] != {}, 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`pts$$, 14]], 
             
             Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
              Part[$CellContext`calcVertices$$, 
                Flatten[
                 Position[$CellContext`CalcrotatedVertices3D$$, 
                  Part[
                   
                   Select[$CellContext`CalcrotatedVertices3D$$, And[
                    Part[#, 2] == Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]], 
                    Part[#, 3] == Min[
                    Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 2] == 
                    Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]]& ], 
                    All, 3]]]& ], 1]]]]]]}}; $CellContext`type$$ = StringJoin[
           Map["(" <> StringJoin[
              Map[ToString, #]] <> ")"& , 
            DeleteDuplicates[
             Map[Sort[#, Greater]& , 
              Map[Abs, 
               Map[Part[
                 Nearest[$CellContext`normals$$, #], 1]& , 
                Extract[$CellContext`allNormals$$, 
                 Rest[
                  Position[$CellContext`faces$$, 
                   Except[{}], 1]]]]]]]]]; $CellContext`info$$ = 
         ToString[$CellContext`f$$] <> " Faces, " <> 
          ToString[$CellContext`e$$] <> " Edges, " <> 
          ToString[$CellContext`v$$] <> " Vertices."; 
        Null]; $CellContext`calcSection$$ = 
      Hold[$CellContext`timePolygon2D$$ = {}; $CellContext`n$$ = 
         Normalize[$CellContext`n$$]; If[
          And[
          Part[$CellContext`n$$, 1] != 0, Part[$CellContext`n$$, 2] != 0, 
           Part[$CellContext`n$$, 3] != 0], $CellContext`projX$$ = 
          Normalize[{0, 0, 1} - 
            Dot[{0, 0, 1}, $CellContext`n$$] $CellContext`n$$], 
          If[
           Or[Abs[
              Part[$CellContext`n$$, 1]] == 1, Part[$CellContext`n$$, 3] != 
            0], $CellContext`projX$$ = 
            Normalize[{0, 1, 0} - 
              Dot[{0, 1, 0}, $CellContext`n$$] $CellContext`n$$]; 
           Null, $CellContext`projX$$ = 
            Normalize[{1, 0, 0} - 
              Dot[{1, 0, 0}, $CellContext`n$$] $CellContext`n$$]; Null]]; 
        If[Total[
            Cross[$CellContext`n$$, $CellContext`projX$$]] < 
          0, $CellContext`projY$$ = 
          Cross[$CellContext`projX$$, $CellContext`n$$], $CellContext`projY$$ = 
          Cross[$CellContext`n$$, $CellContext`projX$$]]; \
$CellContext`timeGrid1$$ = 
         Range[$CellContext`tMin$$, $CellContext`t$$, ($CellContext`t$$ - \
$CellContext`tMin$$)/
           ControlActive[$CellContext`previewNum$$, $CellContext`Num$$]]; \
$CellContext`textX$$ = 1; $CellContext`textY$$ = 
         1; $CellContext`timeStepLines$$ = Append[
           
           Range[$CellContext`tMin$$, $CellContext`t$$, \
$CellContext`timeStep$$], $CellContext`t$$]; $CellContext`timingTest$$ = {}; 
        If[$CellContext`constantVelocity$$, 
          Module[{$CellContext`i$, $CellContext`poly$}, \
$CellContext`polygons$$ = {}; $CellContext`poly$["vertices"] = {
              0}; $CellContext`i$ = 
             Length[$CellContext`timeGrid1$$]; $CellContext`polygons2D$$ = {}; \
$CellContext`Llist$$ = {}; $CellContext`timingTest$$ = {}; While[
              
              And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ >= 
               1], $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
                 $CellContext`pts1[False, $CellContext`L$$, 
                  
                  Part[$CellContext`timeGrid1$$, $CellContext`i$], \
$CellContext`allNormals$$], 
                 If[$CellContext`cutPosition$$ == 0, 
                   0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
              AppendTo[$CellContext`polygons2D$$, 
                ($CellContext`polygon3D[
                 Map[If[
                    Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                    1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                    And[
                    Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                    0], {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                  Part[
                   #["vertices"], 
                   #["face"]]], 
                 #["colors"]]& )[$CellContext`poly$]]; 
              AppendTo[$CellContext`polygons$$, 
                ($CellContext`polygon3D[
                 Map[$CellContext`verticeTransform2$$[
                   $CellContext`verticeTransform1$$[#]]& , If[
                    Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                    1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                    #["vertices"], 
                    #["face"]]], 
                 #["colors"]]& )[$CellContext`poly$]]; 
              Decrement[$CellContext`i$]; Null]; 
            If[Last[$CellContext`polygons$$] == {}, 
              AppendTo[$CellContext`timeStepLines$$, 
                
                Part[$CellContext`timeGrid1$$, $CellContext`i$ + 
                 2]]; $CellContext`timeStepLines$$ = Sort[
                 
                 Select[$CellContext`timeStepLines$$, # >= 
                  Part[$CellContext`timeGrid1$$, $CellContext`i$ + 2]& ]]; 
              Null]; Null]; 
          Module[{$CellContext`i$, $CellContext`poly$}, \
$CellContext`timeStepLines2D$$ = {}; $CellContext`timeStepLines3D$$ = {}; \
$CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
             Length[$CellContext`timeStepLines$$] - 
              1; $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
               $CellContext`pts1[False, $CellContext`L$$, 
                
                Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
                 1], $CellContext`allNormals$$], 
               If[$CellContext`cutPosition$$ == 0, 
                 0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
            AppendTo[$CellContext`timeStepLines2D$$, 
              ($CellContext`polygon3D[
               Map[If[
                  Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                  1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                  And[
                  Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                   0], {
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                Part[
                 #["vertices"], 
                 #["face"]]], 
               ConstantArray[0, 
                Length[
                 #["colors"]]]]& )[$CellContext`poly$]]; 
            AppendTo[$CellContext`timeStepLines3D$$, 
              ($CellContext`polygon3D[
               Map[$CellContext`verticeTransform2$$[
                 $CellContext`verticeTransform1$$[#]]& , If[
                  Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                  1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                  #["vertices"], 
                  #["face"]]], 
               ConstantArray[0, 
                Length[
                 #["colors"]]]]& )[$CellContext`poly$]]; While[
              
              And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ > 
               1], $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
                 $CellContext`pts1[False, $CellContext`L$$, 
                  
                  Part[$CellContext`timeStepLines$$, $CellContext`i$], \
$CellContext`allNormals$$], 
                 If[$CellContext`cutPosition$$ == 0, 
                   0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
              AppendTo[$CellContext`timeStepLines2D$$, 
                ($CellContext`polygon[
                 Map[If[
                    Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                    1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                    And[
                    Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                    0], {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                  Part[
                   #["vertices"], 
                   #["face"]]], 
                 ConstantArray[0, 
                  Length[
                   #["colors"]]]]& )[$CellContext`poly$]]; 
              AppendTo[$CellContext`timeStepLines3D$$, 
                 ($CellContext`polygon[
                  Map[$CellContext`verticeTransform2$$[
                    $CellContext`verticeTransform1$$[#]]& , If[
                    Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                    1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                    #["vertices"], 
                    #["face"]]], 
                  ConstantArray[0, 
                   Length[
                    #["colors"]]]]& )[$CellContext`poly$]] 
               Decrement[$CellContext`i$]; 
              Null]; $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
               $CellContext`pts1[False, $CellContext`L$$, 
                
                Part[$CellContext`timeStepLines$$, 
                 1], $CellContext`allNormals$$], 
               If[$CellContext`cutPosition$$ == 0, 
                 0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
            AppendTo[$CellContext`timeStepLines2D$$, 
              ($CellContext`polygon3D[
               Map[If[
                  Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                  1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                  And[
                  Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                   0], {
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                Part[
                 #["vertices"], 
                 #["face"]]], 
               ConstantArray[0, 
                Length[
                 #["colors"]]]]& )[$CellContext`poly$]]; 
            AppendTo[$CellContext`timeStepLines3D$$, 
              ($CellContext`polygon3D[
               Map[$CellContext`verticeTransform2$$[
                 $CellContext`verticeTransform1$$[#]]& , If[
                  Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                  1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                  #["vertices"], 
                  #["face"]]], 
               ConstantArray[0, 
                Length[
                 #["colors"]]]]& )[$CellContext`poly$]]]; Null, 
          Module[{$CellContext`i$, $CellContext`poly$, \
$CellContext`tempVelocity$, $CellContext`tempL$}, $CellContext`polygons$$ = \
{}; $CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
             Length[$CellContext`timeGrid1$$]; $CellContext`polygons2D$$ = {}; \
$CellContext`Llist$$ = {}; $CellContext`timingTest$$ = {}; While[
               
               And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ >= 
                1], Quiet[$CellContext`tempVelocity$ = 
                 NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$\
$ + $CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                    Part[$CellContext`timeGrid1$$, $CellContext`i$]}]/
                  Part[$CellContext`timeGrid1$$, $CellContext`i$]]; \
$CellContext`tempL$ = $CellContext`l0$$/(
                 2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
                  $CellContext`pts1[False, $CellContext`tempL$, 
                   
                   Part[$CellContext`timeGrid1$$, $CellContext`i$], \
$CellContext`allNormals$$], 
                  If[$CellContext`cutPosition$$ == 0, 
                    0.0001, $CellContext`cutPosition$$] 
                  2 $CellContext`tempL$]; AppendTo[$CellContext`polygons2D$$, 
                 ($CellContext`polygon3D[
                  Map[If[
                    Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                    1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                    And[
                    Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                    0], {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                   Part[
                    #["vertices"], 
                    #["face"]]], 
                  #["colors"]]& )[$CellContext`poly$]]; 
               AppendTo[$CellContext`polygons$$, 
                  ($CellContext`polygon3D[
                   Map[$CellContext`verticeTransform2$$[
                    $CellContext`verticeTransform1$$[#]]& , If[
                    Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                    1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                    #["vertices"], 
                    #["face"]]], 
                   #["colors"]]& )[$CellContext`poly$]] 
                Decrement[$CellContext`i$]; Null] 
             If[Last[$CellContext`polygons$$] == {}, 
               AppendTo[$CellContext`timeStepLines$$, 
                 
                 Part[$CellContext`timeGrid1$$, $CellContext`i$ + 
                  2]]; $CellContext`timeStepLines$$ = Sort[
                  
                  Select[$CellContext`timeStepLines$$, # >= 
                   Part[$CellContext`timeGrid1$$, $CellContext`i$ + 2]& ]]; 
               Null]; Null]; 
          Module[{$CellContext`i$, $CellContext`poly$, \
$CellContext`tempVelocity$, $CellContext`tempL$}, \
$CellContext`timeStepLines2D$$ = {}; $CellContext`timeStepLines3D$$ = {}; \
$CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
             Length[$CellContext`timeStepLines$$] - 1; 
            Quiet[$CellContext`tempVelocity$ = 
              NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                  Part[$CellContext`timeStepLines$$, $CellContext`i$ + 1]}]/
               Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
                1]]; $CellContext`tempL$ = $CellContext`l0$$/(
              2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
               $CellContext`pts1[False, $CellContext`tempL$, 
                
                Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
                 1], $CellContext`allNormals$$], 
               If[$CellContext`cutPosition$$ == 0, 
                 0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
            AppendTo[$CellContext`timeStepLines2D$$, 
              ($CellContext`polygon3D[
               Map[If[
                  Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                  1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                  And[
                  Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                   0], {
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                Part[
                 #["vertices"], 
                 #["face"]]], 
               ConstantArray[0, 
                Length[
                 #["colors"]]]]& )[$CellContext`poly$]]; 
            AppendTo[$CellContext`timeStepLines3D$$, 
              ($CellContext`polygon3D[
               Map[$CellContext`verticeTransform2$$[
                 $CellContext`verticeTransform1$$[#]]& , If[
                  Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                  1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                  #["vertices"], 
                  #["face"]]], 
               ConstantArray[0, 
                Length[
                 #["colors"]]]]& )[$CellContext`poly$]]; While[
              And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ > 1], 
              Quiet[$CellContext`tempVelocity$ = 
                NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$\
 + $CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                    Part[$CellContext`timeStepLines$$, $CellContext`i$]}]/
                 Part[$CellContext`timeStepLines$$, $CellContext`i$]]; \
$CellContext`tempL$ = $CellContext`l0$$/(
                2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
                 $CellContext`pts1[False, $CellContext`tempL$, 
                  
                  Part[$CellContext`timeStepLines$$, $CellContext`i$], \
$CellContext`allNormals$$], 
                 If[$CellContext`cutPosition$$ == 0, 
                   0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
              AppendTo[$CellContext`timeStepLines2D$$, 
                ($CellContext`polygon[
                 Map[If[
                    Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                    1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                    And[
                    Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                    0], {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                  Part[
                   #["vertices"], 
                   #["face"]]], 
                 ConstantArray[0, 
                  Length[
                   #["colors"]]]]& )[$CellContext`poly$]]; 
              AppendTo[$CellContext`timeStepLines3D$$, 
                ($CellContext`polygon[
                 Map[$CellContext`verticeTransform2$$[
                   $CellContext`verticeTransform1$$[#]]& , If[
                    Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                    1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                    #["vertices"], 
                    #["face"]]], 
                 ConstantArray[0, 
                  Length[
                   #["colors"]]]]& )[$CellContext`poly$]]; 
              Decrement[$CellContext`i$]; Null]; 
            Quiet[$CellContext`tempVelocity$ = 
              NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                  Part[$CellContext`timeStepLines$$, 1]}]/
               Part[$CellContext`timeStepLines$$, 
                1]]; $CellContext`tempL$ = $CellContext`l0$$/(
              2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
               $CellContext`pts1[False, $CellContext`tempL$, 
                
                Part[$CellContext`timeStepLines$$, 
                 1], $CellContext`allNormals$$], 
               If[$CellContext`cutPosition$$ == 0, 
                 0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
            AppendTo[$CellContext`timeStepLines2D$$, 
              ($CellContext`polygon3D[
               Map[If[
                  Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                  1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                  And[
                  Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                   0], {
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                   
                   Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                Part[
                 #["vertices"], 
                 #["face"]]], 
               ConstantArray[0, 
                Length[
                 #["colors"]]]]& )[$CellContext`poly$]]; 
            AppendTo[$CellContext`timeStepLines3D$$, 
              ($CellContext`polygon3D[
               Map[$CellContext`verticeTransform2$$[
                 $CellContext`verticeTransform1$$[#]]& , If[
                  Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                  1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                  #["vertices"], 
                  #["face"]]], 
               ConstantArray[0, 
                Length[
                 #["colors"]]]]& )[$CellContext`poly$]]]; 
          Null]; $CellContext`textX$$ = Max[
           Part[
            Part[
             Part[$CellContext`timeStepLines2D$$, 1], 1], All, 
            1]]; $CellContext`textY$$ = Max[
           Part[
            Part[
             Part[$CellContext`timeStepLines2D$$, 1], 1], All, 
            2]]; $CellContext`timePolygonColor$$ = Which[
           Or[Sort[
              Abs[$CellContext`n$$]] == {0, 0, 1}, 
            RegionMember[
             ConvexHullRegion[{{
                Part[$CellContext`ds$$, 3], 
                Part[$CellContext`ds$$, 5], 0.}, {
                Part[$CellContext`ds$$, 3], -Part[$CellContext`ds$$, 5], 
                0.}, {-Part[$CellContext`ds$$, 3], 
                Part[$CellContext`ds$$, 5], 0.}, {-
                Part[$CellContext`ds$$, 3], -Part[$CellContext`ds$$, 5], 0.}, {
                Part[$CellContext`ds$$, 3], 
                Part[$CellContext`ds$$, 5], 
                Part[$CellContext`ds$$, 2]}, {
                Part[$CellContext`ds$$, 3], -Part[$CellContext`ds$$, 5], 
                Part[$CellContext`ds$$, 2]}, {-Part[$CellContext`ds$$, 3], 
                Part[$CellContext`ds$$, 5], 
                Part[$CellContext`ds$$, 2]}, {-Part[$CellContext`ds$$, 3], -
                Part[$CellContext`ds$$, 5], 
                Part[$CellContext`ds$$, 2]}}], Part[
               Part[
                Last[$CellContext`timeStepLines3D$$], 1], 1] - {
             0.01, 0.01, 0}]], 
           Darker[
            GrayLevel[0.7], 0], Sort[
             Abs[$CellContext`n$$]] == Normalize[{0, 1, 1}], 
           Darker[
            Lighter[Magenta, 0.4], 0], Sort[
             Abs[$CellContext`n$$]] == Normalize[{1, 1, 1}], 
           Darker[
            Blend[{Yellow, Green}, 0.7], 
            0]]; $CellContext`timePolygon2D$$ = \
{$CellContext`timePolygonColor$$, 
           Polygon[
            Part[
             Last[$CellContext`timeStepLines2D$$], 
             1]]}; $CellContext`timePolygon3D$$ = \
{$CellContext`timePolygonColor$$, 
           Polygon[
            Part[
             Last[$CellContext`timeStepLines3D$$], 1]]}; 
        Null]; $CellContext`calcCutOn$$ = 
      Hold[ReleaseHold[$CellContext`calcCutOff$$]; 
        Quiet[$CellContext`velocityPlot$$ = 
           Plot[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 
             10^(-3), {$CellContext`x, 0, $CellContext`t$$}, 
             AxesLabel -> {"time (hr)", "Growth Velocity (mm/hr)"}]; 
          Null]; $CellContext`normals1$$ = 
         Append[$CellContext`allNormals$$, $CellContext`n$$]; \
$CellContext`p1$$ = $CellContext`polyhedron[$CellContext`normals1$$, 
           Append[
            $CellContext`pts1[
            False, $CellContext`L$$, $CellContext`t$$, \
$CellContext`allNormals$$], $CellContext`cutPosition$$ 
            2 $CellContext`L$$ $CellContext`n$$]]; $CellContext`vertices1$$ = 
         If[
            Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
            1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) 
          Map[$CellContext`verticeTransform2$$[
             $CellContext`verticeTransform1$$[#]]& , 
            $CellContext`p1$$[
            "vertices"]]; $CellContext`faces1$$ = $CellContext`p1$$[
          "faces"]; $CellContext`v1$$ = 
         Length[$CellContext`vertices1$$]; $CellContext`f1$$ = Count[
           $CellContext`p1$$["faces"], 
           
           Except[{}]]; $CellContext`e1$$ = $CellContext`v1$$ + \
$CellContext`f1$$ - 2; $CellContext`type$$ = StringJoin[
           Map["(" <> StringJoin[
              Map[ToString, #]] <> ")"& , 
            DeleteDuplicates[
             Map[Sort[#, Greater]& , 
              Map[Abs, 
               Map[Part[
                 Nearest[$CellContext`normals$$, #], 1]& , 
                Extract[$CellContext`allNormals$$, 
                 Rest[
                  Position[$CellContext`faces$$, 
                   Except[{}], 1]]]]]]]]]; $CellContext`info$$ = 
         ToString[$CellContext`f1$$] <> " Faces, " <> 
          ToString[$CellContext`e1$$] <> " Edges, " <> 
          ToString[$CellContext`v1$$] <> 
          " Vertices."; $CellContext`polyGraphics$$ = Graphics3D[{
            Specularity[0.5, 6], 
            GraphicsComplex[$CellContext`vertices1$$, {
              Dynamic[
               Opacity[$CellContext`opacity$$]], 
              Dynamic[
               Table[
                If[Part[$CellContext`faces1$$, $CellContext`i] != {}, {
                  Block[{$CellContext`k = Total[
                    Map[Abs, 
                    Part[$CellContext`normals1$$, $CellContext`i]]]}, 
                   Switch[
                    Part[
                    Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
                    Darker[
                    GrayLevel[0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 1]]]], 2, 
                    Darker[
                    Lighter[Magenta, 0.4], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 2]]]], 3, 
                    Darker[
                    Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 3]]]], 5, 
                    Darker[Blue, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 5]]]], 7, 
                    Darker[Yellow, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 7]]]]]], {
                   EdgeForm[
                    Thickness[Medium]], 
                   Polygon[
                    
                    Part[$CellContext`faces1$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
                 Length[
                  
                  If[$CellContext`drawCutPlane$$, $CellContext`normals1$$, \
$CellContext`allNormals$$]]}]], 
              PointSize[0.015], Red, 
              Opacity[1], 
              Dynamic[
               If[$CellContext`hideVertices$$, {}, 
                Point[
                 Range[$CellContext`v$$]]]]}]}, Axes -> True, 
           AxesLabel -> {"x", "y", "z"}]; 
        ReleaseHold[$CellContext`calcSection$$]]; Null))],
  StripOnInput->False,
  DynamicUpdating->True,
  DynamicEvaluationTimeout->DirectedInfinity[1]]], "Output",
 CellChangeTimes->{3.9372171263236732`*^9, 3.9372171684559536`*^9, 
  3.937217542966873*^9, 3.937217655870051*^9, 3.937217759944929*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"57414eba-7901-4924-aca5-8caba38a6c83"]
}, Open  ]]
},
WindowSize->{1141.8, 568.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.7 Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0daf373e-87a5-4de9-b0bf-a410b9f43719"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 466640, 9762, 20458, "Input",ExpressionUUID->"8cdd1075-8fd8-4009-9d2c-7434864fab24"],
Cell[467223, 9786, 1070353, 18734, 5889, "Output",ExpressionUUID->"57414eba-7901-4924-aca5-8caba38a6c83"]
}, Open  ]]
}
]
*)

