(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 13.3' *)

(***************************************************************************)
(*                                                                         *)
(*                                                                         *)
(*  Under the Wolfram FreeCDF terms of use, this file and its content are  *)
(*  bound by the Creative Commons BY-SA Attribution-ShareAlike license.    *)
(*                                                                         *)
(*        For additional information concerning CDF licensing, see:        *)
(*                                                                         *)
(*         www.wolfram.com/cdf/adopting-cdf/licensing-options.html         *)
(*                                                                         *)
(*                                                                         *)
(***************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1088,         20]
NotebookDataLength[   1052318,      18443]
NotebookOptionsPosition[   1052820,      18440]
NotebookOutlinePosition[   1053286,      18458]
CellTagsIndexPosition[   1053243,      18455]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  DynamicModuleBox[{$CellContext`pts$$ = CompressedData["
1:eJxTTMoPSmViYGDwAmJmBkzw7NnZmuPbIg9gFw9wqGtIF0sMCHYgVh+aPEF9
507UqDSU2Dqg0zpCs74eXuhwAErD+A7H/r+KSP5lB6MPwPjfzPJMHrcaHkCj
HeqCWeaH+bui0wfsT06qLV1lBaMdYPy1SzxfByRaOEBpGP/AJBVPIGLCoGH+
6FqseqXht5sDOo0ub/GazX/qSi84jR4+cm276qr2ux+A0g5nzs7+2ZfrDVcH
5R/It7vJnCbo4gClMeIBpg+mHmYumj0OHDeK5v5f5XoASuOIL9cD6DSx8vO0
UkMD/xk7wOi3+8UZqv76Opjf7XCfvdvc4eXSZaVbzgTC+W9j0ndYKAY6PK82
8f52zQxO68WdsdZQs4DTi9xu6syTCTpwXOCDbtFja4epPCWLpr4KwcmH0ZOa
p9qdErOC0QfWKX1YJz4x+ABMHI2PTmPIo+sPWVPZs7vP74DFid+b1ONNHKA0
ujq4ehmF8t0CDCYw+oDWBiNJSQY/BzR/wPgHmvn/1UyoNoHRDi7itbsjdsLV
H0BT76DVb9T56leQQ2+mM0+fnyWMPtDSM/uFtUuAA1va+Qf+G0wPQGkHdH9D
3Y0eXnD+ppsbPs5+GuTgpOTopGpkeQBGMwXoRXx+Z4qg9yg1mRUHEM+H0n/q
8/c1ypk4wOjf8dx6SmqRRPNh9OtdVk5vzpvC6WWZJ4OeO0cfIJYPo89sSOy2
F4HTB/7LWOX5R0YdgImj8dFpDHkC+nHZA5dHc98BqLvR/QmXR6Mx5Anox6Xu
AFr4oPsP3R84+TD6buk09qtJxnA6RLjGs8s6gmg+jAYAMa36NA==
   "], $CellContext`polyGraphics$$ = Graphics3D[{
     Specularity[0.5, 6], 
     GraphicsComplex[CompressedData["
1:eJxTTMoPSmViYGBQAmJmIJ609Nz6dQKMB7pmnxZeYPt4f0DA88pTqQwOMPGc
1oW5HXUv7GHiL/x8wqTDGQ60QNVfbVzLbJPDCBfPgqqHid+Nsy4KtWFx4Hi0
MfPDl+/702ZNOZ97m9GBU/nTlpWTPtr77mmyXT+N6UA6VNxxWSq34x4Wh9sa
J7MFN/zcr8Q5de7cQgaHSxvdnjdM+mS/Lb5vn30J8wFlqPija/fDX5j/3S/Q
Kb5PWfot3PyZG7sfT3j/2N4Haj5M/KjE0xzRchaHfO9OTZ+ef/Yw8RCRh5MF
Oj7b29iczO8qZnWAidv6pcRN2/ARQ3zj2av3g1P/7Z+g/+D4U/d39ujmP2qa
kpqjifDvi8ZNj0RU/+9n2R0vvSfvGVz8FVT8wRLT0iXrX8PNifbs3WnT93X/
km0PFJdwMTvMm7Dr6SPtY/sTLmSYXKhiOODrrJRyIOSTvXIAU/Tp6r/2yRO/
vSrPerXfGurORVD1P8pmSAj3vYS7v5ndcrr8XwaH+NOTXJVO/N3vAzUHJh4F
tXdCMvs77QjGAwuh5ggHP8zSmc5wQAgazp0CukGWMv/sa7ccXHF64cv99buD
9TjvMR9YClWv5RCg1/v4mX0DVPz+H42Fuzv/20s8efPP6Sm3w0HhQ0tnsN20
XwNV/2rJ1U+SvqwO+4o4V8yW/Gs/f0NtpYQLowNMvd+3d7zrnh7bD1P/8Urv
/VkPWB2SdptO2rz1+/7d8Q+fnXD9bw8zR3+VyJPd277uh5kjeWljZ8Kue/Dw
gfnr9VHe9juqD+DuXwkVjxVn0tin/wHu/jtQ9wMATUCc+Q==
      "], {
       Opacity[
        Dynamic[$CellContext`opacity$$]], {{}, {
         RGBColor[0.7, 0.7, 0.7], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{1, 3, 4, 2}]}}, {
         RGBColor[0.7, 0.7, 0.7], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{5, 7, 8, 6}]}}, {}, {}, {}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{5, 15, 11, 12, 13, 14, 17, 16, 9, 10, 6}]}}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{18, 20, 21, 22, 19}]}}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{9, 24, 23, 25, 26, 10}]}}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{1, 24, 23, 18, 19, 2}]}}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{27, 29, 30, 31, 28}]}}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{11, 28, 27, 32, 12}]}}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{7, 30, 29, 33, 34, 8}]}}, {
         RGBColor[0.30000000000000004`, 1., 0.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{18, 23, 25, 33, 29, 27, 32, 20}]}}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{13, 21, 22, 14}]}}, {}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{11, 28, 31, 15}]}}, {}, {}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{25, 33, 34, 26}]}}, {}, {}, {
         RGBColor[1., 0.4, 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{12, 32, 20, 21, 13}]}}, {}, {}, {}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          
          Polygon[{3, 16, 17, 
           4}]}}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{1, 24, 9, 16, 3}]}}, {}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{2, 19, 22, 14, 17, 4}]}}, {}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          Polygon[{5, 15, 31, 30, 7}]}}, {
         RGBColor[0., 0., 1.], {
          EdgeForm[
           Thickness[Medium]], 
          
          Polygon[{6, 10, 26, 34, 
           8}]}}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
       PointSize[0.015], 
       RGBColor[1, 0, 0], 
       Opacity[1], 
       Dynamic[
        If[$CellContext`hideVertices$$, {}, 
         Point[
          Range[$CellContext`v$$]]]]}]}, Axes -> True, 
    AxesLabel -> {
     "x", "y", "z"}], $CellContext`polygons$$ = {}, $CellContext`type$$ = 
   "(100)(111)(110)(311)", $CellContext`info$$ = 
   "19 Faces, 51 Edges, 34 Vertices.", $CellContext`v$$ = 
   34, $CellContext`p$$ = $CellContext`result$185188, $CellContext`f$$ = 
   19, $CellContext`e$$ = 
   51, $CellContext`v1$$, $CellContext`f1$$, $CellContext`p1$$, \
$CellContext`e1$$, $CellContext`timeGrid1$$, $CellContext`faces$$ = {{}, {1, 
    3, 4, 2}, {5, 7, 8, 6}, {}, {}, {}, {5, 15, 11, 12, 13, 14, 17, 16, 9, 10,
     6}, {18, 20, 21, 22, 19}, {9, 24, 23, 25, 26, 10}, {1, 24, 23, 18, 19, 
    2}, {27, 29, 30, 31, 28}, {11, 28, 27, 32, 12}, {7, 30, 29, 33, 34, 8}, {
    18, 23, 25, 33, 29, 27, 32, 20}, {13, 21, 22, 14}, {}, {11, 28, 31, 
    15}, {}, {}, {25, 33, 34, 26}, {}, {}, {12, 32, 20, 21, 13}, {}, {}, {}, {
    3, 16, 17, 4}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {1, 24, 9, 16, 
    3}, {}, {2, 19, 22, 14, 17, 4}, {}, {5, 15, 31, 30, 7}, {6, 10, 26, 34, 
    8}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, $CellContext`vertices$$ \
= CompressedData["
1:eJxTTMoPSmViYGBQAmJmIFY8nV61JMHjwJ5bxfOsa7QPfOk8EtOW4+4AExdI
fbJ2W52hA0z8cZp0cU+4+4HNUPVMvG3Tcx57wMX5oeph4gxbJumLvvBxWKPO
y1Qg43jA0mn+TecmT4fr++ZuCJSydOAuuGN3qNfrgDVU3Phqwq8L83wdnNIU
/3yIcDoQbvRublatu4M9o5XbyXYrhwXrPlg4n/I+EAkVP67puLnxnssBdX25
3q8nTQ5YQc3peeUzM7tKx4ETaj5M/BPPm52MNr4OSqpysgsvujrA3KP37+De
ic+sHWRZ+H8sXuLnAFMffevtCwFXS7g4TH2E2sFJp7e6Hjh32yP22AJTB3Tz
Y0KdNgp3O8D9q3tJxvOgnduBuAZ2zT2sBnD36EHFeX5sZA89Zgw357r58e3H
TtkdOPPt4c80Y28Hn6PSer9W8x9YF/FTqa/L/UC7m+/jSfpWDgdZJ8z7x+fq
kDKv5rzwPaMDMlB3BkHVf9szNW6lgxHc/VJPYu5udvFwaFsiLdXq6nqgDWqO
NFT8GtTeFAPuHYePeRwIgJqz/LZcoOBm9wMa0HAu+GG+f0qjq8OH647e+/2M
DuwRP/82IdHnQBhU/YmL1qe0Iw0c9kHFve5nyi9tc3OoWd6ru/BNsIPRgctN
T+8rOiRA1WfNnPtgV66fQ8R0vca7J1wc5H3fsYut8oCr1/H9+G1DlMABmHrn
G/f0Chz8HRx8QrVc3zsc4I6f+ksmzM0BZo5S/1KtBSz2B2DmMJ08s7Trkyo8
fAKh5jwIdVpnLKh+YC/UnTFQ8WN1MXaB8uZw93tA3Q8Ahw93Mw==
   "], $CellContext`vertices1$$, $CellContext`faces1$$, $CellContext`n$$ = {1,
    0, 0}, $CellContext`normals1$$ = CompressedData["
1:eJx1kNsJxUAIRM1dtpDUc/9SQgpI+ieEPGCHHAYdEFdHR9d53ZftFxH/x1p8
uB7oPQ3LuCi4CfbmsvgacI48c4TPyOKw2WGa3N91VUcd1lS7tMLTzqHtnjcg
x5so9l7l+N/3zT2o0xKePX77Zhz1hLPw3KkXnnaMevf8FznOUOy9yvl9uAd1
esKzx+/TjaOecBReWsINfMqM6g==
   "], $CellContext`pos$$, $CellContext`allNormals$$ = CompressedData["
1:eJx1kGEKgDAIha2xg3SdfnaEDlD3Z4xqMOnjoQ/E6dOnczvv41rNbP+s2I/n
g7+XaRFnCbfARi6KnwnlyDNH6IwoNpltosn9VdfrqMOabJeSeFqf2up5A3K8
icfa6zn+d7y5B3VKwLNHb1+Eo56jJ5471cTT2qxXz3+R4wyPtddzeh/uQZ0a
8OzR+1ThqOdoiR94Ad3pjOg=
   "], $CellContext`pts0$$ = CompressedData["
1:eJxTTMoPSmViYGDwAmJmBhj4YL/GJ+JF1bbX9lD+fhiNJm5Pqnoc+tHV7aeS
+ejm7GdAAYTMx1CHZh5cnpA4qe7EkCczfDD04wp/XO5ENw+7PLp/4XwM83HJ
E5tOCPmXxHDDmZ6x+wtXOsLlX0L6CYcfkf6kOB5JDCcc8YgrHEjNL7jUjaYf
7Hx0dQjzRtMPNvMQ9gAA2Vqaug==
   "], $CellContext`planes0$$ = {{0, 0, 1, 1}, {0, 0, -1, 1}, {-1, 0, 0, 1}, {
    1, 0, 0, 1}, {0, -1, 0, 1}, {0, 1, 0, 
    1}, {-1, -1, -1, 0.8660254037844388}, {
    1, -1, -1, 2 3^Rational[1, 2]}, {-1, 1, -1, 2 3^Rational[1, 2]}, {
    1, 1, -1, 2 3^Rational[1, 2]}, {-1, -1, 1, 2 3^Rational[1, 2]}, {
    1, -1, 1, 2 3^Rational[1, 2]}, {-1, 1, 1, 2 3^Rational[1, 2]}, {1, 1, 1, 
    0}, {0, -1, -1, 2 2^Rational[1, 2]}, {-1, 0, -1, 2 
     2^Rational[1, 2]}, {-1, -1, 0, 2 2^Rational[1, 2]}, {
    0, 1, -1, 2 2^Rational[1, 2]}, {-1, 0, 1, 2 2^Rational[1, 2]}, {-1, 1, 0, 
     2 2^Rational[1, 2]}, {0, -1, 1, 2 2^Rational[1, 2]}, {
    1, 0, -1, 2 2^Rational[1, 2]}, {1, -1, 0, 2 2^Rational[1, 2]}, {
    0, 1, 1, 2 2^Rational[1, 2]}, {1, 0, 1, 2 2^Rational[1, 2]}, {
    1, 1, 0, 2 2^Rational[1, 2]}, {-1, -1, -3, 2 
     11^Rational[1, 2]}, {-1, -3, -1, 2 11^Rational[1, 2]}, {-3, -1, -1, 2 
     11^Rational[1, 2]}, {-1, -1, 3, 2 11^Rational[1, 2]}, {-1, 3, -1, 2 
     11^Rational[1, 2]}, {
    3, -1, -1, 2 11^Rational[1, 2]}, {-1, 1, 3, 2 11^Rational[1, 2]}, {-1, 3, 
     1, 2 11^Rational[1, 2]}, {1, -1, 3, 2 11^Rational[1, 2]}, {
    1, 3, -1, 2 11^Rational[1, 2]}, {3, -1, 1, 2 11^Rational[1, 2]}, {
    3, 1, -1, 2 11^Rational[1, 2]}, {-1, 1, -3, 2 11^Rational[1, 2]}, {-1, -3,
      1, 2 11^Rational[1, 2]}, {1, -1, -3, 2 11^Rational[1, 2]}, {
    1, -3, -1, 2 11^Rational[1, 2]}, {-3, -1, 1, 2 11^Rational[1, 2]}, {-3, 
     1, -1, 2 11^Rational[1, 2]}, {1, 1, -3, 2 11^Rational[1, 2]}, {
    1, -3, 1, 2 11^Rational[1, 2]}, {-3, 1, 1, 2 11^Rational[1, 2]}, {
    1, 1, 3, 2 11^Rational[1, 2]}, {1, 3, 1, 2 11^Rational[1, 2]}, {
    3, 1, 1, 2 11^Rational[1, 2]}, {-1, -1, -5, 6 
     3^Rational[1, 2]}, {-1, -5, -1, 6 3^Rational[1, 2]}, {-5, -1, -1, 6 
     3^Rational[1, 2]}, {-1, -1, 5, 6 3^Rational[1, 2]}, {-1, 5, -1, 6 
     3^Rational[1, 2]}, {
    5, -1, -1, 6 3^Rational[1, 2]}, {-1, 1, 5, 6 3^Rational[1, 2]}, {-1, 5, 1,
      6 3^Rational[1, 2]}, {1, -1, 5, 6 3^Rational[1, 2]}, {
    1, 5, -1, 6 3^Rational[1, 2]}, {5, -1, 1, 6 3^Rational[1, 2]}, {
    5, 1, -1, 6 3^Rational[1, 2]}, {-1, 1, -5, 6 3^Rational[1, 2]}, {-1, -5, 
     1, 6 3^Rational[1, 2]}, {1, -1, -5, 6 3^Rational[1, 2]}, {
    1, -5, -1, 6 3^Rational[1, 2]}, {-5, -1, 1, 6 3^Rational[1, 2]}, {-5, 
     1, -1, 6 3^Rational[1, 2]}, {1, 1, -5, 6 3^Rational[1, 2]}, {
    1, -5, 1, 6 3^Rational[1, 2]}, {-5, 1, 1, 6 3^Rational[1, 2]}, {
    1, 1, 5, 6 3^Rational[1, 2]}, {1, 5, 1, 6 3^Rational[1, 2]}, {
    5, 1, 1, 6 3^Rational[1, 2]}}, $CellContext`nodes0$$ = CompressedData["
1:eJy0fXm8VlXV/72MV0VFCBBEBHFIESfQRNHnqGFlOU/k69tkDqnZAJZWr17U
0nJqkgJTEStNG3jLSs0821LJjBJNc5acNScQGQThl89e69D5fp/vXVd9f/ef
53PP96y11977PGv47r3PM+oTnzn4mB5tbW0P/7OtrVeb/73SgM8yuE74Tz80
+dkv/eZfUv6wLbaZuvtDgwqFX9OUXycF8hI/dMacu147aals3/TL9k1e9q+t
9sf4vN3OOPayWetJ/TO/uOovE/d8Q9pn8rJ/Ji/t66b+yD6pP7Tvt6s+MOG9
o6T+eYuv/sSH5rRLfPxn3vjO588dIPHjH319y6f69470B/ZtHumX8q/scdWw
l369TI5PZP/ofVf99orefQP79PiZ/ZF8ZL98PqLxMfuj8ZO4jU9gv+5f9PxE
8xe1373nR49v54S9tn34T9tI+2bObd98zqw2ibdNOfuo6781NMA3iPRL+9Lw
UUNO/uT2kX49Pu++9InlD76u/WNg/7zXx09+4p6eUn80fmZ/JB/ZL5//aHzM
fsJXrX7z7+VGezA/Nj7Svqh/6vmB9qV81H70/ATj293/1fNTjhk4+MbLXuxD
/fP/g/hdBvlBGeQXof4gvwj150/5/S+D+NxdXLYf4UH+0F1czm+Idx1/yiD+
hPJBfC6D+BzKB/GlDOJLGcTPdywf2RfE3zKIv2WQv7xj+ci+ID6XQf4Tygf5
RRnkh6F8EH9KFX+6Kx/E5zKIz6F8EF/KIL6UQX4j5S3+lUH8De0L4m8Z5G9l
kL+8Y/nIvig+B/lPKB/kh6XKD2F+SB54A7IP4irhwCsoXMpDXFc4j0fdPtl+
W+2PcYjrhEPcfct4pB/yAqVf9j/CQ/11v084xF3WX48rhENcFO1vLnGIu2/Z
vqh/EBeUfRKHuEM45DVvuf/dG78qbqrxieyXzy/kfW95fKLxjZ6fyP6o/9Hz
A36f/Uc97nL79bgi5DeQOOQNSr+0P7Kve/2r4oKyT+IQdxiv5zVvuf/R+EHc
VOMT2a/9dz3ve8vjE41v954fbX/U/+j5EXV/hYu6vsJF3Y74/zd5wQvA80h5
H8bHt42LurzbuOAFuo2Lur77eOu6vdu44AXQf79tXPACKj6+ZVzU5d3GBS/Q
bVzU3W8Rp7q827jgBbqNi7q927jgBXD+pHyEC15AxZ+3jAteAP3328YFL6Di
49vEq/jylnHBC3QbF3V3t3FRl3cbF7xAt3FRt3cbF7wAzp+Uj3DBC1T46U37
FpfPb/ee+f0OXgv72fDrZ9h9iC97quOGz46+x+SZX/TrK+0+xN970N2TVx+z
WvLrft3vQ/wrV+37zRFzBxeKX/f42/mPXz/1ruJKHGeT71GcO/uH/7vqzkd5
/kxO8e/ertuBuOv1dmj89r945O4Xrlsoft6v+32IP/3D65d3vP+V8rJjFu18
5QbMz19u15+y+xB/fdJFh332C2sXWZ73X1xu1/0+xO84tWPhnqt7F6dOv+Oh
8/d5QejvU0y888lP7zP6JZ4/k/uz6WktP6w4ZuLZy2atZv7c9a6wdhD/pMkt
Nz2t8cHW//VJf+eErU7eo8e3y9zOKpr/y03uGNOD+LPNcV9QZrwH4bub3sut
HcRd7mnTg3jbrm/KnWnjx8/nHXZ91oR8X+vxHVxk+XWp/3fYdb8P8Xd/bebg
I85YUP76upvOmLou8+O/setb232I77/zczfsecU6xfv2+fHqScctJ3wfu36A
3Yf4xV+56IZzOtYt/n73olXzd1pJ8j88b4/1v7eko1j4yoHXvLIB+6/7TG66
6UH8d8+e/MGF17+r+ODNcx/e++y1aXwWmd4fWTuI72tyN5oexDd/7OiXRu01
qsjjtxHpb/vGFT++7d6LyhM+ddrqZ4fx8/cbk9vC9CC+S8df/zRi9b3ljn/f
7jtn/oz984mmd4G1g7jLTTA9iHceNfgz2074arn+IWvP/0Vvtm89uz7d7ms9
vgNsfPtQ//2634d4rk89/vnff4yf/a/Wl/P1FbZ+zf5n6t6f7Pv5I56U8emv
dn3E478+5PaLRxJ+/ahf9rxhzPPlxFtPvOr8Mfx8mVxS8esHFneyPK//PNL/
gWkPD+qdovhk/SDc9KYo/lg71L71K92Y+0n6H33//E12+lmv4tY/v6vX/TsM
J/m/9DznT5PWWlpmnL8/v//W7MYJRz7XuODUkTd9ow/vX+x/wyntR0x/0OT7
E35+U27zlPENaXyz/uXlnU07OH5m+dEm/y6SN7vSzdlOjm+jJ53x9+seN/3r
k/7bcr+TjQONX76+2vrXi+TNbmt/Ocmf0mz/7saFTTsHkryNS2HjJPDh6bE8
j9R/61eyflL7uX/vKvI4jRb6+6eOPI8kn+UGmv67aXyz/l42fqtJ3ten8ie3
f/sju75y0GZvlHObn/x8Dx/3zUlXnbaosXHzk+Pfgcf8Ya9//OoR8yM8vrnd
kSnjnF9ca/7nEOF/stwmSe1vyfYNTtm+RTQ+Wf+r5aFN/ZzfW7/TbXkcaPwu
HPqn2fdMbE+5nR4kn/X2TtYPlv/dKQuufP/z1g5/f21cbH7Yfx6e5y0dLvYX
Wb+s/Vepfff7No6i/YFpcp5HGj+zO12U+0F4HvceycaJ9OfPts56nGL74Do8
P70Lj1OIe9yJ6iePY4h7XDL/TbjHjai+8jjUWv/QQsUni5/J4yDiHndUfLL4
WHocQ9zibxWnEPe4ZP6Nxs/jjvl34d86Co9jrfX3L8y/Ee5xx/y3kN8weRxr
Lb9+4XEGcY8rFl9J3vxzMv9MuMXf0uNc6/EZaO3fTePjccXjTOv2exUe51q3
v7yKc4hbfpE8TrVuf7S1z/m3xy2PY4hbflHFqdbju9pwjo8Wf0uLv4SbfysO
F+czzL8X5t9pfD1umf+m8fO4ZP6N5M1/F9cK/+Jxy+NYa/m1Co8ziFt8reJM
a/3rJI9zrfu/qLT4S7jHFfPPIv6PLDzOIG7+u/A4h7jHNYvPhPv6mOUXon+b
FKr+8LjlcQxxyy9Kj1OIe9yx+My4xS2PY2r84TrEL72/FuoX6h/URyQP9RXh
UP8QDvUV4VDf0PMB9ZGKj0nFR6i/CIf6ieyD+oTGD/Jzkof6iXCoL8g+qJ+E
/qr+IBzydxXfkopvkL8r/18G/r8I/H9S/h/qG8KhvhPxv6pvqH2oXwmH+ob0
Q/1G8lB/0fhB/UnyUJ9Q/yE/J3monwiH+oLsg/qJ5KH+IBzydxXfkopvkL+T
fqjPxPhV9aWwr6rfaHyhviEc6jvqH9Q31D7Ur2J+qvqG9EP9RvJQf9H4Qv1J
8vmzrTPbz/xx/br/rcH3eXS/lfv8/bVw/cjvQ9zrk6i+6Zo/611seNp7Fm50
0FzS73JR/aP4vZGm19tp3f4G3ayPeH/2rK9t8vI+/7i5VP7Pr59j9yE+bGFx
6qB117P6ifl1v+73If71i7fqmHN0h6xfstzaheLXTjW5c00P4kOb8iMKxd/d
ZHo3snYQdznX0xrf0Prfj/Rvs/7wTYds/kJD8XOPmpyK/53Ncf+55P+8PvJ2
EPf66lzTg/j2TbmHrR+8P/42uz7W7ms9vsMKlT/cZteH2X2IF02/Pc/8IPMn
fn0vuw/xJ/vfudPyS9cvppz71MyVf+X85vN23e9D/LDm/rH1i8PF+fNdjh15
3v6v9isUv+b70w81PYhn/zWkUPmz651g7bSW9/poiBifUVY/cn58cNOuZxqK
nzvM5A4zPYgv+P60bXad98eG4v9c7wHWDuIu9w/Tg/ito6afuGi3xxpPNOeH
+Vu/nuy+1uMzyMaX80O/7ve1nr9nrL7h8bG4Ic/ve30T+O9G1/57aDfXf9h/
e90S1Tddx78NwvoliH9JxT/zb5L/Mf/WUP7N4kdDxQ/z/43A/8v1G1/XUPHN
/FtS/s3sSir+ef0S+OcU+OdS+WeL3w0Vvy2+NYL4VgTxLQXxrVTxzfx/ofy/
xX9Zv1j8l+trFp+Sik/m34rAv5XKv1n8aKj44fuPA/8v128sviUV38xvJeXf
zK6k4p/XL4F/ToF/LpV/tvhdqvjtdUsQ34ogvqUgvpUqvtm4Fcr/W/xPQfyX
62s2LmXX8WlFFWcQh/qD7IP6Rflfrz9U/JL8GtQ3Kj6E6zeKn4P6h/RDfULy
UP8QDvk3jR/UJ8r/en5MONQnhEP9JOyr6gfCoT6g8YH8n+QhvyYc6i/Cob6i
/kH9ROML9QHZD/Uj6Yf6h+yD+oLah/qH2of6kPRD/UM41IeEQ/5N9kF9ovyv
58dkP9Qnyv9WcQRxqB8Ih/qA2of8X+iv8mvCof4iHOor4T+HyPUTqA/Ifqgf
eXzr9Y/oX1VfUPtQ/5B+qA9JP9Q/JA/1Iclnv95Hrr/4db8P8acvbYw74MCB
If81/uWVM047k9c/stwqu+9Fwl1OxY+/WLtuR+v2Xyy9HdH/cP+030f2Nc/3
9Ej5k/Njvz7O7iP9zfMtvYt8H5+/9+t+n2i/yOdYuD7Lcu2mn/MPl3M9reUH
FfmT46vr9XYQn2FyM0zPW9XfPfv+XX8K/ZF9rve4dzR+T5l9/H4Gv+73CftN
P8eHcXbdxpHsz+c3ltv7H7h+q67bfYgf3q31+xWl39e6/bVMf4v48eVpd3x7
+57FYUt7fGfzjy8h/ZWc6wE8n7/pX+R+cPx1vddaO63735FcT2v9I00/r/9l
uxba+HL97HKuh+Rn/2z3u9ZZWLbNv2/Es19V8m1Fu7VD8ibX7npw/oL6xa8f
IeJLbr+f9Z/zQ7/u9yFejw9v/f1X7te7jj/DovpGxi+0U7QfrP8Mk/r3n//7
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
i9/sf/Smxfbi/eHj7Lrfh/i/lq712UMfHF2MXPv4Wz75R/59Wr/u9yE+zN6v
O37lqe+5cQnzs8V+H73tJ9uNLq798AmXn33RD8k+lxsm3t++4NX1rj597thC
/f7UPNO7p7WDuMs9Znpa41vZ7zfy+8nzuI0uOsX77V3O9SC+zdRvDx589obF
Bkvuff36Do5Px5pebwfxASY3xvQg3nnHMyee+MDQ4rgPjjlwvY9wfX2sXZ9m
97Ue322KC8Tvc/l1vw/x/Hyuauxsn4jfddNrB/x5lPPi/HzYc2/X/e8/4u/k
T37h3Z9eVi5pfrJ/y/LVuSh+vsyvHdb8u1fY97y9P5Pf3/C70y++YeOrXiyP
Kv/88IX3qPevrpfU9x/8u4gfg1LgnzpPvfyQdZceyeuTefwXNS4R7xddauNm
40j9N/+elP/2z3mLr/7Eh+aw/q3O/95P/mtWz2Lr5ie//zGPy6Y2Pvz70/l6
R8r94O/Hrm/scNf0SePs+8nxu+PHd/5gy+dXN77fd71vnTegxft19/p8278O
W9VoP/2+z+w7g/GnF88t/mvwBsXxyxaePPVFzh8O7Pj+R5cM2rTI+h+l+Zvy
+tGzxp73epn9Cz+f6/7yE88f+7chpv+frfVfPNL8919I/7NN+9rTMPH7F9m+
veTv92X7Fpf5+8vvfz7lnoF/2/XJvukDux158K8P4vHv8+EdTvnVM1vL37c9
87kdn/n66wPNfv59kDx/o80/cvxra87fY+ZnmJ8afO/0D/zPl5Y29p2//rT3
fI79R7avV1H8/KFRo27n9be+TXxXa5/je2fT/letfX6+s/72Ys+mfub31mvO
75by96Hy/BY2P5w/zRz+41fP+sK/69uf7LTW6LFcv+XPtuLumh+V32+aH5Pv
rPtZ/P71Ke4xP4j4f5vfu8n8YGv95IfRP3p+RP13v9x1/lnlXyQ/w/zezuYH
W9u3oFT5s/tFFV/qftf/KL8tLL8l+8aYX3Q/iTj4Vc7fzG+OMz/aenz7Fe5H
EfffzZxgfhRx94t/MT9J429+taf5WcSPM7/5jPlRxBeYX3Q/2Vr/o6X7WcT9
d3/cD7bW37eYan4Ocfe77ocRd7/nfhDxLcwvH2R+GvELze8ebH4Ycfd77gep
ffNr7ucQn2d+t6/5YcTd7/U1P4i4+2X3063t61m0mx9ujW9Z9DE/2rr9ldZ+
i/cDmV91P4u4/z5GP/OjiLeZX5xhfrL1+I/K4/9vP4u48Evov0rlv/J709e1
6/6H+p2X4/zOBDrreig/su8v/75pT9M7rtYO+QfLnzYV+it+gPRnu6p1CeE/
O5Lyz5Y/N1T+/EbmPxon1NtR8Yfat/fvV+/JR3wnu36i3dda/0gbXz5/Os6u
72j3Id7rhpPPOXvDFf470ur72ehh9yF+38sDF1x93cDi3B5Hbv/AHPZPft3v
QzznFQM8vyL5aTNv/sYhHx1QHHPkWr/p+9uXCHc514P4Lc9sfOAbF25cqN/X
Odb0dlo7re1bLyXTg7jlpcXT0/Z+cvbZzO+dedRv997r/HbLL9n/uZzrQfzn
d33gyMn9FzVyfc3+z/V6O4gPMLmfmh7Ee2xx+S9+dszSRq6vW+wvs+s97b7W
47tRMUz8/o5fL+0+xKG+JHmorwmH+otwk/P6UshX9RnhUJ8TDvyo+H5W9Tnn
B/X6lPRD/UnywE8I/VX9TfqhvhbjX/EHYnyrPI9w4BcIh/qLxg/qU8KhPqL+
Q31KONTXhEP9SPZDfU3yUD8SDvUVj2+9fiQc6ivCoX4nHPiHouX4r6nfafyh
/iT9UL+Tfqg/aXyA3yAc6u/W7a+pT6l9qL9JHvgJwqG+FuNf8ROEQ35DuNU/
SdU/+bMtBfVzUvVz3S/6H9V/Kaj/SlX/2fpQQ60Pmf8qFb/qfjOon1NQPydV
P7tfC/iBpPgB8Hsyfwrqm1LVN1Y/NlT96H4tqP+Sqv+s/i1V/eu/rxvUL0nV
L1Y/l0H9nFT97H4zqO9SUN+loL4rVX1n/EIR8Aul4hesvm4E9XUR1NcpqK+T
qq+tfixU/ei/mxjwD0nxD+73VP17fOu6CPOLhsovoH4h3P9X9Q/Ur+L7X9Wn
ND5Qf5H9+bPiLwVe1ZfCvqp+o/ahvhT9r+pvwqG+JBzqb8KhviH7oP6j8YX6
g8YH6j+Sh/pUyFf1GdkP9RfJQ31F8lC/EA71LeFQv1L/oD6l8YX6i+NPvT4n
HOpLsg/qN2of6kuSh/qbcKgvCYf6m3D7fiT1/fb/Vf3hfkX5F8hfCIf9GTQ+
db/R1tlafoek9j98c9Eb6/+hT48if/L3A/h/wm1/hqyf8/Ul5sdavF+q/vuP
YnzbOid9d+Vn9l6H82+32/pB8jnubmX+g/PDWf23L18Ys4l9P/n3z7N8T6vv
OH7kvGeQ3L+wcpuZO7ywdkdS+x+22fPlr15d9kkPf/TKJx+Y2YfwXN+5/pvZ
vy/78Pij7z+lVPVjru82t/qhBT8x9k37ni1V/XDQN6Zds/Cgnuk7806/5H1f
YP+f86aVVl/w85vzhvE2/pw/5fEfLuvrnBdNMP+xOem/oinfkPVVnr82q+/4
+f3Fr/77jnMOaCs2n3v8d78zhs/3Zvs3S2p/TG5/otxfc/Xyxx664o/LG9f/
63+3uH4qx++c9/S2+enD89N25L/n9zDzbzy/efyX2Pjz8y/8Fsb3MuCPU8Af
y99vvauWl7D/svjfCPj3IuDfrX+Sf/frZL/ld4Xip+t5jf9Rfmc4r09Y/pYU
f+55TcC/lop/9bxH8due1wT8dFL8tK+PKf7d4rfkJzwvUfy850UBf5wC/rhU
/LHlb6Xi9yz+NwL+vQj49xTw70nx7573KH7a85pgfSKp9QnL35Lizz3vCPjd
MuB35e87274Au67qH89LOH8x3qkI+PFGwI/7ddH+sKT4ceOPG4o/Bv9GuPHb
peK3jb8sAv5Srs8Yr1Ioftj43SLgd0vF7xq/nRS/bXW7XH+xulzmF8YbpYAf
l/mN8bcp4G/LgL8tAv42dZ1fbJ2C9YOk8hvjz4uAP28E/HkK+POk+HPjhxuK
H7b1hRSsL0j/ZLxQqfhtUTfB96fan03ykP9T//NnW6H2n8P3U8m3dc3PrJds
/znZZ/VPafUPjT/kB9R/r2tUfVavi/xvDf6U1T1eByG+p9U1XucgfqfVRVdY
nYS41z1eByHudc0Yq3MQn2d1UfvYXCchPtTqln5WxyDudcmBVqe0tu/m0uso
xP9pdctUq2MQd366/Y1cZyHufm31NrmOQvx8q1t6Wx3TevwXlV6ntJ6/gcb/
8vlVr1vmWB2D+HTzO1dYnYW487NXWh3Vun+DktdBiHtd43UO4htbXfRDq5MQ
38jqnmesDmo9Pz1sflq8/8broub8HEZ4/lwAeQh+P6v1LbIP1ncIh/Ut6n+b
/Sn+BdanCIf1H9IP61Mkb80nxQ/D+pR4vqv1C+o/rO8QDusLZB+s75A8rE+R
PKy/kP2wPkXysP5COKxPkH2w/iL9g+dBiMP6F+cv9fU7sg/Wv8g+WL8hHNa/
6PmC9RtqH9YHCYf1K8JhfYfah/Urkof1PcJhfYrGF9b3uH+tz20AXp3fo/GF
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
3h82W6TxZvyvzj8SfmgzP1sayacAl/pz/TBI4pH+/Ek8UPU584ur/jJxzzfk
+HUTl/2P8Hm7nXHsZbOq/YVvF5f9i3DxO4zV5yt7XDXspV8vk/2P5OH9EEq/
Hr9AXrzHYU3/W/8OEMjT78T9n8lH9on3cGP7Ur/4Hfr/M/nIPvEegOpz9L6r
fntF74pfeMvy4j3FqP9ty4t1sDXj9+5Ln1j+4Ot0Xaxv0X1iHwzql89/JC/y
yDX9b82DV59inej/TD6yT/Bg2L7UL/aBvGN5wW8reYnPe3385CfuqfK7tywv
eCrU/3bl5XMHuLqv/Gkz/v5Lylt+IPEgfpdBflEG+UEZ5BcuH4yP/zEe5Adl
EL/LID8og/jdXf2RfVJ/ZF8QP/D9cay/6/heBvEVf1+I8CA/KYP4UAbxJbQ/
yG/C8QviL/6+mrI/0h/ZL5+faH6C/CfsX/eeHz1/UfvR8xONbxB/kL8jPIjv
uH9X6Sf7xPqZ0q/Hp+v4Etof5Ddy/ER9rOQj+6V9Qf5XqvwPxk/KB/lPGeQ/
4fMTzV/UfpDfyfGNeINu8gKqX++YN4jkI14hf/7/4w3ead3/f8Q7yP69U97g
nfIK3az7I/16fLpVt7/9uv6d8hIRHtXt77Suf6e8RDd5h6h/Eo94hajuf6e8
QsQbvF1ewT+7WfdH+uXzH9Xt77Suf6e8RIRHdX/38Kiuf/u8RDd5h6h/Eo94
hYg3eKe8AtT99JxB/CUceAGFlwqH+K1w2T7kD+J74n+MQ3wnHOL3W8Yj/RDf
lX7Z/wiP9Kv3qlfy4r3QVfvivfJ1+Vbvpcmf4vfLVfx8y/Z1r3/qdynk+ydU
fCEc8pe33P9o/ILfbZa/WwH2S/2Q373l8YnGt3vPj7Y/6n/0/MhzQ/ap9qVU
9ql9Pfap9uXX21fnBvW5h+7aF/Wv631ZFD95fOvxhfF6/vKW+9+98RsajU9k
v9QP+d1bHp9ofKPnJ7I/6n/0/Jze1L+4/PtHT5499IeLGojfa9fPsPsQL5v9
65Ge3+498/sdzHXCv+x6svsQf+9Bd09efcxqyW/7db8P8Vcu3XrPLw1fIetk
j8+z3/2pn67+ZbU/ssKX7X/xyN0vfK2RceY5XE7V8d6u29Fafmnp7bRuf91C
1el+3e9DfMrBD3+l12Yd6bJjFu185QZcR11u1/0+xBefN+LaBS8sbmR57v/l
dv01uw/xT048e9ms1QOKv+142iXzzx0o9K80/Tx/d5ncMaYH8dxur+LPp3Ys
3HM117GXm95XrR3E7zC5xaYH8W8v7P/4WatWNCbe+eSn9xm9iuzbdauT9+gx
oL+N7/okv4fJfdf0ID61Oe7Lymw/z/+lpncXa6e1/a9Velrb15ayfv7+3GnX
J9h9rce3n43vuoT/ya4vsvsQ/8YVP77t3k16pV9fd9MZU9flOuY3dv08u4/6
f9LdU87aa2njffv8ePWk45ZT//ax65fZfYjve/Pch/c+e0SR29+E9C+6Zcs7
7v/eysYPLllx6CU38fz+xuQ+aHoQ/8L8R6Y//rn2IuPsvy41vd4O4i7nehC/
+CsX3XBOR+/ihE+dtvrZYX1Ifx7fDhtf/n6faHLTTQ/iR//j3L4b3/t6ecMb
1335yDnM07lebwdxlzvG9CB+1ODPbDthUFta/5C15/+i9yrSv55d9/taj29v
G1/u/752/RS7D/Frauea/A/rP80z5+srbH36GZKbuvcn+37+iCdlfPqBXZ94
64lXnT+GeaKRp71n4UYHzTWc7Te5pOLXXy3u5PuYB9nn0f1W7vP31yTP7Hqt
H2S/6U1R/LF2yD7rV9ow95PwU0dPOuPv1z3eOPfirTrmHF29f6jC/b3Ct/75
Xb3u34F5lpu+NbtxwpHPVe8hR/zR98/fZKef9Suy/IaE++9vZpz96++b+peX
29TfrwfyI0z+XSTvvwt+c7aT+v9Y075e6Zz6+7Mq/Lbc7zS2/vs4a/I/e79i
bp/jl9ld5vaXk3xuf3ED3n8I7ffH3zep8K/neUtfyfNI9s+y93taP0nexq0Y
Wn9/GuAbpixfvf8axnc9wzn/zPb3SufW3x9X4c5P5U+O37eOmn7iot0eK5/o
f+dOyy9dTeO38bhvTrrqtEWNCceOPG//Vzn+ZX5qqJ2P43WM7F8GpfzJPPS1
5n8OEP4nyw1Jah1sl2xXMjup//lcU3va65g/7PWPX80j/dbvMuVxIHzB96dt
s+u8P5bDm/p7UP8Oznbb+SLOfz5/7lMzV/51aePJZjs8/jYuhY0Tj2+et3S4
WIcscr9K66fQv47pH0J4lhtl57+G0via3WlK7ge1b+OS/pHHifqfP9s663Eq
jkv+6XHJ4xTiHnei+snjWGv53oX5bxX/wvrK41Br/UMLFZ8sfpYeBxH3uKPi
k8XH5HEMcYu/pccpxM2/FebfyH5//6j5d8LNfxdj6+/HR/9WmH+j/nvcMf8t
/Ft/e/9k9f4O9L+lxxnE/XfXLL4S7nFtaP395hh/S/+d6Nbjs17hcQZx/30O
i7/Uf/Pfxbn193NjfK7iHOKWX5SWX5B9Hnc8DiHuceuc+vvbMb9IHqcQ9/c/
Wnwm3OOWxzHEzb8Vh4v9lebfC49DiHvcMv8t/P8oe/8U54/mv6s4hLjHLY9j
iJv/reIM4hZfqzjTWv86yeMc4h7XLP4S7nHF/LOIn4MKjzOIe1wz/032eVyz
+KzyC6sfmF/yuKP8vMcti8+k3/ILe78O70Ow+FzFIcQt/pYex9T44/Xu3gf1
C8lBfUTyUF9R/6H+IXmor4R9Q0P+LoiPScVHqL+ofaiflH9MXfvHKj8n/VA/
EQ71BfUP6ieSh/qDcMjfyX6oT0R8q/J35f/LwP83Av+flP+H+kbF/6TiP9Q3
1D7Ur4RDfUP6oX4jeai/CIf6U/nHpPwj5OekH+onmh+oL5R/KwL/Vir/Bvk7
2Q/1CbUP+bvy/2Xg/xuB/0/K/0N9o+J/UvEf6htqH+pXwqG+If1Qv5E81F9i
fqr6k8Yvf7Z1wvtT4fnw6/63Bn+k/wPTHh7UO6x//D7EvT6J6puu+bN1ixtH
/bLnDWOeJ9zlulf/8PN7ven1dhAf8fivD7n94pFy/cjrI78Pcfv9Oln/+HW/
D3H//ax83900fqfY9Qvrv98F/nN4ofyX//6N4tceNTnXg3h+v/zoQvF3vze9
8PtVEJ/e5b8fLOzvX3TccEr7EdMfpPG7036fRfFz/U1OxX/7XQ/J/3l9dGf9
95kwvhaup7X+paaf+dnb7Lrf13p8N5f5g18/v/77VGv8Z/P7vZa9P+5V0u/X
/T7E5z6y6ysHbTaouOh3pyy48v3P0/NxoV33+xDP/mm01Ucc33J8GFwofs33
px1mehDPfnmTQuXPw03vxtZOa3mvjzYR+MBictO/PsLxqWlX70LxcweanOuh
8Rv6p9n3TGwvFP/neg+xdhDf2ORcD+K3N+flDZtHlvfrt9l9rcd/pI2vir/r
J7+vtXxvG18eH4sb3axvpP8ulf/2+iSqf5T/9rolqm9U/DO94fpPEP+Sin/m
38rAv5XKv1n8aKj4Yf6/CPy/XL/xdQ0V3/z3SZR/s/iXVPzz+iXwzynwz6Xy
z/77syp+W3xrBPGtCOJbCuJbUvHN+U/l/23eUhD/5fqaxaek4pP5t0bg35Ly
bxY/Gip++P7lwP/L9RuLb6WKb+a3kvJvZldS8c/rl8A/p8A/l8o/m91JxW+L
b40gvhVBfEtBfEsqvtm4Fcr/W/xPQfyX62s2LknFJ48rHmcQh/qD5KF+EfJV
/UH2QX1EONQ3hEN9QeMH9QvZB/UP4VCfEA71D+GQf5P9UJ/Q+EJ+TPJQn1D/
oX4S/qmqH8h+qA9IHvJ/0f8qvyYc6i/Cob6i8YH6ifoP9QHZD/UjtQ/1D+FQ
X1D7UP+QPNSHhEP9QzjUh4RD/k3jB/UJ4ZAfk36oT6j/UD/R+EP9QPqhPiB5
yP9F/6v8mnCovwiH+kr4z03k+gnUByL+VfUjtQ/1D+FQX1D7UP8I+ao+JBzq
HzE+VX1IeParfWR94tf9PsTHv7xyxmlnPi/X9/9ifv/pSxvjDjiQxyfLvWj6
eX+ly0X1idvRun+rSm9H9D/cP+33UfvN8yUbpHyOhPeXjbPrM+w+xPP5l6fs
HArvj/Trfp9ov8if/P3I8ovsPvYPLud6Wtv3munh76/r9XZat98jHWd63p5+
bZ/LHS/0R/bZvNj8vN3x6236+RyvX/f7hP2FPT8CXzuNs/sQz+c7+tn7czm/
8Ot+H+KHB+v3fv0Isb8s6x1u5zPYf+f3Vy6099jy+qLLuR6Sb55PWWjttDgH
bHrbvZ2W9v0bNz2t9bfb71uwf8/29Tf7uH6u5FwP4Nd8edod396+p/0+zRJh
X0fh7SDucteaHpq/btUvK6r7Wtu/3J8Twqvrdh/iHh/e7nsw3K93jQ+I6pvw
/VZB+zL+WfsS33nS0jMvWLBS93/O3e+7/JU/SPy4kw6+74F9F0t8//m//9jo
XTaR/Z+62aOD50zcQuKmX/b/gq9d9sTHXtDyWf/WEjf75PiYfRIfOOSNzrNf
WyXt2+Aj95x931M9pfywdXefe8v9g6R9bWP+Z/Fa27VL3OZPPz95/iRu9sv5
M/tl+2a/7J/ZL/HjfvXuB8fstpbUb/MbzM/WkX6Jj7vm6wfffWY/Pf73H3Pr
bT3ukuPz80d6jjp0/DKJX3DC7O9eN3KM1D9y9vZD5p+7o8RNv5y/XXstfGLa
LjsE+sfr8c32yfEx+yQ+6L0nnHPjTP38b/Xp/fv0XKzn/+n+t17U9/Hhevx/
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
GwX725La3+a8ktp/BfwP6cf78DrwD4QDP0M48AOEAz9DOPBLSr/EgV/i/tf5
E2WfxIE/IRz4BcKBvyIc+Dcx/uNk+8C/qPmTOPAvyn75/AD/pOzX81vnnwgH
fo5w4JeUfjm+wD8QDvwM4cAPcP/r/AzhwC8p/fr5rfNLhAN/ouyTOPAnhAO/
QDjwV4QD/ybGfw/ZPvAvav4kDvyLsl/aB/yTsl+2D/wT4cDPEQ78ktIfrt/i
dcSD/Scp2H+Sgv09Kdifk4L9OSnYn5SC/SUp2F+Sgv1NKdjflIL9NynYf5OC
/Tcp2H+Tgv1fKdj/lYL9TynY/5SC/U8p2P+Ugv09KdgfloL9YSnYn5SC/Scp
2H+Sgv09KdifkxS/4niwPykF+0uS2l9SfX+63t+Ugv1NKdh/k4L9NynYf5OC
/Tcp2P+V1P4vf/9fsP8pBfufUrD/KSn+CNqP5kfiwf6wpPYnAb9BONT31D7w
L4QDP0H2Af/C+uv8BeFQ/5P9wG9Q+1D/Ew78DuHAT5F9wP+QfcCP0PMB/BDh
wI9Q+8B/CfsqfoT0A/9D8sDfEA78FY0f8Bs0PlDfk37gX7j9Oj9B7QP/QvLA
X/D41et/sh/4DWof6n/Cgd8hHPgpsg/4H7IP+BGaf+CHCAd+hNoH/otw4EdI
P/A/JA/8DeHAX/H3t/neN47r/vnG6jf/Xm6cIO7L71dzv7mA9Pe06+Nq96G8
nwvg+Jzx6twy6Xe5uh6UH2nvh9P7P6GdCh9ncjuantbj5++V9781+F03vXbA
n0c5r8f8qF3vrOtB/dX7/ZR8cXetnTX4TiZ3oni/X7bvedPP57/9+j12X2t8
Uxtffj/mOLs+zu5D/Myjfrv3Xue3y9+38Ot+H+LTZt78jUM+OqA45si1ftP3
ty/R83GsXe+0+xD3964/PW3vJ2efzf71vpcHLrj6uoHFuT2O3P6BOZxfu5x6
f/stz2x84BsXblQME78/5Xq9HcRdrjQ9rfEBxfbi97l63XDyOWdvuKKh3m/v
cq4H8R5bXP6Lnx2ztHHcB8ccuN5HePznmd4e1g6Nv8n1ND2I//yuDxw5uf+i
xgZL7n39+g5enxlg139q97Ue340L9ftcfj3ZfYjn53aJfU/Y/+b3TnpdwPHV
nnvH2xD/5qI31v9Dn0Vl/uxB7Wf91e8W0/y5Xzus+Xcv4Vl+iPk/ru/GnP+9
n/zXrBXlVs1PXl+y73fq+vtf+XcaH/NPZeCfOid9d+Vn9l6H12/ze0Pbi53F
+0V93Gwchf8ZmZT/9nGdt/jqT3xoDj+//13++eEL7+lT3HT6xTdsfBW/3zaP
7w6mn+uHfL2f4Zy/Pb14bvFfgwcVneL339qWfXj80fefUn6/73rfOm8Aj8/V
yx976Io/Lm9c/6//3eL6qey/d31jh7umTxpv/ovfDzyr//blC2OGF1n/o/T8
THn96Fljz1tSLnh1vatPn8vz1+fDO5zyq2e2Mv2c32b9m5j/5t9ny/ZtltTv
X1zRlJ9o31+un7N9K80+fn4P+sa0axYe1DN9Z97pl7zvC5yfrPvLTzx/7N98
/Pn3DVduM3OHF9b236/g3wd5tjl/ve33f/n70dZ25L/n7zDznzx/v/jVf99x
zgFtxeZzj//ud8ZwfZHHt63Y8+cPjRp1Oz/f6zXt39za599vaBv7pv3P2vvR
+fnO+nsWRVM/53d9m/gEmx/+fZA8Pw37fRL+fcBt9nz5q1eXfdLDH73yyQdm
thqf5l+q+1H5/Rb5XVtn3c9ifrNecYn5QcTd721tfrC1/ldK8MOU/7ifRNz9
sso/If+i9seZ37vE/CDilj83VP7sflHFl7rf9T/KbwvLb6l/vzO/eJT5ScTB
r4r+jbD3QzN/6n5znPlRxN1vuh9F3P2i+0nEZ5pfbX8j+1nEnzK/OcH8KOL/
NL841fwk4tPNr15hfhZx93vuB1vr72n6ef/fU+Z33Q8j7n7vQPODiN9pfvkK
89OIb2x+94fmhxHfyPzeM+YHEXe/Nsf8XOv5+3nlhxF3v+d+EPF55pfbx2Y/
jXjld5vzexiN31Dzm/3Mj7Zuf42fbD1/7cXqbbKfRdx/H6O3+VHE3S+OMT+J
+IXmV680P4u48kvdvS9f97rE/xDf1HDO70ygs66H8iPzjxy/XW+9HfIPyfwD
4cAPiParuCX8e0eh/LPlz4XKn1dk/qOcUW9HxR+hf1Ch3r8Pvz8g8B0N5/g7
w67PsPsQH/mPF7/Z/+jRnv/Q+Bxr1/0+xIv9PnrbT7YbXVz74RMuP/uiH9Lz
Mc+u72n3IZ6/P1tZfsi/D/OvpWt99tAHRxcj1z7+lk/+kX+/zeVcD+I5L9ym
uED8vo7r9XZa2zcwuR7ELS8txq889T03LmH/lMdtU6u/H6bxcTnXg3jnHc+c
eOIDQ4tcX/P68jjT6+3Q/JncNNOD+DZTvz148NkbFrm+Zv5zgF0fY/e1Ht+x
hfr9Hb/+mN1H/a/XlyQP9TXJQ/1F8ibn9SU9P1CfkTzU54QDPyr0V/U5z3+9
PiX9UH8K/RU/QTjU36Qf6muSB/5AjG9VPxMO/ALhUH9R+1Cf0vhBfUTyUJ8W
iEN9TfJQP5L9UF+TfqgfSR7qqxbjW6sfyT6or0ge6nfCgX8Q41/V7zT+UH+S
fqjfaXyg/qT2gd8gHOpv0X5Vn1L7UH+TfuAneH7q9bUY/4qfIBzyG8LdL6n6
J3+2FUH9nFT9XPeL/kf1Xwrqv1LVf7Y+VHa9PrSkVPyq+82gfk5B/Vyq+tny
sxTwA0nxA+D3CHe/FtQ3papvrH5sqPrR6r8iqP+Sqv+s/i1V/eu/WxjUL0nV
L1Y/F0H9nFT9bPVdCuq7MqjvUlDflaq+c78Y8Aul4hesvm4E9XUR1NcpqK9L
VV9b/Vio+tH9WsA/JMU/uN9T9e9MURfV8aq+ovahfiG8rofrH6hfhX1VfUp2
Rr//lj8r/lLgVX0p7KvqN2of6kvVvtffQn9VXwr5qv4mHOobwqH+o/GF+oPk
of6j/kN9SvMO9Rnph/qL/XO9vhL2VfUL4VDfEg71K9kP9Sn1H+ov0g/1OeFQ
XxIO9Ru1D/UlyUP9TTjUlzw/9fqbcPt+JPX9ruZB1B/uV5R/gfyFcNifIfS7
32jrbI1vmtT+h6WTP/mFd3+6o8ifvD8R+H9h3/Olqp+z/KpGru9anF+t//6j
GN+2zlMvP2TdpUfy/kK3e0nuB+E57xlSHL9s4clTX/wntX9gx/c/uuTikfb9
/AvNa47L7VbfcfzJ+NaF2r9w5nM7PvP11wfK/Q8zh//41bO+0Cu1/2SntUaP
bXE+shkXx5l+Pp/Y8eM7f7Dl86sbqn7M9d2u9v3g+NDZtO/VhqofTrln4N92
fbJv+sBuRx7864NavF+8GZcXW33B9WXOWzaw8ef9yc3xH7SprK9zfbel1Vcc
v/L8FbK+yvPTy+o73t83+N7pH/ifLy1t7Dt//Wnv+Rx/v3J9157U/phs/16F
2l8zb6/Pt/3rsFWN9tPv+8y+M3h+8vyOtvlpsX+yOb+P2fxw/pzH//Uyxwd+
/iO/ZfG9EfDHKeCP5e+31vOSFr/v2fxbUAb8exHw76ZX8u/eLo2/5XeF4qfr
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
7391foDk4XwI4XB+gMYHzkeQPJxvIPvgfAfJw/5Ykof4TfKQ39D4Qnwlechv
CIf8jHDIP8h+yM9IHvIPob+Kz1H+EcVnwiH/o/Yhf209/mvyPxp/yF9a5xdr
8r8of6H2IT8mHPK3KL+J8jfSD/kt9R/ysyi/JRz2D5N+2F9NOOzvJfthfzXJ
w/5wIV/tf1bxrxHEv1LFP9gfTPbB/mfhH6v9wSo/KIP8oAzyg6TyA9g/TTjs
P6fnD/ZPU/uwP59w2D9OOOyvpvZh/zjJw/56wmF/OI0/7K8nvG3K2Udd/y1e
V/HPVZbftIv7rt14u75HT9zQ3n/Gvy9xuF2/xu5DvHPCXts+/Cfndfn3gbN9
1blEtt/k6nr+4/k//OhJ+47dtMh6eH9npbfeDrS/bmq4npa45x3+9x/40x03
fHa0+y3mL0ygs65nDX7YjDl3vXZS3+LaD01+9ku/aXF+y/S219r5j/kxuSNM
D+Ev9d7ig3/oVRy2tMd3Nv8486uH2/Wf2n2tx3d0kcef1yf8esPuI/tn/2z3
u9ZZ3mi3T8TT8FFDTn5yex8/mv+sf9Oirfa3Bt//yVPv+/6IpeVu1z44a9Hh
7B+yfHXuVOjfrJg5482/O/j5m3/fiGe/ukXKn/x+5tv2mfWhFZPeKAfudOpp
X1ms2u9hz28PwuH7ReMzOc9r6vr5+PfzddRdg8eux/xFllttn7x+6uN2QB5H
wu37lex7Itp/pZw5t33zObOY//rCUS89dOUJvYrL7tp9868+wfsfRl77v5v+
aPpONj7sP+698Htn7TCiT9r6yRfu/9oU+f0o68+R7J/wL22d9ecM5//f8+7P
AeDvsnn350CNDzyH+HwU/pwg7s+l8n/w/Sf5a2ze/TlA3Px3Q/lv+3411Per
/tz5H/nXouHPEeD+XPhzQv2vP1fi+7th4c8R4mPsubnPnqPW8jwv3b0vX9+2
UP3P7Y+V328T6Kzroe+HPR9cXx9iere2dsT4JNfTGq/iM+HN79Unq++Vis+F
ej7te1Mo/+l6oR31/SP88C22mbr7Q5sXhzU/OX853K77fS3Hd/DOZj/Xx359
E7uvNV75d5KH+Bb5P5LPn5V/p/EH/0jyEB9Zfz3vi+JjFB9IP/h/fn7q+QHh
EP9IP8S3KH6L8a3iF+EQ3wmH7xfh5n+S8j/5c1kjiF9Jxq/ac+F/Mr+l9n1e
lP+1+qBU9YHNX6nyO39ugviVgvhVqvhVzWvX8Tmp+AzzTrj0S7X2K/9G7YP/
ILx+H/PDED/IPogPZCf4P9F+lT8JvPLvhIP/VOPk/l3or+If4eDfCYf4p+xL
yr/7p/r+Z7k+yT8Rh+8P66/Xh8K/elzj97dY/ZVU/XXA0+ddN7ajdzFo3DGX
PLM286eQ/xF+da77ktWHpD9fX9U4In+S/KH2XKn58X6N+/glN39gV46PA83u
/XM/xPjz9wI/g/whBflDUvlD/XvB82fPXxnkX0WQf5l+mX95/8XzM6zoOj/x
75X/kX9JKj81/5FU/uTPfRDfyyC+FzK+57okKf9ndZv3rxNxy4+KID9qBPlR
MP6bJZUfWdxpqPwBni+S9++tym+U36rbV/EzdB98/4rWepaVXfNPlX3i+/nv
ian5uf94vszvGP9E9pn/Kc3/RM8nyZt/TMo/1v2S//2H/jq/SfohvxPjU+U3
hEN+F4wf52+QnxEO+U+Un5F8/lzWUPkB5Gf8/Ve8q30Cf0v3AT+p+t9Q/ffh
M/6VcOA3hZ0V/yr0V/w04cC/CvmKnyYc4rMcR8W/QfwmOeCvxPxU+Ydov4rv
hEN+QvohPyN5yL+4/S7nvRvPYZ2fErg/N/5H+Z3h7L993BQ/DvGf+1F/Luj7
Bf6T9EP8Ee1X/CPhEH+pfxBfhf4qf4viJ+GQX3T7uRfjT+Nr8a+h4l/9ufY/
mX+Rfn9uVf0A/CvhwF+qfpYqTwZ+lXDglwlXfqnb99W/Hxwf7LryrzB+1P+t
6/mreL62ML3+J/MD6hfk92QfPD9inLy+3YLwruvi+D7Ij8T4/ke8fuCe8/6w
mfodVo/nvI+2u3iuo3id0z8PbeZBah2m0i/HI8Lzp86HZ35x1V8m7slxrrv4
vN3OOPayWbwPHuRl/yI80m+47F+Ev7LHVcNe+rVap6bfQ3vLuOnX/Q9+7zLC
o/ddvt3fGajLR793ovVH8tF53eh9GpF89L6tSH8kP3rfVb+9ojfXMSAf6Ze4
6Zd4tF83wue9+9Inlj+o9tm/QvtlvL7w/yUPXtcvn/9ovTHCu1fva74sko/4
7kh/JB/la1E+r+Tb7XP15+t5vpg/qT+qV+e9Pn7yE/dwngvtR/olbvolHuUL
AV7+tBk//6We/zKI36XFbykf5AdlEL+9fYkH+YNd9z/Gg/haBvG/u7i0L4jP
3bXv7evvOn6UQfwtg/ggf0fU8SB/KIP4WQb5RRnEtzKIL2H/gvgSjl+Qf8lz
/GD/2x6/IP6G89O950ePTzQ/0fMT2R+NXxB/5D4tx4P4IPcR1OVl/qD3wfj4
dJ1flEH8LFV8sfhVYvwU9kn90fgF+ZfkMcD+tz1+GH8hP9D7HAyPnh8cH6Ff
9k89PzA/Ul6N3xnN64vLez968uyhP+T3OJVNu3uk57d7z/x+B/P32+VcD+L/
MrlkehB/70F3T159zGoZP/2634f47Hd/6qerf7m0XLb/xSN3v5B5wFcu3XrP
Lw1fIetrv+73Ie56vZ3W7a+fVHz2635fa/3rFio++3W/D/EpBz/8lV6bdaTL
jlm085UbsP+/3K77fYgvPm/EtQteWNzI8ty/y+36a3Yf4vl6r+LPp3Ys3HM1
++877Ppiu691+yutfZ7fy+36a3Yf4sdMPHvZrNUDir/teNol889dc87E3//8
V7vu96H81Oa4LCuz/fz83GHX/T7Ed93q5D16DOhv48/roJfa9Ql2H9r33YX9
Hz9r1YrGHnc++el9Rq/h6bxumGjXv233tW6/LWX7+ftzh133+1rPXz+bP96n
d4ddX2z3If6NK358272b9Eq/vu6mM6auy/7Xr/t9ND4n3T3lrL2WNt63z49X
TzqO9wH4db8P8S/Mf2T6459rLz5489yH9z6b/cu+dv0Uuw/xRbdsecf931vZ
+MElKw695CbmSS+1634fzs+HmvpHFLmfa94T4/hv7PoH7T7Uf/Q/zu278b2v
lze8cd2Xj5zD+Z9f9/taj3+HjT9///263+fX/fn73lcuuuGcjt7FSZ86bfWz
w/pUuMcnvz7d7kP9Rw3+zLYTBrWl9Q9Ze/4vevM64np23e9rPX+9bf76EL6v
XT/F7kPcP7uuL9s61T6e7vHWLud/a/BH+j8w7eFBvYsofvl9iF8/6pc9bxjz
fGPirSdedf4Y9u/5+tBCxa8f2HW/r7X8usWN1g7iU/f+ZN/PH/Gk5Jf9ut+H
+IjHf33I7RePlPHrr3bd70Pcz7l9ZfSkM/5+3eOk36/fKc6B+jn6fB//TtuX
7bo6h3++nQO89c/v6nX/DrzO6tfPF+dw/Zz4zd+a3TjhyOeo/d/bdTyn7v7h
tqb+4cWC98/fZKefrfGPq+3795hdv9XuQ/1+fjnjLdZ57bo653ynne/P9vM+
3dKu/1m8ByDr71/0v+GU9iOmP0jy69t1v6+1/UvNfn6Pi1+/U7zH19/Dlu/j
dVK/7vchnvcprmX7zPg9gn7d70N87iO7vnLQZoOKi353yoIr38+/Q3GhXff7
EM/+Z5NC8V9+3e9DfPi4b0666rTBxcbNT16/8+t+H+LZv422fcDMr/l1v4/6
N/RPs++Z2F5k/T0I39iu+32tx7+3jT/nN37d7/PrHp8yPrD4r2P+sNc/fvVI
ifjH7Lrfh/pvb87LGzaP7J/9+ly7r/X4jbT54/zerx9q97XGve72P8RXGL/J
vzM38rT3LNzooLnm59l+89uyvrL4YfIcH+16iuonFR/2eXS/lfv8/TUZXyw+
FF3Hr95pw9xPat/kUlQ/mR0k7+/XyH6C6/fs/56z9wWsec+Y+2+PT+devFXH
nKPZf/l7BrJ+3qed48Pycht4z1VP+/xn0//3K27Pfoz0+/sjVPzJfrctjRW/
kzrU3pOi4p/Hn8vF7yCa3aWKH9bvYkPxnjB/f4yKX7n9xQ31Hr5Z9h5Ms5Nw
61cxFH7n0+Pr1/O8JZtH6p+/397sEOPbK82C36n0/Nrjz6N5Hml8bx01/cRF
uz1WPtH/zp2WX8rx2fx3Y8KxI8/b/9U19Zf7tw/busvhzU/Oj7L/GGTxg/lt
86/lweBfetjnEU2/NdTiA/PXu2S7koo/1q/yj7mfIm8fklT8y+22pw81/fg8
kje7SxU/rN/mnzn+Lvj+tG12nffHUsWvz5/71MyVf13aeLzZDx7fIttVmp1i
/NcpfpL7SfNn85Ymi/WrJ3O7aUq2g3CzOz2a+1Fd9+cvx6dRFn+G0vhG+2ay
fG+bHx5fq19KVb9Y3ZO6F3+U/x8axh9VX3n8i+KPqk+sX0nVTyYXxh8VH/39
gMr/Wf3SUPWL5delyq+tbpH+3f0e1ldQfxSq/vDfN1f1l/tHVX/47xSq/N3q
j1LVH/6eP1U/uv9X9Zu/J1bVH1a/NdR7xqx+Sl3Hvw0LVX/YvCVVP/nvJKr4
bnYnrI+gvkxYX/qn5eVJ+T+rXxpYv0B+3VD5tdUt0r9bfVWq+srqj0LVH2ZX
UvWX1R9J1R+WvyeVv3t8xPrDP83upOpH9/+qfrP6o1T1h8d/Vb+ZXanr+Ld+
gfUH1E8J6yf/tHZlfDe7U9f10eik6sv82dZZr4P+o3+Wl3gdhLjXPVYfUPte
10T8nMcJxN1vd49/4/U7j2sRv+Z1EuJW35VeByHudU3Ev3kcRdzfn2z+hdq3
+qEYC+8hhPxZ8nde15h/FP6rf9oQ3kMI+XNh+TONn9Vvdh/zy1a/lUPFe/as
figfE/7R4+ZQ8R5Kf8/qrSL+Wn1X1Umtx3+9wuuc1uPfq5gl3rPpdY3HOcQ9
fl8Ov6MD9Wtp9Sv1z38n1/ITwr0uwt8Bg/o13S7iu9UPzl9R/7wusvqhGj/I
n4vJYv+Z1zXXCv/hdZHXSX4d8mfzn5yfWv1W1TmIu9+0+o36b/VDVee0tm+d
ZPWDwAcVXucg7nHB6yTErb4orL6g8fO8wOoLMX5DCrWO4nWR1W80f1a/ll4H
obzVZ1Wdg7jVZ6XVZxUO9avFH70/u2v+dUVVByEO6ysiPg3t7voQ6Yf1pSD+
sH+H9RmaH1jfIf2wPkX6Yf2IcFj/IRzWb6T/U+9Rh/UHwmF9ScSfan2nsk+s
z9D4wfoL9Q/WnwiH9RdhX7V+QfKwfkX2wfqZGP9BMv7D+gvZB+sv1D6sH1H7
sD5EOKwPEQ7raxUu1s9IHtZvqP+wflHJi/UHkof1JeE/q/Udsg/WZ2h8Yf2F
5GH9iXBYfxH2VesXJA/rV2QfrJ+RPKxf0fjB+gvZB+svov1q/YjmD9aHyD5Y
HyIc1tcIh/UzwmF9hfoP6zNCvlofIXlY/6Hxg/UbwmF9SbQ/VO5/g/Udkof1
IcJh/Ubkv9X6CrUP6w+kH9Z/CIf1ExofWP8gHNZ3CIf1D9F+tb5QXRfrQ5W8
WH+g8YH1IxpfWP8i+2D9SIx/tf5SyYv1swoX6zNkH6zPEA7rR2Q/rB8RDutf
Im+s1leo/7D+QPph/YeeD1g/IRzWPwiH9R3CYf2D7IP1hUperA9V8mL9gcYH
1o9E/K3Wv8g+WD8S41+tv1TyYv2McFifIftgfYZwWD8i+2H9iHBY/6L5y/6x
j4wfft3vay2/yuID/47y+JdXzjjtzOfD/dN+X2v8xaodxJ++tDHugAMHyvjx
F7vu94n+h/un/T6yr3kuZIOUz4/w74iNs+sz7D7E87mVp+z8Ku/P9Ot+X2v5
1+w+/v759ePsvtb4IusHPz9+3e/z6+5/L8n9KvJ9a/xTL/v8gV33+7qr/63Z
NyjNFPpt3G382X++0/HL7fY2+/n8iV/3+4R++x08jo9+fZzdh3g+l9HP3mPD
9aVf9/sQPzzgt/z64WL/UD73stDaUe85bEt+H8k339+20N6n1+J8k1/3+1rq
H27nQ7i+8Ot+H+LXfHnaHd/evqe9B4l/Z9avX2v3tdbf3/Tz+p9f9/taj197
kc/vcH1TXbf7aP6C9ZtrA/4p613uz4mYv14pnw/i9Un/jOKHksufbZ3Kv+br
AyR/5df9vtbyrtf/yA65vg/XRfwc1s34wfuXVv/9zHWW3LWkccnsL9+yz2f5
+fPrfh/iUzd7dPCcif2KfN/TZJ9f9/tayw8vLvjaZU987AV+Pv36FLsP8V0H
fGadySP6F/vP//3HRu/C/MR+dt3v8+sePy5s6t/Q5Nfwp56/72fXL7D7aP7u
fXNcnjY7ef9ddd3uQ3zZIetse//eDzVy+3z+ZD+7vsLuQ3zYurvPveX+tYoT
vvFS741ueYDy24/Z9aF2H9l/6Jt67zQ7W/yOnl1feUi+r/X4j7T54/0Zfn2C
3Yd45+wbrrxn9aLGsHvfu9Wn9uT45df9PpIfO/2OwR9fvzjuibG3v9LJv+N0
rF33+xAfOXv7IfPPHVJM6Xh8bs/PMT/n1zex+xAffNLIGxf03qC4aZezNtrn
viXU/u/sut/n172+mNBr4RPTdtm0OP+E2d+9buTQqn2fvwvt+q52H83ftrO3
G3bYc4395kx/8IgP8vPn19vtPpKfNOV9V61+qnFBsx327369h92H+NTm+PQv
xl/z9YPvPnNx1X/v38523e9D+Tl9Xl7rsUMfaSw9cs+v9ljSg3C//nO7r/X8
DbX5a/E7YHbd70Pc48PbfT+C+3+FQ/wQ+HoBPkDWR+7fpf1z7n7f5a/8Qfbv
uJMOvu+BfRdL/D2Tlp55wYKVEs/+ewtpv+mn8Xmj5l83kfKmX/Zvg4/cc/Z9
T/WUeJbfWuofOOSNzrNfWyXnL/sv7h/YH42/1G/2S/vaxvzP4rW2a4/sl/OT
48MgKW/zq9//kduX/TvuV+9+cMxua0n91n40P5F+idv86PG//5hbb+txlxyf
nz/Sc9Sh45dJfKem/+on+5f9yo4SN/00vu7fs38dU/yga/2yf1t9ev8+PRfr
+cny46V9g957wjk3ztTPf447O5B9YH9S9tv4S/1mv37+f3f+9ZPbekT20/w5
//VM/1sv6vv4cClv86ufn9y+xI+aNW3Czlvy+UloP5qfSL/EbX7k+Nf5M65P
IP5R/gLtSlzVL9B+CuQl7nEK8UsM77A459c9v59h+E4WxwL91D/X73HOr3t9
4PIex5R+j1OBftl/j1OIf9/wKRbnAvtIv4+Px7nAfsJh/OXz4XFKybdbnAvm
r0Tc9Xuck/NrcSpoPwX65fx4nArmJxp/qd/jlMKX/SPHOYV7HAv0y/nzOOfX
Pf+5zPDzLI4peY9TgX6Je5zqWn58ZF+lvwfIe5wL7Je4jb+0z+OUwlfdmONc
MH9yfDzOKdzjVNB+pF/iHqeC+YnGn+Sh/lHjS9db69H8muLH6utO/of4sPD8
jP3PdmZeqFT8kfFnDeTPgN9pKH7H+LWk+DXj90rk94D/KhT/ZXYlxf9Zv5Li
v4w/Soo/Mv4rKf7L7C4Vf2n9LhR/aPxXqfgv4w8byB/6p/F3peLvrF+F4r+M
v0vI39XHp39S/KbZnZCfA34zIb9ZfWZeqFT8kfFnDeTPgN9pKH7H+LWk+DXj
90rk94D/KhT/ZXYlxf9Zv5Liv4wXSoo/Mv4rKf7L7C4Vf2n9LhR/aPxXqfgv
4w8byB9Wn9muUvF31q9C8V82bwn5O/+0dpPiN83uhPwc8JsJ+U3/BP5M+nGF
A3+m5KV+4M8IB36LcOBvCAf+he2r83NKv7QP+CmlX/Yf+DmWr/NPLF/nZypc
8HvK/mj8JQ78pZDfOrJf4sB/qvkN7N9a4sDfqfaj+Yn0k7zgL0ke+C3Cgb+p
cMG/sP11fk7pl/YBP6X0y/EDfo7l6/wT4cDPVLjg95T9SeHA/yn75fgB/6fs
lzjwn2p+g+dnvMSBv1PtS3ng55R+ml/BX5K8ywX8lVy/h3YD/ZL/KgP+pUR+
CviLMuBHyoCfKpFf80/jL8qAPyoDfq0M+KNS8Ssuj/yRsK+SB36sDPi7MuAf
y4C/KxX/ZPxQifydmL+EuPcv4DdLxb9B+5F+OT+Kn4T5icZfjl/Av5TITyEe
8CNlwE+VyK8Bf1EG/FEZ8GtlwB+VAb9SIn8k7KvkgR8rA/6uDPjHMuDvyoB/
KpG/E/Mn9Qf8ZhnwbyXyU0K/xAN+skR+TYw/6Yf9XdS/6HeV8me1v43026eM
P7B/jHDY/0Xtw/4nkT9X+5dIHvankTzsD6vsE/u7eJzq+7eof7B/jXDYv0U4
7H8S41ftfyP7YP8d54/1/W9i/Kv9W0K+2r9F7cP+M8qfYH8Z9Q/2lxEO+/Mq
XOy/I3nY/0X9h/1P1H/Yv0TysD+N5GF/WGWf2N9F4wv7t6h/sH+Nx7e+f4tw
2P9EOOx/I/tg/x31H/a/0fjB/i1RH1T7t6h92H9WyYv9ZdQ/2F9GOOzPq3Cx
/47k6+sHyj8Pi96vL/HOE27p/eXjh0j8tLMOOOIjxRMUB1ba+Iy8b9Kz31nx
J1mf5O/dDtJ+00/y7l+z3xki5U2/tN/z+q7lx0n9XlcgvsL6f37Tb2xN8mB/
NP66fcvrZRxuxhc9v15XKDzHx41JP8yvzgNy+9K+mzpO327aNzVu7UfzI3HT
TzjMj5Qv5j88/7kzRkv8/V+89MYX5y2k/rt/OOnQgT/6Ye/l1TlelM/+Z6Ls
v+mX35/sn7aU8qZf2u95fdfye0j9Xleo/uf4o78/Zn80/lLe83r5/WnGjRFS
v9cViLv/zXFh0wLnD+a3VPNr7Uv7LrrnupM+dWQH4dB+6vr52UP2z/QTDvMT
/v6Kyr8h/kjc44TC/x9xXx63VVW1/TwP0+MECAKCigyiKeCEOKB2HzUsNWdA
JUtLQVMzE/TV6tUHxbREtExTSEWsHLCislIzz7Y0U8RAk5wlRRxyRARUhC/v
vdbanGvdF5ve/vjuf+7fOWvvtdcezhqutfc5ameQrv0+XuxIhj+lq53R+81A
VzvC6jP8B/hTOsOfqvWH5eRz/PV852ViZzLyU7ramYz8dP5ifEDfX6PzZ/ex
f2pnGH+1E5n26fipHcnwp3S1M5nxp/XVTjC62hm9r/i2jt84sSMZ/m59zRH6
lmJnWH21I4zO8B/gT/vP8Celq53JyGf8dX51fEaIncnIT+lqZzLy0/GfJHYm
M38lo08UO8P4q53ItF9k+NP5UTuRmZ/c+Lv6wIfxp/Vg/5DrP+yv8Xyq+5sc
HfYHufUJ+3scHfYvOTrs7yHt2/4Zq0/2P7nxh/01bnxgf5QbX9jf5eSD/VFk
/G1/kdUn+8Mcf9h/5OSD/UeODvujHH/YH+XosL+L4AO2f8j1H/bXOP6wv8m3
X90f5NqH/T2ODvuXHB3297j2Yf+M1Sf7n6w+2V/jxgf2R7n5g/1dTj7YH0XG
3/YXOflgf5jjD/uPnHyw/8jRYX+Un//q/ihHh/1dzD7S/Z2Anzg64AOODvG9
owP+w/g7OsE/GH9KB/zHj28V33B0iP+NTvAjJn9u/Ckd8DFSfxjtP+AjRif4
GpvfjPzD+PxW8SHWPrfjVfyH8XfyE3zM1Qf8xNEBHzA6ie9dfcB/GH9HJ/gH
40/pgP84OuAbjg7xv6MDfsTkz40/pQM+Rup/mvYf8BEnH+BrbH4Dm1/ATxwd
8CHWfsn4A/7D+NP5BXzM0fV+Jr4PGfwjZOLvkME/AsNvJD4OGXwiZPCbkMEn
QiZ+DwyfAPmMjuOTwYdCBt8KGXwoZPCNkMGHAsM3dF1m8LOQwXcCwz+AP62f
wb9CBr8JDP9SOovvBZ8IiH9AfBwy8Xdg+IfSEb+B+Dhk8InA8BvgT+tn4veA
+ASRj9bP4EOB4Vsw/pR/Bt8IiA+R+QuMnsHPQgbfCYh/EP50/jL4V0D8hoy/
G7/4frRlteHyj/T4frcORTPcr9bX76LoL9GvWPJxlz91XFLG/xYnX3yvm64L
H99G/h3l/XD+/Vbxfp9idP33hBufwVN+dOsXZnxUblv/9/tPY/v2XTVXP9J7
Sftsn1JT28gfrvz6fhv4/VnabxkHR5f38hVrf39fVxn/hXZf52N8fK9euQt5
v532a+7SW77y+dl+/+EXy4efnfp4x+Ku8666a4ubG7x/ss63n/Tfn7+P9zcU
un/+Yv92Erpfn00rjtnlhCfPKq/p1Pn7l3bz43fLBy88c+OfP6jd+a9fbX3n
xPT+QNu/vfTB4gs9exRfJu+HndF1x/KNwZsXkf/zbn4nfHjCjKGXLisXvtf5
lvMe9OO3x8c7zbt65C7Fy5P2WzRzsn//5Y11/nsVfcj3SQ7/3qTb3j28Xbhy
7nnTP3u2ty9Rvi3l/fr+/bBRvpUiX1q/2v+Ox+x01m9e2bZYXJcv4VO6PkbU
5d8qsO9nNTWN/ff4j5bvh/jxj/ybin1+8Uz//n/x63PlkGk7vbF+q3xfzL9/
95e/+eJDFx/aVGz94Mk/vHLwe27+Nvr1V14f/7cexfHk+yov1+e3Q4jy+ee/
aegn7b8q75/36zvK307k9/prw3r7g+T7Mv77TnF+a0Xk779fMWSfty+6pewY
njvupkVPTfPydaq3v0eYCt8fU3xW44yTRM9ifdAfbn3E/6a2qh5O9NjO6rKq
Z51+LVTPIl315naiR5Guelf1sN5vrvDvXEwXPYr1ZR2UoIfRftSY/ajqXf0l
+jDRq9NFzzbuf0uhehTpqndVDyNd9abqUaSD3i2rfFW+bsUw0bON5Wsthoue
1fv6/vFdRa9OFz2L9VVvqh5F+jTRu80tY+t6GOaldqDo1VdFz2L9f4renCh6
tDH/50vVw3pf1/1i0asjRM9ifdWbqkeRvpno3ZmihxvL165QPYr0OaJ3bxQ9
jPOjelP1KI6P6l3Vw8hf9WYn0aNIN73bEvUw0lVvqh5F+qOid9sPjXq4Mf+O
xWLRoyi/6t3Ooocby696rMH5cNG7LaKH9b7iG31Er3YWPYv1nxW9qXoU6VNF
794kergxfVChehbp4D+x57tkz7f4P6If0/kpeH7l/cL+fDz4Ta591X9r969U
r/r51ftM/46vvp+Z8Df95/zLufe8f+jD/fVcuF9/Yl9qf6uUS/WjXdPv0uov
0fVOtVyiR76vyzh3dHS9P0/KKb2D/O9cpw8Q/Zq+D6Lrc7jcHy7lsH8XHPv7
/fad0lw8Qr7vOVfuT5JyyP+Cafd+78jjuhXjxq73u06/f8vp//Fyv03KIb18
ZYvDPp66WdEHvv+gdP0uRJBySH/i7e4Lb7mje3FJy9gdn5rt8ZOL5f4CKYf0
y+T7RlHPefut9y+D77sqvt9x6xt++fNxy2snHTT4sM5f8u9HGi/3W6Qc0lvu
Ov3iyZt+VMPv1ypd72s5pat+i/ahW7Ez+f7HjnK/j5TT+/r+9ZvmHTD26K5L
ahsve+LDO1v9+zW6yf3bpRzS47xsId/fSPih+n96/z4ph/Uh/nXjz/ym6r/F
p67/EJ87/hDfkfYtfndyQPxH+Bv+4OSD+N71D+JXVx/wC8Lf4lvSP4vP/fNb
jb9dffnX+NvRAZ8g7Rv+4OgQ3+biN+ffQfzl44tqfO7oEN8G5A/xaeHHpxJ/
Ov4Qn7v+Q/zp6BCfOTrE904+iN9cfYj/XX3AL1z/IP4n82fxq5s/wD8cf4hv
ifwW3zr5IX53/CE+d/whPnd0wDeMTvALV1/HYe3xY0tg8XNVL+rPxV8hE38F
Fn+pf7T2+HtZyfBX1WssvlS9yPw/8E9NPsAfSoY/SPxcZuLnwOJn1WsMPwC9
6PSr6j2GH6heY/GVxJ81jD8h/ilZ/KN6jcWfEj+XLH5WvcfiQ4mfA4ufTS+S
+FDip8DiJ4kPA4sPVa9h/ATxecHic9VrDF+Q+Lxg8bnqNRZfSnxew/gc4suA
8SXgFyXDL1Svsfha4s+CxZ+q9zC+rs5vu8DwB9WLGD8D/hAQf9B/8a8K9K+I
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
s+qRvfZx9tPoc/c8f/z1M9z5jv+UTuWT9mn/1lG+/zN/8p4Uo5Pz0Yl/4/cP
IH8uX+P3uxr95MbfJzP6wANX/f7GDg7/Rf6U/s6nb+7z1m/d+1XXuX8nN35/
/TqPn8hP6eT8AspP10du/Mj7Y9Z5fnLrJzc+uflZt/XD5c+NH/GTS9Wfq89s
6B9ZfZL/Qf60fcQ31K/Qa7IPJ43Ph7sc/dLjLv+F/Cl97qeue+mDp935edo/
Ih/lT/xslN/RYfxz8tP1T/JL2L/c+NH6bP1A+zn+lJ5bPzn5iR+m9HJw9553
X/+m89+MnrHfWXrGfygz9rvM+AdZevyn81Nm7HeWnrHPZcY+Z+k5/hn7nqVn
7E+Z0f9ZesY+lxn7mKVn7AN7P8M618/Yzyz/XP2M/Swz9nEd61P/Jcs/Vz/j
f7D3060zPeOflRn/Iktn9kf/M/o/S2f2WfGrjH9RZuwn29+C/Gn/M/aF7c9A
+aw++Adlxn9h+1NxfHPy0/oZ/yzLP1c/438wfHKd6Rn/zOVPyfg7/ufV211a
vr7DbvM3PCK9/1npK17+BJd4XOhev2i984VPY3pzsVL4IP0zhz929Opxq6l9
1ftaDumXzPzJr1bNeb789s0HXtHXv99W7vcsmH3V+1qucf2WQttBets/fvvy
JsVNND7X+1rOje8hV/Xbe+pGBbPPel/LIX3xT+78oPVz75TXj1uy600be/t9
g9zXckj/cOTlo884e/0i1vf4ynVy/yMp17h+n2LcXpNXzFjt7Z/e13KN63cs
9p6z6Gv7D3zLtb+X3P9IyiH94XNa391ndYfinKsfembK/u79H+UEuf+QlMP6
r9bHZaHI2eLoev8VKYf0sMe2p3+65QdllN/lF+z+DVJO6XL+oxxf59+zmFEf
54T/rZbn9wa5f6KUQ/5NIz7he4GMg19/D8n9GXvEco3Hv2cR67v9l1J/o6Dl
kP6p70zredT5C8vf3nHP+RM38vZT72s5pB+y62t37XPjBsVn9//Z6pEnuf1T
5f5y/1Aph/Q/vHr6Qe/euUlx0L0PPrvfZPf9ovJAuX+3lEP6Ty79dJcfLWst
3n3nsNve2djrryVyX8spXfXr1d++/K6LWzcqFjy2ZNX84S4/Xz4u97Uc0ndv
ffSvfVc/Ue789x2uvODnXr/q/V2lHNKbvnfjzx544vLylK+eu/rVPn79nSr3
CymH9EEvnPBW/337F7+rz1M6P6/9+63c13JYv+3Ynl/ffo+Lyi5Hrj//lx18
+53l/mAp13j+usn8dXTzp/e1nOu//K89/mxqu63x/nes5+Sr1tPfGuvz+YNX
7v/397P2S8shvd+5u7272eEPlnvdf+rNUwZ7/RTv96b261G5r+Ua1+9QbCrt
IH3ifid2OvOoRVn7peUa89+Y2q8fy30th/QZ8n3EFz43f8vhP3f5J7t/Q+Pv
v8p70zoXsZx/fvV+H3h/gdJ7y3cr7n94k/ZP7uTyW6Xe13KN21+/uPf7M2un
jH3NtV/K/d7w/grV79+9atvW2Se0Ft8eOPL8v9/xorNfev8SKYf89bsTUU4/
fg/I/RmNv89bDpH3LkT53f7v8o9yfwi8n0HyX9LupsXz9XFO5z/Vvv1T7v9F
yiH/HeW7FZGP998fkPvk+xYyrn1k/tz+t1Lvb9r4/bNlMe5P+/7jN3NlH4vX
v3r/81IO6Yu6zhn+wXVdigmXvDxt5aPefzpT7r8o5ZAe9UuvguFXev9WKYf0
3cf3u/SQ9zYsthh2xcibz3XvDyn1/h5STumq3+O+zi7F0ZBfU/oxcl/LIf+F
10waMmLun2ub19tpcXS9/7yUQ/oRdb6vyD4+9366Uu9rOaXr+ou4Yf9iVP2/
t42ffjfrKLk/Rsoh//v7X33qkj1fqL1Unx93vqDU+3+Wco3np4fMn8e39L6W
Q/royr40/WH9j6Sctw939v91u7sGvy761fsXorepfRL7UfR98bdH/mWN9/cq
Xe6HXPzE7MNzXZ+a9GyPDoHZF7EPtbXbr43C3bGfxP70Drn4SeRw/PW9PlFP
eP0a9d9rNTwfrvpb7VOsv7mrP0W+7yx60o1ftA8flA83/v5G2eWus5qPuvpp
0YNuf0up3y1i9kf6FebA+x2r8g0MzP6p/ZkD7/dQun6fi9kPtQ9TGn9fxd7L
w+zXt+rtP1bD9yNU2+8SRE7S/ibSfto/o/Y1juvmYWGcR9d//W5V5P+YG1+x
rwHfX1mldw1d4zw6+l+eG/HO4Vt9XD5Y//frU/S36Fcff42RfRdRP7jzi6I3
+on+cftLVL+Wo0C/qP4/vm73nhP97Mdf5ArM/ki/Qvz3z3+Ua8vA7F9s9z2R
z+NTIndg9kP6LfbB67epvf868/G9mgOzX1P/cNbCmz73ei3K7/W3yCXtu/d7
W3wh/STzM1Dsk89/Sbvh8igHse8tQfrh5k/mLXwhzqOrD+Pu6DFv94raIdc/
iV9qLH6RuIfuj1H7s3b93ztrf1h8pfZv3eyPj0+kX4HFT1Iva3+YfdT3rjD9
J/FLDeMX8K8L5l9L3EL1u9ivgPEVxB81Fn+IXIHFX6ofWfwh/ntg/rvEHyXG
H0qX+LHG4kfV/yx+k/ijZPGHxG81jN+ULnKVa7d/XQuMPyB+Chg/Vcd3fWrf
JT5y3/+D+DJgfKn1xX8vmf6T+KWG8Qv41wXzryW+ofpd4quA8RXEHzUWf0j8
FVj8Jf0KLP4Qvzww/13tI8YfSpf4sWTxo+p/Fr9J/FGy+EPtP8ZvShe5yrXb
v04Fxh8QPwWMn7S+xJfUvovcJcZHEF8GjC+1fvxvahsN53OUrnGPxkFI17hH
4gNH17gmh8+pnUC66u0c/qZxUmP5ehc5fE3jJKRLfFfTOAjpGtesG/7m51fj
GtEvRH+1FnMav/9U/ediIdG/+n4v0Y9OPtV/GichXeMe8Z9dfX1vvcY5SJf4
zeKkxvJ1cfhbVb5NwpTG71/V+K64n9hfie9qDzf+/qnGF9K+e/+X4Xf4/tJq
+wMVv3Ttq/2eA+8nh/hV7K/7fp69l1/8E0eX+MziJKRL/Fp7gNh3jWtUzyFd
4yKJH1z/Ne4ZQ/afa1wzi+gPjYskPjD5wH8uxH928kn8VtM4B+mqNzVOaizf
eoXGOY3l2yBonNS4//0KjXOQrnZB46TG49ujkPiC2J+WQuOkxvJtWUAeBdp/
r6ZxEtI17tE4COka16gdd3SJizROwvmT+NXiIKyP49y4fx/VNA5COuRX3PhB
/saND+SHXH3ILzn5IP/j6JCfofaH2T/ITzn+kD/K2B9v3yF/Q/XfjMbvp8T8
gxtfyC+59iG/Y3SSn3HyQf7F8Yf8k6ND/oXYH8tfuPqQv3L9h/yZkx/yV2T8
Lf/i5IP8i2sf8kdWn+SHXP8gP+TokF8zOsmfufqQv3H9h/yFyU/yD67/kF9y
7UN+x+gkP+Pkg/yL4w/5J0eH/AuxP5a/IPL3ovof8meOP+SvXP8g/0Lks/yL
ax/yR1af5Idc/yA/5NqH/JqbP8ifOf6QX3HyQ37G1Yf8iJMP8j+uPuRvXH3I
L5H2e69rfsfVh/yQax/yN64+5Ffc+EH+wdWH/I+jQ/7EyQf5D0eH/A5pfzW1
H5BfcPwhP0TqW/7B1Yf8kZs/yH+R8bf8ERl/y79YfZI/MzrJzzj+kJ9x8kP+
yMkP+SM3PpD/cvUhv+Lkg/yDqw/5H0eH/ImTD/Ifjg75Hccf8h+ODvkFo5P8
kKND/oHYV8sfkfjD8l9OPsgfkfG3/IurD/kzMr+Wn3H8IT/j5If8keMP+SMy
f5b/cvWj/u5I7Yfe13JIj/r1TSnn9+8tvq427NDDutP9Z4/IfS3XuP1VNW0H
6bu8vfLacy94neZn9L6WI/3P7p/Wcq79+rmdFvk+q8f39f4wKef418+tdJDv
//n9+XpfyzWu30O+7+zjo2vl/rVSrnH9Zmnf47N6X8uR/hfxO54+f3ay3Ndy
/yn/nHzrxt/LJ99XKn8s4zIdxk/th96fRsYvtv+yzpNbf3pfyzXu38bSP7//
eJjcl3l07cdzGx/I+Q9v3/R+PL/j/YsxGXxL77P9Q/HcS1d5f4f3f/S+lkP6
bd+a9NAPdmwn70dZ5trX+7OkHNLjuZT1ijgODc7fyX0rh/T6ezffLeP7Exuc
/9H7Wq4h/3eln76+3Zdyjcevn4yfx0/1vpZz85fJ3+j9MQR/ivw3lPa9/6j3
tZzrv/zn7AeUh/pNbUy/xvt9sudvtFxjuvLVn5M/u38Z7gP/butoP/z+8xVH
brD9k/s9Uztk/h+PH7i7X98Hy/2PpBzSR3T7+gZH9+1axPre/h8s97Vc4/r9
isu+c/1Lx7/h8/t6fw8ph/SJWz3fc/ZeGxbTZ37rvv3PWOza1/taDul9Ntr7
wfueXK845XtvddjsvqesvsbXx8v93lLOzd+oT8ZlTi3K2cC/l/srj4zlkL76
7xdssGzeslqUc5mj630tp3S1D1Pr/DeV8U/4r8YnB8v9y6Sck/+JT/guFvm9
/rD7Uq7x+G8u8+fjN70/Qcq59kdO+OzNq1+uXXbKzB/e0c/bX73fIuWQ3vO0
fncv7LBxcc/uF262/wKvv/8g97Uc0vvN3LHX/Et6FxNaX3yw3Tf8/gW9r+WQ
3jb06od6frlLcdJLQ//yTpvXr+PlvpZz41fn37XY5bbvHvHYBUutvuJzu8p9
LYf1Z3d8e70XRj1XWz52n4talrU4ut7/hZRz8s+866bHVy+p9XniM9t+dR/v
P+h9LYfy7dH+3Zcm7T6gmFKfp942fvr8TJX7I6Qc8m/afuYOfUa/Vjt49tVP
H3WQX396v1nKNZ6/XjJ/3v7r/S2lHNKr8cV//n6kqv5n9D6Uv+r3TH3Kv6rf
G8hff265fCeddsSCpw5c6tpX/RL1Si8qf9Tfwyhd+Dv55PtaZb8FI1+98qO/
UvmFP5X/ntbzdph0Be9frL8Tle/cCw896kvFS7T9aB+2cPVBfv7+rDj+tH2R
n9LbTrmvw7dO7kX7J/K79uX9reWUuv7dzvGH+aX8pX0+v7/51NOD91zP0aH9
3Pzw9Rn5U7rMD5e/rrf6UvovnmvXf9QuK+j8RfuzDe1/1D+fpnTh79aX6s/T
RnX/6U86fFB7dO38qfyXP37HaV8d20rpsf5eVL7P/c91d785910nn+rvqD8H
FCgfyF8y+WX8afsiP6UX85+d/9r5A2n/RH43f1X7xPWTzC/lL+3T+sfOmLTH
rtt0cHRoPzc/lC78HR3mJ7Dxr9o3Fp+Y/gmMDvcdncUv0D7lz+IXpaudYvTo
Hyf5m4GudizDn7avdg7pOu7Hix1j9dVOZfhTutqptdffKSefix+0vtq5jPyU
LuNP6WqnGF3tXGb+3PgIfivxx3Z8fsVOZdp3dOBP50ftVGZ+aP/UjrH6aqcY
fZLYOUZXO5bhT9eX2jmla35E19c4sWOsvtqpDH9KVzuF9DlC31LsXEa+ktEn
ip3LyE/pMv6UrnaK0dXOZebP6Lp+VP4RYudYfbVTmfaLDH8qn9qpzPwYnYw/
4W/xD2tf77v1of85fI3hY9W8k/6Q3i2b/4f7Sb6IH5UMPxL8rIb4GeA7BcN3
BF8LDF8TfC8gvgf4V43hXyJXYPif9Csw/Evwo8DwI8G/SsS/lC74ZcnwS+l3
wfBDwbVKhn8Jflhj+KHIVTL8TvpVIP4F+F1A/K46PhsGhm+K3IHhc4JvBsQ3
lS74UcnwI8HPaoifAb5TMHxHcLPA8DXB9wLie4B/1Rj+JXIFhv9JvwLDvwQ/
Cgw/EvyrRPxL6YJflgy/lH4XDD8U/Ktk+JfghzWGH4pcJcPvpF8F4l+A3wXE
74x/bDcwfFPkDgyfk3kLiG8qHfAz1z6WQzrgZ6w+pQN+5uiAbzk64DdGJ/iL
l6+KzzH+lA74FONP6YDPOTrgT75+FZ8xOsH3mPyUP+B/TH46v4D/MfkdneCf
bH4z8u9E6YDfsfZpfcDnGH83/gS/dPUB33J0wG+MTvAXL38Vn2P8HZ3gU4w/
bR/wOUcH/MnRAZ9x/Qd8j8kfmPyA/zH5M/O3F+0/4FeODvgnm18qH+Bbjg74
HWuf1gd8jvF380vwS1e/ap8ofkX3DxO5WH1qHzP4S2D4lO5vy+AjIYNPhQy+
FjL4UcjgayGDH4UMvhIy+FFg+IrOewa/Cxn8MWTwu5DBnwLD72D+aP8y+GbI
4G8hg08Fhr8Bfzp+DF+D8afyZfCXgPgU4Bchg4+EDD4VEF8D/CJk8KOQwddC
Bj8KDF9ROuJHRD5Kz+B3IYM/hgx+Fxj+JPhQQPyOzB/ln8E3A8PfoP0cf0pn
+CTMj8lHxp/U75Y9/6jXSI//tr/Nya/X67h/zNWH/V9OPtj/ZPzJ/iU3f7A/
zbUP+8McHfZ3Oflg/5arD/vXHB32b7nxg/1PZPxs/5vrP+y/c/xh/xsZf9u/
Rerb/i3XPuw/s/pkf5nrH+wvc3TYn2d0sv/O1Yf9X67/sP/J5Cf7l1z/YX+a
ax/2hzk67O9y8sH+LVcf9q85OuzfcvML+59cfdj/5voP++8cf9j/5voH+7dc
fdi/5dqH/WdWn+wvc/2D/WWODvvzjE7237n6qn/X7v93o/GB6lf6fZzB/7t0
vR2aqf7v3uvjtsnvr3Ltf1x5Prek9eNzt12OP5Vvt5HLL7hs4Uraf+FP+69+
/drrb03l07iC0aP+70Hri/y58c/JT/k3zX7ssze88yc6PhpXMHrUm77/ML9U
Pmmf9m/jLz0+ecHL7aj80n5ufihd+FO6zA+X/w9T7jy6qYXK1+Mzp1x89zS/
/lU/RP01uPgxqR/1zy45/nT8htf1w4a0vvCn/VO/fu31d6b8Na5AuvqXr3S9
//JOL25O64v8ufHPyc/X/5Pj7n+gZR5d3xpXMHrU6zu5+YP5DWx+pX06f9t+
7ZCO7ZZy/SrtU/4yP3R8hL+jw/zk7EON+d9gf5x9VbraCaRPF3qz2Bmlq3+n
9dWOZPi79q8R+gSxM0pX//9aoQ8XO8L4M/wH+NPxYfiT9l/tTEa+EunKX+1M
Rn5Hh/HPyU/nr1XsTGb+HH/tn9oZ1r7aiUz7bnyBP+2f2onM/BidjD/lr3aC
0VfdHe2M0tW+Xi/0S8WOZPjT50/tDKOrHWF0hv8Af0pn+FO1/s45+Sh/tTMZ
+Sldxj8nP52/Ff+IdiYzf8a/BeqrnWH81U5k2i8z/Gn/1E5k5ic3/o4O5dj8
l1A+2b/q/iHXf9hf49uv7m9ydNgf5NqH/T2uPuxfcvVhfw9p3/bPuPmD/U+u
Puyv8f5DdX+Uo8P+Lscf9keR8bf9RVaf7A8zOtl/5PjD/iNvf6r7o5z8sD/K
29/q/i5Hh/1DTj7YX+Pah/1Njg77g/z6qe7vcfVh/5KvX93f4+rD/hmrT/Y/
ufqwv8bND+yPcnTY3+X4w/4oMv62v8jqk/1hRif7jxx/2H/k5If9UU5+2B/l
5gf2d1H9yPQn4CeODviAo0N879dPFf9h/Gn+GPAPxp/WB/zH16/iG44O8b+j
A37E5Kf1AV9i8lP+gC8x+R2d4GtsfjPyczrgQ6x9Wh/wH8af0gEfI/p5F9p/
wAe8f1GN7738VfyH8Xf9J/gH40/HD/AfX7+Kbzg6xP+ODvgRk5/WB3yJyU/l
A3yJye/oBF9j8xsYHfATRwd8iLVP+QP+w/hTOuBj1D6w+F7wiRLxD6VLfFxm
4u+S4R8SH5eI30B8XGbwiZLhN8Dfta/1M/F7ifgEkS8gXccngw+VDN+C8c/J
78ZH5Ud8iMyf8Qf8pczgZ2UG3ykR/yD8af8y+FeJ+A0Zf7r+M/F9ifgHxMdl
Jv4uM/hHifgN0jP4RJnBb8oMPlFm4vcS8QkiH62fwYfKDL5VZvChMoNvlIgP
kfkz/oC/lBn8rMzgOyXiH4Q/7V8G/yoRvyHj7/jH96atqum/q19/b9qgQp+n
xvV135f+1ohPjz7x7E99bUW5rP6f4i/bn3fP+4c+3F/PffjzI5F/Z3k/oN9f
Ge/3KUbXf084+e8676q7trj5zfKL5cPPTn2cvX/QnZsz+f5Wl+91eY+cry9y
t51zw5EbLR/rz78tl37H/vv1EfkuqU1f6/v7Bsj4p+936/qR9xKGaez9dnI9
d+ktX/n8bM9/2yk/uvULM9oV29X//fvPIt+dhb//vlAcv9YwvP6fnu8OQt+5
fn9AiP30389r/dmcH2/z+uraNZ06f//Sbn79zd33zKZ/jV5Vaz5vwdcPvNbT
R3y807yrRw4rHiXvhz2s9ZrjlvUYUET+z7v1O+HDE2YMvfTDcuF7nW8578G0
PnV8X136YPGFnhsX41a8e/rEN338HvnvW1xGvk9y9uPd/zZiUadw0J5jj/jt
4V7/1etf1a+I71l/hMi3VORL79dW/3qjX3/l9fF/6yXy/dPkU/lfq8vfHPqQ
72c11cf/BXk/r/cfOh6z01m/eaV9Ufzimf79/+LPZ13w2s6vfPfD7iK//z5Y
zyeuPuB/v7m8duD8LpN2+4Z/viP/7Yq58H7lD0X+3evzO1C+/+L337bV239P
5PfrO/JvLvapy5/8r/eEf/s6fUS4tF7f77+M81PI/Pr3k0/b/GfvXXh2+9B8
6/D1Bg5N+KOOf5f6/GwTNoPvj6n90f/pomeRP+gPHx/EX1tVDyd69LNW1/5W
0bNOvxaqZ5GuelP1KNJV76oeVrrqT9Wb80SPYn1ZxzWih9V+1NB+KL2qd/WH
+svef+r0u7yfVN7/6vNvqndVDyN9sOhN1aNIJ3oX5OtfqJ5tPD8bFqpnla7r
a7jo1eGiZ538ojcfET3q2he9u+qnUQ8rXb8PMV/06p6iZ7G+6k3Vo435P296
WOmqv04Qvap6FusfIHrzLNGjSJ8qevcI0cON5etUqB5F+jDRu6qHUT7Vm6+K
HlW6rp+vit7dUPQw8le92Un0KNJV7678adTDSFe92UP0KNJ3Fr07SfQwyn+Z
6M09RI8qXfXOo6J3O4kebiz/SpG/wfsNRe+eL3oY+V8merWT6Fms3yR681rR
o43nt384XPSw0j+uzE+forPoWawP/pMbP73Pnm95LuX5bKD/5b6WI3S87/Tf
2v0r1ate/+l91L/gHxboHxL9R+RXu+jzP2JfoBzW13MD+nP2q6laDuv3KtD/
V/n1/nQp17j+TlI/nX9R/bar3J8u5XD8+v3jzSu6njCgwO97avtD5H5/KYf8
31i+3hmjnh5Y9F3/5PtO/LP/fvWWcv9fUk7pej73hbr+Glqs/fsPPcJCKYfy
7XPwcQ/cusPAYtYxp9ww+fKfOP+wTe4XUk7pqj82k+8b7bLynN3uXpb8N60/
TO5vBt93tfGZ+IOePSdvWmy87IkP72xN/q+e3+0i9wdLucbjP7Bog+/XKv0M
ua/lcPwvr4/PtvL9Pm8/9Pshl0k5pb8p/L/50CunnvpU72L8QYMP6/ylhI8q
fnWS3G+Tctj+P+vzMqTA71/o+Oh9LYfyQfzr5Ae/ifqH4ie5+hCfE/4W3zn5
IX43Oon/CH/DH5z8EN87OsSv3v+o4he5+NbJB/G50Un87errtfiBjg74hBtf
wB9cfYhvXf8gfnPjA/GXqw/xuasP8a3JR+JTvz6r8afrH8Tnjg7xp5//anzm
5g/ie6dfIH4j42/xf4F0wC+cfBD/k/mz+NXVB/zD2ifxbWP5U3zr5If43eqT
+Nzxh/iczK/hG25+AL9w9XWdrT1+bA0sfq7qRf25+Ctk4q/A4i/1j9Yef68q
Gf4q8WXJ4kvVi+j/KR38U5MP8Icawx8kfg6Z+Dmw+Fn1GsMPiF5E/CAw/ED1
GouvJP6sYfwJ8U+NxT8SfwYWf0r8XGL8DPFhyeJD1Wssfla9yOJDiZ8Ci58k
PiwxPoT4KWD8BPF5yeJz1WsMX5D4vGDxucSXJYsvJT6vYXwO8WXA+BLwi4Lh
F6rXWHwt8WeB8SfE1wHj6+r8dgoMf1C9iPEz4A8B8Qfwrwr0r4h+cv2Pz3VX
l1+w+ZX7Wk7pur7jd4E2kvv6S3S9Uy3n/Jsa5lcIfujmJ34XqIPz79Q/V/12
kpRr3H+LrwPS9T7DN8fH7yLVct9P0nKN6f0kPk3nY6r97yb+c1r/Sm+56/SL
J2/6Ue0R8N+Urve1HNKfeLv7wlvu6F5c0jJ2x6dm+/V5sdxfIOWQHl7Z4rCP
p25R9Ibv6+r46/37pJzSdX1eMO3e7x15XLdi3Nj1ftfp929Z+za+cr9Nyim9
Gp92K3Ym/p/6hX2knNL1+1U3zTtg7NFdl9RifOrtRze5f7uUQ/oFx/5+v32n
NEt8udyN71y5P0nKYX31GxdP2m/RzMnef9L76F9q/Nxx6xt++fNxy2sxDvX7
Z8bL/RYph/SyPi+bFehfKV2/6xukHMoH/guJP6mdV78mYPxG9IOrD88NiR8V
92lqQzrkFwj/1gLjX4KvufqCKwaGP4peCSy+Fb+phvFhlf+gwOJbiV9LjF8h
flc97fhLfOPWn9Il/isw/oP4o2Dxh8R/JYv/JH4NGL9CfFaw+Ezi15LFrxKf
lSw+k/ilZPGLxGcB4zOIX9zzBfFxYPGx+K2BxffiN9ZYfCzxXWDxncTHBcbH
EN8VLL4T/CAw/ED8tsDiW/GLahj/KV3i24DxrdIl/g8s/pf4tcT4FeL/gPG/
1of4y8kHes3Vh/jU6pP4xo0PxK/e/5cf4ttKh/jVjR/kP5x8ue83Qnzn5IP4
1PiT+NPJD/GnG1+Irx0d4jcnP8QnTj6IL1x9iD+d/BC/Of0A8Zefn2p85foH
8SeJjy2+IvJZ/OHsL8SvVp/EJ05+iG/d+oD43MkH8S2ZP4vP3PxBfO/kh/iN
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
3wLjuX5g18OgfDxPkvzZeN2+WPt1Kj8mg28pXq7zezSUj+dJ1viebf38T4qn
Y3vJv4nnN9b4/lj9PEmqH8un+lge+WH5ZuCH8jSDvJF/V+C/xvtV6/ya4TrZ
h9u+NemhH+yY8g3xPQxrvD9Uyuv8rz6zyg/LzwJ+Kk/1/EuSd0wmf6PXzaR8
lO8DGP/kz+A1lsf/nP1obE/SeYzGdLQnDc63rr09Spf2w9rpnSm9afZjn73h
nT/R/u0+cvkFly1cSeknn3bEgqcOXErpE7d6vufsvdJ5OqQfMv+Pxw/cfUtK
F/60/5H/drT+Zd+5/qXj3+Dti3x0fEQ+St/4S49PXvByO0rv3uvjtsnvo31f
Y/wH/+/S9XZIzxPS+2y094P3PdmD0mX+KH+ZP0oX+Sl/kZ/Or8hP+y/yU/pJ
v/nU04P3TP49mV9aX+Y3x5/Sm54cd/8DLfNo/3a57btHPHZBwjOR/ovn2vUf
tcsKWr/fzB17zb9kZ1r/slNm/vCOfoNz/On8Rf670Poj2r/70qTdd6J0kY+P
b5SP0rf92iEd2y3l89/jM6dcfPe0taz/P0y58+imFirf4q73X97pxc0pXeaP
8pf5y8lP+Yv8fP1H+Sl/kZ/Sj50xaY9dt+H7l2V+aX2Z3xx/Sif2iNqnxvgZ
vg9Cf758Y37OfpbV8ml/hItfGsZTiV+87gPXufgolV/99ws2WDYv+TfTZ37r
vv3P4NdYPuqvpD9i+cUlu8byI7p9fYOj+yb8LtqjhH9Mreu/Tc2/ivSEd0R+
6fmJ+jL5XwdD+cuEHys/AfgdDPKgvCuO3GD7J/d7BuxpsjfRPiT9f8r33uqw
2X1Ppfl/4pPxXAz6Pu23OF7Ka/97Az8sj/wOBnmaRlXljddzoP32BbtuhvJx
PPpB+TXwULjeA8q3zbzrpsdXp/iuzxOf2far+3xIr8+H8m1Dr36o55cTnnPS
S0P/8k7buza+4+F6EpTveVq/uxd2SPHsPbtfuNn+C9L3X6L+GWDx5dS6veht
/Yn6K+XHJ7S++GC7byT8cYqUl/cI1PYQfqw88vsDyIPyNo2c8NmbVye8Idqz
pO8n1vmn9Tq8bi+Sv9m0/cwd+oxOePDBs69++qiD0nraGcpPAH5YfvXQKj+U
Z/VnqvLO7vj2ei+MSnjp8rH7XNSyrKVg17dB+TheKb8S5Uv2EK/7Q/n/T/FM
rv2QqU/pJ2XilV0h3pkO9NZMvHRSJl7BeEf5Kz6B8dK1Qlf9losn/tt4BeMl
Ip/VvwbqT4B4jMifG///c7yC8RKZv5LRc/FYLl7BeIfwp+Ofi1cw3iHjT+vn
4pVcvLNhJl7CeEX3B6l+nwLxznWwvvpn4iWMJwh/2n+MV3T87P0SEC8R+QLS
9bp/Jh7LxRP/bbySi5c2zMRLuXgsF6/k4p1cvITxCpmf3Pgbnfj/63yN/8T+
ZeKjtJ+LtEfpbafc1+FbJ/ei9MMWjHz1yo/+Sts/98JDj/pS8RKVP/qnab0j
PdqTXpQu/Gn7kf8wWj/qs+0oXeSj/Rf5KB31qaODvXbzX48X+PxEfb8FlV/m
j9Jl/uj8oL0h8tP6Ij+tL/LT/t3Tet4Ok67g9WV+aX2Z3xx/Si/mPzv/tfMH
UvrJo7r/9CcdPqD9/9z/XHf3m3PfpfToH+9F+xf9820oXfjT9RP5f5qPX12f
8edD5OPjG+WjdNSnSEd77dZvPZ7sS+vH+GEAlV/mj9Jl/mj7aG+I/HR+RX5a
X+Sn/bv88TtO++rYVlpf5pfWl/nN8af0nD3C/9z5ToyP5B/HH+gOf0N54TrZ
O4J/gb/s8B+K9wh+Y/ISfC6HjxVV/g7fsmuCX6XxaYxPGZ3ge6Fa3uE/dk3w
P8AXHb4H4+3wybJa3uFXgOc5/MquCf5m8hN8raxeO3wN6jt8EugOfzQ6wb/S
+DXGfyjeI/iNtUfwuRw+ZvwIvmXXBL9K9Mb4lNEJvmd0gv/YNcH/AF9y+J5d
E3zS5CH4VVnl7/Aruyb4m8lP8DUrT/A1q0/wSaMT/NHo/8d4oVg7nftLuXgj
Fw/k4olcPILxgJ7fqepf7g/n4hH01wl/Kl8uHvi/xiOKD+TinZy//t/GA/9t
PNKciXdy8UAunmjOxCO5eIDFEzD+tH4uHhhP4gnlX8vEI7l4IBdP5OKRnL/+
n8YD+Pz8p/EI1u+fiXdy/vr4/zIeYPEIzB+tf34m3snFA7l44vxMPILxAJmf
3PhD+y4fQuODxvl3l8+h8YI7T9l4/5fRyf4moxO8P8nXOB8D/i1vn+RDEv/G
+QCjk/1rKB8dP7J/yehk/5tdk3wBjL/bH2d0sr8P54/yJ/u7UH7Kn+RTUH7K
n+xvs2uSb8L5pfxJPg350/bJ/i+jE7ze6ATvT/I3zsdA/OH2fyF/2j+SD0jr
t/H+NZSPjg/Zv2R0sv/Nrsn+Jhh/l48xOsl34fxR/iTfgfLT+SH5FJSf8if5
IqOTfBPOL61P9v8h///UnoD9d/EKXHcM1Xr6Y3jVGt9/ALyI7B+qsf1DiFch
njUR8CKyv6qo0jcF/il+RDxrBOBBiBchnoR4E+JRZP9Tojfe/0TxIsSTEG9C
PIrsH4P+uv1joI/d/jGTH/ePIV6F+6sQLyL76wLbX4d4Fe7/EnzG+JH9Q1Ye
9w+NB7wK92chXkT2VxVsfxXiVbh/rB/gQYgXtQGehPvLEI8i+58SvfH+J4oX
tQGehHgT4lFk/5iVJ/vHQB+6/WMmP+4fQ7wK91chXkT21wW2vw7xKtz/9Z/6
6/JP9XfOHyf7b0q2v+k/9cfJ/iSjk/1Z6+wv5/xxsr+LxgNEvpLRc/FGzl/O
+eNk/5vRyf43nD/jfw3UJ/u/ysz+L2y/zPAPGf65+bH6ZPzp+OX8cfTnr4Px
I/ubqD+u/Wf7k7A+2Z9F/WXCn/af7O8q2f4uIh/3DzPxRs5f/m/9cYwHyPwF
pOs12f+1zv44+vOEP+0f2R+H80PrYzyA/+t2fiJdEzzf6ASvNjrBu41O8hF2
TfB85E/rk/0/dk3yGSgfpRM8267J/iqjE7wcxt/huUYn+R6o7/Iddk3wfpSf
rh+ST0D5KX+SLzE6ybcYneyPMjrJJyF/On4Ezzc6wauNTvBuo5P9UWn8GuP5
yJ/WJ/t/7JrkM1A+Sif7Y+ya5FOMTvbPwPi7fITRyf4xqO/2X9k1wftRfsqf
5BNQfsqf7J8yOsm3GJ3sjzI6ySchf9o+wWcAT3H4ScGucX8OwXcCu8byBN+w
8gS/MTrBP3L4QcHKk/051h7ZnwP9dftzEN+y8gQ/svkh+EqNlSf7m0wesr/J
rnF/E8GHrDzBh2D+HL5l5Ql+UrBrtz+nMb4T2DXuHyL4hpUn+I3RCf6Rww8K
Vp7sz7H2yP4cGD+3PwfxrSR/Y/worafG+IrRCT5G5SH7m+wa9zcRfMjKE3wo
sGvcf/Sf+rs5fznnb+f83Zy/nPO3c/7of+rv6vsPM/uHUD5KJ/tbUP7c+Ofk
p/b2/+pvZ/YXWfmcv8v85cz+GeSfmx9an+z/MXrO3835yzl/m+x/CZn9LyGz
/8euyf4N5E/r5/xd5m9n9rdYfbK/BeXPjX9Ofrr+yP4qnD86fmR/kZXP+bu4
v4jwp/3L+bs5fxn3/8T3ufHv+cb3pyX7MxyuI70n1NffO/K+tm2QbvJ8f8nH
Xf7UcUm5QtbPFfXrFisf+af9qKPrvyfKKv/+wP8doCd9EPl1Bv4dbf3KtdEH
T/nRrV+Ykd7ntm39uh3UT/FB/F8I45jOL4z84cqv77dBwt/kfXpllV/qP45H
vHbv27P9V8PhfXw4HnOX3vKVz89O+HFsL/nD8Tqdf/9i+fCzUx/vaPz/cN5V
d21x85vQ/k5Qvy/w3xDoa7wfbsUxu5zw5FkJb+/U+fuXdkvjs3jpg8UXeqZ8
Thu8X/yWD1545sY/p+f5zn/9aus7J6b3E87oumP5xuCEh0f+zyf/9OOd5l09
MuGliyftt2jm5PT+zIkfnjBj6KXL7PsQC9/rfMt5D6b5iPxTviW+7za937vj
MTud9ZtXtgX+KR64sV4/2Ys+8P72KN9Wdo3vCz7se5Nue/fwdqG9XP9g7nnT
P3t2ep4n1OVP+Ywof1q/K4dM2+mN9fH7VOl9yBv9+iuvj/8bjv8v1lhfY/89
f6OT/1+XP83fq/X5S/Yu0tPzFccn5aP3+cUz/fv/Ja3fX/7miw9dfGhT0U6u
Bz148g+vHJzisaahn8j/avJ/6+OT1nfnuvzpfcux/aSvYvvtbH0X9fbfgfVT
K6r80/vhO9Xr7wHzk96nPGSfty+6pexo9GePu2nRU9NS/zWu0utTQB8T/VLi
9eqK/uoK9btB/XdA3/QBeloPoh+QX1h7+cRvmJRX+YYBP5Wnqn+TvPPuef/Q
h/t/CPosrZeoPzcCfvqj7z+F8uEenf+TgJ+WV/opwC/2a3VN+/d3kDfK/zq0
37HAa63/RMPyA6B8ev+wXn9UGb9U/oJjf7/fvlPS84Dv454r19q/Nig/adq9
3zvyuDQf48au97tOv3/L1s94uG6D8gve7r7wljvS++EvaRm741Ozl8LzmvzF
qB+TvQ6vbHHYx1M3Mzp+/wLLIz8tr+sL+aE8KG/7u06/ePKm6X2g+D74yD/1
d0f4vkjT1jf88ufj0nifdNDgwzp/qZmWR37joXwL8Jsr8uj6QXlnzztg7NFd
kz7deNkTH97ZmvZPdYPrn0P5OF4p3sfvg+i1rp8SyhP/BfRXk9Un/mKbXqO/
qf6Yzu924K8NF39P+U9v6A92LMD/M7r8m35CfxP9UdR/6o+tqNRH/8vpF+Mn
/nGN+cfxf6HNP+p/9DebKj/vzx0r/p5ei/42/TQM/EX0J3W8qv1rBX7oD/aF
90MnfxL9OfT39HszOn4vg784DfzJ5o+r/ib6c+rv6fUr4g/a/gTwF9WfXCrj
MxP8TfW3Wir8V4L+65HOV4C/d6X4c1pf/T2lvyz+pK5P9De3EH9S6T8Bf3MO
+Ks3gj+r/pa2P1v8MaVvJv6cyr8Y/D3157Q++nszxJ/U+huCv4n+ZFN9/pK/
ORf81eahVX92H/Dn1N/T697gD24I/iL6k6uHVP1N9OcGg7+n39fQ8e8A/uJU
8CdvAn+TxLfoT2D8Gqr1nT7F6za9Fn0B8bOL7+yaxO9Q3sV/cO3ie4iPHT4B
+sXFr3Dt8AurT+Jbo5P4HMbXxd9g31z8DfUdPmHXBH8wOolvrb8kfoP41MVf
Sf7G8XkuvrVrEp+a/CT+tGsSn9s1iT/tmsRndk3ie6OT+A3G38X/OfwC9K2L
/+2axK92TfAPmB8X3xqdxLd2TeJ3uybxeVo/jeNzq0/wDbsm+IXR9Z/5Z/F6
QFEtn/C5SB8IdP2Z/jM66j8p2Mb4afkWwi/6VS/A9y2SvPE64Qnyn4vfoX7K
RyH+ieUb+6/Of3byVOVP8sr3PuAav6eycVGdPyy/M1wne6nX7Uj5fv9484qu
J6T5QP03Hq6xfHHwcQ/cusMa30M/5pQbJl/+k+R/yrXiOFj+X8vXO2PU0+m6
3/on33finx+D5yHpT9R/cb0PKarlEz6J5ZGfllf5XgB+/UUenT8nb308Btg1
fs8Z9dUuK8/Z7e5lyZ60PfTKqac+lfL9Mf5dj5ZHfuOlvK4P5DcM5EF5h0z8
Qc+ek9N5pxj/pnx8N7geDOXj+A+F8Uz6Sa+bSXn0d0j8g/rB6OhPkfi5YPEz
+nNNlZ/3d0j8h/gdyJ/8KcwPybozOuKb6O+R+LnMxM+Bxc/qL2XwgcDwAfTX
5N/qq7+UiW9KFt+ov8biR4n/Qib+K1j8Nw38NYx/0Z8h8Utg8Qv6SyR+Llj8
jP4aie+MP4nvnL+j173BX8L4Dv0lgi+UDF+Q+LrIxNfGj8TXZSa+Diy+ngr+
GsaP6i9l8IfA8Af01zD+Jf4J/W8c/+wM18m+E/1kdI2XWuC6Sk/2JP4nf43k
F6D+ALhO64nge0ZffvSJZ3/qa8m/itcpfy/5AfDnUv+ivk34x67xGvW59eec
G47caPnYtF+TfB/OrleIPDp+y6K8Rj+s9Zrjlq3x/dpo/x8xeeLzlPzBr654
9/SJb/4TnsdmiD/S+rvgtZ1f+e6H3YH/G1A/7QdD/H3a5j9778Kz19ifeuvw
9QYOTedjW38258fbvJ7KY/wa1/sw4J/Ot7bV5Uv5RnweYnw5IlTpaf9FjF9S
fiE+j0mfnfV497+NWNTJ4uMD9xx7xG8PT/5Bffx7DDB5ML6P+ij503H80/6d
OH+F0TG+i/Flkhe//97riasP+N9vLrfvPx8wv8uk3b6Rno84Pyl/EOf3w2r7
PfaF9pN/GePLNJ6Y35m775lN/xq9Bn573oKvH3jtGuu/Pr8vwPwk+xjnN+2X
ivQ19tvW5+fDUsc/zk9a/yR+Mrr+Q/wJ9V18AvQBRZXfQtCvLv6E8i5/Avxd
fAV0F18BfxcfYv8x/gP+Lv6D+i5+NjqJj41O4jPAg1x8YvVJfGF0Ej/CenPx
W1Glu/gL+A+w8hJfmfwkfrL6JP4M1fZdfGJ0Ep9a/0j8adckfjb+JL4KVf4u
vsL5smvcH0PiP6OT+M/oJH62axIfGx2fd/wn8RHizzY/BH8GfoivJ38k/mO+
tCvQk34h+UXgn+aP4Pd2TfB7HB9rX/BtK4/4Nuoz6V9RpTfb+CH+Lviq1Sf4
alGlp/GUeKtg+LXgz4CHOPzZ+CP+LPGiXTv8PeKn1P8Qfx34J/0u+D31fyRe
tPKI30s8ZOUJvhyq/p3Dl40/wZdh/DuGav103orkN4yO+J7Eo7UMvm/tE3zf
rgm+D+0nfF/wa9CnaX1L/qOo8nf5D5ifpH8Ffw8Mfyf4htXX/wx+G6rXiN+6
59OuSX7f6ot9B/9hAPAfBPwd/g10xL/7FwwfRn8i/rv8APavCcYjMPwa/QmC
fxod9ZPY95LhywvBnyD4cFGlJ39lPPgz6O+gv4D6Bf0NxMfFvwoZ/Bb8hwFG
HwL+AuK36G/g86/+Sgb/roF9B/5pfRD82+jor+D+DvR30J8g+QGcT7vuBv4M
4tcEvwR/wuHTRbWc219q5Qk+7fwVtn+yqfLz/gzBb3P4stUn+LLRCb4M4+Xw
daMTfNbGj+CPRif4oZUn+LLRCT5r/Am+Wqvyd/ip8Sf4stEJfprDF00+gk9T
f0fwR6MT/Nr4E/zdyhP82vgT/NX4E/ze+BF8Ftp3+GwOf7b6BF82OsGXjU7w
eaMT/N36Q/BDo5P9ycaP+O/Wn6h3Vpv+wf3VTZWfx0eGAV66K+Cpircq/ycA
j10OeCjit8T+W3nEY1FexEM7CV6q16cKnlpdv8l/2xrw2MMBr20CPPRawEsV
T/2o8nwnvHVnwWO1f5MArz1A8Eqdf8Uzla54qMrfEfBSxUPt/V6Al84RPFbp
ewBeq/pB5w/xWtQv7QAPVrxyRaX/Cc/cVPBQlX8DwEsVD9X6ipcqfZzgsSr/
q4DXon44AvDaq0W/aPx5OODBiIc+AnjpZoCnIt46VfBYle8IwGsRD1W8tDr+
vdL53YZ4a7InzYDXkvMpufyRlSf5E6OT/eHGj+RXUL+06bU8z0W1PZcfMjrJ
/0B84fJfwN/lt4xO8ie5/IDRCb5v5Un+J5c/sf6Q/EeVv89v5PI/ufyGtU/w
fytP8kdGJ/kBo5P8kl2T/JjRSX7JypP8iNFJfi09L43zJ2l9N86fGH+SH4L2
Xf7H+JH8j/Ej+TMrT/JjRifn0+yanK8L1fLu/BXokwHAH887u/Njxl/8lxr4
L8afnA8LVf4cb5V/PD9ndHJ+C+JXd34J4nd3/sjkJ+fLwD648112Tc5nmfzk
/FWKZxqfr7L65HxaqLbvzi8ZnZxfs/bI+TS7JufrjD85f1VW+W8B/JP+J+fH
jD85H2blyfkwq0/O19k1OT9ndIL/43rH81fWP5IfKKr1XX4D+Lv8BVy7/AX4
9y6/Y3SSv1mjnw3zA3ZN8G+7Jvi10Ul+w65JfsCuCb5v8hH83q5JfqOo1nf4
PfgPDt+2a5IfMfkI/p3Gv3H+xOQj+R+7JvmTHP6f7F/j/JHxJ/kBo5P8gF2T
/IfxI/kNmB+X3wD/y+WHYH5c/gf8a3d+MI2v/GfOf5fV8u78dwB6k16rvWbn
oxufZ8/mF0KV7vCDtP7AXpLzv9Qejwd7jeer0V6S89FWHu2x2KcS7BPw3wL4
p/0vk8CeuvPhYI/J+eUS7JPRZ4M9xPPLF4A9xfPtao8z57+tPDn/XVb5u/Pf
1n5je5zOT+D5aLSX5Hw8zqdddwN7jee3yflcsI/ufC6Ud+eLrT1yfjhU67vz
00Yn56eNTs7nIj6L50+tPDk/atfkfDGMvzufa/zJ+VqTn5yfNTo5X2x0cn7W
6OR8qclHzidbfXL+FMbfnV9GfBrPX1t9cn7Z5CPnb+2anN+m9pzkB4xO8gN4
/tjkJ+eL7ZqcL7b65Hy20cn5a6MLvl7L4Oto36w+4lVNlV/Ck9j+aZI/N7ri
RRn8s8bwT8GXawxfVrwogw8Hhg9vDXgV4uOI5xB8s2D4ZhPgRQRfLxm+js8f
wX/LDP6b4uPG+K+VRzwJ8SKSf6ix/IM+fxn83a4J/l7L4O8Fw98Rr0J8WfIT
RSY/UbD8hODjgeHjxH8E++qeL6jvzpM22fg13p9i65PkpxBfhPXs8EW7RvxC
8FuITwC/vaqA8XT4a1Glp/Uj+qJcK/7cY1/g7/BD4L9Ntf5V6bwawa+Njvi1
4Kshg68aP4Kvwvg7fBXGP+Grgu+D/A7fNzri+4JvGz+Cb9cy+LbJT/BtaD/h
2/K8FQy/Ffw/VPk7/B/mZzXQk75F/Fn/GT5K4kujC35r8QnityT+KvCa4Zsk
PjQ6iZ8Qv8P4yMqT+M/oJH7KxR/Gj8SPVp7EJ4hvwvg5fJPGWyT+zMVnCd9u
HF87eTL4sF1jPEniSytP4ku7JvGx0Yl/aPxjPbe/0ujxH/eLJ3tE/K+cf2HX
xD8w+Yn/mPO/jD/xn+ya+Ec5/9HqE//I6MR/MPmI/2n1iX8B4+/805x/nea3
sX9q18S/Mjrxz6H/zv9K89vY/7LyxL80/sR/NP7Ef7T6xP82OvGvU/uN9x8D
vun2F9k18Y+s/8T+p/Yb22+jE//O6MQ/Mjrxb5I9bOy/WH3i3xmd+C85+27j
S/xDkN/Z/+r4e//R5CX+b6jU9/5jzv+x9on/bOWJf1Rt3/tHOf8P2nf+nZUn
/l3OP7bxIv4v+FPufIHxI/vXC7xm5+fI/nq7JvvPjU72l0N/3f55o5P95zVW
HvmR/fdWnuzvhvFz+/ONPzlfYNdk/37JyiM/cj7ByZM5f5jGE84fkv35MP5u
f77JT84XWHmyP9LGj+z/MzrZv5fGt/H+Thgftz+yqNLd/ka0f7h/0fiT/Z1G
J/sX0f/C/X0mH9kfCv1z+//QP8D9o8af7H81fmT/KPqnVh71Pdk/a+XJ/kho
3+2PRP8M939aebK/M41X4/2d6L/i/lirT/a/Jv08YfKxd35/je9N4//Mn+89
b4P0PpRmuG7bY9/tn/3rAKivv3/Hd5v373X6oh2BnvZPH7ronAXX9F1u/teI
WU/PWDImzU/kv8Z5gWs/+T1UVulDgH/K3zbNX9D31Yu2DtXr9H7cWL/F9qfL
tdEf2H/G5z8amb5P2n34Oed+e43v787aYodOJ+yVztvEfNbLMI4pvmo6dl7P
oZ2TP3vYtbPnvX9aJ3v+b/v80a9+83fJn94TxkPGy+rH8un5vr1+vRzn0eSf
9mDzoNkzEr726TEnjDxw6ABrf/WZn6yH9P7zs49965mbTmlv+vv6eXsPuuil
lC/rN+tXA3569XAb3zh+aTyemPqjC3fq29Ho2y1648nvTEj903Wr182wHm9r
PL7WnzFwjeXj+k7nzXA8cH3F/01M3iKOTwHjE1h55LdKyqt+k/Gm8jh5F7fe
dcbALlA+4buxfA+g6++d2qi4vgq2vqRgm85DM/CbJeWVfrTwQ3lsfF6uynv7
Wx22PuhPyZ6OXt5y5aAvp/zbGLnW+rOgfBz/Nd6/UB/fNb7fJtdavwblyfNj
472y3q8UX5QN9VV6flHfbSL6QOujvlB9o/I1gz5SfQP6x+jyn/A10HeN9WFa
f7eKPlD9ervoC6WT+bX2Vd8w/TwG9J17/kDfNVV+Xp+ovtFreX4KeH5MPtRn
Ol56PRj0zQLQR+eLvtLx37KhPnP2Beyfsx9Wn9i/nH1I/mpj/WrXxH4anehf
4OfsK+gX5x+YfMR+GH/iP1h9Yl9S/N7YPhp/Yv8w/kT7l+Rr7B/YNbH/qbz2
qzKeab3E9ZfO+6J/EMtvD+OrP5v/olo+zb8UbGP8ZH0HWN9G1+dXn3+Ut75+
T8T1m7Wf6TqOL1zj92xSecevsf508igd5R2z9ZCJez+T9pOMrl9vDPSNjT+W
r49/z11BvoTP6fWqNcd3jfKD4Xkj+gfnx+h7wvNM7FeN2i/QJ02Vn3/eiP5F
/8XkaYLnGeMDGZdEB32C+obYrzJjvwKzX2KfQ8Y+B2afnb6I/1afPB/0H/nJ
+rJrXF9kfqB8Rzsfo9dVOj4va9ibxv5lwheiPwX8kn4k/kWK7xZfesfQ1rQf
r8ewcdNfWT/hIbdEf8/4iX8I18l/OCpe43q2/gz78vR7DxiR7O+o+Dz/P86+
O26KIuv6IeegkpMExQAqKGBCuwHBQDQgBtzFjGFdV1HRVXnAsCqImFAxgJgQ
RDGDoN0GJIkLCgiCigiIooiS87c7fc8t6tTcHd9v/pnf9Kl7q7rCuaGqe5y+
bL3r7/2kPZgfPbL2Km7wl8Plm/if+ivgB8UN+8D2P/b1Of/K8F9Vv8Fvqac/
5Dd3v7lPwM98/8y/VH/AvyQf2C8nn98+Uf+2JH1B/oL5KVhPBfwPjp+ofns/
VfIDivP4Gv61lhf/TfvP8N/0t+G/cf9o/cKHWp79m5TmU/bt/FfxvxLT/8rP
r7Gvz60fw367/iP7bbRP6zf8e6dfxqOA/2P2X/71wOulXvy//QM3nw3/kPTj
o+s7tfwXw37pt+GfBP2D3+NpPhv+SSH7rPr5fng9Gfa7kH+h8oZ/objhXxTy
r1TesB+xX1+Qn1B5Y/3QOG1NrPxK/v5z66s32cs+ZE8l/5JS/sWNJ9lDtt/G
/NPybI+5vUZ+rpD/pOUN/0FxIz8T+eUD/8KMz+V+VL/hHylu+D9+/jT0/2L/
d+DfUf1BflJxI7+q9Rn5t9TXH+Tf9Df6h/KHqY8H+UHFjfwgyQf5VcKD/Gnq
/w7sH+dvOP+m7THso+KGfdfyhv2m/gzsN9mXwL8p5L84fsyfP4tJH/kLQf6Z
6g/yz4Tj4+aLlZ8Nxovuz7Cv+tvgL9Vv5AfZ/ilu2D/n79B4G/nL4H6s+MDI
3you9iUqYF+4f1We+arI+zg++d/xY+C/uPvLP35RAf3U/uYk79p3aH7/iONL
xZlfg29ub/75nfBvi7+M8VHc8C/5fout/jD8T7ZfbN8TLmfFZ7fn6tuI8snP
Rxw9v/IZ7v2UW3P3+yXhjv+ofDLI1xdR+WSnry866fQvztlzqfpbydzjB132
zBh3/pd+J1Q+Kv7q7VU14ud0nY26afdn7Ts4vr71pdNGNHLPDyb3jH3+9d1z
3PlyKp+QPpHX59PQPu0/0pdQfdFnfvmE9EVbezza+IThaq/Rfm6f6qfy0ern
J28rf4ryZfLMpX+0e24f518/7f9OVvnlo+2dH+h97Y16flfkXfw2Wn7Dz6by
Iq/rOWk/Z+XfujRzz//OGlj+9w57lK+SgSNnLR3W5ReqX/2d5NL2d24ds8ed
v77VL5/M9vVFKC/2LSF9EbUn2eG39z/r7ZBrTiz5kOJZeef/XZLT78Y/6x+3
/tfk+lOfx5H2l1T9Y/zygrvxp/LJal9fdILfnoTaGxUd99/fQ6h/3Pyf5f8W
+SHU/+7+Mnm3fzPL/51Q+ejgu0fV6jPI3f/bb00bNKCKs6fv+L+TQ/3yUY92
P03p8KyeT05O7vLins6Xu/xMF/mN+dfTLx89P/TEao9t1vPRye/re41fv4/j
n0dufWDKv8pXgX1Mvvjij93z27r4Zeqaa7r+Plnj9aTrBzOWdbrTnRda5JdP
Roo+4CiP9pG+6A+/PckLfnujovuefXH6wgcUv/KKm/esqefm34HfXbyuSUc9
Xyb9654fOab85zMb7dHnp5MjFxzx8JCJjp/fkfK4/+a+vojKJ8f6+qKr/PYk
id/eqLhvrb8ffuxdWn+1MyvOf62Ma39V/3dC5aX/9X0G0v9l9f7od0Ll2V9M
snjazQ/KN0o5fBB/6/MUSVbe8cuATpeUu67PStM+TW7yRqkpLfR9UUn7T656
aVgLNz8+J/vVaMXbZ3661/On31RfMnhZTfUXAvv1FNmnTL/zz0WfyrN9ot+J
3I/qF31cf+Ljbv2/l92vi8fJPsn9aPvoeaLkk9k1Si9u7eb/t6fM37/tRPXX
BXf/f/b+g2OjK8/7SfM8fL4V77/15Z1/Xn3KDSX6jPya6q9O+pVvkjl0PneY
//yTyLv4g96HnXyQtVf7b3p2v4rz+ylubtZ50IK3VuD9qQmfr6bngaR+F9/M
8d/PKvW7/bes/jqI/xJ+P88Nufr1vG0ynM5fz/Gfh0xuzdqr+mW8FP8uG0/t
n6x+x698/p7eVy763fuvZbwUL5+NJ92fxr8JPz/w6TfHrT/9ADc/Z+R+7/X/
g7n1rvNJ1r9rX4OjRnR+6eY/4D8nDXO/a5G8W38Znzj/oNelH3X86s1vIh93
/TuB+OdM4p+s/P6k351Xztqn75eW9rnn6+R+FZ+e9Yf2T1b/BsQ3SbZf5vz/
4XVnjv2yveZ3k6y+kopn5Z1+uR8XL2f9ofZX+svpn3rD8udOUT6R8alJ+iuQ
fvd8eZZvbKbjn/12+QiyB9J/7v/3pD7V/0DWnsSX30/1y3gqnvW3vt88kf5S
/dm3xncJn7/j9tE3n9cL7FeXb7vv7LJA96sC+/QZ2R8qH5E9COxPxv/Of69z
89G/1z99hhk/GfZF5dk+Nfb1JVQf7Gfq487+Zb91PyiwX0+RfaLy8v4P/b8O
8Jfi9DsZQf/vQc+rirzzP+l3ws+30vPCgf2459FDyk+62Pm3wr+K1/H/LyKw
TwP98gnpi6h8Upf+f2KatAf2g59vbuk/TxvYH7HH1D/ueRb6v4bAvn3rl09I
H/ifxsf9/8P7fnsSai//n4PoLyL9+js5jP7/oa7/vH5C9krkq2t8wM/3t8rx
yVw8vyv8tdf5Sv930knKA/+h+py2256upvb9+ntWjdr5uYvfr/N/JyulPPBj
Lms8tMcGfR4/sB/Z+WEtn5yd+72F+EmfBw/s01l++YT0RVQ+IX0R2iP5teQ4
v73RGTl9+v77wP5k9qYJnj8W+6P+brT88cEtj5v7scqzfaPyCfQBp/LJYl9f
RO1JevrtjT5pMvKqP47X95Uk2XjuofHV30nql5f+c/5L9tudf5ogv9F/E/zy
Qf/Tt4yfvp9I9Lv+FXui7WP7I/xO8UvA77GPO37n+OvPxUeO3zm+YfvD+Tm2
j6JP8fzxkfN/DPuo7Wf7SM8LWvwX+7jjP7EvKs/2pY7//J5lH1Se7QP584H9
q+s/rxzwH70vMLCP8N99/QF/a/8Z/E32g/9/W9/HGdj3Tyg+MexfVMD+af2G
/aP7d/ZP7ENs2Qd6HtnyDxRn/0Dsl+Jsv4T/tP0G/2n/MP+JfdH+ZfsifK71
G/ZB5dk+iP1TebZ/wn+k3/Gf2MfUso9yvypv8Lf2j8HfijN/i31PLPuePz4J
7F9UwP5p/Yb9Sy37J/YhtuyD+AfaP4Z/oDj7B9If2j62X9m3i4/4fCDl4xLK
10WUTwvsD+XjkL9Sed5fInsTxC9sfzj+oXxeEF+x/eH4hvJ5EeXTAvsz2c/H
JZSvM+IfN/6UTwO/cH5HcebP6X4+L+H3B1E+DfzI+R3Fy/v5OuSvUspfpb5+
558y/1G+DflHlZf8YkL5xdSv38VH/D4kel8B8lfaf8P8fFtgvzk+oXyexjeU
30p8/c1Iv9t/+JbsN+XrkH+MKP+oOOXT4J8oXt3PxwX2/wY/n4f8ouIN/Hwa
+IXzOzHld/T+KJ+H/JbjJ+IP4nPkd2LK73D+KqX8Verrr0D63fP5n/r5toTy
ccgvJpRfVDx/fOTeD0r5MuSviP8dPyIfB5zjkzP9fB7yWzHlt6h9+5N+3n9x
9lnyqyqPfB7lHxWnfFpC9jqifBzyq07ez+cllO/T+6b2K27sr+j9Gfs7Km/s
r+j4GPtHKm/s/yhu7E9R/cH+Dds/xdn+GftTZnzD9s/Yn9H+M/YnVN7YP0p9
+WB/hfg/2D9ReWN/SHFjf4Xtl+Jsv4z9JWp/sH/B/E79F/B77OOO3439Kbbv
irN9N/bfqP3B/g7VH+zvaP3G/hP1f7D/pP1j7J+pvLE/o/dn7E+ovLF/pLix
v6LtM/ZPVN7YH1Lc2F9h+8X7E2b8YvA771+kvv5g/0n7z9g/U3ljf4rtO+/f
xL58sP9G7Qv2d2h8gv0drd/Yf6L+D/aftP+N/TNqn7OvlE+z9kdiHw/2X7T9
xv5O5MsH+yNm/ML8b+wv6f0Z+zOKG/tLqt/Y/1F5Y/9GcWP/hfMvhLv42dg/
UHljf0jrN/ZnqP5gf0Xljf0T7R9jf0Tljf0lxY39B+q/YP9J22/sL2n/Gftj
Km/sn3D+kPS78xnG/o+239jfUf3G/o7KG/tjihv7X4ob+y+cf+H9B70/Y//A
tT///pDWb+zPUPwS7K+ovLF/ovUb+yMqb+wvKW7sPyhu7D9R+4P9Je0/Y3+M
80/a/tTP11n7J6rf2P+h+wv2d5x/mH9/h/Jnwf6Y6jf2vxTP+Listq/Q+Wkq
H7X5becTNw9x8Qfbh6y8O7+X4b+y/6846YtWPx0d1bOXy4+w/SB9CdWn+zPg
L9KH+1f9heITKq//T6/tz/2uSLjjx6P88vI+S2efs/Lu/aP4Df+AyuP/r0n+
D5IvqXj2f1duf0r+b9rdv/wfNXAqn5A+/f/qkp78Xu+P9NuTUHv/pH67fYX0
U/mgfX+2/zB/uP+y36uo/e79ffQ7ofJoH9Xv7MNR/u/kCb+8PI/i4sPs+Q8X
f9HvhMoL/9n5Lfz2/eu9zpf9c/Csh1q580XZ8ySbVT6rr4LGR9nzhfR8+CUu
f5u119nPTN7FP9Dn31959f9JX0TtSSb47RX9v1P/uf2/TJ/Lf2W4i4+z9wM4
+ex5dSdP5RPSF1H5pISvL6L2JCX89kZnF9i/QfyA+XsO2ZdMv7OfMl9SH3f5
Xyof5L/+nP1gvJ6Js31gnNth1J/+b7yeiefn/73qXzik0uZ5tv4e89/v1+wY
538wfvnVZyxactpGs/3H7fv3Suc0OsqU77Wo85qHd8w02yf6TTzT39rUX6/K
CTM+XNzQxKV95v1L+8z7m1b+9iMGj7D77+Y7evb5S/yD2f7iKz8s88/+tU35
++9+5od+v+j/JVnjZ+IyfqZ+ab8pL+0371/ab8pL+836L3/z4K9bHF/BlJfx
NeVlfAvpN/HisVOe+3JPIxO//8qxj7zVWN93HOCvflOqyVlttpr903hsq9rz
7znRlO9/1n4vPF9mmykv+s35k+lvb+q/vvyKGaX+0dTEpX3m/Uv7zPof+PKt
q684r7wpf8pNT7/369zfTfl4/rL5Pw1qZsofV/r3HwYfY/OHjJ+Jy/iZ+qX9
pry03xwfab8pL+036+87ZvCx7Q4qY8rL+JryMr6F9Js42zf6DuxT/vioLMnj
E9o/1mvYz9Qv585HcPyS3z7WI9w9X/Xn4iP3fNXWMysdvrjTUm1/xqfO/+ru
/06KzvLKC385/zCTd/nT7v7vhMpHAw74ttak9s6/eXLsPz/scu1qlc/4z/Hn
lfetK1P/wyWKZ/qc/5fxsTv/1k/Kw/+s6+uLqHxyrK8vovYk1N5oz4L/2if9
v1Jpv/v/0uE5/XXUv876x+0/Zv05R+Wz9rj4oLtfXnC3v0blkxK+vojak1B7
xb6upvqLSL/zb6m8jJ87P5KVd/tr9Du53i8fFXW+/uSX9qxy9ef4bK//F/J/
J3tO8spHta5u/N7yMi4+m3bMHfW7LHLxzVT/d0Llo+LDRs6qdaHLr13+w2Gf
ri92/vuAHP+4+d12/L1nfDHEnW/M+Mvl9zO+cvmbI/3ygrv5T+WTJr6+6DK/
Pclgv71iHzSfltRbeNIhV3Rw8W3Gz001fzk8158ufz+p7G8VvjvL7U9tOa/D
XSU3l1T9w6S8/P9DcqzoA07lk/G+vojakwzy2xsVHT72iHq9NR+ddJ808us+
Xd38o9/JnsO88tL/zj/L+nOv9/X7vxMqH9iH/Pwf2A8TN57PJJz5O6g/KSBv
6qd4Rc8v+Pxj338JP16y9Jvto3hHccS3FC8F8hRPWPrN/qd4JcApXrLaZ8pT
PGa1v1D/m/opXglwipes8TNxisfC8fXjFat+U57iJUt/ofEp1P8mTvFK2H4/
3gnwQX68ZOk35+dlfrwTjH8TP14K5CmesPSbOMUrAU7xktU+U57iMav9hfrf
1E/xStA+ipes8QtwrO/Ij8cCeYpXrPoDedJvto/iFWt8CvU/4YH/r/3P8Qnj
uG7hHH/kx/c1cY4/gvpb3LaxwhHOv2M848v9TXy/2ruK79zE+1cOz/zTQ035
YzpvGXL/8p2mvOg325/pb27qz/ispolL+8z+k/aZ9XP+h/H+lF8M+n/SFyeP
Xv+Ref8Z39v3J+Nn1i/jZ+KcHzPab8/frP3m/Un7zfr3+cuXdy5a5eJbY3xN
eRnfQvpNvGjqsMnnFJU068/4soWJ1zzpyn+9N8qe/xlftDHl2+Tik8qF9Jv9
m+k/0pRfXf2TB8qtaGDi0j6zf6R9Js75H8Y5vxj0/+JLP5lecp7Zfxnfu/y7
MX5m/TJ+hdpv6uf8q9F+8/6k/Wb9h/ytR9lSG23+lfE15WV8C+k3cSN/xnEW
5a/s999wfMR6OL7KvoP8m8ob+TPFjfxXofwPylv5G22fkZ/T+o38GPFfkN9S
eSN/5fonf35K5Y38nuJG/kdxI//n5m/+/J72n5Gf1PYb+SuX38mfvyL9Qf5N
22/k11z/5c+vqbyRnyT9Qf5RcSP/VSj/o/dn5G9c+/Pn59z45c+Paf1Gfkvl
jfyV1m/kp1TeyO8pbuR/XP3583/Ef0F+T/vPyE9q+438VeLrD/JXqt/Iv2n7
jfyaG7/8+TWVN/KTihv5R8WN/f8CuNt/MOKTpIC86n9CcKwfigcCeYonoifZ
/vjxiKXfbF87P56IHif8ej8eCeQ5v2boN3HOrzBO8YjVPpVH/yC+pXjHan+h
/jfbx/knxikescYvaD/w8n68E+ineMCqv5B+c3woHrDGp1D/m/IUD+jzZeCP
YX48Efpffjxi6Tfvj+KJ6GnCm/jxSCDP+TVDv3n/nF9hnOIRq30p4+j/Jn68
Y7W/UP8Xar/qx/qE/aZ4xBo/U39lP94JcIoHrPoL6TfHj+IBa3wK9b/ixvkw
woPzS4rTt2W/zPjDOP+luHG+SXHjfJJrX/7za4ob579YvylvnM9S3Di/xu0z
6zfOLylunH9zeP7zTdT/wfk4xY3zfSQfnF9R3Djfxe03549x/ovbb+o3zrcp
bpxfU9w4v6a4cf6P9ZvjY5z/cveX/3yT4sb5JNf+/OfXFDfOf7F+U944n6W4
cX6N22fWb5xfUtw4/6a4cb6J+j84H6e4cb6P5IPzcYob57u4/Wb/GOe/uP2m
fuN8m+LG+TXFjfNrihvn/1j/n84/0be1P0J4WZLHJ7Q/uK7ffr7IOj8U+3gd
wjVfFZzPOs7PF1nnqyLrfFV3P18VnB8b4OeDgvNDlE8KzpdRPso6/6T9Y5x/
ov5z508k/6Y4n4+jfJR1fkz71zg/pvqN82OpdX6M8lXB+SrKF1nn6xTn83WU
rwrOf03y80XW+aHYOj801c9XBeezGvv5Iut8VeTjbv5Svio4P0b5oOD8EOWT
gvNllI+yzj9p/xjnnxTn80+Sf3Pzk87HUT7KOj+m/WOcH1P9xvmx1Do/Rvmq
4HxVsZ8vss7XKc7n6yhfFZz/MvanEwvXfjVw4/yN4sb5m7TA+SbWn1q4cT5J
ceN8luvf/OdrWL8tn/98l+LG+S5un9l+4/wRt79Q/xdqv44v3l9Q4Pwbj5+p
3zj/pbhx/ovrL6TfxI3zcTw+5vw2zmcpbpy/Sa3zN4wb55tYv3l/fD6JceN8
luLG+RrWb+LG+S7F+XyX0b6g/QXOH3H7C/V/ofab7ePzb8b4mfqN81+KG+e/
uP5C+k3cOB/H4xPg1vksyOG70PMTjBvni8h/Cs7PKG6cf3F2Kv/5KPLfgvNF
rD819ec//6O4cT6K22fqN87HKG6cr1LcOD9D/W/3r3F+jMfP1G+cH+L2m/1j
nC/i9pv6jfNTihvno3h8zf41zpexfhM3zhcpbpyfUdw4/+Lan/98lOLG+SLW
b/afcf5HceN8FLfP1G+cj1HcOF+luHF+hvo/OH/l5m/+82M8fqZ+4/wQt9/s
P+N8Ebff1G+cn1LcOB/F42v2r3G+jPX/aftA31b+BP1h5Q9Q3srvpL58kP9w
958/v6HyRv5GcSP/obiRP1D7b+R/CuUXiB+D/FDs6w/yW9o+I39UKL9C+oP8
GPV/kH9R3Mi/UH4qyA+pvJEfSnz5IL9F6yvIn+j9GfkDrd/I7yhu5D/c/Muf
31B5I3+juJH/cP2bP3+g/WvkfwrlF6j/gvyQ9p+R39L2GfmjQvkV1W/kx1S/
kX9R3Mi/aP1GfsjJ588POf8uf37L5EfjfAfxkzvf8TjhxvkZ1p9aOJ9/eZL5
m87/sLxxfoP1Ky7nh5IC54dUns8PGe1LLdw438LtL9T/hdpv6ufzVcb4Be0v
cL7IjW/+80VcfyH95vgZ5694fBLWT/1vyhvnOxLrfMfTJG+cn2H95v3x+ZfA
f8l//kdx4/wG6zdx4/yQ4nx+yGifqd8438LtL9T/hdqv+vH+Uut8lTF+KeMF
zhepvHG+iOsvpN+8P+P8FY9Pof538rn3obn/R6BveX+aix/a+b/l/WyNSB6f
9dG8aZt6zm7izr8KoP239ZxLbjz4b1t1fDfnfjv7nel37+fonfsspPrd83W4
7tfv3q+Ylef3D1ZV+y6/FZ96+6NTGr7k3o/YN5m9bPiXTj7rv6ZU/3Jqh3t+
YeDoM6tsOa80ye+Vf6H3023x+yPJfrv51TZ73160VeYPv7+PvpO5G8dd1G0S
v99vr/gu99v9v9Ahwx57+fwxpfT5yUNzv3dQ/7vzE9lv9/+s2W93viObT44/
yr8456mDfnbvB328XNUHh+7r5tdxu1rPG9nZnU/h94vP7Xhd0drebn6WuH3R
3097wsn3Kv/4XzfXdOOT6f9Wx2fVxhnx+bXc+fwrtv5+zYBfnf91/faLxxw2
dHtSWvDlG6qOu32Gm585/Xv9/032vtvPVH/lNy76+bJ/1yb931P7OirO729f
k2uf84/5/69u+HK/fx+3slyK9p12/HlnvH36XvFDrv0uP5S1371fdchPR/54
73b3ftBW9P9eZc9tfcObP7r8Kb8fvyg3fu79qln7nf+SjZ87v5Phbn8j0++e
r4lfXdqkyaduf7P2wpGn3nbLFv3/pVPnVxt89D/2ej9grv0bqH43v8vl9B9H
9bv8elZ/CX3+J6t/pz8+j8Y0Pu79s1Vz4+vOv/D/h41q8OKGO27cK/5/uW2F
Zoe5+FWvyzfxscUv2r7svcbfRb58U5JvQvLraf3WI7w8ye+Vv8r0pb4ex0+k
D/WnpTx5Zz/xvdvjryYk785HZd8uPs3wZowX+Xjw/lOq3/Ez6dP3i/rtq8ny
qd//B5G8W/9sX9rKb8g/6ZcX+dYk7/bX8Nt/f6zzTxt/9euI6hc3VXl6H3d0
FL2fm8pHa7dUuPasr13/Nq7Y/8NLPnb/D95EfqP9VD6Ku/91+stHOPkJ5145
+s4Hntf669H7zdvsHHj0e5vd+s746jDF+f8vqHxC+vT/N9A+0heNkPbAP6P2
Sv+59tP74EX/IYp/Rv8v0nLAQ7Vq3enef7/P5oXbJ5d3/EzlE9IX7euXT1r4
+qLL6P301N6oeNaPV121xD0fdXnXFr2q/sXF95fJb8xvKi/935L63/0/Bn6j
/77zy1v+i/Zfxl97IryffYHvLwbrk/zN6ALxxzC+5K9F8Pegf6HvD8L/i8n/
0/vDN/qH/M2I/FGD/5x9gb/m4wG/aP3iH0eWfyz8n1j8T/5mwI8tfH8ugb/n
t69JTPyt7SN/0rAvbv6SPxjBX9zh9a/Lz5E/l3zm+3v6/zTov2N9fzEa5fuT
SSnf34zIn0vg7wG/VPxB6F/j+4vRSPEn4X+d7vubEfwtzW/4/lhUn/7/gfy9
6FTx5zD+8PeAXyX+JMaf/M1ouPiTqP8M39+Mmvv+atZ+589G8LcQX8AfAw5/
Ts/n+P5eBH8O8uTv6f9D7fBwlz8kfzIp4fub0ZHir6L+wb4/G5E/l5QTf8/X
f5Cuz7K+vxjBnwR/kL8ZFfn+XPKE7+/J/3fUU/2VfH9Rxkf9qWx8nL9pxbfM
Xxy/qn4j/lZcfhcDF75Q3IjvFDfid5IP4j/Cg/i+UH6C+DOIX1W/kb9QPUZ8
S/UH8bnqN+Jv6t8g/lbcyE8obuQfFDfi20LxG+FB/KX3b8TnheJbxY34VNtv
xJ+F4vNC8afqN+IzxY34XnEjfvP7P4z/C+UvYk8+jP8VN+JXrd/If2j/GPGt
4kZ8q/Ub8bvWb8TnihvxueJGfoPGJ8hfKI7rln+W/Xb7v9m3y89l/ydRhXB8
lP8UZ/7LvtNp6N/LfX3wb1Lyb2Jffnmyx8Pd/nnWPnf+hu7bit+1fcIv5J+6
/CWVD/xXw3/W+sXvV/1X+u3F/5NQ/SVJv/t/0yv98oK79SXjq/d3lPxG+47y
y0elp1zzrzvrOP+W+W+u/IY8lY8W/bbf8nFvOX66p+R5rZZMcv4b/U6ofDR4
1Af3nflXZ78vPa/CO+XeXafy2Xx3OPNf+mPDXruGN1Sc/1+MyiekD//PpvFv
4uuLLvPbkxT77Y2G9H23U8dhzr+n/3OOiK+S1YM7rRx7p+OHSfNOPe+c6u79
IVn86/w/Kh/w375++WSir0/Gb4v6v8V+e6Oi5qNfm3ip+//pLP51+GX+76Sk
X176vz71v+Mn/Ab/UHnEP3p/RvzD/KD4Ft+fsuJn5Q+On8mfs+I/HX8j/uP8
nbbvKN+fCvaH8G3lN8nfs+LntED8nFrxs+QH0gL5AeUPzg+QvxbwL/ylAvFN
ZMU3Ej9GVvwo8V9aIP5LrPhvlO+vBfFvke/PWPFLasUv5C9Z8XNixc/kr1nx
XVIgvtP7M+K71IrvyF+y8guxlV+Q+DouEF8r/xjxdVogvk6t+Hq4768F8SP8
pQL5B+1/zj/AX7PiX8M/4XWi1zn+Efuu9bN9N/iJ5Mumvv9XlnD3//bZt8a7
1v5C7OPufC3n3438nt7/iD92VfuobEnVn/3e6/xVlu8n/c6+Z7/d+bJM/2bq
Xxe/d35k5987VXL+v/H/cKr/QWkP5p+0V/Ex1Vslv7Rw5/MzPtP/q5T4wuW/
M3vu7EeGl6L4w82PnS1Htf6lIv9/uOO3Kjm+cfs3nH9v2eG3u8YlZVV+2V+f
W7lklP6Oirae2+bixTfo/XP8ujo331n/B65/D/tv+9aoPMcvWXzp/l898wdc
fJDxoeOnbD26+dvrvsHjfz+9lMbHD829/cmTb3Tng7L+d+fnOb7P+MCd78/6
3/FjJh8pzvFdxpfHpj7u/v/9tTcvmPWvnkWa/z1wRv9HHm7hnu/Oxtftv3TI
ja+b38/m6nfvP+D9maz9B1D9zn6P2/bd0mc/du93mLz29eaTB2zaa/6f95/x
7U3+rxvfjM/c8wUZXlb1Z3y4WfOP2fi4+W/ET4rjOsWfihvxieJGfErxT1PF
+XyF+H8av4j/R/5NEF8RHsRXqj/7DuJDbb8R/yluxH/Uf0H8THgQHytuxGeF
4hO9PyO+0P4x4sdC8Vvk40H8pe034ivVb8RPKm/En4ob8YniRnxK8U8Qf2r/
GfGztt+Iryi+DeIr1W/Eh9p+I/5T3Ij/FDfiZ8WN+FhxWu+B/2PER4rDnymQ
f9b+yf//re79O9k3+zdNCXf8Yuwvkn63P2bk71W/kb/n/tH6JR7T8eH89jyf
z3B/isPfsvLvkl/V+o38auzjLr6ReCu28teSfyb/IMg/q37OP0u8qO3j/Lv4
26b/If466Xf5Ccnfm/6PxItaP+fvJb+s8kZ+OS2QX6b+D/LL1P8ufyT7Gypv
7G8ozvk9iUejAvl9rd/I76t+I79P9bv8vuSvdX5z/lr2P0h/sP9B4+P2PyRe
TKz8u5Hf0Pbj3Ab0G/lbjh8UN9an4sb+vuLZ9/KI7DvV7/w3Xy7kn+zbja/4
X5q/5vww+RPgR4qfqhCOj/v/cit/Pcn3J6z8J34H/ET+TJBfTn1/wsoPRz7u
/Dux3+pfcf6b/IWAX8jfCPLj+/r+ipW/TQrkb7X/OH9L/kaw/uGvFMh/a/8Y
+e/U1x/kvxXn/Df8GSs/PNj3J6z9AcWZHy7z/Zkgf23kL8n/D/LT2r5sXgTn
S/X+jPy01m/kZ1V/kfcJ8ytG/jby5YP8ssob+WXFjfyy9o/EV7o+OL4y8rN6
f0b+UXEjf6jtM/LLihv5Wao/yK8mvv4gf6r6jfyy4kb+VPUb+UVtn5GfVnkj
/+jsQP78teo38u/afiN/Tes7yL+qfiN/r/qN/CzVH+RntX4j/6zyRn5ZcSO/
rP1n5OdV3si/K27kD7V/jPPJKm/47yqffRfF/vo+iPEi3H/+50/c89dt/Xwq
zl/r+nnSz8dGlA8N8reG/Vec8rGB/9DBz4cmyJcCXyX51N3e/HXng+f4+djk
WT9fG1E+NGnh50ujMZJP9de34+e5dD65xGFevjZ6WPKVGF/kM4HX9fOhot/x
M/KhkB/g50ujEZKPRftW+fnaiOKhZE9LL18b8EuJXV4+OEK+EvVTPjMaJvlQ
9H8ZP18aIR8K+UmSLwX+o+Rj9flFP18b8MNzfr42QryzUeof6+eDI8qHJpQv
Dc6/U741aij5WNzf836+NqJ8aIJ8KfD6kk+F/tV+vjWifGxSlOv/3m588j+f
wn6+Xs///Fqwf6K4cT6c4odgf4X8i2B/hfybYH9I6zf2f6j+YP8r9vFgf0tx
Y/9EcWN/QMfHyO9r+4z9Hx0fY/+E4u9g/yP29Qf7G6rf2P+h9gX7G3p/Rv5f
6zf2jxQ39gcUN/aXKD8R7I9p+4z9JRq/YH8k9vUH+2tav7F/stf8zrt/orix
P0T1B/s/Km/s/+j9G/tnqt/YH1PceD7NjY9ct+ID4/mr1NcfPH9F+oPnx1LC
+fkw0h88H0bywfN1hAfPzyluPL9F9iF4fknvz3j+SPUbz5dR/Bo836XyxvNZ
pD94/krbbzxfpfLG82lUf/D8kuLG82t6f8bzadp/xvN1qt94/ir19QfPX6l+
4/kxpz//82GKG8+HKW48X6e48fyc4kb+n/zn4PkrvT9jfyD29Qf7G6Q/2L+I
fTzYvyD7HOzvKG7s3zh+zb8/oPUb+W/Fjfy14sb+hva/sT+g8kZ+P/L0h/l7
1W/sb1D7gvx9ofw22c9gf0RxI/+t9Rv7J4ob+z+KG/snWr+R/9f+MfaPVL+x
P6C4sT9A/RPsfzj/Ov/+hj8+4f6Gyhv7Q1R/sP9D/nHw/KDWD70Fnv/W+rPv
4PlvxouAw15bz0eTvQzWt7G/oPJG/kDxlr69tJ7/xe/g+V+xXxHZL8XJXlrP
RyvO52+O8u118Pz3ct8eBs//kj0Nng/f17fH1vPLZB+D55dVnp9fJnsaPN8O
e1zg+e+kwPPfqt94/ltxPr8Ge209H0320no+XnF+Pl78h5T8B8WN53M5/6+4
kf/n54v1/oznhxXHt3U+ynh+WnHj+VzOz/Lzp7GPB8+P6v0bzxdz/lrlOX9t
PF+r7Teen+X8Kz9frPLG87OKG8+XavuM55NV3nj+lPo/eH6Z89P8/LW7//zP
L9P4BM/fKm48v837A/x8Lu8P6PgZ+wP8/LG233i+mMYneL5YceP5bMWN568V
l/x6VCC/zvZN5SlfZdjHsrF1ftrYP1cc+aIC+c/Uyn/OJfvH+WXkiwrkh7V/
OT88x89XBflxyudY+c3Yym9SvsjKr9P4u/bx+jPyv0mB/K+Or5H/1fZz/reD
ny+y9h9Sa/+B/Gkr/+7yMPnz71GB/Hts5d8pXxXkl2V/Ii6wP6Ht5/0JyY+n
Vn7c8B/JvgbrK/bxWiSPj3k+RcfX2J9y8WeWX9T+MfKLsY+7+Sn5W4pPOH8b
pb58kH9V/Zx/lfxzauWfJX+Y+vJB/pD0u/yh5K9V3shfK875a1kPFN8E+VUd
dyO/qv1n5Fep/11+VfL7ihv5fW0/5/clv63yRn47KpDf1vYb+W2qP3i+Ibby
t5L/T339Qf6fxudVqt/FN5x/xnUrP2rEl7EvH+w/q7wRf6m8EX+48ckfHypu
xE+KG/GR4kb8p7gRP3H+VnHO3xrxo+JGfEL9F8SX2n9GfKzyRvzJ+W3Fef0Y
8XXqywfxm+JG/Ob8k/zxJfV/EF9q+434WOUN/1Dx7Ds4X0k4v1/LPb9k+F+F
/IvYxwP/QOUN/1HrN/wv1W/4Typv+EeF/EeVN/wjxQ3/Qdtn+J8qb/gX1P8l
VT/4GrjhX6u84Z9q+wz/SnHDP1fc8L+0fYb/pfKGf6ntN/xH1W/4jypv+N+K
G/614sb5Y/LvgvNFihv+kd6/Yf+1fsN+K274d4ob/pHihn+zVx40r/+iuOHf
qX7Df1HcsO+q3/APFTfsv+KG/6j9b/i/2j7Dfyzk/6h+w39W/YZ/RPUH/hHt
PwT+n9Zv+Heq3/DvCvnHihv+r+LG8wVav3F+XdtvnN9WeeN8veLG+XM3v/Of
L1d54/y84sb5c/KfgvPbOn7G+XuVN853K26cz9f+M54v0PYb5/fJvgfn21W/
8XyC6jfOvytunH93/k/+8/kqb5zP1/4xni9QeeN8pN6fcf5PceP8nuo3zncq
bpyPVP3G+Ua2f3x+UfUb5zsVN84vKm6c79P2GedDFTfO/7F/wOdHVd44/6rt
M86Psn/K5x9Vv3F+VvUb5yOp/uB8JPtnfP5T5Y3znYob5zvZf+XzsSpvnH/V
9qUNmtS+5pJW6I/Av+m9peTDB17o/K8+/u+o+NiOhy+b2Zzk8fkPv64uP+Xa
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
OPh/LNkJ4BwXMI7zV6eRnQDOcUHQfrk+hewEcI4LGMd18H4XHh/h463E08Bh
H2AXGGe/nfE2FHcwDn4Hr3P7nhY52AXGwcfM08BhH2YSDwOHHPQE84/iDsZn
i955ZIeAQ+5WsjPAOS5gHPvftclOAOe4IOAPuQ7e5/5r1bF1zy9/Kx9f0Xbu
bVecXlrOmbn84457L04PfmtDNObXUZVr3L8twW/gi5e3O378upUJvh+74/Wv
NlzizndBL/KfqA84eFn4PS3yPuuj53+/5J/fvtk03SLlLup838d/q12P5VPY
lyD/c2vP7hUeLUqF5yP273/b1rxKs7WNdF9BeFJx8H/GU6XSq14Y+uLlfywJ
/D/h95T9f/Aeru/cp/LIJ45w9h/xQa8cj89LVsbl/vKvoXs9/5AOm/Dokipx
/43bJ5z2adm0uPuy95suesitv7vq3TzxX7uip6/a3H/RjbuTHbWrz/zsEed/
93/z4K9bHF8hvavmoPPPqf5D1KrEX2976xKXP7386jMWLTltYzJ51p7SXdst
SkZ2/K7MwiXO/5z0Qo3LKzdYnVy7++QDt/VZmRzV/rCGY+5z4zvmxU/Kf/RU
6XTrlr/9o8JLX0afbX/lkUE13f+fXp7VH5ded8rHNW8qnZ5yzRt1O3ebH1H9
0aK/PPTY1Yu3JdPrXN12Xn83v4rF7gpPB/457Bqu1502+LX95+2r9eP8bGan
dicHHdi01zENXf80G/Fy3Ori5rHweMr++80rv6z30YG1lN8lT0X2oUraLWd/
f4mW//D5Pcmnbv6tbDPz/T51f0f+J/Dvy576e++Nq+vpvkKHrQ2vr/CV21/B
+aeMp0qkd7d5vcODJdz+4ejZDUd8eEv9WOxAyv7/qcff8uKw//Qnrp/V+py5
m5e4/kV8sK7FpEtWbZ+RVD22TfX1jd37U3848t52r7+wb5zxeMX0uPM3tn50
o/v/qw1nNq9yT+9dUcbvu5Pdp5Zu88enrn+39qnVcp+n2sQZTzVP675a6p5T
f3b/z7j+nHe3fdGgSpz5yWXToiG3vXvveU+pfN8xg49td1CZdM23F7b5et7C
aPxNlSZOOc/Nr1e/KdXkrDZbk16fH/vdK59+lqx5ZujjRy1w66fxJ+trDr70
U+n/X5Ks/c6/vqhHpX93OLB1mrW/kfS/e7/f8tz4fZ8szvH76iRrv3u/SzZ+
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
L6x/vLxjQXxtjv0Lzs+Q+r3fovpH/R7VD+rXaHyT9VVl1F/Mf1G/aLLIeb0q
Q65+TahP3PiZ8Dk9tX9M1T8s7/zfiF+nPnld/AzK6X+EuO/l9H9Cv8fLicfq
J9S3/mLtY72hXqn/8+tXvpkJ/R4vp38R4pKX034PcdPLqV9Cu9vntxSrn/6J
2slh/bVpiIu+/mLlaZ+HeqP+9RMPQ7vcy4v1D/2Pl8SPq2//sd9CvRvJTah3
6//8f7X+Yv1brP9CXKJd68sTf0Nci+Tgofx3BOtbP+3jwjyL9y9Cv0Lrzy5P
+3w/8UPqWz/xMLTLVZ7dP/Q/qjPw83/Zf9H7V2e8f7Hn/6v1F+vfYv1H/fIm
cLTVX4Zu3DjA+28Yl5TX3xB+ieW3HPzk2pfv+iRtmb+v1JWfDjn1A+px5aeG
9Rv1T1g/6+VzVE78t3K/vyhs39ac+i+UUz/hvqh+Xld+j3L6DX3y58ztFsl5
Xf0Lvj/Ot0rsfTui5x+O67xPxwffmYj8C9bP67yvsLws8i+4Pnld/QfKoUdy
l9jv6Ih9XJdegOvqP4T9F9dfJe2rkfax/Kgi9fP6KGkf3x/nZ0f+E+W8vkX6
L3z+szgveEf0fF7nfRnjg/NFd4uez+vqP7F+5A1gH0JZJB+P6/hOUzT/xP52
8qfwd4hj8fyzz20d+RdVYf2G96kceQCR/8H28Dri81F55u83yF9/q0bl9u8V
NbxP+wf7cFL1H6oCOeM4n0bzz/49vUb9l8L4P921j/h4C/aFfCX5N89Czvwl
3ve/fT55MB1/5IVE+2unBuNbZjZI/iDte/JcOj/GyvVxwl9J/KSycHxmrdMf
yg9K/ZH+KOZ/SH4C9EeDqDyvq/7g+5z33P3dprdpDf3h88PHheUN79P6B95x
5l59rlmTm3PulMdazo+fz+u8T+ufMvqso7rfskdi7/P6i/IaXOd92r/2+v6R
/mB5F3/HfSovX33xt0d/t3ukP66BnNd5nz5/2VXXln13VItk99Wrr71gpP8+
+NWQN8H1N3Bf4f57O6f6Y2zQ/rKE96l85Wcj7n5r3deR/hgbtL82x/v0/fue
2eCkRTV7J4/8x60HbHqvseu//wP5H3Cd9xV+/prcsON7zP/iyXj8eZ33Fe7/
Dom9z+d3jQvKtzS8T+Wd+j6y8NUv1ucWTGv3Qs+LSiL5fFzvhvt0/Hq8d/K+
zy3eM2n0Raf/vHeV//4k5WW4zvtULjy1UfmUjPVNecXQk5tduWqPSH9w/vH6
CNxH+WWQ/wLr8htZv5Tz+i8y1u+CLjW3rvzD6pzqD8p5nfepfDPsU8XvKwN8
q8ttFvv2JsgX5senU/JEuvXIpjf476vfCPmfcZ336fMfvGdVr6d/+XnOjk9J
JOd13qfzo6zym9vbrGubhPHmH81PXOd9lP9enqvP7/XMbc8fv//SdJT9zb08
afF995/hv49YjH+SeRPNn5tOvOy3Dy3ekRsRzp8o/oN5JvH8Lbmt0AvnY15k
xUfse3c31o/p4srDL0vH23a4eUx5xUPJE8cduyJ34a/PePf9wdtzBxz0197v
tvP4Rv6kBvrhvN9NerfhYN9/b2/YfNr1Qxomx1218t5LPmiTvPPb62ra3fmB
a1+ne8o+uP+aTelFtv506Pkl+51wbAupvzZdXfnK3LtPLDPAESefCn1wxbDP
er75y16R/jg8j3eNHT9VebIZ+uw0j3/HQh+wHtUfk/K4uc7pj7F7j9r8/jCv
P07vsuaQedM+Tw9pcMEZrRp/mf6ibObW0yb+SA68Xw3cVv1g9c4md/35ufMG
H9fNxx8+QrnZ3/bd45mdTaP4R9O8XvrI6Y3X9r+17bYVpa7+q85ZPe2oO7/L
DblkVq/Wf9w96bF/x46NZvr9O2NGXb5g07ZXcm/Vvv782KotuSUnHX3d5T/6
vs1djw85Z0i37bmLn+vxQc/+zZI935k2dmP7KH6f1LWY0HXItd2g/z1+nbig
QUXTf/t7OtqWN9+3SAbft9b794yXUD8Majj4iP6X+P3B2zC/R2F+j5H5/dW1
f+p3ZMuVuadXNex8Vt/vc8tfO/iP13b80f4brKe6Ey5ZfOu9TZIbsd4ob5Rf
F02Sq5p+urjhFfui/gVu/F/cNfz+xr22ptNs/emTc6Y+89jRfn3QP1iWwV9w
vdv6D470C/Sd468GfrP0Jxfe6vcHcD1+tmmfbr36do70y7tnHT9o1BNfOf3S
cPmb4759xe9PGoD13wjrv5Wsf6tXt6TLERft9UDz455/26+/JdAXleg31S/2
+gZ33bZ3l+vfrdAXtH9Vv9jx/cTpHeVvbPtrc/u8c+JBlxzXIrH2q9/fYPtv
z6Ru2z3vPF7dGfb9dtc/vfL2wnsuzj0o379+foy/t2rGuS1/6OdHbz7myO6N
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
fael7x+7926nHLYz1/6ajrfudqqfn+RXx/6h+W+veXnP5Ga8D+X2eSXJjHz7
2+J8a+8/9Dvg/p9/2elv6Qe2/vS64Y8smjIg/j4K56meT8f5NiOjf8rz86uR
s38nyvcFOJ/OWLvyyerL9ovs3xH7DfnVPj/73uHvhL+Oe+e4Zd4+4blq9j07
Gc5znd8p5nedzO/vq+omLen9eVqJfov2x+evL3XXbXv9/qBxmJ+zMT8Vf+34
Putw+XA5343rYdDnP193z3+1TD7Gegnb3yb56SX3vdq7y0E437qF69+al8qv
GHbhJ+nM4BxUP7/XP7Nw69s3L8stuvz7BbMPapjM69b7hG+O8e0nrp2cf37n
5CE5/9y2r2tybHW3uSV7HRmdf/3KrPRnlfs0MAtt/ebJ0vsuemGR37+0X5H1
Qfs2Jc8g/C7xk7gJfE7D8sW+H1LrcHUNcJbyqhA/I3zlfOJ14nA4v79xuKn4
SvzlOe06PzmvuQ5uB85SHuLn9ig/oNj5ucRP4qbiq/01Nbz+oODPeODreODq
YOAs5b/BuiFuXir6gfhL3CUOh/OrdfIUxuFF4AjlHTF/dmDecB5RTvv2LeDq
S8BZ138TLH4SN4Fzsj7f4vfRch8DhymnfTse73k1cNaNP/CTuEkcpZz4S9wl
DlNOfCWuGjnfk/hJ3FR85f55Xp8h/Tcc+EncVHzlvON14jDlxE/ippH5zXXR
B/N6GXCYcuIncVPxlfjr9n+L/iJ+EjcVX4m/vD5b5nc/4OcDwM1DgKPh/Nme
+xTrbCBwmHLiJ3GTOOrmN/CXuDtb7EPiGc+RHgicpZz4+RRwE/W7/iP+8pzu
AcBhyomvOzPWB+3XyY/tO6r3f7bC+L0f8btzcZ33UT4nKN8lOt+U5Xmd92XI
o/NXaU9zXil+8/nEzZ9bPHXPp/7gdcVX6hWef6/fl0iD9vE7FH5+ufwJuw6T
Gplf7vws7p/AfSqX88lLVM4r+v2lucHzv8mpfU45r/M+7b+FmEf2vrbR+P0N
13mfvv/fUH+51M/ywAl3n8q/uuSOq2+b1Dqpy+vzr9z4s/95nffp/Pj0v0/t
teSTjtH5neKfGd6n8rNu+83d2//cht/fcM9n//ActaG4T5/Peb1I5j/li4rM
f2v37OJ6jfqX13fivvrOz2Lzm88vBw7OyuPV1lSfPxvXeZ+Wh/+KcYzr5/UK
8Z/Zv7t+ecB/zOjfKbHj4+3XucH4tjC8L3w//32c8Htp0ffZKtV+q8qPx+Hi
H/vvH9vfZTXUr4W/P9bVhP6xXz+wi9JBsIvgj7rysHf5fUL4Dx6f+wT+fcco
/z/07913SF15a1/uJf59pP9M6D/79XMj7LpvHuiworZ1K/rPrv3UK3fn7Yd2
0fdriOs811rn59xHK5/45XONzRz7m8AOdM+3dkk7t7+E/RXWXwa7pkkCe0rl
8E/2pp0VxZ+yytN/3nLTW39Oh+4F+2Ope3+7LhqYGvgP+n2ov+fna0K7FXZa
b1e/O/8d5673lfPZ4d8Z6g+171bn18Wh4j97/4v2E+1jte8s7nUzof/czpV/
NW9/bE1pf8y3do73X57904GPPt/UbGu7+d8XPtsomXRjvz9tmO6/L4P6nP+u
9h3aZTpkzH/On82YP2rf8ftXof+8m7YfdtleyefWXtP2J50vfGXhs33aJh+9
9eefvNvC579avD4cz++Z6PcJrd3b3cwC7tjn7yvj29zxK5Pk+4OwGwztZ9iJ
rjz0Ffih92mnyfwsNbTfbX/uEvuN/m38/eQQ/7pG+6OKff+F5Yh7io/2d0kN
ryu/w/XMcdf5Qfwkbqp/KfgXxdf7BP55mcNRyol/xD3FxyHAT/hdObUfiX/7
AicmYr5TTvzkexBHdX4TF/X8f65HrhPlH2uAn8RN4mhYf5khrs0EzoXj5+Uz
RE78fAi4SRwN59+23O3AReIk5cQ/4h78Tze/iJ/ETeIo5Txf4Ejg4kb5PsUn
wL+J4XfYXP3ET15X+5z4x36OzqcBfvL6DuGniH+/A+4RByknfhI3lf/aUWT+
Twj0ammi/jfxj7in+Mj55fZHyfwi/q0C7nUCDkr7c8RN4ijlxD/i3myxv4Av
DjeJo5SH/u+mnPIfxL8q4N5s4GA4vo0McbNwfIL80K6IH+b+fNuO+PsctC95
PfyOjsdXtCNJBf8oJ/71L+j/Rd/HKlE5r+j3C9m+z/L8xNoovs3yvL4W92n5
oZbnyhlZHyzP7zSOwn2Uk48iLgIvo/7jdcVP1n86vpui85dyfpdPv69COf0S
9f/EPzD9xH9h+79CvxT2j2rd9TXSf5w/lofePeKfWZ7XeZ+WJ4+v+CV62/Qv
6H/VppbHi/k7ynmd91HO747NtDicXAq+U+W/xnXep/X/Fry04lf4/NLkN8Jf
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
v/G+rn7NL0Y+mus/7X+uT5ZX/cz1Sbn6/4Ow/lj/YViHlHP9huPj5x/X34KM
+blS5r/aR5zv4fh4+4rrj3Kuw7B/ujs51zHlXJ98P9ozlCOfx/Fyuj7pl0t+
vZO779OAN9L8uklBPjT5cy/Hvna3jgvjQ2vo5/bR80P+f68o/hjyg7UR/8j1
uQ7rSvmJ0bALmfei5VfjfIDvYd+rnP478260f8ALuPiGli+1+SKmn8RRwv6v
S3vB/tb295P8Ry2Pdgk/7+WL0D/Mj1I53judBP9Jn3+H7JvW8ufI/jyVj4Q/
xrwpHX/m0zGvRvsX42ZGyzynfD3WJ9dH4f7181ufj/wW2Gedov61eUO7O/5I
5bR//y/8mKzn870y8r/cr/Lz4fqqdetM12f4XP7z+rEmqN/HhzVvmuuM8iOw
Ptm+0yQ/kOuP5TU/keuL8u+Ff6vA+mT9MyQ/jesPeV44L8Dnv3F9sf5+kr/F
9Rn6IT4+EcY/anMDhT/T/TWqH8/F+qNc9SPXF+UzhL/U/lsv/cf1R7nqx3Pk
/AzVj/Tb2X9lkr/GuBzldZLfuF78M/V/uD4pHy35h9Wid3T+c32xvPIrGC83
/94qyI/48/MmCL/DfenIs3e/lHM/O/tVzy8gfoEHSnbK/A35KJ+nRjn8r5T7
q7L2P/XAvga1P8EfkedJmM9NeW/k487Aut1RML9gm9vnoPzel8H5EXuxfomP
tkqYt63xDc1PU37yYZxfQP9Z83uZVz412N/p+TfuL9+KfQm6v5N5Vdzfif0A
rvwk7MvnvgfqQ8rBz5ivkcdTjf00lHNfZ7i/vjSaP/tlzB/wRznuD9P9c31x
LkC4v9Pzmzy3gOdbzBZ85L70ncH+Xc/fY19D8jX2NXC/AOXLxf/U9c31S3zQ
/aOr7b6DlPuvuJ/CjY/dN5IwTxH7SVx52rfkNe+W/WuMJ1Jv6PlK7P+6YH+c
Hx+uz3Bd8p/TL9wXYnT/D9cn12UP2X/E/UnM69H9E1y/XLdVsn+E+o3rUucP
19+nQX6B3z/xBdbvK1i3ur+D+2/I/2l+Htcf9uFE65Pnj1DvKT/JfKUzse50
fYbn62xLt8r+Iq6/KVh32yS/D/uW0P4yo/uXOP47MsZf92VPlP0jXH+cJ7o+
uX6ZV7hF9i9x/XHd6f4Vrt9ZWLd6/lcxfoTrl+tW9ydNEfuW6zRsX2/kvySJ
7t/6BOt3CNZtZ9k/RP3KdanxB/bbU2EeqspNaFfyn88vxDk06XjJnwv9OxfH
iPJbZiI+oOcjzQN/kHV+wX6Bf/d9TucH8wPpJ+j5SDi3iftSjJ7fRPvyFMQP
OJ8oL5afiXiKuz5J9idjPMxlYZzLyRFPcdfvEH6e8aKvEZ/S86N43s0kxB86
yPlkqC/dDvwqHJ/Ntq/Ij43O2D+Uil3L9SrtT5Yg/jVZ8JVx1aMR39Dzzz5F
vJE8gZ7PBnuT+ZuJ7n/i+jsK61/3xwIvHf+v57ORf5M4a+Rf3oX4lZ5PFvKf
raPvr3N93RTsY90i9jXttUdrlN8M+c/tOc0P4fkSxL1+GflnXJczJL7P9cd1
p/kDXF8PYV31k/g2zssx4T5nH38Pz1/akTtZ4vtcX1xXuv6K7a/g+uI5Wbr+
uD55XfM/GG/j+VVPSvyf65PrcqPkl6j9o+vvDtnXtV3sf64vrqus/Xu8Plr8
Y64vrivNL+D65LrU/BWuL64rtX+5PrkuR0v+CNcfz9XpJ/Yv1xfi4C6fgXKu
T65L5ae5/rjuJkh+CdvL/VE6/yifj+u6fyIs3yVhnprKZ+C65tdTfgry3m8s
qD9bJ9cF57v5/Hjqa8YN1P4L7aL4/DHKua9B7T/KeV33PzDvoRxx8U2Sf8/8
DF7X87FYP/YhRfYf35/XNb+e5TdnnG8S8td13K8QlZ+FPJY68b/ZfvrlvI9y
2OVJLfZVnCL7S1g/z03YnnH+wK+wL2KW7B/h87lP8GLZP4H9HNQPtL8i/Oc6
C/Pl3P4XnIt0uNHzNeB3mp/DftXzRXgewlD4D+r/Mb+BPLGer4H97oZ+p57/
Qf/nZfRDbzlfhHF35s0q/nM/Tmh/+fgj/UbmPyj+4zwFsb9+dP4MeTfMjz7C
/zB+xvz9ZYJP1C8TZR8e5cy/Ce0vH3/i/inmtSr+2/ne3IT2l+6Pfj9dA/+0
Ss434X40+v16fg78Oca3jJ7v81SQ37Q1p+fXhPn3hyZ6fg7zy+h/6fk+8JcN
/ecvRb+G5w9kn09JXmmq2F/w1wznvfIvxDXyE1XCP3UM7KMf/C/htzj/Oe+V
f2F+80SsG9WP5O94/oT6b5z/nPe6Prh+svbnc/7/BvNe18fO4PysbanaJ5z/
yzPyP17E+uH5FbWCv5z/dbLPhHKcx+HWx0TBH85/zntdH5tlf6vmh7+A+T8B
8/5vwn/JuYzR+Xac/wsw75X/5frhulF8Du2jzhG/yvmPczBT5X953irPDX6x
YHzGn/9bK/6dnl+j59Mw/4nX1f5iecbtB0n8nHJe1/g+5YzL6/wV/WY0fk85
8iCi/AfKw/xFn7/B91uFuI7mD1DO6ysl/sP6YX9G85dyXtf8AMqZ96H5i7q/
TfNDwv3z3aP8BMp5XfMLKb8ZdsXukh9DOa9r/gjlyINJBkn+Szi+Ddx9lNvf
6eVcn2rfkX/lOtH9B7wenhvDf1tyZ41YXnHD0obmrIXtD91R/cO8XPHg43XG
zz/6ny/mf79MK485/tCVSzx+jc//3TXZcNhRy3c/o3c0Pxmf5XX179fmtu/d
sl3bpBL16PzsPXTLVS+/+neHu4/277F8492NpH3NzTP4Vf1l3+e7tCL/fh+n
Q+37Onlo75dU6vzseqKp6Pv4e44X6pb/2/v3GJ+aKoyL4it7mtej/d22fbmh
+fbtkQzL/24uMn6mnPIeuz19+0M916Xt7G/ukcUNuk1/1K9fO64f5/jeu962
z8uqf1f+3wxX/812vM2X+fFtYFqf8PMJ1Tmv/2lfcB/umvx4xvzkfjJPdf5x
3rl5GI5vMjT/74Uajf9zfnJePot5qvOvOnhPPz9vxrxj/O5LzGPKD8X8ewzz
Tucn5y+vcx7r/GP/n4d5qPOX83aqtI/zj/NO5yfnb3id//z8m/wP56ep4fWn
RM7xqp7yP/9ml+v5Uw0wfzlvOY8pPwfzz81zWX9dMX8fxrzthHmsz3/vzv/6
4f+S8sny/PGYn20wLzlPw/4pNZyXnKeU0397PD++bZLu+X5eL/bzttyBuP4Y
7lP5rEM+qrjy4E4R/0A5r/M+ymkfr8E8Uv5B1k/K+1TOeQe5vL+r3+j8ZHnO
H+UfwueXRvwc5WvRv6qfKOf8+0zwoUNQP3kBP3/D81xLSsL7fP3QE7nHRD9Q
zuuH4z4dfztvOid2fPz30zoG47un2YD7KIfe47lswJn2rjz996pgffv5NyW4
v6RS8cnibQ+nP+34xecLdUC/KD6hvc6+mynvZ9fn5vQMrFusZ1d+b7uuDPFV
11c477pH84Pt7hDOH1ee/c56FJ++yMtbOv+E6z2s/0u0ozX690vpX6/fPnzx
0h/+V9cU7n9True7FNa/0115i1+NjcWtxgn0r9H6qb+0fvaHxfemyWHQN5RT
v3HeqP5sg/nBeaHzh88Pr/Ofnx+c3zp/+L683kHWH+cH54Xah9ALKfXgmaIf
ZH7E569iXvA651nY/paG80LnD+cX/QPFv9AepZ3WXtr3JX/TmzHPsvoX41z+
z9Xvy9/fddAP/x9386sz5hf0o+mCeabzh/OmK+ZRWH9dOh7t1vlRHc4rM17e
j3LqT50flIf6KfYfqoJx8fOPcl6pkvGjvFO+/k8j/5FyXu+M+wrXv6JG/Ufi
M69b+3d5jco5bzCfov7j9cLzy7+fzs8p8nx7fUmNym39LYGTZdHzeR3rwT0f
7XHzS8cf9ohb9yrvk/83H/5N+2j+8G/qN5UDL9y6Vjnmm1u3Kn/k4f/5Nwvj
1j6yr4j7wMFITv2s/RC2n/g/vTzj/UQ/eTnHdco/7B/i/xM1hfunFOcqt4rK
z8T48LquPx1X1Q8X5f8tcnqH46jjo3paxyf03/38JV6wXzgO4fhNrpkalM/G
P46Djl9o//j4JN93aijPrJ/jEI4f/R/2n28f/Vv2X3vRf7SrOS46Ph3CdRXh
p/U7GhG/o/iL6kWVf2rx1o2Lyq1dsT5Hv0X9i9lW7xPX4vw39PdaeU+df6Ed
H8kTzOOofs4/jEO5lke7YR+tz+jfUvf9iqz+5fXDxP7XcdP1E9avfjbHv4mT
6/qAXeXapf4D/Eo3T9S/1HWv/B7Hh/K14v/xfVi/+p/sX5ZX/5fjE/Yr//n+
6ZjRP7SH6derf8/+o57T8rZ/vnfXf2r5ENc+8lPkfVS/F9OvfBOue+VfhoGf
Ooe8zYpC/JnWP0/0d3PHjyp+Qb+VZ+k38GJmGHixwvwl/amSEj2fn/13CPpN
+3dtMH9LM/zTutTyP69G9lOl2N3TxP9iu6Zm4Gux+ocF/OB3ueHCn4l+NhuE
v3P9h34bJvxisfaF+tnzEKHc8yfav3ZdfOp4N5WDX8z1gN1emH8pTXh+ssrt
r6nZV9pBOfuT/Exh+7l50jHgD3R+dHd6t/D6bGp6wf8ozE+Wmi4Z+MD+4XXF
T+WlFJ/xXOHnvf8zVfp9rfgn7D/K95X1E+Inx9frf74/5b3Ef4e/6uS6/ovp
L7TPxX8y/Icc+WPl30LepmUknxys99g/wXp29RR+PtdfnH/O96V/lFGe1yP9
SfurB/w6xQfgv8tv+kr8n+qgf5x/kej78T7lLyYXbBf/+fXD+tV/Vrs59Add
/MHJ1b/k/KB8f/FvGe8hL6D8AHiZBPxIsrfEb4CHORsXapKcLfol7C+vJ93z
A/s+0/8hfxbhM8cXOBOtD7bvXLZL4pMb8H7k/3X8isU/n8b1r9Au5W/t+z3s
/AP1X9j+0E72/BTXZbX86vx5JkMe8soxf2fjZXtQP6YaP2T7DoP+7y7xy7B/
mkf4yvpdvcIPs7/gV5Wr/cTnww7JHSz2G/VaW/iNym+zPfRD1b8M+QPaf97+
COOTTn+6+gV/I/8ZHS28vO//UE4eLYr/Vo454d+bXHn2irR8wa+emthT4/sl
lWPz8rXp6/3HX/TfjzaO5G/gui2/TyTHdYPyRuW8judktG9t+sa/9PxmqH9F
VD/b90ZG+3h9TEb7Cn9H2vPTPGdDv09Ku3Ie8lMWSX4Y6y/8nTEv5/4f/f4N
6i8vVn/hc1q9nHk0mp9Z3/ZxH4ru/6C88D57L2cerua/1q//Syr5fXfdPxKW
5/e14uczz1f3HzNuwrw0PX8z7J+WRs8v1v79vfQv+fpi9ReOs/v8nDCO6u1D
8m/E96miP1h/YR7My2k3aP4I6i8vVn9hP17l6uf86+2jvLAd5e1bnn+m8f36
9b+TR/0ftj8bnwvbCdT/r9C+cXlGWf2r/Jb2bwfpX9RfnlW/2F+VJcE/bz/I
+0X+scX/b3P81fLUP/ytr3xKKM+pfqmvnHpF9Ut95XivlL+UV4XlDX/rK2f9
cn5/1P4sOfsP50ymmr89OSjvzgeqt5z2E89pvEfwU9oXnc9eTK7fZ1H9U0we
1h+f71Rfedb5i/+cvHW0v7eYXMYv2l8pz3ffAa2vXMbP3CP5/xI3yCn/q3LF
F7HrM+Jf9DscPkfzI0vO9lv86ul+M9oX8ffKT2fJs9rP8WF8Jit/I4s/qRa5
6q/C/E9p9H7F5Fn+1f8vucSJovfPksv4Gf6G5V3eseOJKCceh36Ll/N6qDe0
fDPIV0Ry6ovQr/ln689uH/2OEPfr//xi5eH38T0jOfEm6/wr+jOhXvFynruA
85v5/pX1rZ/+TNb5BsRz/Y59fcvT3g5xr/71cz+pfAfHyYv1j3x3L/ln+4/n
Nsk5gk4eno8Zf5+62PP/1fqL9W+x/qO9q3lKlEteYdS/xLv2AW7Xv37JS47m
T4j7Pk+yvuUlPhP1T7H6Q73UKkOe3T+SFxK9f7H+o16qCt9P+jdqf72f/6/W
X6x/i/UfcZX6peVfhm7cOMD7b63wN+XKbxGfKd9y8JNrX77L7y+z9ZUmofwT
Z1/wfsrVP6H+kPa5529HfZS3wvOk/e791H+hXpL2u/Ztw9+UKz9H3KVczxeR
87lSPR9jc3iuV6r7Y/k3/ffNcn5QeG5yXeQ/hOcO1qX6fZVN4b716PuWY3A/
5cofkbeZGrRPv4/9Rfp0UL/3D0ZJ/ep/sH2TM9pHvmlKRv3huTh1aeH992Uy
PtH3u1379PyKMTgPhHI9n+cI/B2W9+eHyLlRKO/3l2P+GBkf137y7ZRr/IV/
U678vPIXhf0Pn/+s8ZE14b6DyH8I436s19SE7fPvX5jfms79MRF/FO7f4fv7
/gnziurSwvHn6TXy/q7+m4O8Q59nSnkHxANZXv0P3h+2z+fHhXmZdWlHiS/K
vsPU5se+XFPf9mt5e32mK78hjEunmt/Kv9l+zW9VXkr9ox7vnbzvc4tLkkn3
rOr19C8/d39LecfTafxlxNCTm125ao/kphMv++1Di3dE/vV5z93fbXqb1onF
7QZJlv7I8j9Of+a254/ff2kusb/py5MW33f/GT4+S7+C80z1R1nlN7e3Wdfd
+R9WP3Vx8vG23W5d8H0orzl3ymMt5zdw9vN5v5v0bsPBvn8u/vUZ774/eHtu
5EPJE8cduyLX5aC/9n63nV/fx1+18t5LPmiTvL1h82nXD2mYLPvtdTXt7vzA
vf8nla/MvftEdz5sOuz4HvO/eLKl1p92vafsg/uv2ZQOO79kvxOObeHk1aPP
Oqr7Lfsn5asv/vbo73aPvq84ZthnPd/8Za9kCu5TfO7R4IIzWjX+Mj29y5pD
5k37PB1VNnPraRP9+bDUH33ObHDSoprGpvJkM/TZaf58PuLx7//j1gM2vbcu
Hbv3qM3vD/PlZ33bd49ndjZNVn424u631n0d8VenXzKrV+s/7p5cdc7qaUfd
+V2ux/4dOzaa6c+X+gjlBt5x5l59rnk7+r4C/37zqmvLvjtqU+65ufMGH9fN
80/UD01Xr772gpEf5V7b/9a221aUuvJv1b7+/NiqH/TcqMsXbNr2Sm7xSUdf
d3kDvz+qrsWErkOu7eb8kzl2Prj+u/i5Hh/07N8sufPxIecM6bY91/KdaWM3
tvfvN9SOp+O1BjYcfET/S3z+4mhb3py4oEFF03/7e/p9i2TwfWu9fcf1sxnr
Z5ysnx0nXLL41nvdvoMc1yHl01Y17HxW3+9z6679U78jW67MvfnawX+8tqPP
X7iq6aeLG16xb2LXSRPUv8DNH/rvxFe1P1F/+uKu4fc37rU1rZoz9ZnHjvbr
57NN+3Tr1bdzUoF1pfqn2Pq07Ts4Ce1Mr39eA5+9YFq7F3petCU99IHmxz3/
9o/WB+5fmJeXmEHfLP3Jhbf68ylpf//1rOMHjXriq7Rs+Zvjvn3Fny/3GnBp
M+xgxe9275x40CXHtUD7anPn58fLn1/I8VjQpebWlX9YHeWf1W27553Hq3/w
f/Pt2xP46M+v4v035uvZkBue78ddkf6A3e7seemfXKe+jyx89Yv3cgPz7+/H
f598+zs6/0fjFxWP3nzMkd0bJePvrZpxbsstufbrh7ZZc5g//2vYuiePGvjG
MUn//PsflNj6D3DjY9vrvr9kxs5o8m6Xu73+R/3m6L8Mn9NqwI70iMF7f/rA
x5qflB1fkbhJSj1DeTH+S/RSpn8j+tO9n/01NZSr/8H5R7nqJ65vab+rfyv+
pvx83E/5iXlcXOPen/qKcv5N+c9wv2tfXi/skYTlvX81F39fDznvp3wA9A7L
q/6xuNzCyS0Ob3Jy6iXKVT+V4X7Xv6iPcuonto/1ufdHe25g/6O9lFMvhe3/
0fcr8npvb9e+h/N6rrFrH/VS2H6vnybhfuaPHI76wvaXJVcH4/N2pL9YP9tL
+er832tyrN/aD378z8bfLL8K94fj1yEJy7d078e/rwn6r4Orv2seV9b797c4
6+T8m+/XGfdTbu3NPV37Gn3R6T/vXeXPN2mMv6H3Ut5POe01llf9MkrW11ZZ
X8XWN++/KmP98f7LMtY323Ml5BViX1Kv8PmqX2z/dXLteyzdemTTG/z5mNQr
lKt+eRz3jwvGx+9v4P0cn5dRH+VsD99/k/BHv4ffMCYYHz/+/JvtewD3U94o
r//buvkXxgG25Prjb7a/DPdTTnuIOH6ejM88+As/g/9wEvwJysXvqFT87y92
h8a/mQ8CPyKn48t6s/LDoB9dfO9G+COUt4I9xOc2gr1EeWf4G8Phf9AfoZz+
Cv0X1Q/0JzrDv6C/4eTwR+if0F+hnP7MCvg3x8HfoZz+wMPwD1Q/0N+g/3EI
/BHKx8PfOBz+h+oH/j0ZuE9/h3Lif3/gfrXoB/oD9A8U/+lPvAH/QvGd/sqV
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
8a/j3jlumbd/yN+Pzpg/Az//+bp7/qtlwnnHeUg5x2N7Vd2kJb0/j/D3p5fc
92rvLgcl/fLta5PY9dLChO0rTe7K17M09+t8P/r4Kttzij33LTofDvmfuZkv
lV8x7MJPcE6on9+2/Z0dPzBJzi9fdPn3C2Yf1DD5+pmFW9++eVluXrfeJ3xz
jH/+sdXd5pbsdSTevyu/L6HrI3N+o36zZFb6s8p9GpjJpfdd9MIiH/9l+1P8
Kr87+bF9R/X+z1aCz++79s/F33Mg5/2ULwzw2eG7K8/5SDlw1r1fVb6+Lk6u
+Mr7Kdf5zXk/M2hfFyenf2/C+p3czptG0n6Pr8XOz+X8Cduv3/9YUk65rh/e
b4LxqYvwl+X7o72UY906ueoP/u34edwfPr9rEpb338fk37OD9+ta7/q1fXXS
vq8uuePq2yb5+VOX19NfufmzA39DT7r7KT/rtt/cvf3PbVx5xcfJMr8Wyvz6
9L9P7bXkk45OrvjI+03G/OL97B/WRzm/+/ky5GeivTr+L2WMf3/gGp8/I49D
nl+2eLDL9a/i4wu4n3LiJOW8n/XXoj6d33Mz5jftt5eC8fFy/s3yI8S+2/XL
A/5jRv9O7v1t/3n8XoO/iT+8n/IK2HN1sO9gPwp+NXPxozWwFym3vyWVButM
8YH6EPM6TQXfLhW9fDvsQZk/7rupOv/mi97uBnuTcuLX6bBPFf94vvMw6Fe+
R/h8r1d1/Ggv3gT7kfZkWD46/7sk7F9vl+v3n2hX3QY9/muxj6vELn4R9grl
tCdnw77Er6uf+pDfJ0P9rn+Xw16k/Yj54OTtYc/NhH33Iew9yn8jdintRcof
wfuOgX35EexNyq+HPdcP9h3qd/PjCNiDPL8T4+fktCeXw76kvUk57a0RsL8U
/3T+Gpm/1G/lsO8U//pgvs3DPF0Ge5Ny3r8Y4zdTxm8/8Ytoz4b174B/8Wz0
/coHYM8dA9w6BPYe5ZfCnrsD9l30/V7xa2hvhu0rTb6HfXmD2P/Ev19jfc2W
9TUf9txG2He09yjnd21cfhXsxbD/GySzYF9Sj7j1AXvuVdh3tPd0/nfImP/8
XsoS6O0E9iblxb6fE34vjv6nnz/Ei0qLIyn80Ahfs77P1hH9v8O+h7lU2k+8
tHr3cJT337+EXkhhPxu1X0L/fq8o//+bBzqsqG3dKrkJOAg8dO3vnsfjjuL/
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
4Yz5Y57GfSo//Znbnj9+/6Vpgt+XJy2+7/4zPL9Of4L2hfoXoT9RUkmcpbys
8pvb26zrnoR6oIuTjz/xst8+tHiHi+ONGHpysytX7aHPN2G9/Of9g1B/eP3Z
472T931ucYmZdM+qXk//8nP+7eR4nrkJ7VD747zn7u82vU1r6J8GifofH302
4u631n2dDrzjzL36XPN2dD7jxb8+4933B2/Pdb2n7IP7r9mUDju/ZL8Tjm3h
5GOGfdbzzV/2MlNGn3VU91vcORXGtb/BBWe0avxl7vQuaw6ZN+3zdFTZzK2n
Tdxd609HPpQ8cdyxK3JdDvpr73fb+ecPPb7H/C+e9PsnBzYcfET/S3z89vir
Vt57yQdtzNsbNp92/ZCGybLfXlfT7s4P3Pt9UvnK3LtP9N9vH4b6KGe9b151
bdl3R23KPTd33uDjuqn9XJs2Xb362gtGfpR7bf9b225bUerKv1X7+vNjq7ak
o0ZdvmDTtldyi086+rrLG/j9B3UtJnQdcm03pz/mnDvlsZbzff5zDf6mfjjv
d5PebTjYjy/9kT5nNjhpUU1jU3myGfrsNH/+IP2T3//HrQdsem9dOnbvUZvf
H+b7d9a3ffd4ZmdTs9KOc8RvnX7JrF6t/7i7ueqc1dOOuvO7XI/9O3ZsNNOf
3zD6uR4f9OzfLDlxQYOKpv/29/T7Fsng+9b6+Ey1HXdTvvrib4/+bvfo+6AX
2/LmzseHnDOk2/Zcy3emjd3Y3j8f8zZd0KXm1pV/WB3F5+q23fPO49WdzYJp
7V7oedGemL9+//60VQ07n9X3+9yLu4bf37jX1rRqztRnHjvar7+rmn66uOEV
BxvlGSiH/56z9W9JD32g+XHPv+3nN+pP1137p35HtlyZe/O1g/94bUcfXx22
7smjBr5xjLE8wkHJwG+W/uTCWw9w9Q8HHlBPjJ3R5N0ud7eW9u1rLM40SSzf
scC9H+xel59LO5Ry1ntjvh834Hm7Iv1D+xP2qCtP/qJT30cWvvrFeznbfv9+
+7xz4kGXHNfR6R/lX4gvm4Ev4wRfdpxwyeJb7/X6hzgVtq95sjDf/yVmUP75
e8n7bcv99azjB4164qu0bPmb47595SfS/sZ4/taIX2uXb38LjH9t7vx8e/35
WBWP3nzMkd0bJUf/ZficVgN2pEcM3vvTBz72+PDZpn269erb2VRgHNX/KaYf
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
FT5umqP9Jpe4LOO1mW9fR4tLg8c3OfmXS4Br4PFNvsHHzRP90ODj/tlJIU4i
86NLFvz4jcxnMPmLiD8g7pDohwGIXyBuUej+PcZ/EPcplsn+A7Gbc52fLe1/
kLhy47Myvsr7a/6S2C1J/pHZRZ7HTtYHeZdHxD6nXr4Adv5PxL6nfnzE88yF
ymd4HrbQ+pfAzn9A7HvxG4yH0fpVD2j/wG7NlF8RuzhX/eH7r3/Cr4jfkql9
7v2CVtlysf/Fbq6o/d7gylscIWk/7XS1z9m/P/FxipL+qUvyiyhf7uMoSf2M
PywR+57vP8Hz2En/0U7/htjnh7F/YeePEPu+pfXH+UH98RWxz1leeOxk/I+D
nf6Q2OesX/KP0v6FHzBR7H/WL/lHyfP3g52u8deW1j/l9APU/mT9kj+UtK+r
jyMk9TNOcqrY5xX6XbDzF4p9z/ovkzxPrf84n3+azL+y+GpL+5tP9XkxufLb
z3q7m3msdZQL751r/5P3Fp7Y2jcVvDb90AOF354HPL6EPJ3w48RVX3+cf/Xg
tSlXfpt5I5QfJfz4UPDWbJ/iI9pj5ZuEH7fvZrj6Iz9O+1x4ZpOTL/HPj/h6
JHhx//woZ3yS/af4zfz/Sz0PbXLy3sLTW/vIa1N+k/DbxO0LXf2RHx8K3tvX
H/H3OfDalHcQfpt8CeVvCD9O3lt4Ynv+beC1LY4g/HY78OKUKz/eEv62ZJ/T
vuf86CP8eFvw1p6nif4heXE+X/lx4jLrf0z4ceIu27dG+G/k9+Weh4/8dT/w
4hNc/+n5/B2zs137Iz9O3CUPr/l9a2X/k+Ivxsve/1bht4eAF5c4gNXPvEGW
V/wdL/i4XvCRvDjl1wk/jvxc2x+t/BB5EfIw3xD9JHHJRsVX5JMD19Yk+fXk
Nc7zeWwmRz57/qLPMzT5JPAekudn7/8ZeAvyGGcIf0G+WPIMTY58/6IPeJQz
hD/h/bRP3xb+gvj6DeDqG4KfucQVZwt/Qt5C8vRMjvyRTPIQTd4HvMkp4FHO
EP6E9uyjPk/RyrPe6cDlc4VfIT4PAS7PFPwm7yF5njF+Ct7jJp9nGec3eA3J
QzU59hsUp4InUX5kDHiPy32en7VvPHgN8hw7Cr9xPniRdj6P0OS0WyUPz8a/
C+xWyTM2OeNfHwGHxwj+krc41OfJWXnas8TRMcJPIB+zeNDnaVr/0Z4lzmr8
ifwHcfnSmvnrzYbLT2l+NHgLycMzOfMZicM7Cj+xFLzJavAo9wh/Qj6WOL1Z
+AvWCzs0O0/4FfIfpwLXVwl/Qt5jvc/zlPjERvAQXbItwm8gXzQjT6L8SGvw
Hn/yeZg2PtiPUXB/xhLhN7BfoegLnuRp4Uck7724AfrS5o/v/4S/Zl7bMI+T
1n7JSybOWnnJi072RzHvmusYfKe1j3iNfTM59tGY/E2fF8/8jshv+7zoHHy6
yef4vGvLo6Cc+C16zOTEb+LcNgHnIn+FvHni2MiAY9Y/kpdP/sL6Z6bP22b+
h8klr5160MaH/DRxNuR3xPOp3/Z58wk/zbx+6mHEK+z51CfUk7sHPSnxW8t7
T/ht6lPseyuwH8Hk3D8kOGfvh/VUDPPrzNo3zucVE0etfcCbQtcB5VxvXGd7
hHVm7SMe7+xxzuRbfd47+VCr/3KfV8/8ECsvec/UUyZ/xudVWx4G5V4vfIF9
Kh+YnOW6AOc+CTgn9X+qOGT9d57P28+UP20pf1DytiuqvySvvVgg9jvxmzj6
WsBRax/zokXPRfsD+wIugJ5HPMSeT33D+AP2O1j5LT7vPcHvcbDPad+vFfuc
+ph6DvECK6+4XJL/Yfyj4jPt39OB00cIPjf5uFZiP9P+PN3vY0zsL9hd+TjB
732Bu8f6fZYml7hoofgqcTPuQ03wmfzqUYL/5C9kH2iMj/m4aab4if1Oxb5+
H29ivxKfbxJ8XeTjkoXiO/FZ9pGanLgs+3itfuIucbiP4C/2Y+WyT9jql7hl
gs/EZeL0GMFn4vIYv8/T+m8QcJd232DBX4kbFYrftA939PswTb4LcFf2GSb2
EeyivK/gN+1/2ScZ8d3HTbHPPOLnBB/XKhTfu/i4GfzztxN8ZvztMcF/lnsa
OL9G8L2l/G6Jy2bKf+wPXF/i9wHb+LT2cTnuFzK5xC2T+Bn3B63y+0hNTlyW
fb5W/x0+7lt5QPD3Yh+3LhS/4a/ksg/X+o+4SxxeLfjLvPWxwPE1gt+SN5zw
+6N83m2SnyN5v4n9Tf4QvGHCX98IfvpAz3Mm/DbxVeUHoRx40aT9klecPJ/1
Hu159DJ+I5HX+7zupH2SN560j/xrB8+jx/iHz1tO5Gp36/iQ3yAPrHLy68yb
1PoZH+B9Wp78uPD8Jmfc9ijPo8f+83nDSf8MxXXhaU0ueb/J83kdvGHyfPLT
wnMm/LbF31SOcuBFk/ZLXnHyfNY73/PoZfxEIl/r910k7Wspfsd925JnZnLJ
Wy47X1fyD9P8PeadqFzyzpP6mTe/F+7T8v183njJ+NSBX1id9J+ca5jYn/yb
56/p+Yzhe+8v4r6NSfxtEa77+6I8nM+0c7bHwN3aLRzRK+En9PvyKt8T5Qah
HpW/G75Hb/ltJe+H77ZvTtpH+/Mt1KPycN4k7d26OpXPwnfH/fnAUR5+i6br
UY/KOf+Jf7X7t3vG75vr+OT+3K5c5fxu+vPhO+pJ+/B99WxOyffVQ7u2yUL5
Lsn48HqO+1SO79vzu/aJnNf3xn0qv/zhxyatX7Wi0vGtM6569NLPkv7rhOuX
4D6Vh++S75GFcdozqf+H1e+PbzKcUvlslGM9Kue4cRxVznrPxXNqn8/dnM8u
GX/uX11RMj9D/3WN9qPIl6Pc3JL1MeF3HX9x4WN1hn8l54dnfI7Ked7jeain
9vi0L46ZO2zYIeu+SOofgesdcV/t+VWXcR7XHp/2xYsl8/syzItJ+N103S4v
bu4e82um3brz+AP+40DU2y/hP5ucP8f1H/l/1JuHecr3ifHHgzxuFcBBk0/+
08SXDl+6Y7EF373X70eM/HjOvc+12S4DfuXEQcrpXy/z/WRy4ts8f46ryT+/
uvL0S5O25qd0/nHb3h9vqYyp/n7J5DjPV86l5T/i2+ImroNwfzwfgPjFeb4u
nCMo7Xsfv69WplfHI47P4GnnnLzitB52bqf61023NN7+vQfaFc9unPbdb97X
Knsk/G3lt6Jf+f35a0J/mxzjXmzdZZtv9h+3Q5K/1RzKFwEn2ib+85YW5HMf
bfjx6O+34rnFmE8xPvjUnPyoxp3WV/5876L1L1yxtPL4OZ8vnLtXzE96+7++
OXDx2/sVes6yjH92Q7X+N/OAU9tr/fmC/gccsenQTZU7Wv/m9Icej+dH/PV7
u//7rCEZ6j/AcFLmp+2fPv7d5XfMPHtXK/9OtX29imkYt7kYRx1/4z9l/Bm/
Cv34BZ4X46vcn3EwzokM51DG+btQ5v8smf9DMH8475tk/jRXx33P4kCsK+Kk
je+05qmLD/izxa+4Tinn/o6p0O+wB+T9NlR+fvHw1R2vfLqy7vLn/5iPiuPL
868PxDmo6l+H9rfFucytsjBP4/sde/8f9rjlwQ7ZG8//8csvd16d9/7+k4vu
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
/2pfSt5Rol9b+r58S98PJj4wPqfxqbXyfUf9/jbtGr9uo31DPPXfn381wefp
Pg/Gnv+Iww/LkzA58YB2jOIH7ZLLfR6OPZ/fW2V8V+0b+j98L8UP8tMcl0li
v8DeJj+c5GcgXl7QTlH7hHaN5ElY++jPDPZ5Bib/BHbJt2CnqH1CfFiAebFU
8IH2ueQBmJz2PXGgWewL8gdzfB6KyeW7m7naH7u2wM8yvvgY5uEBYv8wrjLd
5xlY/9OuII6ofUG7h3aQ2j+0O4gzV4n9wXolj8bax3yrUbCDpoj9s9bHDZL8
DNoljE9/KPYJ7ZqVPk/G6me/fu7zTKz8nc4/tzwekxOvaOccJPqZeENcUvuD
+EM/Knwn9nl7vzPl+7aKP6vAJ3j8i/jLfqOeDP2X5n81ORyM/BPakwu+2vO/
ivflewCH7P3JN7F++BtWP9eVrz/5frngOv9F/sn333xr31XgM1i+Nj/eO/N2
RD+TMy+PcdTAE8bzN9R/VvwZi/Fk/8wKOCDjE+fHapkfrUdf0uW6Qd1MPhj9
Rfnm0B6TK39J/KB8svBrPv95cz5M+m8FeEXKkUdj8tWS/635yxz/eSXjT36a
/Rt4kpifcbLM/xJ+2ubf8xpfwHxm/fWhP63+b4fnWf/o+p8N3Kb8TKwHyplX
RPms0F/SPuOds2U1/QfLC8hqx2fqi1XwU8hjav3kabV/fPl3ydck8scxbneJ
/yB5s2X+B/2ahN/1/tnGXP0Hb4/V1d1Y0/+oLyRPPOmf4T6POZEzf1z5Qcol
jzt5P9oJ6j+I3Zovl/XL+plfPVz8B8ppP6j/QDn9lOHin1Du+d20/8vyM9Vv
VP+B8itgP3YS/4Ryz8/q92nj/FR+1fd/q2w/8R98fsueif9BueTRJ+/PfQrq
P3D83vB5+tY+6hXqWc1vyx3uMc6n+nUz+OX5CX5RTv9giOhf1j8KuKPxFeFf
s8GCr5K3XowU/exxuW2h65dyzi/Vr5RPdXYt/0X5L6CHdf1Szrj/FtGvlFNP
LxL9LHZFsn7nufGpR/5BXJ/E7R9CT88W/cz60a4kv2Ke0xuti5+KfgXvlbeH
Hh8q+nueG79mjHPsX47fR5ifql/nyfirfqXe6/1U0OPNor99+zcgXhv1L+fX
SMxfXb+UU8+2Ef3K51NPLxP9zOfjucn6Zf2boWefEP3K8aOe/pHoZx8fsfy1
OL6IK872eRgmZ/zZxx8UPy3uVDL/3rd2EAcpD7/cn/bXxL72esHyeO353Pdy
jPfDrfyxPm6b8H+0j+lX6v4X+kXIu0jsZ8YdmfeAPA7pvx7ZV0LcDPx1Z+sf
b/ek/Vd3TYgLvoq4JuKFEr+wuDL8sDg+Xu/tQP7e3t/nx7Y2O8O3r5/lp00R
/5X5Ez7+ENu3awvjN9P7L4hHxvx0xo1XIO/gt5I/IHHpTPf/ML8C+9uYZ2Fy
iUsm+z9Y79EhblvcIPyFxGWLKyR+PNHHjRP9x/ydRYgb6/4Y8vHDYZ+9BTuY
cuZLMD6m+LHax6UL5NmI/dGduJTkN0jeZ1Y7Pto9e9zFIWN+Mde/5/n6Sv9G
flHXf/hd2iT7EKR/bN8c94GYfJrPG0z2V0neb1bbvu9eePsmru/JPu8z4fe2
+rzSjHFAyn8Ce4z1fzPkSZb2v+ID+5vlD5P4u+RVon9i/0teruEE5czbpPxS
wVeub8ony/4Nrm+Jw5mc+b8sP1z25+j4zZXxo38teijz7bO81wx5rCZfI/y2
rk/ySawf4ynjY3nPzHM2ueTNJvufJO/X4qS+/7e1+af7RzkfPL/+vuC35XcW
qv+5Pof6PE2Ti13bqOuT7ZN9Vib/kd+XWNTeP0H+vk2yPqmXfwJc3VX0M/R3
vtHnSVr91Lv0C1T/Um9/zedhyviWr7/5zm/ZlP9F+o/5nFOR37OL6G+OP+16
1a8t9R/3PTzv81zVfqx4fj3qV67fq30erbWP5Y6Bnj9I9Dvz62b7PEarH/lO
wq9H/fkO9PqZPo/W6qde9fx61K+s9xCfpyvvt8HyMHX/E/2bM0v8U/Ii5J1W
if5lvtdi6PHpor8Z/znb57Ha+z/v/Lruhepf6u1PfJ6s6u+M+/dVv9LeLkQP
UD7Y8c/vJ+fvTvF5O4zv1VHO/Xdez0T/lO8l+GTvL3Y57fXC129548wnt/Yx
3kS5rv+HqvNyveGi8gPBr/3IcPCjs6664GdTY/8wP4Tla+cHdbf8eu1/9Z/U
Pg/77npb/eF5EZ/QHpMH//WjJP7O52/Gfj/KuX7nufGJ/jP9+Ufd+0d5S/3P
9TfXtT/uX+X5DI9BHvaxxf6XvIyEvyWvwfcL8YN4vlmIa3XOGCdGf1r9Ib+o
h9Wv62+67M/S/Snoj4L9p/szvF3ckzx8sj4XYF2ofarnGtS2b81uS/a3+vyb
7sn3Qynf0+9TK7R+7pPS/a8sf7Hfx2Ny5k9vcXlO2yT1U49qfgHrn4X+VfuU
9WMfXpJ/z/LHwE69TOyPRc7ual2ofUr5D2AHzxH7V/Ie8jViv4pfw3mSa/my
/Q/M290MO/gYsX+9X2H7sBL52pL8T/Yf9mFmZ4h9yvIYN+6DS+S0Y3X/KeW0
AzeKfYq88KwBds4asW/t/DToId0fznX3F+gZ5T8plzyNOpVzfej6oZw4N1Tw
jbjCdfMt0U8sTz2k6yf3uJ3oF77/XOiphpr8teFqsn74/DL7k+Uf9/M06T/q
GdUvTQ43uU/oi6R/qMdUf7V0PlSTG1/LA0/Gn+tH9QvljPuq/mL7fJ5F7N+W
8hPnuf7vnKl+oZz5U3NEP1FOPaTrx/d/faH7V8SuSPbvev9vc2K/0f6X/PSS
/Iltitrlt0He48Ykfsr4POzIhL8Z4nnxZH0zvi5x5Mi/4vpU3KfPJ2/l8+Sj
/Cofd0nkzCujHa7yk2X/nMq5Lv6fz7NI7K+BqEfbf6aPuyTtk7yupH0sx3pU
LnGFkvbF8w90fuzi/KcOyfgx/4LzVusf5+NaSf2rfVwneX/E5YuPfJ6FyX1+
4auJf+H3XdzSoPnR3Dc81rUzxoeY38ZzNGrze+3hd7bKBkv8UvLKE/ySvPYk
f4b6knlj3C9C+cPoD54ftFn0d2+/7yHnfgXKZV+F7WO3/kd+GXlk5oFRLnn1
udrPGr/ZLPwF9QLPH1L/VPZV8JwLkzM+WBb/Zf7aQn/Oio3vVp+3XwGPlPg3
zBsM4xf3B9K/ucaf02HyNX5fReLfEHcRV6g8LPHXh2AvTsY5LX8JeaAmZ/7h
T8Hf1OYXbd+GxYH9/LN9Lcn5dY9gXXGdqf3E9c19pFtl/YTfukZvf8X11+zP
3Ur8D64bnOuV6/qRc6kKzd+7CeuKPJnaTwdg3czCOtoi64fnp3yCdThT1t+H
/ty0QtfHjxzvk/J3K7Au+/g8YKuffJ23n+L64Poiz6T5o3r+hNoPPH/I78OM
64Pz/i5nf8X5z/NnmGes65PrgvbXibI+qH8YJ1f7l+uS6/QzWZ/kI7l/Se03
nisnedRWP/lG5inPlfXH+CjODUrsNzn3MDm/dKo/F495ZjI+xt8n+Z9cb5y3
mp8idnfCn6/0dmuyfsVuTuLjvH6K54lM/iD8Fp8HGuXwF3Jvf/3d92lRbq7n
6UR/276M5Pmsd4vnASU+1JwvcPZFlNM/lnN6Ij8Nv8vbX1E+3Z/Lk8hp93v7
K8p9fnivZHx2deumRyIXvy2pf4v3O5PyW2X/rZbX8wdUTv6Q8+glyU/R89dq
74862M6X1P0f5NfBqyPPPY0vTPX7rK0835f7FgJ/+Lby94yLcx+3vR/jRzdg
HzTnOeVX+byQQu0Hxg9kH774f5YXwDhE4l/wfJPJsr/An8+xJT86xGk0PmPj
PFj865bOF3re5wUUqn9O8HkHFd2f4e2nroXax7s6+8n2iSf+K/Rgsj9rts9r
qWh+quTl8JyAJL4k++yT+BT3rZwp+xNe93k5+R0hzifxiW2LH5SczzrNn9uS
6fzm/nrsqy+ekPXB84iO9nE2ky/w56oUH8j8lnNH8jmyPrA/NB/u9iHG+ct8
Xc7Tn8n8/C3WzX5YR0Nk/XDe0k4ZLfOX6wrnMuSq/+Vcm/xsWT/cj0KeYIHM
X85LO2df5udf/LkrSfzjGn+uS0Xnr56vpfYX/WuuI10/PL+C60DzD3n+xXLM
c53fN2NdSJzY6ud+iPN9nNXGT871yefJ/Oa6wLke+TmyPjgfOe91/tPe5/mC
av/3O7IYO+i2Vyr9q7+fJ/H9PXC9J+5TeeOhX99v+eJ+2crKxu277rhnon/Y
/5xnyfkpKMd6VB78v3dsHtauv3XR1z/H5Jz33VFPSfswHnV1teXdbP6qPPwW
TTx/uqx9u5a0j/Z5LzxHx4f918vVo+PToRg4at35jz3116T+/XB9AO7T8pzv
YRzal4xP++J+3Fe7fz+03yuq4xjXf48jvjV5ZmUAxjfN7+D7j6r+e6hB94+N
XtRzvy0z1+Z1L15/W3PxWeWE6t/Rv/tg/0OWdTr+gIJ58Shv9U/y86rAPJX2
97Txvbbf8L/9v62J8g+r9dM/a845T3V890c/h/UU/TPOW/az5redOGbZ2Euf
blOcWH2vLyrhPXX/dU/Zd89/qZz96OfnfU1+/sX4kY9n1jVq/7NcmGerK7cO
GbDs4ynRfwz937UI/Vyf5Hf1+dLdP79hn3bFTU+06n/fLXVZ3/D3P/38UH+f
Ys6+b449b+8uSX7H9tX51aEI49Qqa0Q7KOe84zxUfqIV5hXn2SiZX2wX+1fb
x+sch9cf/tHf/s+0+SPrsugv8+Nu1PcR5rHOX/Yn55/OH9oFnJfv1pzfzTn6
MdP5q+0P1wubPzff9D//pjfdVfL+ozFvv415rPOX84Y4pvOn9vP5L+Ifr+wq
85fj/SHmofITof03Nc0saf/Nfl4WOj857zgPlZ/4APOuB+ahzj/m83LeKf7x
72n/UB77Jfn+HvQG51eS3+7K9UzkYd3G821q198aefvdkvIsdznqqV1/v8zj
dJRjPhZ+HkQ5y3HeqjyMT2/TryX9y3mfrH+WYz0qZ78FXL29QesP82tOE88/
Lisf/r6vKTnfrfpvQdO0kvFhfXfJL+Un+nVHPSL8jdklNo/8+NQXPTyOyvwp
mjjOd8r68nq1ve0T1PmBdQE7In4/Hv3S4OdfrP8KjDvxJ7TvgIzyk6vv+xb0
5mf5qNAfJg94uIOdb1mGf6/88j//9n9x0/QS/Ue9o/jLnmT+iuo/0xsz/uff
3Cbdvwf7LA+42DbxD/pV8WhVDv1Z9A5/R/7fv3dxauiPRD+y/3V8ad9Rj+j4
cV6NRv2jZX6xXo7fPTK+Hj+ina3zg1emSf/x/cZinHV8T6/+e7yJ52hPq6mf
/zYu1f5/qkH9O/a34EcyPxo9jpmc8an3MM9qz6/y5/O9Ob91ftyGeQH7MuFP
Rrv1/1l+ioz/zX7e5Dp/xH8sPE5w/rVD+XYF66P8fehdjiPxRMcfdo+9B+U8
X4T6T+dfiX3QSHl32HV+nKL/T73N8Z0d9Hnxj+u/z+w3xlXCOPQo9gz2jLXv
Q29XJfyZ1x8PNej+HvpNbPddNfGRfmm3BB/EbmvS+k+GXXt8sGsL2LtWnv4j
x2mgjI/3X1snzxe/vOgT/OyIX543wDyI/A3XA+XAI5v/4ncX6r94fE75BfIH
LK/jI7wF7QydvxZfVHzQdaP9w3GhfGdnz0Z+hfKvhP7S+W/ra6asD4/bxu/I
/GrOaR83yvqs7T/e3qRy9dMohz1v60vXB3inbAfPA9jzub4+9H6eyTkeXGc6
ft5+/bCi68f7L6l9xXXFcdLxOxHrRngIqX9OQ5n9J/Mu303WB/GPuPdF9d8y
63/0dx3L6/k80LdqZ9n85Lix/knCz3DcaL+8J+sP/dIg80/tM3s/jqOX11t+
b/Bz4/6Rd2B/sHySP15z3vNfnN9ebyy2/hO7Bus9vh/ltB961sSX1sX+wLE9
Bb84vrQDSvhX8JPvJPyy4Guy/1F4qzJ8KsVnXifO7C34on6B7s9mvz/s9FT6
fVO2W+eXjFujzh8Z92R8fPkXE/tJ5/0HMr/udnLDkULLr3R2sOrX8vnF8tNK
5if1seeP4vgOgF22I37JR1B+gLf7KrcEe9Dkar8E/Jhl/A35E+Ke7u8Lv/c1
TfPrTNa3+Q1ZsLcif0VedpTHSSv/rreLk/490dv1xRcvhPp8/3Ys7nU4pva5
8qP3NXh5LKf2OfuD4wIewOTUL3781H4vjF9S+53rgXLwkCafDd6B9Wv/CG+S
6fqfIfOrxH8pvJ2k67tjdq+zM5Rf3GDz8FaZf9P9vE/WN/VnnedZTc55Rb9h
e5lffF/x461/PC+Ztp/+kfAEiX/OdaLjr/22Eu2gXHAjyT8Uu930OeXCa9Nf
kfp30PET/9vWFdebzY/bPK9QYZxC37/RzfOUv+A81vmrcQmd/zP8ukr4U+X9
dP5yPD/0PKC9n3/v9kn7e7lxNR7X6t/F9SvtwDg+vfy4J+3n88nfHCj9K7xT
sVLGR+z7ZP7wfe5y/ZPaf8LDmPwnuN7k7OPEPzXcUn6D9n1/8Pi1/T/jR5uU
nzT+CHEC5W92R730r7V/WS7ohfbFSVIeA8W4USm/znq1/bwuONmC/p+v9nkj
f0v490aO2wxXT5Q3LPzBndfss0024Yh/a3/eSS+WyHfKnh0y6fT/uiXGJyjn
9VD+3aQ8rldwX9K+JbiO5yRyPn9JyfN5/dyS54frL1bwnkn9KFdZ8r9sH7+L
quczUM68a+4DoBy8TBPzrnT/CMsz/03Pf6ac+dd6vgB5n5bqx3fULB/Ty+/j
97dzvw9Py/+1ovnflPM7Bno+LuU+PzDa75RzX4ieL+DLd82aWuj/30r//7PP
574YPd8YvGrTfLy35v/8c/1b18jzi66R/iVv21L95KVq29eUt856Cr4E/uBJ
8hO0w5L3n+71g/JLxityn7TU39BS/Zqn4+X3NRAXPV/yz+Ob1+89S8r3TOxX
yqnXppfUz/7fpYX+V/3y//f5jD/Qfr6r5P3+cf+aPOlf1N9QVr+3B2h/xfYR
tylX/UG9Q7nqH38/5e/+0/W3VJ56Scrb+3l9UFen+N9SeeodXz7qn5bq99/b
rqsrO//Hy5Pzb01+o+Cf/16blc//tfqJR4ubVP+0VD9xkfLk+04uH930rMnl
+Q36/Jb6z5/HYN83zvzz+b7TGm4U/Jf+bdT+bal+ry+pp/T7qPb8Jn1+S/0n
9Sffb5b+rdP+9fEO5r9EfPP+FnEq4Q+tvOqf6YIfql9YP+37Mn6BelL1T0v1
a36P4iNxkfUrPsrzm/T5/2L/1dX2P2P7p9Vsv/Vvo/ZvS/V7f8H0kLVfnt9Y
+/nl/Sf112n90r9N2r/E067/Perjj4d2y1S/8DrvK9M/uC+Rr9v7jncfu3q9
4Xjt+ltn4b63c5WzHOtReTc8l+1Q+UbU2w3PUTn1F+pPnr8B1+n/qJx4q/sM
Ked5nNyfp/Kw/7djNkjy+CnndeyDzXR9UV/wXGUtT7uc/oXKz0U52t8q53kt
xDWVc38QcVrbx3L4Dngib6l+vtejJe1jOdZT1j72g8rpr53RQv81/cP+u9/2
Uar8q7h+Ju4raX/G7wOXzB89X9HkjIcyPqLlef1u3Kdy4b1L5ORHOib1e76p
aFI54/0+vyr1b5gXVLv9Ma9c5ayXzyl5P8lP1/r7ZYwb1W7ffcyPS9rHcj5/
UfH7Hds3oHKP/wuT/mM55DmU9F95+4x3dPlpUc54GvnFkvmD+FDXpP0DXjl6
5weeqMv4e8Ov3hh49/fi/iL6A5xnLfgXjepfnPrAtf3v69E983og7u86ZdTR
25z3xrbmF1525Nm/uOGJLfr8xE+R55v+0Pj+wHt/9uDXd3u6Mn/qE7+59vgO
2THh79g/4Xn5WLRD+cX6xk0/77FqT+jXvpn6H03fnnFr1wWtslNvnPpymxF1
Cb91xg+Pf/nVERsrfff60wEv71ifjb0hu/3ww+L5iW83PjlvypH1xeivD1jw
/h3kx6L9f/j5y3991ms9sqW/uLhpx1++Vnnhg7XHXjIy8quoPx99Wt2uRxzW
Odv9V/WvXXthtK9nnnniIXv+ZDfTHw0rzvj0a5/F8/UHtPru8d3afZiPr5+9
/thrOmUj+67cd/49f7byPx793j7PfW9gxHfURznt4wnbj1/76uhO2c3/fuXu
a15ZleB749HFqPvv2T478IRW33i8qZ3133FnzRnY/fedsgG79erVdvamyvkn
r7jnkF/G+M+cTwdte+/WDnbuy/L3xkx5ftUnJn8TfxPnh111wnYHXfiCyakf
ntntyh02vNg622bFiou+Oy5+v4p674F580cc3v+vlSXnX1T/2SHx+yPNnSf3
G3lR/+yRMM7J+bHPb372wQnT1lWe+MbXLj6nVdts/PhzFq7Z8GQc/wcGvLbP
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
fCYuyz5Pm38Sd8sUf1vK36N9+Kzfh2nlv+bjYoXi71DgtuzztPIDgauMew4X
fH3Zx03zNoKfG4DrzHOpnX9tcbMkv4/7g5r9PmCxXzsWxHmNTx0GXP02cHa4
4OsGH5etKH629XEztD/ie6OPy0EPR3xlvbCri26C/ywHu7q4QPCdeHa+3+dr
7af/Qrt/meAv/TP4ZflAwW/6B41+H67JH/Zx2fwOwV/idrPf52v9Q/5VeEQr
P9Pn3Sb4Tf4UvGkiJ38oPKvJyU8Lz2lyyevOVf4syj3oeW6Tz/V5xYlc+I1E
vkjsapU3+rzupLzkjSfvz3LCo5t8uM9bTs9/QL2jPE8v7a/PhAeW9rUqwKsn
/fuGz5tPypMfX+F5fpMzbjvO8+gmJ/8qPGJ8f1wXntbkw8CfgjdN5OQPj/U8
q8lb2v8v/GLSPy3tr2wp/kb79jLPo5uc9u3FnqeN7w/+mzxq7fZZ3nhSnuVY
j8ov8HnLiXyG2M213691dqHngePz4c/Tv1f5Uf78lKQ8+fFzPc9vcubFj/M8
urS/o9mdan/yvFryC7nIp9+68/gD/qMbyr+aa/lHcJ336fm3+K57duzHc+59
rk2bhJ/gucDEP5WzHOtR+bTqc/sa/qmc+MfnaPtYjvWovKXzG4fge97Ev9rn
Ly9tuKbkfGaeDyXnkEn7N9tzdHyIf6xH5fye+NbwnfGkfnx/PON9Wj60q18W
yu+Q9C+v8z7tv61Sf+3+21RpLmnfR2dddcHPpnbPmq+uPP3SpI+S+bEF13mf
Pn86xnVRyfw48Wc/nbLxjz3Mv1f5ApkfKn/nv745cPHb0b9XOevlc7R9LPc2
6lF56Lce2dxHG348+vvrk/Zx3hD/VP4gyg1GPcn4XfKd7y/fI+4vVznrXVAy
P1luC+pR+djOP27b++MtGMe0PK+fgvtU/sX3dv/3WUN6Z6GfOyf9uxLXeZ/2
3xjUy3a89OSfx47dZ47Zx6vwXflQ7zaJf+39uVua/Hmo6yrjQr15qP9L2dbq
fNxq5QW3cuBZRnnjxcNXd7zy9fyH371pfocP2ibnY+8xcLd2C0fsZ/jG+ign
vnGdDQ3rycpz3hP/NP9txNxhww5Zt212+cOPTVq/akVlUvU37u+Xc99xnf/i
+XSch9fL+bPsL+ITziuU9tVjfW6svFcdjxj/fXjywRfutXHPjOd7J+fX3ntq
x3Gd3q08u3Had795X6tsdvjb6v8R+pV+789Df1v9GPfi+W0++c3Pz+mS5A+g
fNFcnd/Mv4r+yYTfdfzFhY91yX6KetW/fifML57bjnMOn7f2vX7Y9l86Zv+t
lZ4X9rryS9/cUrlj8qXndBh0j8lzOT9T/evZ1f7ZAefKv5mH94j5Ia+F+vOL
T7n58RlDO2aDd7/2Wx/2jv59uL+3zSt/nvG6ygnvLr9j5tm7Gj6yP63/Zf4N
lvnH8ZtRMn6s95o/TXzp8KUdsjG7jvzBTkfF+BfLUQ+H+iM/NezP31r1q//s
mr2LecN5pPOPOHamzL+vnPWbpw7ou1d2Q7X/OhfEScqvwrgS5zZOa566+ICY
X8d6eb7l0eEcy9y/X+ssrO9NlcnV+p6u+Pb3yfhdAfWviWfh/Vtls6p4/rbV
//g5ny+cu1ebbH7/A47YdOimysf3Llr/whVLrX6dv+pfD53Zf17ddgdn/C4C
9bjUX0xv/ZvTH3r8y9mTc/KjGneK8fEcuPkecDQX/BwDXAT+5lsEH8OvnTud
fB+C8+0nwEk9P1DsmrxB5h/r5bzW/X3Mr+L8P07wmfq/P3BY8Xe6s7s2J/g2
Cbg63OFsxFfOV+Kn4h/nr55j7suXn69+J973IazDkvVXof5RfCSuzgXOzhV8
XQbcfAQ4qvjJeYf6k/2hk/G884Gjip/EReBYZZ7gI3H1TeDsOYKvXwVucl7q
93UvAS4uB04qPt4MXCXOKr7Sfi5K5h9xzfJbBd8OwnxaBhxeIPhL3DP/WvCP
/jVxWvGZ5WZh/B+X8f8tcG8/4OAQwT85t7cyWvBtBebrcODwQsHfHwH3iIM/
E/wjfs7FPD9b1g9x91LMk88Ef68Hbh4NHFX8XABcJE5+IPhIXJ0LnJ0j+Mr5
+4OS+TsNuEicVHz8FXA1A84+Ifjq/fPNSfyd85b3zRN5S983GOz80/eT+sNv
0XB9yfd9eH6796+jfJ6b920z/f6O7R9DPdp+zw9sl9Qf8PR5sz9VznLezo7y
YBe8m3v/Ounfykg8pxA58XUV6lH9BnvC9IDWz3Obj8N9Wj/tjenOf4xyy6/E
fdq/q9GuRSXv9ziuf4T7VL65qo87mX5W+Tintzsl4ze7ul5aZbRrtfwpVbzr
IP619t/zOeupPX97iH+9WfBhQ87naP9o/2n7F2E90g7W+k/GuM0sGV/iNu0m
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
n/mDzDtX/4Hyb/l9AIU+3/N79Un76Ueo/zDP2WN1dVNq+h/vW/628rveLqzP
lH8RuzXhB1vqP9b/js9zTtrHPPE54n9QLnnYyfwgvztK/Af2v+wTSNpHO0D9
C/F7MvUf/tnxk30AFW0f1/FW8S8K13+9En6V9ZfxDyxP/aj6k+XpZyi/anrf
71NI+pf5/cpve71NPRv16yKHC7Q/Vb+aXkrml88Pr89U//ry+yTzV/jXRL9K
3nqxp+hnxW0df283NFdUv0peANrFf1FOPazrl3Lq2Y2iX+dD3gA9vUb0s9fb
af8yn+9h9OsZol9Zfg70dLPo5ycg3ww9e4zoV683NuSqX8XuI8+RvL/kCSbl
fwA9O0f0q9iFtEeS8sdAj18m+ptyrl/Vv2p/6/pl+VlYR6pf2f8Yt2Ko6GfW
fzX0sK5f1n8x9OwI0a+sH3GZbI7oZ8YzJH8t4jPiio/4PAwrz7ihjz/E/FPy
f8T/2v1jcVeuL5NjoTSKnWvyXm5/z7ZJfin3vTR7P9zeb08ft03sa9o/zC/R
/S98Lv0ktZ/v9HFHy/ekHH45/K49s4Mkfsx1y3FW+5lxwScR1/xQ8keZH7AS
+mUa7CTKGdclrnGfBuXMn/Hxh5gfS9wF/lseCOXETR9/iPnfXq/3T+KPfv/Z
ftk14p8zbjwH+Xm/Ff+e+Tk+/hDHn3YD9y8y35Zy5mf4+MMXVp7nPz6GeXkA
8rkp37WF+cn8G8kjNDnj3t9C3Bh5PCZnfhL3vy2V9cf4GOPkar/39nHpAnk2
Nj4St0f/H2D1+317myu146ObZf/B84KvlhfKfFjr32nIy6Vc13/4LRoov174
I84PyleCZ6L8XZ93msQfJe+3ovY98zX9Pp7oH3wbeZ8sr/ggeaUWB6Rc8iYr
s2R/4MnCvybft4E9xvYhHmr9R3+K+Qv1IY/S2r9a+kftH+Z3Uv657J+h3mf9
gQ+M/B/7y+8jjvYl839Zv+I380Mfdesori/Ji60Mk/x9rk/KJ8v+Ep3fuj7H
Yj6z/bMkf0Xn92qZ31f5vNmEXyOv2+TmZ8zPAm9t/Rv0XDyfx/P/9fZLueR3
2jzR9ksepJUXu7ZR1+cWH7fPxsj4yb5F7sOx8gc5/t7yVO39mB81xee5xvxi
6OUtPk8yPt/ZRZanZ8+n3qYeV/0tvE2y/5F+neTpaf2W3/Nn0d/Uq+TdVL8i
3ynz/HrUn1yvkuca87OhVz2/HvXrrs5u3y5rFP3v7XLLk7T6h2I9cv+86lfY
p5nn16P+RD5YRl5J9fsWv28wmT/eL7M8Xcl/oF3fwfaJUy77GpL139L6YL6X
5OGanP6E5LHa+FLvUg+r/qXe7uPzZEX/mV7LVL/6/c31yfp/2PHP9Yn9/Vuf
t4Pr/Bf330mczsr7+GB9sr4P8nZ5BhwofP11xg/AHzF5iAvV2fN1/S+X/Te0
xynv+NYZVz166Wf2fpo/KnkDyfr3/Gx9FtbhHvb+Ia7Wytq/fzVOEuObkhef
vB/3BVCO9mr80vi7C0J/WHm/77k+Qz6TyTtV64v+XfCT4/oI+/K2yXz5uL65
riXPw8pz3bJ93I9H+TC3b68+sY+bZH6vkPnNdcn61T9lPI7la+8/3sP6R/mH
4G9/If0fx0d4r4Rf5nrjulD71K/HurqpYt9Sf7/n53FRu37bp1do+ZF+n1pS
XvZJaX4X7LStlSfEPqVdQzv3R2Lf+v1t8yu6/5Vy2qltxD59xNtFjINnKu/9
VLBTm8U+5fv5PLh0f8RHfh9b0j/sV7VfYVdU2sNOHSr2qS/fXBkl9innD/e3
qf3k29/aznnQ8kNK/EuW5/pYKeuH4/dDvw8uef9f+H1kiXyM36eXyJe5PM1o
33JdeT0U149f110y7rdR+Y0+T6NO5aKHCpVLnnzSPp9n0ispTz2k64fyTtAz
JfsTsjcw/1Q/LfK4muwfX+RxGfuot0nax/we1U+UXwE900n0C+U+D6Muqd/n
SbRP5Ha+pegfyqlnhot+0fOlVL8s8ricDRf9tcjjfqJ/fP91TdaP1wvtE/0i
dgXtjaR+6iFdP3Z+IPSM6hfKMW5JfHqa8/+6l6yf7tndjn+Ncp8/Yft8pHw/
i//ULt83kzizyX38tm/SvmHg5RFXT/ifyz3vnTyf+Qvwn5L2M+4ieQBRjnKS
B2Hyf/b8GMmzMLmef1A7/mxxl6T8x7J/TuUsx3pUfrXzm1uXtC/uH9H2Ue9c
4/METM78C54vonLGtT7FfVo/8yckD8TkvC55Fib3+YUbE37P7xc2/sLksm+Y
7TU58+b9/pWI700+L9/WAeV6vpziF/PPkHdWxu/ZvmONHzFf9Dqco7FvyMMy
+Wq/78H2K1D+Q7+vIoefavIVyHuXc1CS+GJZ/I58zSTYLcE/ifmb5Adp92I/
g8mZv3inP+fCxn+i7I9X/dng8+oz5vNT/rnP288aJb/Qn6/0pYz2oq6PrSX8
P/Mbef6i6pdz/b6QylvIg/Xj393iRkvF/m30+x5K+EXbt5HXjq9vzN/BOSq1
9fPGyiqfxyvrZ4XtI9X1E37rGgtnf8X1J+duJfy5ng+p64frDuemVHT98fyY
47DO1H7iujkU60jXD89PWYx1mMn647qYjXXyuqwPOZeNeaxWfoE/NyvX9Xmj
P5er0PUh56IVJ8j6ZTnG8dV+uMSfy2bnwVHO84u8/RXnv9932SpZn80t8Hdc
Xz/0ecwJf891eqmsT+47ljxiq5/rBnkUyfq5GeuO6/BNWX+0F6/yeb7Wf3Lu
W67rh+vO+xdx/Ql/n8Sn+fd0Z79F+fOyv1fL8/qLJecbkP85xvMcJh/h7dKk
/uXeb0n0r/hFSf30X1eU8Btilyft5/6T8zwPmMx/4Zmkf8wvSuqXfTfJ+7Gc
8IAmF7u/pH3NzK8v3b9yruexTE5+UHhMGd/PKpd4HtHk9LvoP9bu/1bF3p4H
NPll/tySXPODGb8gD674Ps3nFZgdTzn5de4TB89ucsYXeP5D7f1RFvcvdP8c
+fU3sI8b8XKT077m+Q5zBf+2+LyQfEvN/P1y/1h4m0LPt2G9Pwf+IE5j5b39
tKai+v0dnxfCfdZJ/pN9f1jypyQvwOY55ZN93kGm9iPzJw7Gvorgz0R+0udP
fJHsH5G8kCT/mXh4gz/HwMpLXk6u+18YXyo7H3CuzzvJ6WdJ/fmf/T5+k7N/
cK5Kkv93oz+3JdP5zf31M7BONsj64H5b2oma//c25vVIH0ey8lwX1J+6PlqK
v/j9Lxt4DoXJGd9hHrmuH8aXOP9VP7JenMtQqX3+QTxf6xFZP1Mwb7/APNb5
y/3EzB9cJ/NTzl2Bnx3XD8838H5ynL+c/7S/NH+U5aZwnsj6YTyY60Dz6xb4
c4Noj1l5rosnsE50fdBu9PHzOP/fx7x+0sexTc51wfws3b/H9cp5r/jP67xP
5bcOGbDs4yk9sv5HFmMH3bY62V/L67xP11fjoV/fb/niftm7lY3bd91xh0T/
rAzXzT5ROcuxniS/Z983x563d2/Db5WzXtSTtM/mPepRefib+QRFQ3K+c7Xe
9sYPqTz81jWyntr939rsc5Wz3pV4Tln5XUvK7zdq3fmPPfVXjGPbRH4bru+P
+1T+wf6HLOt0fJ9sTrV/uiT9OxfXP8R9tfu32fZJhevzGyi/p3r9wzyMbxrf
ZVxvVPXf7Q13yfobvajnfltmfpF/8cL1tzUX7bOTxiwbe+nT0X/juTNct5o/
JvPK5gnlJ1brfysfFerNwnMiPx/65wCbf6xP5x/7/8DQz1ae5bj+NH4Ynr9t
Ft5zbaXuxerzY/4K+nWm61/+i+d3cv5q/iCvcx7tLPk9tcdvsY0f590eVRz4
vLJ39feVSu3n39eg9kO/L9398xv2WVW56YlW/e+7pS7rHf62549Gv/O9Twnj
YfWTT3gX60PthzA+rYoeR3xr8sxKhwzzzORXYN7dj3mo/ER4bvuM82yUzC90
dCPfM5mfaP/JmEd4D6v/Nr8u8/1lfnDe3ot5oef/6bzR+UP/jPPyPZnfvJ/z
WOfvzTf9z785TXfh/VT/tTQ/Tsa8PR7zuJXMX84bzr+vyPzhvJ5WMr9Zjlc0
fxztb+D5s8n+XbSH6/tUmV83+3lZ0flJXKbdp/Nve8y7DzEPdf6xPcQ9xT/W
e5cb5yifLv2i5UVvJPWH3/sa2L8qn1Rtb3ebXyq371pLP+j8anT1RDnnG/RH
Un/4LZpmlrSP5ViPysP8f8f8/5L+tXWs65/4NgD1JPiActNL2tdS/WHddc0m
YV5oec6XD3Ff7f7tafuqsY5tflF/EHegR6y82CWM09RRTnzk/O0e5rPVj/Fp
oF7V/d3EH9oPsCdMzvmBeQacHmByzr+ZDp8/rPj22bhzPmTSP7AfHmpS/RfW
x55mfyn+sV6OA8bL2if2V4K//vm3NyX44+ZF2n8BHztkA6EXFF/6VPGoXQb9
WfQNf5s84N9NNj66P5DjivmXbS/jK3ZfruPHeTXK2ymKH7S/kvGlf7mrs7Pj
/PP9WVen/RPeb3oD9ZP2L+av7U/7SMZvhrM/u2c6v9jfxIHa49tsOPaBzD+W
exfzrES/Nvxj/fq3cZvxP//mNuj7c170xzxR/3Gm9J+O/81+3mQ6f8QvTL6/
sQv0Iu041ufL95R+u6/J98+G/ADvpyTtv7fEfp/h+43v2Ug5/Qtdx5QTj3dx
49Renl+uXzm++we7Jd8z2DOJf4BxT/gzsQsral9yfoXxf6qptv4pGnh+qeKD
9j9xkHLatd92dnZ8/wO8X5jfIuOj8wL+vM4f258a8CTuXydvwPKh/1Yn/ifl
wU/vYv0nfjeeH9vPcaUe0v5Be6x+HR/hLWhH6/tXpHzy/F1Lnh9+72vw8sjf
7wF+hf2H/jI59Zm3z/T58b10/Xq/oWf2RfXfrCbfvrpG9rOe/6LleT/l/bAu
2A/9ZX2w3ocdDsf1yfXFea/jOwnjIX64jR/61+xHtZ+47sZ6P1/7T3icOH4n
Yt2ciHWk66d2/xQJ/nHcdH2wPO0DnX+11/ft5n8Fe22A8BMxf8f3S7TDtP/5
fYqeMj+pz5THoBz2mbX/Q7FPT6/+e5y8RDFN9BPtU48j5fhW5/6pfZDaP/QX
P/Q8l7Wf40P74T2Zfyx/G3BM8cvjY+uEn6CcOKT6X3nR2vgScbcEn3K1U1W+
h+dxk/rZo7vK+COvsdgB86z2/OL8ba7o/Kq9Pu5rULnnSbsl5b3/l9pPr/zy
P//2fzF5gELbx37T+TnDz/t/2b4qwcc6kZv/4u2NaN/vjl/yEZTTP2D/wB5M
+Ff6j+RZ/fi3Nt6Kf1OOhjbKOjM5/YYenueI5cmfASdhbwi/b3Zxi+v72n7D
//b/Npsfd6O/PwL+z3T9vK7yPt57ppt/8f0ZH+L8DPpvmdUvvEFlt8ADWPu9
f2o4Kv1H/7gZ32NL/Hsrf4/4H+QvKNf+Ed6kouuf9updvn06PzO/vuL4s3+Y
53yXzE+v1ztYHEHHz8+j2D8neruTetTKb+9522R+8X3Fj7f383ZBz0Lnh67P
1x/+0d/+z7Txl37P+sj4txR/of7iffr+tC+Ux6T8XcfftS7p/4jv+v6T/LrK
0E8mF16B4yjzo1l5QGu/+FXk0RP+lm80TeY/5b09T6fz1/w0nb/C+5ToP9Mb
Jf3PfmlfOr97unGN49OSfU85ef1+0r9sn8xjk9O+p17T9vPvaSXyHl4vJ/YZ
r/M+1Z8z3brvmMQ3aN/39zy+jE/0O1U/tvK8ZAU8kskZH9jX+xEml7hYfoKU
x0CV8muCf4n+ob7n/g3V/+SP+HtFTfumWX7j/G1Y+IM7r9lnp4y//6p8yZBJ
p//XLZ/ab0n5gr8qP/eIf2t/3knv5vxV+QRcn1Aib6l+lLPff1X+bHivnL8q
5356/qpcz2Uok5d9n4b5Fb+VPGBfPp77/K/KmW/G35L2WV6gynmubd5C+UUl
5Xl+O39L2p/5/KYo53lixf+yPPNrpvj8MpPruVkl7598R41yfo+Bv7Xrj98t
KXk/O9+/tv20T+Z/U/5H9H8iL+OXiVsevxL7rdDff01OvZrqV8XFEv2b391C
+bL4iLd/Uv+W+Cy/Jqe91et/WT60f5+Cv2X2hfIkKr+7RE79rTydtD8v4w95
vVeJPOBiu3g+4t53vPvY1fH8zw34m/IluJ9yj9vNla7/Perjj4fG81M2Vsu/
beW7VeVR/3XD/ZSzPsq93rD2mf3XFfV5+dvWft5POeuT98+k/do+q5/3U+5x
Oe4zohz5nVa/7p/B/rHcl4/nv34Vf1N+pnw/2eNumt8ueaXJ+Yr83jjl+v1O
3l/2fUh/bgHbF/fHe71j33moaP0zSuo/V9qn+dWLpP5Hpf5HpX36fXW25+6S
/uN+R9r1ml+9FvmmrF/Pr+Hf0135VD/58vF8ef3+mJ7/wngy5crP8G+2X+PP
4Zd5VWn+Af+mPFyfLfzGO9b+En7Bnq/+VUvPJ/9bFp/X9gX+5THlX6x/eon/
7f2aMv7lvgaP30l+jJVX//2umv1XSP7bBuu/2vHDjtJ/3VVeSP+V5k9qfIfx
apk/Juffvp7on6t/ofUPvPdnD359t6fz+VOf+M21x3fIjsHfUh731zUqvjYe
efYvbnhiS2XsqKO3Oe+NbZP4U33jpp/3WLVnFnC7b1amP3y9/LeuMuCVo3d+
4Im6Ar/ZDb96Y+Dd3/tzRcrbvFD9ceoD1/a/r0f3gvcFfRP5pVNCuxm/rFyG
96H8zffGTHl+1Sd2Ps2wq07Y7qALXzD5GT88/uVXR2ysjD6tbtcjDuuc7f6r
+teuvTCe3zWg1XeP79buw8r4+tnrj72mUzay78p9598Tv3/449Hv7fPc9wZG
/+HMEw/Z8ye7ZVJ/3nevPx3w8o712dgbstsPP+xFe/6orw9Y8P4dXbNhbUZ8
dchZPZL9Q283PjlvypH12Wjcp/rj8POX//qs13oUS39xcdOOv3yt8sIHa4+9
ZGTcX0i/45ndrtxhw4uts21WrLjou+Pi9zmI7w/Mmz/i8P5/rSw5/6L6zw5Z
Y/LmzpP7jbyof/HIt2fc2nVBq2T/+fObn31wwrR1+RPf+NrF57Rqm40ff87C
NRuetPJNKHfqjVNfbjOiLlP9Qf0wYfvxa18d3Sm7+d+v3H3NKzF/j89rPLoY
df8922cHntDqG483tbP+Oe6sOQO7/75TMWC3Xr3azt5UOf/kFfcc8suYvzjn
00Hb3ru1g51fuTzMB5Of+cCA1/YZsk32eedsxG/e7ZYdubDV2A7/5+/yO8N4
2ve1Glac8enXPusUxzeUL7q+dM+Ej3turvzytpEnj+wfzy/auuFXL902s08x
sTp/N+YL79nxoX1Oj/Gry8N8jfvf+jZdufx38fyTe95o0+fEQZ9X7nzkrntv
/dq22cNfnHJtu4HRPnsGvMJ+13U8/MEXOmeh/nUmP6/DO0+0+fHeZjcTR6T+
fOkze//+ol5tso8u+sPgg7sut+djfWUTZrV/ue+U7gl/edKqOw4ZtuTQYtim
p7/8/St3R/17Wf2wZzParap/JlTbt3NxQbV/FuZtq3jT3srz/i7BDs0+EfuT
7RlTbecXlUnV/vzA5Du+dOReZx3eqxB+RNr3aR7a3ybbY9DNi556P+a3bjni
rCeu/HX7grii+mcc8Gki8Gmt4BNxqfWy5yZ++uSXs9dO/Prw8bd/pPH5LDx/
u2xBdfxifs5O1fZ3LgIObgSeR/vkGfgLtj9N/Itxt1xx6MF7ts2+OmL7d657
q2t26H+f8ki3oVv+aXx/b81O/QcO6mP5FWMwHygfG+ovdl49qsfK/f9SmfTr
abO+3XWdPX+azDudf8JPWTt0/vhy/Ef/wdqdtJ+8mehPq581Ub5E9CPvp1z1
E/tP2l9I++z92uJ+yk+r4mIXK78C+oryN/A35afifsqDXmgl5VdWfPmVlSGQ
n4T7KR8OvcPyyf7kKi7va/KAw3sU/vldTa76ifdb/6E+yqmf2D7WRzn1E8uz
vZTPhn7x7Y/6Kei9biZ/sKrnepmcesm3P+qnB3A/5ayPcvJqfnz0/KPuGd+P
epTyoB/X2/jeVdU3f/d9b/zN8ryf8hHV/uif+fLx/Hv+7fuvv9U/voor9VY+
rJdon1yMvykfh/spp91JeSb251H4m+1fgPspvwB6heVVv8xf/rvXJp50sL1/
wMmDTE5+w6/vqF+G4/6hfD7qo5y8GOvvJvwKeTHWz/ZSrvii+qWl9U/7m3LV
Ly3hC++nXO1f4hffb6LgVxiv1639s9ZvO+/n9ZFfeRh/s/wxuJ/ygVW7I66P
0N9x/yP/pnx/3E/5YOA1cb9e+ue38BfoP9CfoNzjdV1jmX/CfqCeppzxWfo/
k6T/wm/RwOco/k8SuwD60Z6/HvYA/ZfTYC/Y8+FvjIL/8X34I5QfB3/FzvcU
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
ku8g/3Gc5PeSLyH+3iT5qch7LRA3royT/Nfx4Dt2BP+h+XvkS4i/l0v+4sXg
W8i/aH5kS/Yx+RKuQ8Xni4lPwN81ir+wW8e4POuIv4PAd5D/GCz5hbSLl/g8
RZOTb2Fc+AHJb+X9T4N/WSP5jWwP45ePSf4seVfkgab7y8F3kP/Q/MVLgUvI
A03wG3mzBfN0V0v+LPmTVeBfxkr8l+0hv6PxuwngO8h/aP4w8mKNf18v+bGI
W2eIW2ean7s/+A7mwWr+MPJWjX9/WfJXkTdbPA3+pa/kz9Iepn2s+C/Xy/aP
Yb7V1an8RtjDB8I+VjntaeK7yufBHicPovlR9bCHYVcl5WlPE/9VTnv8KNjn
SfwX9i5xXuVoF+O3if5k/iRxXeXUN0cD11WucUeVHwl7mvitcu6PGwpc1v6z
/XHAZZUfBHv4JtjHtdv3idnXKuf+CdrnWv9zsIc7wD6u3f8R31WOfNmCPIjK
b4M9vBD2cdL/sKctvqnzC/b4XrDPlf9mPvmpJfGnluKbxPu+sM9r5y/vUND+
VTntafgNSf8Qn4nLKic+zwcuq5z2Lu1flfeDPY33SOTEY+bVaP9pXkTt+ELv
4lbYx1o/7Wnia+348TbQyzsk9TNfZ30J/jHeZ98/q9n/dcV1sM9L+IvS8xlY
fqrvZ5Nz/Uj+h8mZr4Y4XUXjc9z/gzw67gMyOfPhJP8jo5z7Z2A35l0lfsb9
W4LjVj/39whOWHnmy8HuzzX+SfsYdmGu8TU+L+DImvwBia+ei3xK0QP2ftw/
BruS+8isfvLjgkOJ/Ys8xorG72j/Bhxtl2n8Fn5LAb+F+8Ss/dxfJvkjVp52
eb/gV5i/QTnzISU/RMvn44Jdz31wJh+NfLoQ59+L+4is/7j/SPJDrDztNsTh
Khp/w/4o8BOvcJ+PyZnPJvhZkfoL2IW5xsfotwrOx/mPfEjYbQXtOd++doXg
jNUPvwH4vDk/TeKnvB/78nONn7E9gR/+ID9F4rPMtxQ9kvn2fQqcXMd9ZlY/
8+0Ex+z9WspfJ3/9p2BXVuolPkf+ehHwX/PLmc8ZntMe+SkxPr3Ex22T8wdo
tyMOXJkm8V/ar9DDhdoX3B8m+Sm51J+vCn5B/pzEZ2fKvNP5NxT2If0Y5R/5
94Xk94U/ZVzLl4/8Iu0bPvcN4T+Ju5Qr/k6F/c36DxR+k7jM8orP5EMpv0n4
beIz5cqvkr8AD0r+IrHPffsjPtO+p1z5U9i1hW9/xGfal5R3+P+4exdwv6Y7
//9EghCDRIKKS0KISpFIQsnhu3t3LT9EkTCmnSbplFbdf6rNoZehwsy0BPHr
jPoNInGbUrmd2NutQolE1U/VJQgV5Nq4JFH+5uz3a23rvb6735jL88zzP0+e
5+Ssz15rr73WZ70/17WW+c/Rjy+I5ifF7+8iv80/j/5P+50WP8B+of5087+j
v8f1ff9RNf9fNP+59JrAf+5/HKW/ifu7/1T7NwL/uf7B37z/Z+b/BFehO76i
f/P+B8y/Ca5S3/GV56H/wvzbPE/+9TLzr9If+O9e85+3yt9rld+N34X6jq+n
2P74lea/4Xn5iRueX0Z/vhXNb+U/Qv+nfY8fbKS/z4vmt/K/o7+fFc3PR/Kf
9DfjN9D85/hH0T/H2/6JQ+K84CQ+g39SeVr5eNsfMTvO6032b6DPniz91veH
oA/Kb5zop+ibZ0j/PNL2b6Bvon86Ppp9n8+0/SHg3xeEe88ZPk6UPii/dBo/
kz4pv2aCb+ir6K+fsv1B4Nso4dp0wy/ed7PKT7f9R+iT8lsHfTPQ47ztoK9C
R599Uvqt7z8aKH3zROmf421/lOVl546P6JPaNx30zTB+cV5w5vujyXeS3y3Z
P4I+iX451vY3nB7jRrGt7b9An5XfTX7San+H9sVLL3k90U/xT6Nfbmv7L9An
5VdM9NPTpc/eL/12re3/Mf9A/ojF19kfA25eYPoT/mvsf8fPLaVPso/I93fg
v0S/TO7fkz6Lfjvf9hehn54s3HzV9pfQH/IQz7D9S/i375J+eZvtr7K88Ibv
Pz9T+uxG0m99/xL+Z/mdQx4j9Ilx3ne+xvb3EN99U/rtmJr4nZ/TCF33Gzd0
r3HWob+hc391jDv8VPcbx+cwVvevcG/yIV33bG+Rlfc5V/557i/fbehOGz1w
6I7J/vUvL511++Pdt8pG6DnH1/h+3lXhPnbodm5j5udDgb+6t5h7jEN97uXV
B3c4/q79SeM3v5v4Xj5m8+9sOGDppln52/efLuicpHvc6/wDuoc1K/ej/976
1zfTvarJ/VRzr+u44Wt3blTMKX9nj62e+tXD76j0hwPKe2MD/vr9TO9pvHQ/
a+bxW81nwNfyntvqfjvuq+V8Rd0zHOi6X1j3Pm/CPcPh+7hPevua+tz7qntZ
M91D7POn+823zriPHvqi8l7Z4B/gHFNrP7+pvFc2032zoX3xF/c+J/vbdX90
cXd5767aH5bF/eure7/7J/nHune3mKt5hw+gM9+6tzfz89PAX90rzT3Tga57
g7l3O9FfW/H/u+W9xHl8f26Fv7o/vJildaZ7xLO4f6sautc7033Kjfj7eune
4m0y3fNd+WfLe5uL8j0bc895aP9+u997HztfkHundS909nx5X3RovxzvfbiX
PbssWu/hfvfgH4AfrH3ubc8ml/ddB3qr828X9d9v2cHXP2nn6Fb6zYP6G/or
eh56jM89EvwEX6ELZwN9cVd7wS+Q4CvPQx9h84t9D532nL/4fsffu3Ufdtz/
j+z/Fj/Ecouf6vy4uP9LDH+LTuhXGH/lej6en3U2/n3D/Pn989wXTvtP2Pph
PdXdL36PcDGuX9lfC/X3A9H4VfbTXt/4p0eG7bxJtf/zj0e8evnPP3I+jP7m
/Xvreejfl7ynfq8Xxl98zwXV/an8Dd31gxKv3wr1HR8P7MLl3cL36X5y+/4l
ob7jI89DP0jtQZ9u81/Y/NMfvv809Rd6OV4hryfRTzuNvxcZf591ba+/P+fe
tlDf8fFZW1+zbX3xPP07W+1Bpz/x/Fb+8c265qfiv8O69KwK/w/V3/H8VvwH
vz5Qw5+SC2H8nL/R5w6Tfif+cP0h2Ofoi9DL320drLNOwwfWj/oFH4f66C/c
zzZJ+iB0O7ca/An9m6O/wbXDpW9C5327Sz91/Ltd/LdS8v3Xhl9zTK53Gn+e
JH1xrPTH96RPQkc/vEz6Y1v0syLRyyeZ/OJcY/Q714/xzzPu6AvQ0Sc7pV/q
d6CfJn0N/Q19MMyP9MXZ0h/RJ6G/IX0O/Q59z9vfoaZ99ElwEX0TOvrcVOl3
6HvQJe+5d6F4Sfoi9MnSJ9Evf2320zrpW+hffn8B8z5bfIC+B13nGTfQ71z+
oE+iX6JvQp/Wgv/Av2Okv15m+ss1koczpX/5+WrDxO8ztE7WSt+Djj63Uvqd
30/fav2Cf6zjd6RvOn/OYf+M8eci6XPod+h70P18aeFMqI8++Z70y3bpm9Cv
kj73J+l36HthfjSe7ANGX4R+udbjn6RfTpe+Gc9fL7Ofq/5dHekr2J/V+GF/
lvixFjs00MvfRecVWieu38EfWmeFry/s51e75NjqXOss0OkP5QtNfxkR2fd7
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
XvZJvKA8I+gnKt4f71+o5DP5neTJgxPQ8e9NFB+V+5e2tO/D//9+XuoRVf4k
+STsvyVPA/p55t9rrh+tbrwkvdX1K/JrlVdLnm2gnxrtL1mVe3wKfwf7KBeY
/Rb7dZck529YfmWy/4f1LxxO6JdF8Tj84xV9VOwXTt7P/hv40NuP/fvdk/gl
8jn2v1d08kuEk4l9cVcX/6wM6zzpX+zXSuilPfpm481vXHz2jyan43e/jZ/X
x9/i8xSPX4UPTv+gy983QH6bzZP66ldR2n1vJuPD+r4/8o+n+xPZt+10/Prl
e9L679n4O531XMb5+iXjB16UccQdEzr7bco46Moa/3KPIva/V/SXy3HLNI5J
++QbG58Fuvpt/ncf/x4F+0fq1h/y+0DLf4r39xJnrOQz8vL7URy9Or8CXGP9
tUU/1f61ddH++Y+cv631x/r6suU/Io/jOGvlX1Jevvy3m+NfDvUvjv0+mfsP
kdfIb8/P67TxO8DGr5V+/AfJa+T3jZY/5+PTfP/wvkWcx1/lt+E3ZJ+Xy1/l
beEfzt0+jeXv2saXLL+O+UI/uNTyN5Fn8EHz/cNLgvycYflz2tdRoIe5/H1J
8hr5PcH8oztE/u2emefvxf7t3pnHB5CXiyU/kafx+lkT5O8E848hr2+W/Pb8
UMXtQt6u779T3mRY367fIK+R30stf3NOJF8HZX4+Sbi/UXzi+bFzI7xoa7vM
8l+gCzcanr+BPol+7PER1s8Rkq/N/ddLgnyTHGl4ffzLyEuvj399luSt1/9z
tL/Rz88N++OS+ATfh33r/gXqsw/W8Q19APmIvHR63fkLtI/8RR57/9TvmvjC
EuR80Fecjnz0/avx/PTIxtr+RPgP+aZ+Zv59dfmlzA/y1fe38n7y55F3/n7y
wkZLXvr4sH+nbn8P/h3HV9+XP932N4H38bk6/CT2bebrI+TXav14/6jPuhls
+5+of5j8O9+z+DB01o/vf6H9WfIvrbP4WTw+O2cxXnzkfPwa+/M+0dvlX1pm
+1+oLz9Woh/w/vMj+z09n295zflQ6MecszLe9j9RH/+Nrx/eP0Pz4/tfqI9/
yNcPdOlR2WrLP6T9b8q/M8v2b8X5SetCPoR/n/alM4+h/kOir5F/5zDzf9A+
eQi+/4j2iVO7/W55q41YD6zsxzhvpFofcf4G9lV1/pfOhZB98V7AAejgGfFZ
Px+J/IH4fIYPDN9+n78s/Jxq50+x30/4UPj5SPhD4H8/vwm/OP6/4bZ/B/k/
KfbjhvbJ3yCvws9vIv6OXuH6H/H7hxVXf8P0B/Iv79U8D7Pzo3Zo4X8jfntA
TXxT5wYURyjvxM+HIu9FfrJE/yM/gLwDP58Mv12J+7sm5zvE9t1emZ9/xr79
WYof+/ls5I+g//n5Y9L/M+UBZ37+GfkZyD0/n438DvS/i02/Jp6G/bzA9Hfy
iuZG8qmy3+L8yDUh38W/H7rnP5B/B/0Aix+TV8n5FD0s/k3+HPXftfgwf0Of
YfFr8hOhN/dPDgjymXx06Mfb+QU1/smQn/WE+bfi/SVrGgeb/s/6gH6p2ad+
/qCvj7HKV+D9Myz+fYLi5dT39UG8HPoEy39AHjE/Yyz+jrzj/Z5fQX4l7Tv+
4neg/XWWP/Ga7f9pvr+oip+/ZvFD8k3Iv/TzPTg3cE6kP3l+f1sHeRhuf3E+
zUuR/6fKvza9Pptk+efIG9aB20fgvfYtZ55/zfkmyI+Z5l/n/JRpkj+rLP8c
PF5b419ZIrwH/z0/HL9BrMdV6+NFyZsjJX8G2v4E5If0jGR/O/25jPwz8y+T
Vw8+u/4F3oP/Uy3/nP0VymtL9C/OryHv0fc/8Lz2VTb8/AvWK/k75LvE/R8m
/16W+f4P/CrobytsfwPyBvnj58u0Oj8vPv9kVb7S9h9o34PmhzyAav+D+YVD
nhh08qIeVX6v23/EH8kL8vM1Wp2Phf9kXuk3wY8S6PiPSpx7MTlfA/9TrH9V
8hv/yZ+Uv+jni+AflF8wkS/4F8Hx5PwP8cOEmvw7/Evk9bxq58/w/GGl3y3s
d/X18xPlf/r5Nq3OL7ivhf3PevyW+VmhIw+xU9x/w/OKozUcH+nPfsJH318F
3rE/1s/3yWO5DV6F+vhvP136bRt+fg7+Q+Sin++D/zHWv6r4LPHWyaXftrG9
nW8Df3IOgOtf+GtYV+4fIT6A/HL/zphoX8OS3P0f/C27PPfzo8ibpr7z96/k
L4Pu+dkPRPI5zT9DX8D/N8P8bzxP/+r2l1J/jfn38Mfx/ub7u/qG+Lz7T4if
UN/5+2bLz/H8B/Kn7xX9GPMv0Z/Z0fxW/kP8fbTv/k3ie3Oj+a30k1bnM/j5
Wn5+0NTIfuqWxJfB47rzp9lfP0/4npn9z76wpdH+syq+fJXwOM7/q+xn8Fz7
6hseX+f8CNlFCf8utrxJj3+Dp0cJXz3/T3kX2f7iY8+/gH9PFb43P790g2C/
XmD4gT8d/dD5l/Mt8JN5fB08VVwj0f89/uz5HTxPHM31L/qD/ub5gZxfobgY
8azQPudfxPmHrt8+34j3H1f6I+dLzBS+/sHyW35o55acZfkVU4TnyvNoPG/5
HfAd/M3vmP5Go2P/z+717Ly+Ogezuh+E8dG5VqrHz4pG388dcen0xu5B/6Ad
6Mc/2H+vtdOX50d3/d4i6/bkFdevK6r7u8vnB2UvN1Zv3XvbwUn87/W991u4
2dHDwrla06N+rGi80UUfmNGO4zP1Rnf9/KrTz5dCf+ecKeYROv3Z9fPF2BHX
98z2Hr3izHsfeb/h7WtAOpy/jx2zcOwFv/kQD7q+e+Ps2K5xqPxvjGT5nj5J
/k3cftHu/cf/c/2o3RcuvaxfNrirn6+1mL872qEP2vTWH185ZKNiQPk7m/JQ
t13vuK7yryzpGt/ewf8zsWucq/xvb/8Pd5/24b/pof1y/gYG/WLmp54fe8Ye
1f3HW3fxT0/xTY+snM/Kfwm/Yn/6/v5BXd/7dHiunKcq/rmb/oa+p56P21/V
sPUR2p8ovoIuPg30Uj6+FOo7//F8yH9Te9B5HvpAtef8t0M0DquM3ie0n9yP
rXGP1z0/Vfvb17QvvuuEvp2dP8DzO9SMH/2Jx7fyT5TzU/mnh9r64u94fiv9
mvUKfXHXeFfyn7/pn6/vNuHRaOHTccKreP6rvJB+wrt4fNo6wCUff/oPfrh/
Irb329o8vkbc8JZonSX4xvorwEurn8N3Wo+hf/RnsfDX+XPKNf/+M6vzFr3H
/RN87/Rp//4zu93PP9xFeAQ+uX/iOOHhB78t8fEr4GXMv+oncYmKf6fZ+Pn7
y/7fHPrv83OhcAf/xJvCu1BfeLiz8FG/Ax28AhfBM+izhHfgH3gInfgRuOb2
E3/frt++Pzi+r6Wtw9cf8kdyJ5ccCvTy9x2d2kef2O8an0LfWfS17+P5u0u9
QXzm5ztvgH6Uv2zrc2LEl8PS81XL/rUjf5z/S77dJvCt41f53S80RpfjkJV8
Vu3vgL94r58P5/Ltg66fGZ1x/1i365LzgZvL3yLU372Ln17Nty1/w29hfIaV
+BH0v+u61lHlvxN+5WPL78xH2/qZZvzl8hM8Nj3R6ve3evwEfDT+rb6f750e
vb9anzxPfdpz/mGd9Df5oXn37wv8c6H4gnXzhuFjqY8MCPWdf2L9E/22wkee
5/tmqT2f/1vi+rXjW+qpNwT9KcYvxtflg8/PHYG/xnX9/Bq9t5hq9VmPrCuf
f/CM9e/rG3z4pda/25fgjXA+4U/mH/xx/or709bm5x8hnzi/JMEPrQ/W/8nC
g7j9Vbmtf9Of1+Wx3nBfmB/8I/DFK8Ijn3/wrUa+tv9l+ervnxfef5zG83it
f74X+vXCC/BD9ks1fsKbAcIf/a6zHxN8QH+TnpPwD/3vW+q1CZ2/d4711EBH
v5den/inGRfpeYn+Cb7vGNsRxn+9sh0j++sj/hXp76xbbx/9H/x3OnrnrRF/
VfTyd9HJ/SV147NDzfhg3/Qvxymhvy59RvpJgs8Dpc9cIz5w/WZ6zH/J+Wq8
D74aZPo5+nJHLCeyuP1eGfa54xv6kvSoBJ/5uxyH1/JflHpmMr9t+mmFnz8d
dMiH/64P6wv/AnzWHL/f4Hd+ocmv5vj+K9Mf7uiM57eSb8Ee0bo+prRTrP1K
7jb3f6wL+qHjM/y4u9Zngt/6QT/29m/T92O/O535eUXrs7n90ivDb+R0xlvz
UKdfBP3Q6bFfoXfSfqyvBT3O7PfqfviPO748j9x83ewLs+8T/Sz2X93Q6esH
ft9V/O/rY3pcv/0Wq4/8Yn25fcL70Mvc/qV8eiT/K/+h9K/gP3rD7M9S/l0T
9ENfn8fC7+J/t89ZL7Hezk/Fv+hPrn8yfxMj/nN8CvOX/dK+D7r4ZD31h0p+
Q4c/eQ/0W61+aX8sbPf3sz4cn6a34G/+ZvzcPvP6U60+fIv/srn/aYOC8anz
r9b5t2hfcq6xh/nvYvsyyNfk/fDfTuZfoz7j5v496HtLvg42/yLt7xjhdyq/
+0ffVfHnzRHf90rGL+bXO9qdvkO0fgfU+mdi/7jb18Fvkrw/Xt/rGk4Ht4UL
SfvYT2anBTr2EvzX/PuxW9Lx2Ut6R4mDGyb8M0j6rPSbzPXb2H8Z/ACFvT97
+pKff/hvnvzvFX6gV5Xf3zPxX5e/sX/X6bz9av0QDxGu4YcM7R+PvYKf0uwn
/B+MX/P1H/xGmeN/rN+vSuJr/M173H/H+MiOTuixPlO0J/ubhDeMj9Nny3+G
3PD2+V71L9EPX47LE/mIfURcp+774a99zH6aZnzp/IP8Yn7bLP6F/sH3t0U/
rJ9uGfzl9jfzOT3+HeiMD9+/2OzT46L41DuNE80+BrcY/1kWv2F80A9fMfmx
veHeDqbfUl9+LsY5ocfyaZukfcqd/7G7thE+eXxyerQu1jXc/9Qq/kn922vG
P45/rMrdP0T9WM91/32Vfx3zCd/XP3tT/gWPj8Zx09R/h/7I+Hr8MPhv5D85
zuKX9Ifxc/7HPuA559+O2C4Nzwf+1PtO0Pvdfy27L/hx3P7Th3bE4+j6Xy/H
h0S/L+Mbj3Q2t5+qes3lx7rGY6Mmjvvn6zYqVuxx4+J7f7Ky4XTKec7pvf9t
9NKlB26g+i8m9c/63N9ufMZXFudqx/tP+znPNae/GN4D/Q7R2x/45k2Thnyi
6NNFr/aHMO+U85y3/3j5XZmeC/Spcf1ivp7z9snvG2H7M6BbHm/y/lO0r3eE
5RdOi+qvzU+x/b9x/fuS81+hU+7nH0Jnn5/nf02Nvq9H4fvj+b74nKeKf6Gv
iPfB1Ixfj2R/ve/br+uf3VNVNz+Z789CLny1Zvx4P/uMv2Hjd0v0/l7FcNt/
wvhy/soyyy+Ox39Nw+//g0653z/M+7Hb3T6L/UI9Mrfvab/8O8Sx3P8Q7Cz3
/3/c+jzn9beX3ZPc7xPRseMq++iXoi+V/L/I5Cv4QPmbZt/TfhyHd/9Epfe5
/Tk1Gt/Ufwjd/EhJ/fLvJ9tvt/GDTnm3rvInwvi5XHP5K33e5iHlP/wiLv+g
Y0fcbPJPeAquJvrlKCvnOa9f/t3W8ZjhK3Tkgo+vvTdz+QE9bpefpP9FKV92
Du3Tf8pdfkDv0fHWj/u9OpjnAv2AuH7Bc/7+k6+a/FT3Q7fMnn1lzGVPvPqn
pP/PqZzn/P3HfXb3+5fc2E31X07mh3Kec3pZ3js5Hx065Tzn7z+4+6EjR32j
X3I/C99POc9BP1D0s7c+Zfnvj/tUdtGXitG/vG23wumUn6Xnmo9fW3L+TNz/
JQ2e8/7NOWHaL3rf3y2RH+1R//uG57x/83f6wTarnuxT3Dn3vkM/s+uOyffd
pXKe8/Hr7Gp3ZT5twrH7Db6ouv88rB+Vz9Fzzcd/Vz1X7b8+IKq/U8Fzyfjd
+dNd7+jXIzuva/08mYwf5Tzn9PsmP/RPPz26Z3bY7T+667M7/Sbhn6NUfq+e
8/73ln6W5K+LTnlv0++gnzVj46d2vqxvEl/j+ynnOegHMb/PXvvMeV/ZNzv0
rd/81dd/MDzUb4h+mMp5zt//vc9/6++vfGhtYp9Dp/z7es7H5z+Lb32ELxsa
vsB/lPcxfBoVzc8f8l+t3GLuj3tsmrz/bpV/Qc95/b1+1uszd/12x+zgrnGq
9jcx/pTvqeegwzdfFH98wfhn96e/tN2dD7Vl+l1ceflzQ2/92h/D+IHr8bjw
U9m3ojd8/MaM/tImZzy3Rca8bG/2lRrqAPdd/9d4hvF1+XCe3luum76yjzx/
dFVjbNmPYqLxx3F/3bbD5w7aPBt/6tFP/f7Q1Y2Bl/d45qfnVPvX2XeGfPji
xcdsNfyc34b6f9Nj5sovT9os+1S3rx7dZ6M3Gkft/PKn7rutOl9p50/+v2FP
bduD9vMxV2Y3fOYgP1+5b/Gd414Z8vjXhhbCkdB/5MGLHQ/Pvezz6f0aj3bh
XXVvSc9Fi8796knV/qFDJA9ox+VHiZvvB71//pnn9nhnv2Wh/u/+/vzObS95
pvHZM5/9h28806/47evLv/zdI6v9E+B9p3Db5UMpTzYL8uGav/vBLsuervyv
1Fu3+aWDjjx310Q+dHTJpa2DfNjnmG5f+HXnRqH/D33h0+d/u9uG2cI1j911
1tQV+UmnfPuBZaseDu//1E477rjhzLcaX/7GrKF9/2Wz4szjF9223yWV/+2d
zbND/2lxn2zcnbs/M2TUJtnnHug2tuf/qvx77Aue9faILW5/r2ch/SHU3/J3
t521tP+ahuoXl1x/5PFH7urnJy3Jp0s+tC8a//an39ksfF+5Xlbn61Zd/rvr
pw8sHrht218NGVfpHzfOueX2X3x6i+zW57oPPHbEu407PzjxpxsNreQTea/f
Lfk6v3fnzh88e211fvLeXXiweVauq7cbZfsrQv0Fj+7xL+fu2D27rWw/f+3c
/3vAvr2fdf9ucWbPlx7q/p09Ev0SecG6dfmyZelPCOUrzX+BvAAnXL6U6/aD
YJ+UOPJ6qF/i3i7FV169cb+D5++v/n0y9O/8rvF9IC/7v53we+NAv0B4sPZz
33joB/+Q2icbLHz8vLcf/qsgX5469rOHnHLDm+H7Thfebfu7z3/yG5/ZMbFP
hMtBvpTjX+X3lfTu2W/K+cl3HjHlwUeWVPGt84VvY4VvywzfTukqX90o37+5
vr+yX0ccuvVLP3uhdzb2ugv333fwhtkB/3binD4HVv4P7JnfyO+0zPxTrfB3
+9dG93t57z831H4x8R+mzjihd3U+Hvlary77xK5DRwwshMOh/ydG874q/57h
83STy8gZ6GZ3dLj8Qb5NllxDzvn38V0u32kX/q6TP8gd5JB9fwO5gxyCjvxB
7iCHoCN/viC585zZLwMlX06UXEHOBP6QfEIuIaeg4y+7WXLndMkh6MgX5IrL
H7drkFPQ75R8Qa64/DnE7Bq3fxZI/jwpufMZySHoyBfkissft1s6zb6YKPmC
XHH5M9vsFuQUdOTPyZI7yCHoyJfPS66Ml5wJ/Cn5dIbk0pGSU9DZ/4vcmSk5
BB358xPJHbUf6OzPHSW5M93sF+TLXZIrkgNh/E6XfLpfcmmt5BR04u3IHeFp
Il+QK8gZ6HtJPiGXkFPQkT/o2WdIDkGXvzpDrrj8cbvH9csxki/IFZc/bveM
Mfw6U/JlI8kV5Ezgb8kn5BJyCjry5f9Jrrj8mWh2zxrJKejIF+SKy5/Tze5B
TkH/vvDrTeHXGMMv5BNyCTkFfaTky/6SK8gZ6Mgn5BJyCjryB7nziMU/+ku+
IFeQM4H/hd+ykwr3/yBXTta8IYegC6+zOH5SyVezG4sa+xC9KNm/of7g9ypc
fiDP4rgPPx/qv1pPyA2PTw0t7TnsvML9A0eVeJIJZ3LXf4WnmXA2d/0e+SMc
z90+QH5ITy9cP5c8ANeT+/ukVwf54fr1aNWTXyu5H+15PR/8X2afTRAevlvi
cPF50++Rl5LDxS5m/0le4P9K4yeSm5S7fi95gV8rub9Adl91/ozZf8iL3iXO
525foC/IzizGmn2J/JAcLzYx+3D3Uh/IpScUR5r9+kQpz5BzxSlmX2HfSA4X
U8y++0S53qUXrc5dPz2rxMvs7BJHG66fY98Ip/OJpv+3Wl8naX1LT8uX2/pm
XeM/ud/0c8kLtd8nyT991Oye5aY/S7/FL5bkj8d+kQ2KB8x+O0l4J5wt9jf9
HXl6UynHi7vNPpRdg/8skS+vlHgY7BuXb5IXwb/j8kXyONg3bh8iD7YrcTx3
+wB9Q3pC8abZn++V+obmb3XD7WPJU/m/dsnc/kO+yA4t/mT256OSZ9JDCreP
0UckB4vdzD5DvkiOF8+YfYg8Mfsl0L3c4zvTTe7UyQ+TX4Fe/i46oc83+bpS
z0P/a5P/0+UXhy4/emVfduH91oFe6uGVfoX8OFt0+c/C93++6++XG3H7Vf8f
75I3m4f2Szukkj/4z77L+Jl+izyhvssf5AV0ly9zFQ+gfY1HoCPXzmF+uvB/
+0A/UPIgfv9Hzt8X3sfv/8j9OZIbZ0Xj93Lo/1cUb4Je2ocVvXz/9hl6oNtX
k8v5KqCX8rs6Hwv/F+17/GyR4l5x+9X89SjnK/B3qT9U+h/2yQXR+FX2T2mv
bxm+b8MlA/7PPzxXnX9ZrtcBgf6LfOW+PS+o4l/ID/hPdkro/6Cu9fxaNf+G
/6eYfriyRn58q2Z9Ig+on5y/KLyH7vJho/J7c+SXxiPQS713kwJ6KQ+r/Djw
nPYd/1vFRzQeYfwGluOV+Feo/7PSzxLopTzfJvBf+b7K/r2+nK/Qf81n6D/4
faboyyy/6Wr5dU6PxqeaP/CN+o5v6NNniO7+GewDx/G4fyHuntgH4PMKw1nv
H/1yevm76AS3nT5c+AvuJv0TfoPbThfeZV8SLjsd/AV3nQ5+g9vN2+9LXCPM
M3TwGVz2+uAzuOx07ANw19sHv8Ftp6Ovg8tJfpzwGVx2OvgL7jodvR/cdvpV
wl9wN7Evhd/gttPNP5S0D/6Cu063vIWEDj5LjiXjB/6Cu839r1tm4LbTwef7
hMtO17rIVtasP/Ab3G6e31itz9ONDj6Dywn/Cp9DfNvoBwp/hXNJ+z2E358U
bjsdfzi4XBd/rotPg7/gbtJ/4ffOwm2ng7/gbsI/wm9wuzn+Bf9N0r7sreLk
Gny7wvzyTgefTxIuJ+Mr+8/yiwobv8JxGnocTwj5UYGuvIpGFudXBPrE2K7K
x5j8UNw0w6+CnyW0L/8Mfhn8NGH+hM+Py++CHwY6+u9w+V3ww0DHv+I4Cx3/
jOUfhfr4VxyHoYO/ln8U6PhXBsmvgp8FOv4Z/DL4aQJ/CX8dp6GjH1v+Uaiv
eEbmOA4d/4zlH2XW/8ZJ8qvgZwl0+Wfwy+CngY7+TPwEPwx0/Cv4VfCzQMc/
Q/wGP03c/pL8avld8MNAlz866yG/ynnys0CXPzbDL/PX8tNAB5+/J7/LifLD
QEc/wq/i8qHV+mRdPij8PsTyW/CvOE5DRy+y/KVQH/+K4zh0/DOWvxTo+Ffw
q0yVnwU6/uhPyy+DnwY6/hXHeej4Zyx/KXyf4u6e/xn48xPyz3gejvW/8ar8
Ko/Lz2L9z/DLyN8e3n+c/Cuj5FfBzxLWj/wz+GWUz1D5R1vsL5D/pTFAfhX8
LEbP8cvgp4n5c1VO/KSH/DDQ+5hf0PFf8sTlRPg++Cuux0+43zmz9kN99G7o
t1j+YYnXu4X6nn+J/wT6IZbfeWiZb1jE7Vf+D+VLBvqjlh+Jfk78xPMvkQfU
d/mh/gS6ywf0btrvtPxKxbPD+Hj+LXgev7/C/5nC6/j9H9mfgPyIxq/Kz0Rv
p39fsfzdvy77E96/yPwfmq9A77D8WvRz2nf/C3p33H6VX6z5Cv2/y/JfOfc3
Hr8q/7bUW/4QxneG5R+WeDs8U3y1uN/yL4nvUv9sy+8cWuYbhv47fq8v/jM+
Lj/YFxSvzwr/1Z9Ad3xXXmVo/zDLryzza54M43eS5d8Sf4Pu+O344fis8Qjj
t7flZyovM/DH/Za/W/qfepj9UsV37ivnK3zfwZZfq/MDQvu+f4u4Ie1nFj9s
lR+D3gvd83eQR9MNJ6F73MDp8y0u6nTwE9x0OvgL7jodfAVXnQ5+gptOB3/B
3ebt9w246nSPizr9EIt7Oh29/iThptPBX3DX6R7XdPpsi1s6Hfxk30Pz9+8U
8ucT+0v4CW46HfwFd5P5Fb7KDknaf0z4CW42H/9uAXedjn4Nrjpd6y3TOkzp
wl9wN8mfE76eI1x1eqv4JvgL7ibjL3w9v8Y/3cfimk4/2+KWzfPfnszBTaeD
v18W7jrd7Odk/MHXaTX48cU4/yGhg78ap4QOfoKbTgd/wd3m+LUu5Bk1H9/6
/EnwF9xtzh9VXmSd/+K8GGcTOuXnmX3A3/hPXT+BTrnHt2j/2RgHEjrlz1p8
Kq7/pyQ+B93yQxK6/BNJ/A665YeE+v9b9GvlPx9h8S++n/IpFt+Mx2+zRD89
J+p/yA9J+Vvyw/XX86L+9032Hyku09hY/nmPr9H+ApVvZvHT86L3byE5tTKh
I0enWfwzHv+Xc7cfoFN+sMUvaZ+4lceHzov0q00yj2/RvvyISfwHOuVXWHwK
uvwLSXzujGj9hPyOpL78C0n8Drrld4T63xP9X+U/f9DiX+TnUX6DxTeZX8sP
S/jP8jsS/qjTX1vhr+Kejbfk//kbi69Bp/wti5+eHs3PloXHd6HLj97w+Cf8
MUD+bY/fQievZ1eLX15tfOP8I78kfsrM/ZP4Z8HHQ8z/eXrp18vl58vnmX9P
ebvkBRdbmv8Q+5y8Y/dPyj+bz1ZesOOn/I4BV93/eJTwEP3K8bPEjWWh/C7z
P8tvnZO37P7rg4R36MeOj2X+wasBH91/ST32Rzk+Kt8w6Kfu/5bftEHe+9+Y
/1R++YK88t+Zf35A6bdujJMfeLT5r/HvLlLeu/vPlY+Xf11+8F3Mf4x+SfzU
/dfl/slPFicob/gQ87/J7xj8eO5/RL9U/CQ72/ybQ0u/G3nX+SHmf5NfkLze
wv2DxNfkh0z0i5XCy8fMTwt9VekXzGP/bcWf84SX2OGOr2X566F8rPmn5Zcs
2F9FHhn00u+xJleeYnGy+b/BVflxE3zVfqCAr93N/whesn+qLr+Cct/fWeLW
isZC+UmHmv+z1f5T5VMW5KWfbv5/+bWDn/hG82/jv11Qc37LKsX3lCeTxOeU
z5dr/1q+0PzP7A9ap7z275n/G/wFdyfY/gnwl7iT66+ThK/g6gTbH6G4S8Bl
379xf2y/J/s/wFdw1fH3edNrZ9v+DfAVXHX8Pcr0Wvc/gr/g7lG2f0RxoYCr
jr8Hmd7q/uOhwldwtca/Gsq/Y/uHwN+vCneH2P6j7YWv4OrXbf8T+Py0cNn3
/4C/4O4Ltv/oeOEvuPt12x9l9n3h+Yftwldw9STb36B804K4iO/vwH8K7p5k
+bUXCl/B1ZNsf8Puwmdw+THbfzHN7LpP2P4O8BVcdfxdaXqvx7/BV3DV8Xee
6b0dtn4VV8yJK25n+z/A57OFy+tsf9GTwldw1fHX9d5XbH8H+AquOv6OMr33
TNtfZOeTFL6/BHwGlxfa/qVfCl/Jz77V9leBz+Cy7x/Cv7CVcHeB7V8CX8HV
W21/Vav8N/wL7B9eZ/uL3vrZ9k+u6dsn+/7d905c+eqixkT9ho7/FD7k7zD+
wgXuN26LflY0Dp198MH7rdgi6yjbzcv2V1j7fcP987qvOrSv+zizLy+ddfvj
3bdK9sdzXxblcT9WNAYP3WmjBw7dkXs9k/3xum82lD9h949zfjL3++o+wUDX
/Xf6u63D8Zf7lym/R/c5Q6ee7m1P8Hd5ed5W0H/9/pHyvtpNs3W6Z9zvr557
XccNX7tzo2xO+bt4bPXUrx5+R2VfcL8w9yv7/Qvgb7vuD/T4Kefuc8/9aXa/
Ivd+cn9ued9jdT6l7gPOdD9w4ffT6z7nTPc7N97Qfc/Qd2jxft0HHO4X9vvp
byrvj8x0/3LOfczQ4Xvd31xMsvt/mR/OZXP81XlloXyEnW+m+wp17/a2yf54
3Y8YyrmvG/rdus/w/fJ+ZvVvmI3v73UP647FVPEjdOZd9zsm+cMryvuWQ/6C
7qkMdO5D5F5Vx9/y/t5tgv47WfeBx/SNs/u1/hbY+uM+yvLez8EF941D1/2Q
ur96w4L7yqEPKO/zDvdjP6/7vqETP7tXODTMzh8sz90bkgmfMt3/HObnT+V9
29kRuj98su7jhs56Gl3e38094YEOX/5av/3+J/AT3BQ+u/9A7V3XPtfwD3y9
X7g6VThr/B3w2/F1pMab8/vAYejgJ7jp+Lqb8JfyETZ/nN8CH2odhPoxfv6+
4fgK/sbl/LD++gfcdHwtfy9op3ySze8Y4Su4ulY4C/3SaN1+aOeYfOgU/oK7
4DB08geYB7+fGPseXPP7xdFv/yxcBWehg5+vCTe5Zx76PcLfK4W7dwuH696/
xt4Pfj4Q32Nf+YeEv+Cu6w/gK/eqvyScjeevVwZuOr6Cv5T7+ZjgJ7jp+Hq0
8JfySbY+wU/40O8//pXw91Lh7p+Fw9DBzx8KNx1f3xO/UK572g0ftwm46fha
tOCfu7Vu99G6WyMcjdvfOFtYs37BT3ATHA39F/5OEu4eIByO55fzO9PzW1cJ
P8FNtW/zPySsS+FXeD/n8jNvxwhnocNvupe+wT3KTqf8FT3XvP5i1mtSH9xc
rOecThzbxzd+P/ecV/iN/wPcFJ4WTqfc8RU65xznhp/QuVc52b8k+t2619jx
k/5TPsPuP4Z+VST3+anolFxl+gF08Wmx0PQD6JRLHiXjg55ZPlfFF6j/hMrB
Q6fv1XVv9ibFIV33b3dL6AernOecfqHsqs1eGH/xPRe8k3wf5R019hfz4+dT
Q6fc78eGXt57/laCf9Ap133kSf0Sx3fL/P5s6JTznNPLe63bEvseetgfoeea
j2/vRL80+zTz+9GZf/TIZ219Qn9O5X7/Oe336pqfjYtDuvSxD5L+U85zdfw5
o4Y/KXf7E7y8SXLS8XNyZC9hf1b9f1X3hcf2ccWf5e+i/QqtO8cnno/t42r9
lPrR2vxd6UXSlwKde9lj+6XSH2L7vnuS/x/rp9jPS8L3lbi3l9n3FT6V4zrY
7OeKf9T/xqMP/3Hs2CGzsJ9z6392UXlPe8PP5wCvj9K51o6fnbef3OukzRY3
Zpa/c+mB4fu5/x07gfGK21+SH9glV9/KJW8DXffNB/2b++ihaz0g38QPT4b+
YT//RPqJcCLQXyr5pzGhvH8+l30e6OV7B3AuOfIn9A/9bj/pBaUcr9YncnFC
zfghb2P7ueKvizUv6E2Ob63475mDtt70sL3fyz+9y0+PeGPAn/PzT5zy62kH
VvZXqT93L+Z16bXdiptLfTfQsd+/JT5xfCvxbEuzn6v8VOfP5Hy5rvkbaPZz
5R9R/xuTL73g2z1H3JZvf86OP9j08Ip/1f/sT9L/7yv1dNPP98VuwL4N79+z
S559Er1S79880IkfHaZz9Yfb+fucdz+zy654MZd9HsbvPs6vEn//2fib9Xbi
Dkd+8xNffFd6XqUfwnf89vyoGP82SeI3jGdczk+Ff+Ce42P5u2in/ArTX+A/
+M7vhzxJeCM/XvGe2ZeGf8n5AuAe5eAodPmHAu45PoKflLv+eFrM1/mPtd6g
g5/g5u+Eo9DBR/QTvz+hQ+vhVI2T+x/BT3ATHI3bXxJwEZyM10/vbLFwDxyE
Dn6Cmy5/wUdw8VLzf4F/4N6DJp/BT3ATHLX5lf3bu3D7CfwD9xwfGV/KJ9j4
Ov85PoKflLv9Cf6Bew8LB6GDn+DmAcJR6OAfcs7xEfyk3P234B/r1PER/p5W
w9/gH7i31PzHfxB+9hdu3igchQ7+XSncAwehHyj8xC/s8QvwEVz8kt0/0mn8
e4DxL/gJbs4Qjsb8uSrg4hjhJPRw/mNXP/pjX5p+25d7MXK/P4f62HUPGv7F
+NujcPuP+rFfjZ+KTon736CXdv/Oyf0pvH+mym/Wc06XH7f4dVP7tW8o5zl/
P7hYxpP2Stqn3PEzfj/3xLr91jeU+/0v4ftkXyX5JbF9kN3d1D7rW3zznlHn
/kvbnsUs4R108h9k32fj9Rz0h0RfU8YJi8NKf3QyPvJTF6v1nNOX13x/zJ/r
cr9fBvpP5Bd2+cn3UX6p+Y/5vrXye80y+572KV9n/jHopR9vl3CPntMp5zmn
S89L4mcPRPPfK5th80f/8YMJbwL9PtHbVc5zPj7lvO1UfM/iB9DPV/mhes7p
rKu5Netvhsqn2vor5f0TDYvPhvfLXxbszub3B/UqRsmv2Wl05CNy1PFN8tTs
R7/fqYqvOp37Y7Dviqbv3yR7RXLe/YOKlwT9wNtHnngc276vcaT0Bn9/+Rv7
/f1kfKUPhHsInY7+1C69w8cXu0B6TtK/NV366mYhPuJ09Kd/lJ7h9NIu6JZN
MD6B/pr448H15A+f/+P1/dNrvh97DP3H6cQVux/33S1/NqJPMj7o72VcaLPk
/aXd0jPoN3XzP61m/uVXaUyWXu38RdzwTfmvvP5C6afSS5Lv26D8rixeJ+n9
XUPF//5+9FnNY9L+orLffEcy/ttH9l3PZHzBB+ol57epnN9u//E37Y6y+Mgo
+263r6YKH+L3V/oDfmXoLwsHoHNvFOPm9g/zT333T4Ef0N2/gv4ft/9Esv7j
9tP71aFfYf6dkL8servZJ6x/6nv+Cfow8wOOQAcfqH+p2Zev2fy7/gl+QAdH
fP7n1sz/8TY+bl+BD9CT8yW0/ueQpyAcgM54Qe8hHIF+gvCB9t0+cv6o839D
f8382+AH9Blmn7P+oYMD0MGPzoj/k/vHQ/sHG3+z/qG/a/6NseJX5mdG0/jz
qjC+Y4QT0ON+9Uj8M/zNPdzOP/LLSy/eOKG3uj+R+Cy40Dy+t7qxSHFFp8uv
lKFHOF35LgXxPafHdm+PpD748IL4wumlX4L9Ym1tTle/Nb6rE/xVPDFHr0/W
p+xz4kJev4x7bZwdpviJ08k/OF1xKacrnpPPNj6Ix7etIC5YM34FcaPm8Y8l
ARecjl8o7P8yuuKCxR6KCzq91Lc/yIkbJfsby3hY0B+at9/b/B8+vu80vqu4
Yl3+45M18X/NW7BfnK54Z4h/Nh/fdY2ZNesH//+iGv5UXqrG551k/In/n6G4
odNZ3/BlTXw40P183lb3q94drX/wp9IPFG8OdPQF6OADdM8/8HllnUMHH6B7
fgDrH7rnJ8Trm/ar/AjwIR5Xfqr1H49fJT9Z39Q/zOKncfyjRxI/Zv3Tvsen
Wd8P1Mzvs2ZfenyX+Q77hy1+zPqH7voB6x+66wesb+geH1Y+QeC/vS1/gPVP
fdcPWP8PxPwbxo/8Htp3/7bWVZhfzz9gfcfjU+U/HCh8gO7+i+m2fjw/gfUd
j0+VH+F5M4uMf/F/8n1nW/4AcQPl4YXf0JWPHOwj9y8q/0v6B/5F928NIi+p
9n7muvudWUl8p8cPlB9G3ih+pjA+34vy6heRzx/qS29qHK68TbcflFdK/fxQ
8++h/9PPyyx+W/49rPhAeW+sZ+gvlnljjSOVNzawzCcL9dH/yYtVPCDQW+H3
VWXeWEHemPLJAn2a+Qfm2PonrhL74ar1jd8eu2mF3T9NfGVtTXxPeYc55R6/
JC5E/rvkg41vtwI7wuP/+DvJe3P/ZBlf+01O+coyH9HaHxjy290/Cf6DKzPN
v3+l4mYPSS4p3zPQL1dcZJry9laZf531RF5lp9Yb9CVlvCYn/1/5rKE++dsP
1awv5ON78usK/8P4KN8/J291qsX3WW/vKC7m+QNz1F++w/EDfJkd6T+V/aR7
qRsr1W+PT/A8eoXnb7fpx+I44f3gA7jg+A6+bBfnUdr3rSHOXBxu+d/fF34Q
F+gw/zL4EeMGPx/qH8IHcMHzS7WfoSDO977l16IfgBueXw8+KE+/8PzShWYf
NLf/egXcaDf/AfgALjh+gC+xfVThO/hwqXDB8QN8odz5D3wAF9w/A76AK7PN
vgYfwAXHD/iBe+6Otfzaa4QP4ILjB/iifQ1Jfjf48CfhwnTL750sfAFX8HdC
136gHFzw/HbW5WytU8/fntZi/YEP4ILntw/TupihdbLW4kfoJ6yzdyy+jl5g
+W2V/7GMp1h8oqKz/6VdcWPP7wWP4GOnl78XtJOX5e3jv2PfltOxL/CTe/vK
R7H4x0fuFy/7TR55Qgc/Ynzz+v2ykq9XJuP35jcuPvtHk/tqf9ybCR38WKt1
2Hz/3s6ZzxP092z8a/IXJV93TPqPPRfHJ5YYPlf7Fpxe7uvaXPrXgKT9Mi7x
Zq5xSOjleu5n8YmKrvVi8Qkf3x4ZflCnK6+rsa5mfu8q5y1n34LT9V3Cjc2T
92NfsH/M6cRPiUs6HX+1viOhs341Tsn4sT5j/+BH7ndReW7r0PknnB9l+R+s
P+i+f7L8Pa8duudXsj6hjzL5wPzE7Vf6JesXutsPnE9axN8f6Kw/6rMO4/f3
C/ntM7SOfX1CX6N1ur7jd7PNj9tnrE/0M5cPrM97ovmr5Dv7iqC7/c/6I27O
OoTO+sW+ZB1DZ33Svtv/rE/oyf53m991Nr+sX/o3xvKfWX/3RONT5X/+SusX
uu8/Yn3Ojfij0q/GRHHjJWEdQgf3mX/P78H/d6/ox2idQicfIvbPJ/k/2a1R
fKCiEzeI/Z8f2V8W5cviP6/o7FdiHTsd/foW5V35+0dE/v+9kvdzPjXrzum/
wj+vcfP2O6UXkvfi9Q8u80GyCyI/TUXHfkdPdDr5xcttHuLx2TmL7aN0fTL+
3v+ltv/P6//E9lU33x+wTTFBeU9O51wE8mL8/cr3Mf98RW+Vn8j+3rdln3n7
6D/wvdfXvGl/2SZJ+/quzONU8fhW+m/yfdLLNY/J+5Xvpf0vWyR05Cd5UTX8
G8o9f41y+uX++Xh99Q3rDHqcl8l7+anya+L2K/+Bz5vLtxGR/71vtpvlB5r+
mjl+ia9C+xeY/Uz+OfXfa2pfbBDqe/6b2w+sM+isT+jLLX9suuGi7/9aZudT
uHxkfzR0l48XaX3R/uGWf8b6pP4Ey09k/UF3+dhqf8XsyL+Pf8XnZ4vAf+5f
ZX1Rf4blV2q+Ap11Go9v5R9ebv4r1hf1DzH/LOuT+gdZfiDrj/qen8i+9NnK
q59t+fXrov3JGxSnWn42fmf5gRrN/cfVuTCTLb+E+fqR8j5Otf1P6JdHaV+D
65/fLfPOM/LOyeeG/rMyb7vYX3rmp8p8bhufDcL5FxfY/hzlhTdmKi9c7Qe6
298e3wCvHqpZP/IfKb/wl7nv7xypfdPx/s7Kv0c8jHM5fH0xf9vXzB/78uP9
s5V/V/6ZYp5wNTP+Yn89eee+/n4Y75tjP0Coz/kN+K18fV4lfon3d1b54VO0
L+B05ZE8r/0+cfvddL7MiznrHfrU6PyXbgX7BaAvjveNNzw+yPo9VXkvHl/k
PBn2HbCfIp7/7TLyeBc0zY8K+wKT+AjrD1z4vp2vxPwz784frM94XfJTrU/W
pe//YX2yLo+y/UdXa/3tpXWHvQed9fus1q3vH8H+Y126/4z1x7pz+4/1yz6V
uba/w/VL9/+x/vJIT0/iQ+hR+XG2v4Px/2bN+LN+wdcf2f4i1h/r7iHTb6Zo
/bJuPb5LPt2ZWne+Plm/4fxg2z9CPuCXtO58fbJ+w/nB5l9g/bHuZtn+Fc57
Yt1+2/IXyZs6JMrPqfIrWb+sW9+fxPpkXX7L8tNYf8pzy+43/Y71y7p93fYP
ER9iXfr+JTvfJTnfIc5fq/bBQNd5M5xDU4zx870i+6CP7OTqfLEDlc+H3e/n
I+E/IM7NOSfQkY/EJ9ba+VOc2ya9sfDzkbBPZum797H9MfH626bw86Gw/9GL
XL+83/ROzhkJ/C99WOe8JPkZa1vIR+JFxKf8/CjiAcQf/mj8Ib2iEceHq/Wn
eEpYf5da/Aq8hE98/S0q4ylh/fn5ZMTTiIv7+VTES3SOT+HnnylehN6anM+m
eBx2W+bnj2FfEh/z88+ItxHf8fPZWp3/EduXWxUdhp+st7m2DsP8aH3Jf93w
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
V3Tsknj+1xl+9c6wcz7u+5nPqTXjy7zeXENn/b4i/PXxY36o5/g8PRr/dbnL
B+nH4fzON01/fknzQzuOv7H/IbSfGX8EuuRRC/ys8G+Jxp/6E83+ZP5i/ada
n7da++X6WFjZ1xp/6tedrwb9ppr5od4rTfXDSu+q0Y8L/CiOn3sJr3eXXur0
9bMP+oT109x/8m6jv+wWp0vuZ7/UOCbxH4039oPT7b3J+5n/vrJ7mve/slud
XurrT+e7yv6qqZ/vGNkvFV12e6i3q+n/21s9Xz/+XXX29/Zx/cC/iyP82yCx
H5gf6u9p9qXPa2wPsT4HhXlx+2+6zetAsz8Z33h8KvuX+YnHnZ9qfewQ9y+8
H30Yu97te9nlBXa5y/dyfF4L52PIH2L82bfA7+PyPfb/pf4XvmRaDd3l7x/u
Pu3Df9NN/3tDuPiG8Nb1p3WSMwMT/aK5flAE+d5Neil+sdGlv8z4s7KbdzD9
axeN3/UaNx9fxh++dv+I/I/tdf5H9EXK3f9GvxjX5vYd9kvfwv3b66cfrQs4
9br574LdpXFz/yLjX9qPsztd/4ztEsaVH/Sbbdy+Df2fWeqjAZ+dXs7Lhvgn
EvnLfNFPpzMu6N1OZzzwfzkdfMC/4XTZW0F/crrkVwP7o7l/alVOO835b0Do
V3P/UTWujs+MH/S9zf7h+6HPNP90+fuO9li+VuuH8YHu/iHZ7YF+ndnvfDd0
X/8xftJ+Ff90v0jz9dMrmxrhSEUf3vVzv/TT+vgEHO10reesw/R0H5/vR/al
4wPrclhCx16eXtN/xge7zvFnXNfPr4NfeWpTfOjl4xfoffV9sX/A91+6/4mf
6vuhu/18s73f/X+KPwT70+1Lvp/vdvuWeA9+AfcPyF+XxXZcFb8RHoKTjWNM
vpj/qw07Bzr1xspv4v4t+o196PEb/POvCEd9fRyv/h2tfnWz+CTfx3e5/4n+
x/32+euV3W799O/ju042/xD9p9+vmH8q9j8Rh63ik7dG/euV6Iet/CfHRv6r
jYtjLX6Ivxz57/FLxueWmI8Lbz+0a/5h+Jn4jstn+Fd6XKK/8f67Jffr5o/y
X5p+UP6+I/g33H5Gfpv8TOy7Hew56I+Nmjjun6/bqIh/b501p2+d8bfTNWEd
+jvUny/6M6e+8Og57w5Q/Sp/d37cfniupn+Z80cNvWN9+7e+7beq/+lrV37z
Fwe9wD1JCZ1ynvPvv2vNQU9/c1Vv7hlO6JTzHPRHRb+zq/xD/Xv0Qd+7+Ipq
/zX1L1T5XXrO65f1eqp/j+dOz1TOc/59I8vvaozr2W3/R2ZukNDHq3wvPbe+
7bfqH+3z3k9b+zY/Sf8ej8Z/YHaRjR/0i2rGL37/qobvL4nnf22D55p/37aZ
3y/4aMw/4Tlvf8GgBT/Y5YLHgr/K6ZTznLff+99GL116YJ/EPwidcp6D/ojo
V1/Stnjx2P7ZnW8Ud1y5WZVfFvhT5dfoOadf/H+HfO29FZtly//531ad+5kl
yftXqJzn/Pvmd33Xc/n4bM1TOx9VrT/4f4LKn9JzXn/RaSNv3Wbq/Y3li6e/
sf24DZP2Kee55u2vbQzfb8O3P7FyVTL/lI/Xc85f13aNy5Bs6uxTDp17V3W+
3ROi36zyn+u5pH973Lj43p+sNH2m6h/lK/Scj++NXe33S/SLR2P+Cc/F76/k
Qo18yBxHW9DboPO/5ji9ohHLlUqOrG99nnc59V/VP/De5QB0/oY+1OQDeG84
ksf11+axHKjkA7gZ42CFn+Ci4yh05IrhVBhfnnecjd+/bRjfOw0/R6k/tH+h
4X+r9lv1L7P2Xb5caP1zfPfxG/Yxxw+8dzkAfaT+djli42fzX8kH8oYfj78/
vB+8dzkQ2tffjM88kw/gPfVr4kc549fH5MMlwuuAU4bvTwuPoU8w/EZeuByB
Dt7HcrDCd56nf1NM/iBXaP8Sky/gteN43L8hWYyjFX4vkLyA7vLlJj3/WNS/
Ct+X6Xnq/8Hkzz7qD983zuQLcsHmL4lfUX+5yQfw3vgnfB9/w383mXxwvd/l
Q5t+muNshb/2XB29w+nzza74r35/q/puFzid8mEmJ6C7XeD04WYX1Lw/wVHo
rlc73fVqp7vd4fRRptc3f/+2QS583PZb9c/1dqcPbdG/9R2/ff7i+FV2QfP5
X9sYb3LCxifYBc3nf9NioskJ6G4XJO2r/EGTE9DdLnA65eD+fKOD7xMMp6Ff
Ynq/08H3BSYnoE8xu8Ppb6rdS/Ue7x/1aMfp4PuNhtNx/yq93+ngO7judLc7
kvk1u8HpyIffqx2nu11QM3/BLnC62wU1/BNw38evlf48fu37z31vyDL9fj/n
b+gTyr/zcfqt5xL7Sg3W+Wdq3y+5UMTPpf4vanj7117/3Xu/ePrmQS91/f6y
H//zy6e8uXPQ+10/Gx6V9yyGmH4p/TQTvif6f/zetbnrj5SX+PKS5ETlHx9/
5+7PDBm1STblnWMGvLJ042JB52E//+aTD4T2x5169FO/P3R1o23/J6du+LW2
YnivW97+6tuVf3VCWb8oynqNa8t2qvbL+vmIsl6udgJ9guhD6+hqf15N+xOs
//Os/3p/o1tN/5HPGrfc9XPsA8rd/xaXd5P+XuUfaP6D/HL9XfwT8N39g+D7
gJIvGhPNfinxYQP8P7nr9yW+DQh6v9vvcfmGxZNd7cwN/W9/4Js3TRryiUxy
INH/z/nc3258xlcWBzng/oW4/EXJiQ2sf1tmJT72kn79Umgf/bZ8rk32weuh
/U/99h+/d/OifQI+872h/te37jXkB+/bOD0X6o+97sL99x28YdF/xu8fv2jy
jLzft9qOev3lSj+/7bnuA48d8W7+5jVrp7+22Sv50Vd2jPrbk6r1o/Zz5JPe
k1n/6Bf9DPR9y+/LTym/K9d3+vgwLpJ3VXxJ/c/6lv0utiy/I3zfrWX/G8eU
/S5eL78j0M8r5y+XnEj2r2n+g93g/r+4fINiWTnPjbj/fHe/xH5gvCh3/yTl
i0q+zMWn4f3jJA9i+VCd36Ry5EiQM9Db9NNK/6/zX7WqL/sjczkTvk/47nIC
Ov6LESYnwvip/GrJoaHmH0EeuJyAjjyI5Ue1/uSfyOmn/Evh/eA1OD8cHBdd
uA7OBzkCXbidSQ4hf0L//yA8Hyecv0Y4v771W70feYccudbab/V9+Ns6TE5A
nyB54HIinr+1iRyCTrnLiZh/epr8eNzk/6aFyyHoyAOXE9ALyQOXE+H9Kh8h
fJX/KPQf/fM8kxPQkQcuJ6DjXzpQckh2Rni/7IvGUMN56OC1cDBfKhyH/reS
JyNMzkAXrmbIib+SnAj8JXl1l+TYtZJjgT80rntKTt1k/qFrhOeO89Ald5BD
fE+of4PkicuZwL+SBy4nAn8If/eVHJvX1H/WpvldpfjK64GOPHA5AR154HLC
5rdxvskh6MgDlxMx/25o8mNuqE/5XRoX2Smh/sf079TED1r5p7bGLgpyYH3b
t7hoIh/MPxDkSJhfle8t/EdOQAf/wX2XD+a/yN3/jnzAPnH7BvwEN8FR6OA3
uA2OQ98HfV24jT4f+EP4jf6PPbO+9Vu9v1X7fN+Imu8D/8F9lw93xv69huOz
+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
vtO/r+zfVgH/mr9/rT23/v0nflWem/vHZHxPfHKnv7lp6jYB/5L4qcp5zuvP
tXsJvT7luv8uH970/YOzwUN32uiBQ/dK+l+c+eqZ5059Pu+8ruOGr92Znh9B
Pdpx+peXzrr98e7ddf/YsqR/tHu33uN07uU9Uu14/8v2tyoWPPXm5BPefzuZ
v7J/Oxbc0+506tGO03fp/7unLrl0i2LO7Sf3OmmzxUn7l6vdT+o9Tp+teoPU
js+f3R+ctI/+p3uzkvbL/r8a8K+Gf4p5eq4O3+gXOGf8H+q5fUt8nXnx+y+1
PNri+m4fVbgAXlj/7Lv4cXwJ/Q/fV67/Bzvp37Aa++w/2n6r+jX0jvUdH+5l
GllDB//4vq/b+DluuX1LfIf64/T8x5u/+u8Ht4J/2exb7hfi+8boeejgG/Xr
7Fvu555j90sWhivgDfQThFt8/27CM+jgF/XBMeiOm+Ag9Gv1PP07XO1Bpz+8
/x71N26/whVwLO5fNb/gGXTwCzo4Bv0JPc/4H6n2oM/U8/uKvqvagw7+UZ/+
Qn/QcKvOvuX7H7T75RcYbtXZt9R/TM9Dj9d9pac5nXLHrxjX4Pvq/Gjoj5Y/
nTX4wrroqFk/tq748f5Veo7Tx5me9Zfbr+7HiPs3s937x7xOaNH+Pip3/IE+
vOb7HDf8fl7Hpeb+Odpf23D8on6pf/2/9pEfc/zjdb1NEr9wXDvR8Iv3zzE9
zencr+D4RftHCDeuNfyB/n9U7vjC/D1telzSP5XPMPwBt8DJXQ0fqb+r6YFO
31m40Wn4E3BZ5bsYvtD/IcKVyw3/aF/372aDDH+gHy5ce9TwMcaNtxtHGP5B
f8D0NO8/OHa/4Rf0h01P8/a5/+thwy/Xu+r0rzr9LF4vyPGKXuoH3VXv9aR9
q5fk38f2a1ifFv94PR8Xvcffv1WBHvNx22/Vv7heXfuv5+Nr+geugB9147fP
f3D8RkbzM6+m/a0CPtXIr+Lr0XMVHX0lti8rOuXXR/ZZRV/x3B73nLNTdW+Q
09G/eG540/e/3xhw/w9fe+ioR5P6wqPs8090n3Hs82l+AfVox+ln7Xbd5td8
pW92xJWf+e27f9crGZ8vqF3hW9I/6p2pdpxetj9IetfApP2yf535uDk/6jPx
iPeS/l2uerSTfH+Je/klX3tq0lFf2iCh0+6K+8r3OP1i1btP7Thd97PnsX1Z
0Sk/TM85HX0zti8T/inAXx8/xy23P33dsR6tvvWbH7cf1+bj/6L9EvrRiN+/
VbFPRK/0m+Hqz/Co/e7Z+rbfqn+Ou96+4573z8dveM34jYzGr/D7m1r03+tX
+uN4w506+5Dxk34W+n+14U5d/JP6U0z/AXeoX2cfUn+5nocO/lAfHIJ+lXCH
799SeAQd/KE+eALdcQ8cg87z9A8cgg5+wZ/0N26/wgXwIu5fhTvgWPh+ww1w
CDrP8/20Bx38of+0B/3r6g/191F/oZ9uuFNnH1L/XD0f9686n7DOPtwn+v5K
fxwZ8W2lZ0CP1/1WGoftkvqsw32br78cPcjXd/N1x8+KBPdq1mfL9tG/HB9i
vJ7Zua+1PzJqf22jW1d5Zf+2Gj/Hveb24/p+H+XV/bTWfuKfon/oSY4/1L/K
9CSnU+7+H+jLTE9yesgTNvyBfqbpMU4/3PQUn7+5woUvGH5Rn3LHjxhX32/s
YfgG/VMqn2L4xfjONT3G61M+x/CB/u0uXBhv+EX74Nogw4+R0fgNyi43fOP9
4NiZhl+8f4LpSd4+OPQtw58YV3sn/inqc0+k48/81VO/evgd3bLy98r8Mf2O
6Ssbj+p3Sa/2N9b4Lzqgcy99nf+4Vf1W79fztf5hvk/188ft++J1SxzW1//r
Foer/BvDo+dntu9r+mer/rX6fvxF8n8l8RH5e4J9kOxP6LLnn7I4XrX/mnKt
q3y+2f/yf0tO3pfsPy79pdX9oPd0PV+dbx3bZ/1r/KtvS494Fnst1L/tnE/c
dfTSDbL/9d7fTf36v76db/PSP0yceGqFf6X/+U/ocZLHFX/sVLzSY8Gontmm
veefvefyDYsbz5t7Xt+vPxHq/7yr3vNh/ZR+pGr/ULxuR+BfD/TS37w5fnHF
GZ8P/NO37G/j6LL/fE+oP0b+qlKvGaH1WZ2/fnXZ30avsv/ZjuX3hProc7uV
45c/Xo6n6SfdzD/3J5u/vpnmJ/EvzS7nM9hppR+qwhdw6cySP/K55j+U/zz0
0/FJ/Fjlz5b8Gurjl7pU43K8+Tdje66Kg0N/zHCDv6ET30I+u33Yqn6r93t5
8/br8Rf8AXdq7McQV3N8QG9BDkh/qvG/f/z+Uy7/u/xAuwQ6+APuOD6BX5S7
fUA5uDTF8AH8mSvccXxS3kHArVOEY9ApB5eWC6eggz9bC3e0jkP7vxV+yU7L
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
pgdDb5WfiVxFzrp8Xd/8TPLK9zT53ml2c11+puLDjWUt8jPPMPmNP/8R07Pj
+a3Pz7zQ7PLLDd9iu3Vtol8Pj8o3Tdb3iBb0eF2m7TOftj8+ia9pf3Mx3Oja
vxjkotenXPurk/fH8Z9BSf85F0P7pxI69cBHp2t/KPvIk/5p/2ZxX3S+2Ufu
B1E97T9P6NrfGuR28/71LbSvLekf9Wgn+X6dS6J9uQmddrUvLpkf7XtrzInO
Waro2j9s56+tdfwLz3l98Mj2xzv/FDpfoc5+TPh4fenDje/3qeFv6HX7q6nn
+Ha68W3d/mr8WNqfm/Av9eHjuH8DM+rDz86/IY9Q/Oj8PyLqf4Uv2n8c+qf9
xwn/M69+Pg38S/vwm/M/dNdf43MT1zbgY+jsW6B/2l+e8C/z4+f30B/6zzpw
/rb5S/ib+tqfGupfbXz7l8/fWpvYv+vHv2vNT5muD8dp6IxbrB8l97/KD/3L
hH+pDx9/y/iX+tqf2hhv/DfS+HKQ8Rf0uYbj/v2U+/lsw42vz7T1MTKa90GJ
fKW+9gcXXzD+4/sod/4aYXzl/A/9cMNhf7/2DzdcP4355v18D+N/2l9mOO30
cE+z8S/0qwynnR7rL86/4XzKuvh92Nfu9oHpR4n9T7nO50zWh8VVcqfDtzof
NGkf/7DOCUzoOm8r7Mt2OvVox+k67y+L5UxF1/mnuc4/TcaHfDmdn5r0T+cr
hvh+8/51z2KcqujUox2n63xIOwekopN/oPNn7Ry76vwQnV+bvN/ingmdcvbJ
efsWl02+3+Jeyfjy/EjjU+dPnvvL569sWnj+zoPGd3/5/JVNE/8+/Ed9Px9A
51Pm9F/nU4b6g41vHP+d7z1+Cv/RPu1B1/mXuc6/LHT+ZRa33z207/jhfOfx
48L4xs9nwL/N+Ol80kDvjM612rTQ+aHh/eTFcX6lzgcM9eFPm79EP6D+HIu/
wXfGP+H7sP8YX89PpN7DhpPQ+S7ijA8b/0G3fYi5tw8f3m/8R790vmCSv0v7
2H+DjD+g63zDzM+/CfOq8l2Mf+J19XZ+hPH38GjetlL8+u3c+/+04ZjX5/yz
GcYf9E/nS+InTOhxfLN70v6uhtPQ4Rv4eFfj3+HGV85/0MlfdP6L19U2SfzA
+bL5/p6+Afec/+C779tz8fp4I/jVnE753XquOb4OyhY99MT+W637ZNJ+m37o
v9PjeoNq7g9ance/E3wveI3Tv696F69f/bbm/ftEkR33tS8cuucWSf9afV85
fuh9byT4QLu8x+m3qt5UteP0N/beb+FmR/cOuNd8fteF5z5u/1uNL39jv8CP
8fsrvqmTr/DpdXq+pn/J+pgovqH+C+Kn5vxD/ep+Wudb+BD6RXqe9s+z+s3H
jZ+Kf6Az3+tbf7rNO3wUj0/RbvPg4x/sy1vUHnTna/rr/GXzl8hX6Dy/vvPX
6vspd5xyOuXTjX+gXxTxQTJ/WUcLOp9R03/7rrT/jpNOdxx0OvN2i81/TH+j
4fPr89pozn9Zw3Do436fzXNS33EKOnx5s+HUx22/rn9aP8YfFf/w91R7zuiB
j52+uLF6697bbpxtP/wfv3DT//7/WHvzQJ+q9X/8bTgIcUzHHIqKEI4kyV6m
myupdA2FNDkoSUrKeFL5kKlCZSqRSJk6pFB7Ga55HnIyZB4yEzKe8+t79vPa
u/3a1l1u9+eft/d53nvvtdfwel7PtNbZyP29z1m1sU6uP3/B+3JF7I9b5L77
5DnXx89cum/oPnz/stL/ZSL3t7UP1+E+12/fPrdkxmf0/Gnqv2SWl5Drist9
rt8+v98j7bPdX+aTPz8M+KF/k9+Z9NO00PwJ/EcHaFxKynhx+8L3DeZnMo0b
xpPGZyHk34TeN9APaB/uBznag/pKtNfQv5H8t3407kdlPkBejMYN48nzJ8wv
A3wrQfOmpNyP+t/5xtB/tvbbrj9G426y/9B/+D3PD/Q7j1943KDHI/UH7kEZ
F8P88ecVj9+0686L4P2m0Xvz/IG8iPQ7j980GtcEGh+e14b+N7ZvOs2LYzS/
vg71e5mIfvxfnz+NxpXHfxrNCx5/5g9vEX/4ZHmmcrMmnHbGyeeYjM+Yf//Y
TbUG15p9s4ptGTnxis6uvc/DAf7hu/wufbP8LvT8gn6/MP/GfAv//S/n93j3
l88/nNhnp35YuCG6P6KJv02jfg2vs9O4n8qE9/Cew/oF/CjCDwRffByVecjz
w6ifbe0Hnof1Q4Q/auFF4En+9ek5vHHB+/H4jKZxHyvfrz9+BSPzm++bCfOF
xw/jhnGk8Q/3QzA/qH+i9qGMH8YtE81PG74KPxA9lDkyvhj/sP0axIds9w/z
u2MR/PY+9UL8/S16P/wd44pxDsuDdcX910/We/+Q/XWO1u+f8+Gm8DwJt8/K
D0lvRNavy+MUnj9/OBc30zwJvz/ND+bXZTWPE88fEz/De4l+iaxfm32F8cDf
Fa0//F30K+ygSP+j33n9sN3H80PGZ2GY//3l/RnXMA40fuH3K0hys/3CuOyP
4w22rx/hqvA3//nTCFdFv/vXo//R73/T/oXdCh7kPx+4OCaEk4yPZv8c97v0
D+sfjL/D+GjjB+Hnsh71+asuSXrqRu+P37MeDF8f9Bv3P4/L9fHL3H+CD67f
b9edv2b/DPHLZOaXrJf8cbh+/xr5MX7H/VuC9EpJmr+sV47R/FeE+9fnN8f8
/a95/t6Y/6qspvnjXy+80BWe6Mp68OXCL/z5KzzAlwu+KdEvmvtX9JP4MaH/
zt0wfmBc8Pdp9P74u9gvsg7OEn6UV+F+YPw4R/147sbXv7y33w/0/qOpX4V/
udd//jmH/ae4L/o1E5533f7JZdCPs2rj78yPw/P2LPwJhv4553D/hfsX/VeW
rrf6V3X4/bn/Cyqex+H+OeyPA89PWr/J3D94X+4HyMP+5YKa5x/axf0Q7n97
fKM/9TPkvO4M46+4n/j9xD8Y0Q/X91sE4xOeN7ki+ofezxQfQfxZS3wk8v48
zyDHuhkTWkfB+plG7eL3w3jCv8vz22Y/oj19DfP/RvkH4xC37yDNw3D/51I8
D7n9JvvExq8x7zA+bxjwj+c5tU8T/47ov6n0u3D7/bhkRI6/T5XfmfxrYfsl
8H9No+sM40ftPxa5/1RqJ8vRfxPo+vC6zBrRP7iuL/2O2/dW6PoA/9be3y/p
0wkXIp+QY9jx6cmz0fXZVPjvwfyxyW33X+e1x8Xn9s6717x+Md6Xp30VV/j4
59f8z5pjz7z4eZ1Tfvs7dG728y+Nz/mfibm+ufDshYs3LC9fssjuIVVyKHwu
KzRs0OG0Ff76TvKuc+V6N3bflqlxzwXtw9+TDPKHi4x8vvudBRU+ef+TIQM+
3f/08Vs1Pvs1r9Nn4Mg7b/j65CPPVt/0xBH3Dfk8cf7j3/PPy634/oPlsy/d
/025LtlwfazEE3kbLdrvf/L+UY22Vemc6cE0//MLNXbR6+dOODd6/ScTey36
R9c8Cp93eePr3uj9R8t1+KxC19dccO/uhXO2+Z9JDT5ZlW1akF+TlHLn9rvu
v0l1kM8VCx8a/+KWLf71+Dt+t4bkr5b9NWFW7coKn8le/2q6XuNzzB+Plz54
IsiPscmnpTbZvjT9d//z9Kezz/aoG+TnzNyVpcy/ql90ZsjnsdGXvz6S+7wv
n07y4ySfN/LegQVy5lb4/Oq5vQO2TD7ov59c5+Kz2ajk+59vG/iX8fdv5fNx
ks95SzecMqGAwif7lyfGHb97+oR8Gp+DJt313NXTJW74+qOLM/9+9p9nXHzW
Gx/b83HDIH5su/9vct1x+axP16/ZcD7uh/TD/ifbPwkHb2+WtWaa/5m93Mzz
Xf+S32W7Pt+w1K5j78qq8Ln/pXumF5662THd/ya6f365Dp+pdP3OzIM/ald2
r/+Z0Gtn8oCWmf3nt5nw1n017ohT+Iyf98v6/h8td1jeVj6zkvzFRd3z1mhd
WuHz1IGvj5VIKuSPT2vvOi330QW7xB49ur8QP1/L/XUhkpNeMeonkcdYfv3r
8M8oT4ac9ZLozwAfSK/gO+Sst/Cdr68m13ek61mv+HpI5NBbS0VvVZDvdH83
k1zfka4fJnrhLdELQ+U75Kx38B3y3qI3jove6CXfb/T6XnR9H7qe9dZgat8/
RS9MFL0APeGPL+md9OKij0Q+VvSGjI87Rr6brvf1mcihd6obrkd7JhnaB/2y
QfQKvkNeRfRWB9FbifId8o6kl/h61iv4DjnrrdfkO93fvz6Jrme9gu+Qfy16
65ToLXzn64/K9bPoetY7+A459NZU0Vv4DvlM0ktz6fovRC8MFr0wSb5DniJ6
Z7ToHXyHnPUOvkPOeouvP0J65yRdD701UNo3kdoHvZBD9EJh+Q4565218h1y
6J09ojfwHfIN8nt5f7XOcD30Tn66vhDpxULUPtY7+A456y185+uhl9rS9a1J
70DfQM56C98hZ73Ulq739EGC/D6qf25QP8Us1+v/LE+wyM3Xx6Zl6CPXJB8b
wrOoPKzvovIwnvzt+xvbZ7u/6DOjXK439o+0zygP4+l/335b/9vaL9cb+/8G
22+8v218bc8P84n//vm28bnB+xvlsYavPjgl/WajvNjWBuU71UU9SlQe1ndR
eemJVQpvHFjTeP0N3t84P2z3fzXHvuVZXqlglMv1tvc3ysN4+t+339b/tvbL
9Ub5DbbfeL1tfG3Pl/b/7efbxucG72+Uk10T8Q/emP/vAt+H8kdgXyXgPhpy
rP/EpVvPxmfLCh7sP7/Jl6pz0ZtuUdc8u8lNypHpvlXf5/fbD3xKmXD09OGh
+ZTYYf7zcV/m2ZAX04M/aVaukM+rO5B/CPbSoZ8L7PxXSnEldpjffuArcJr3
P8J1Jv/htsfWDnow+0Wn5eFc76z5NF4tKVe1/vn7zvvt06tWli/2WRll8g/d
I+3Ge0j7/ecLv9cV9+aZ3G9ZdfXtpTqpL56t6svxXLRDnu/3P/rV5D/Fe6Mf
uP61OvU/+9euyrhinNt74+u3D/btK08eOjEzPk4t9uxc//noX5P/FdfhPj+S
fxf2E9q5huZfkmX8K0m/op9TvP4N5qeMG8ZRxs+/ft9jbz1br3oe1fWhy1vO
FU1zHm+V4/TwpoF/56mUD8vNKlRQvVH/+ezdWh5wTlX48sCi9wL/KfDp2QZ1
nho0Il6JHea/H+6L58j9g/7f//rqj+YVVpf793xkwMsb3YpDulQZvi4H39+t
lai7pEwvocSO8tsv7XJrL31xypC7iiqOr9SU60z+wzGTOlWom3zeObTpQPFh
Kl8kP+xa3IRFJcaUVib/0Wlpd5q8R2Wv/f7z7/fapbMmnx9Q6NAdKt/s5idO
PBD4D/BctIPzb56RfjX5V/He6AfOv6+zrfeIbMVyGP1rr8u4YpxlfP32ff72
5NScI+LUpd9bnas6I7ua33/srpq/aL9/Xn9SPVnpjiJq4NF8tU91THVveTNT
04XTA/sf1+E+S7zrI/bTA9JOsaP8++O+eI7c328f+hX9LP3rPx/2UpqMo9hR
/vWkF+Q6/PvTfhX9YooPyQ/hv9NheyzQH9Ab4n+L+Pehd6AvIO8Yxj0XeAg5
4a6qRv4Z0mtR/0wYt/Rh4AzmZxh3Iv4/wl0dthcC/WHy/xDuu9AHkAPXoDeg
R/z3C+tNjf6AnPRyxD9Kes/5Wdpzo/1HeleNCdk7Ef+orw8gJ16hMV/895ff
TzD4V23jQ3rP14eQV5b+nCN6I2zvRPy/kflBvMDXM5ATrvh6BHLSC84roi8g
J/+eCz0DOfQH9MYlwWPIcb9monfwPLq/+y/RK9AzkEN/mPx/hLsaeOyPr+CO
yf9DuO8ehh4SudxP5xe9ESd4B/l5ed9KoneuSX9ATno54h8lvRe0R+TQHyb/
GN4XeS7dpT8gB+4vEL0BfQB5T5kPJ0TvtJX5Ajl+r0Vv4H6QQy+UEr0zVPQF
5G3Des/F+0CO/pT+VehvyN+X+8n9NZ4HOcYzQfQK9AzkYb0Qje/I95hJbrse
/jeTHP4t4/PF/2OSAy//7v3hH7Pc3/h84OvfvT/0k+V6o9zWPuDf322/rf9t
7Yf/6++OH/SDpf1///n/4/2t42Ppf/i3jO0X/49JDrz8u/eHf8xyf+P4w//0
d+8P/5Pletv7G9sH/Pu77bf1v6398H/93fGDPrO0/28//3+9v218bP0Pf5jF
v8bXx/z38+LNriV/Spvyp4A/lvw0bckvc0z5ZcBnk38I9oMlP8ro3xL+ri35
eWxH+ddLvN215I9pS/6Ya8kf0yb/FuxNS/6isf8kf09Z8vccS/6ecf7Y+sc2
Prb5g/ab8htxX1N+ncSvXUv+lDblTwF/LPlp2pJfFonzQz49nB8Xya+TeLK2
5EcZ/VuSz6At+XmRPAnIJT/AteSPaUv+mGvJH9Mm/5bkLbqW/EXX5F+TfAdl
yd9zLPl7xvnD/cP5e5T/FslPs80fW/sp/y2SX2eL34OfWvKXXFP+EnDHlB8m
+V2OJb9Lm/K7gG+m/DbgiyU/SZvyk4D/lvw4bcqPA/5b8rdcS/6WtuRvuab8
LbTXkj/omvIHe9H4GPLnlCV/zrXkz7mm/LmONH6cHyb5hcqSX2icP8g/M+W3
Af8t+UuuKX8J+dOm/DDgvyW/S5vyu4DLpvw24L8lP0mb8pOAm5b8OG3Kj0P/
WfK3XEv+lrbkb7mm/C2015I/6JryByV/zrHkzylL/pxryZ9zTflzwG1Tfpjk
FypLfqE25Reif035bRIP0Sb7AuvNEp818lfgtSn+KfED1xK/Ntc/CP6Z4vdJ
ludL/FWb4q+J9H6G+L82xf8lPu1Y4tPaEp/Wlvi0NsWn0W+W/Ahtyo+Q/ADX
kh+gLPkB2pIfoI31V9Lvpvg3/JeW/Altsu+gH0zxe/iTLfFZI38FHpni3+Kv
dy3xa2P9A/DPFL+X+Ktjib9qU/xV4v+uJf6vTfF/iU+7lvi0tsSntSU+rU3x
aWm3tuRHaFN+hOQHOJb8AGXJD9CW/ABtsl+A16b4N9ptyZ/QJvsO88oUvwf+
WeKn2hQ/7RDm15H4I/DdEl92TfHljmH+G4mvS3xUW+KjxvYB3y3xeWP/kP1g
ih87lvixtsSPtcl+Ab5b8he0KX8B+G6J37uW+L22xO+1KX5P9l0kPm17f+gH
U34D3t8UXwe+W+Kn2hQ/xbo2xaeB75b4smuKLxP/jcTXJT6qLfFRxxQfBb5b
4vOuKT4PfLfEj11L/Fhb4sfaFD8GvlvyF7QpfwG4aonfO5b4vbbE77Upfo/5
ZopPA98t+Q2OKb+hbdj+isTXa4jfwGQfgN9XlfXdida3Ib4cg7yp4JMp/wrr
uUqvpLfKztgk34P1Cb1jyh8+90OJfPdsud3P7xlL+qmaBb/ZPzaW/Dvr5Xl7
vi+6uEbcGseZ0PZy4z1/2b/HUp+xvvHFL/LOTXM6XE7b1ecufAb8RC5L9u5z
QtqTRv2bJjifJt+D6/E8D/8zK5XxHrsj/hmTf79YzfkLVmcvrLjO0R8fyr/e
SvwZ+Q3jvHa6Hv7+Jf86pH8OuJnu2vTwD1sDfq11UvE1XaY4Wffs6fFs25MO
n19ZNtZq08lR55z4rTNeO1H8kjNo4iOtHikXzD+st5+XZC1R+thlZ2nKpVkl
WgT776gPd2967XJ+pa9OSD31bE6Fc8Yhb/xeg5IvPVBMryn1duGzWzLrNZUy
OSvmB/iE9fZi1eyp7b77tzNvRVrHmg0DfPr5/kLFiy0rrio8/uL7jT/Op6Sd
wfr8YWOSe7yKTvlxceO65W6R+wf7Y9bNaN+tKvlB3fzbGQmq+uOZGi5bmM2f
v00z2pdTf/LC27edTD3kvpbw9KlfWgT+mWry+68vXjqoZu52D/as8/aAj4Lz
b/NLe/Y83nrQ5cKLneEDfvvxln5B+0+/WuG77oeOu7GM/v/VkX7w5Z029uv7
0dQ0x2t/mrPu1R5Z/7j3L/O3xa9vtq8z3JmadGlvxz0nnIZLM7XJ8VgwfvfE
3rn/0J48anRG+7OpfkmF+/96xzi/f/D72+a9fV/PS9eck8nnb393+F/mt7Qn
6XL/fOc2xdS4uDOPf1XjL/uvvfb/2r/Tjd3c66umHQ/557lC3jGj/XnQr/L8
IZH8oxm1+t+acDWT6pP1XN4yH/5l/8Djj4wcsaW6jM/tkfN/JzVZnJj+foJu
4L2HezGPavzBgWD+A3+7VroyL/bEL26vz/v2+Wl1gD/AV8ZZf/xD+Bmtj7jR
+jjg6t2Cs5ADNyWP1v2F8merWfwjwF+T/wh4rQQ3VwiOUvu1CX/WhfDzpI+j
/vhfPz8n5su9f8nA0fSvPJyFfI1cV1dws73gaLh9ac44wd2HBIchLyH4adIf
1viK9Ot2wdWqxE/XCb4CV6U9EX4PXAXOQn6n4OdAwU3gqN++RR7+AneBw5AD
X4GrqYKzkPv4KbgJHIUc+AvcBQ7T/d3vBVcfFpyFHPgJ3ASOQg78zSc4d5fg
MOTAT+DmGMFRyIG/wF3gMOTAz/cFN7XgKOSJct0hwd11gsOQdxT8BG4CRyEH
/gJ3swoOQ15T8DPWwcPNMYKj/vgJ/gJHvxYchhz4OVZws4PgKOS47rTgbhnB
Ycg7C37GOnq4CRz1ny/46+Ou4DDkwFfgKnAW8omCn8BNaY/ff3sFf4G7wGHI
YU8BV18VnPXXh+CqZ/fnkvjlgYi8g/z9iPwO8vYiPyJ+g0zkX7b5Pzh+yvYr
4X/UfylyE7/F/U34C3n1DL1yRNoRM7QvpqrK71hu4ufh/ovqF0N+YyzSf/LP
VF/sPX+xU2xLx1sWdo+LyPF3/I77z3u/0qp4xu8C/1rH0PWFxM9QOnL/MQ80
Lfpe/j/bWWtWyreVL0XeL/0+7+9j8TuSv/HF8xPficurmm9c1WPNytOR+ddC
/v6m/I7b92Sv1W/e1qCwOjy/8NCph4P9B3H9Efl7a/kdXz+myg9rv0rMp9Y0
PtTphaF/RJ6Pv+N3kL+A/ll29MLB4bepR0+Omt97fXB+Pe7fVP6O30EO/1vF
Zh3XPLvkqDOo6aqkwbvTI+MzUP5eVn7H7duSp3GbWtv3O0W/77w+77QAPyDH
3zfI71iedNOu+j3eyaWerdGj+3PD90fiR8/L3zvI7/j6jj89u+HhN7Y7sQPd
vhn5WJaIHH9/Eb+j9zu0YtScvmv/tMtbfJO53eXcmp+f3tz7+2H8TuTh/OSo
fc779zC+2PY/2N7+qc82zL5dGfmV9y/Zu08ewZ8gPnCszZx585/f69Z74YnF
V5rlVd73IL6asuKLq/Mr59deXlwBFXt4duWXU4L8l8SQfR+T9wz0h/BLbcI/
W/2uLf9hZ4djHcdfukn1aTxpYaOfsqvYMfXs5O2LAv4p/eXll+QQnrc+Yh97
/svsYh8v9eW2/Lfn1wzo0SauLvJXIvkP4Hdf3jlnwI8N/7QrMnhesL+oxz8S
1Paebc81+TUzeFaEv/009ccPy9XIpZZk8Ljg/JORnSc8vWHOzWL/gqcF+veh
m0fM7Fv1TjW5TcXx/654xPmibPX0zqMC/QH+VujRfg+P/zxeeTwuiE95vKui
isvgNeuctRk8LtAfDX48dOiXJYfdRu83mXvi+7zqwtQx4z+tEpwf8+mGHq1/
faAp7C+N+0H+Qp+fxjtvnHbzXW4ct7NcvJrStVKjxBa/+9erpeP3z92XUy9e
tW/5jJ75VeeUIc36fhWcHz543u03H2x0i2rzwajSvaqkOT3XbGz1dpmA/9aq
/OKTWY9WE1520vV4XMDv8d1r35/zJMO+7O3f/3z9uEeqljnnnO917fig73Op
CbFLRWe0C/jHz/Nyxx5Jj1P9LmxvsXNhDjVo667+p/Zu8OXfVat55/AT9YSf
JuihdL74koSGFWrVz6OW/NpkyN6vs6kxxxqOfWjA6/71fn7awj4D953NITxs
ky/3+GF+XWn7Ix+M3FxAeFYwP2G/NvzHZ5vqLMmnembwrMC/Ad5i4i9hfIn6
vwz1ITHI5T/JwB3gEOTAF+CKjzMiBz4dFVyqLzgFOXAFuAMcgtxWXwh8MvGv
XYIv1456uNIXOCNy4FMfQ34u7FMluAMc8vtf2rNJcGes4BDkwBfgSvL19w+1
5lelV/BwZwpwCP0n+APcAQ5BDvwB7gCHIG8s+AJcAc5ADnwCLgGn6P4ucAc4
5M8vwQvgTlbBIcjHCb68Kr8DzkAOfAIuAacgryP4AlwBzkD+ouDTVMGleMEp
yIEvwBHgDOTAJ+BSW8Epf34Ajzp6uAMcghz4MlBwBTgDOfDpc8El4BTkwJfY
cQ9XgDOQzxN8Ai4BpyAH/vQV3AEOQQ78Ae4Ah+h6DdwBDvnzM8R/jPzetfB7
12Ifuib70FB/FmM5/mLyz1nsG9di37im+Azhc8S/CLnFvnQt9qVrsS9dk30p
9rVrsa/N9c0it9gHrsk+wPtb7CPXZB/5+7/8Z37vmvg97m+xD12TfejvL/2f
7RvXYt+4FvvGNdk3kFvsY9dkH7+A+f2f7UvXYl+6FvvSNdmXkFvsa9dkXyNv
2WSf2fbnfs7Tz8qkn7G/xeXaeRqP61hcFfhsXcLDRYL1wdex/WCrb8X+NKb4
LL6b/M+4zsurLCN53EXo+fmV95yCcp/AP7x55UvNP3i2tjF/4/AN7p8wVvKL
OlF+Ed7X44234D2C+SW/n5rBa24VOzLIn6jZp/HK3lPLqDea3jE26c6bVKtR
anLdOoF9WfHUkDXNv6mhRA/rNS17zW3cOcBH8J+FGbynuJpe6OpP36wOzv8a
OrJErns3lVUm/+/lex6pMbt7BWXyH4ftr9KqQWa3w7Gzgf5retN3ab3WJyiT
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
ur8GrjwgOOOPT6g+7zrn+1rOXy3u1TcY6+OEfygL/3BM+OF9ov5tl+BBZv/+
wA+vDuWc2BNBfFH8q8b9zVE/bPLPAj9SDfk9yLf3ePtZx/OjXo7gw/qMuoij
zowMP2kQf7y90eb353Yoo5KupRT4vfifeuZQSsW5jYP9Pzr3/D01fmZ15N+h
TkzR/V2VURcx16mf4ScN9APy4U31bVWK5Tg/cVFDY/3S6Wfa9Lx5SLzef/Ke
38o+uM99d96aCR2qBfzil1Pj67y+I053fbHzmliFNe47mf/xap3nAv48MHvW
JVO+veje9V62R/P9mOL0zZ6+Y27mgN/lTFiYmlok3VjfV7/SlPXN5sarJR93
3Lq25EUndfeoP7rcFqzvGOpRDPVdK892OlFsXya197nXew984rQzt8DAR+cc
Dubf4uNZR8+6O8156qG4VuuOnHCObbwyYWuT4PkT8lXpOX1PqlNl24r5uU78
ySuzre3Rulww/0ZefP/tKfsQv0mQ+Ew2v//C9WNnnOMZfs7gfPHZUq/iXX/B
9fzQwfyDfTI4o25hpftFhh8z6F+sP1N9lO38Saw/E/8X/a1M+tv7RPzhz36R
dQo5/AdYl4myTiG31e9j/ZrsD97/kfN7x2F9yrrEOqX148yUdblN1inkWH/f
yrrDOoT8Dlm/HWXdYh3T/d16si4flnUKOdadqf4J6w/rbp+sQ8ixfk31L1h/
fWTd/TbIW4eQY/2+Lev2GVnHkNeT9Yd1t1jWIeQ5ZP2a6sOwPk31P1h/WHdP
yzqEHOv3O1m3B2Qd8/qTcYaf039/rF+s20SsY5FjfZ6QdYl1CjnWJ9Yl1ink
WJ9Yl6/IOoVc6ueN+/fyujXUlzuW+nKfpxvqy12Tfy6cFx+tv64eig9c5/xi
2l+K67+l/sy11P9qU/0v1qepvlrq87SlPtoYn8L6NNWHS32vttT3KlN9r9Q3
akt9uTLVl6PezVL/rC31z0b9KPXP2lT/LPX3rqX+3jXV30v9ubLUnzuW+nPH
Un/umuLLWN+m+mqpD9WW+nxlqs8HvzbVh2O9W+qbjfsrrAutX2N9s7l+Tta3
qf4X69tU3431bao/lvpTbak/dU31p2H/fbS+F+vXUp+rTfkzWN+m+mSpL1WW
+lJt0q/++v3P9c3apN+xfi31t66l/lZb6m+N+lfqv11L/bdr0u9Yv5b6Z2Wp
f3Yt9c+OKf8N/n9TfS/Wr6U+XJvqw7G+TfXJEh8w2s8SH1CW+IBjig/YzrfF
urXkfxrzR7G+Tfxa/CfK4r9VJv8t1rfJPy7+bcfi31Ym/zb2/zb598U/61r8
s8rkn5X4gGOJDyhTfED8R67Ff60t/mtl8V87Jv+1xE+UJX7imOInWPeW+IGy
xA+UJX7gmOIH0N8m/7jEV1xLfEWZ4itY3yb/Ptanxf+uTP53w/k5Mb//ZN2Z
8iexvk35j1i/Jv8W1qfFP6pM/lGsX5P/WfzHyuI/dkz+Y+hnk/8c69Pi/3RN
/k+sT4v/3TH537E+Lf5h1+Ifdiz+YWXyD0t8wrHEJ5QpPoH1afHPOxb/vGPx
zyuTf95fvwb/M9anJX7hmuIXWL8m//mYUH7dderjZX2a/LuG861ikGP/aFN+
HtanyT8dQ76DwT7D+jP5d8X/Y7RPxX+kTP5brD+Tf1r8H8rknxT/tbb4r5XJ
fy3+HW3xz7oW/6xr8c9qk38W303+e/GPKYt/27H4t432s/i3tcm/DX5r8v8i
n8nkXwjbp1H/M+a7yX8ant/R/LSwvoryU+R3mfy/mP8m+wTz3+Q/xfy2+EeN
9hvmv8n/i/lv8v9hflv8w9rkH8b8tvg/tcX/qS3+T9fk/8R1Jv845rfFf6ws
/mNt8R8b7UvMf5N/FfPfZF9j/pv8u4hPmOq7wusjWj/hn/9+de37ncZfcTr0
qlJ786RofgP+nii/Y3mD+QfWH3grt9p9adTkou8ejvDHX+XvDeV3/Pw5g4+N
ffGZQmrMjpYba94a2BeQj5a/43d8/5Ryl757s3t+lVjqUJ5pI4P8XFyPv8+R
30EO3HjitcZN+lyrqJImT/u2efM7ov0nf28tv2N5j2uJuc50POvc1nPVoodS
L0f6B3/H77h9Xf9RYe6JfEucpI8rDu73clzk/u3l72/I77j91drVv23Nc+fc
lO7xtet1io+8H/6O3/HzVcrQM7Vf+sFJXHe2b/Wt0efj7w/J7yBvL/L3vu/+
YY1ZxdWXxWq0O9wusF8hnyJ/Hyq/g1zqS238RpvqH6X+zZgfLvVv2lT/Fs6/
j9YXSn2gcf8QqQ/UpvpA4LOpPlLqP1xLfZs21bdJ/ZG21Fdqk39K6v8cS/2f
ttT/Gf2XUl9j3J9Q6rO0pf5Um+pPpT7JtdRfKkv9pbE+QOqbtKn+Mpy/H60v
lPot4/5DUp+qTfWpbUP5/dH6SPATU32d1FdpS32VMX8a9XGm+jWpP9OW+jPj
/heojzPV30n9lLbUT7mm+inMf0v9njbFZ3BfS32ZY6kvM+5vjPVjiv9JfaO2
1DdqU32j1PcpS32fa6nv05b6PmN+Pc73MtWvSf2jttQ/GvfHwfow1d9hfVj0
qzbpV8gt/EKb+IXoP23Rj9qkH/F8C7/SJn6F8+gs/EBb+IG28ANt4gf++UT/
mV9qE79E+yz8TFv4mbbwM23hZ9rCT7WJnya2T8h119tpxvMH+NxUPl/BcL53
DPIXv3jpkRFP15L4Z4L24p9R/lGlxZkafQ7udeodWlzEuSOzL0++r17lnSvK
Kp2zVGxZo9yonwzsz7jVP+w9Uk/hdzgPG/JbS/7ULW+xQnqC4XwjnK/3s+F8
wm6Nn/rs8e5X/lzXS3tca7DH2Z44LEe74UH7cD433pjt89IH3pvxedMcanjB
9J5l77ji5Hwu/bEixYLxk8uSvfuckP4M+M+/NtZOX5ocU3flanVbDfWH83Ln
L7/KlikYnztSHyyWsjymhg7bVWX6c384OX4rPW74rsC/YTtf9bbxlYo1fray
qnZv3IWiZ/KrSt588PsX9uG0bj11lxGXnBNZ38m9bnpwvp+Xt1JaV8+4/qyb
ckzPGpU7WL/Av0f/ub/4vlkbnUmbMt/W/4Wgf/38MMP5TC/J/JHnoE7XH1/M
P1P/+/lhMq/ulnnG8wvzCvMM8rIyf3D+yRA6/wTzD/MO94O8q8wfzJt1Mo94
/mHe7aHzfUvI/Mkl8+Z9mUc8/2z792FepTfw5hnPn+wyb0bIPOL511XmHeah
3z8yf6rIvEmUeQT5BjqfcY3hfMbjMq9myjzj+YV5lSjzjOan/kLmVWOZZ5CD
H2bfsXVZ3m/zqNfqTNf7bg32d8L8w99zyO9Y3uD50lsHxxVWPw5ZVP/NF4L9
iSDH3xvK71huOj/Gdj402m/CN1xvmn+QH+oxqVaNfMedqQu+mfl5zfQIvuPv
++V3LDfhs+8/NKwvyE3zM6xPjOvX2dPt+O9f7tzmvDI908CbJmeJyPH3o/I7
ll/ZrZ5IyF1MlX8nc5NhPYDXgfxO+Tt+B7k376oY8w943Hh8S0+sUnjjwJr+
e/P7Xd3Z9WJ2t6p5fXv/kr1zZeOVhxMB/ymeMe4n3R3vXj364dV4tfmz33/N
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
4xLnZv/1PNFX8qm/En0GOeGym538J4Rb+pTgGeSkN/R+ej9/f36Ko3H/fSvv
+Tj1H+l1F/oectKLvh0I+U7Bc/l0gfeQk9729TW137c7spJ9NZ3G5ziNj23+
tA7rDVWQ+ofH5yYaH9v8Ib2n46n9tv67vt2KfxH9of6zPMEiz6Yt1xvlYd4e
lYftpqhc9mFCHkPy37y/a5LTOe2m+xvfz3Z/Oicrej3t0/7fto/Oifm77Tf2
/w223yi3jR/tsxeRcx3033z+/3p/o9zW/5ynzHLOg2S5l7fr55n/3ftH5qec
n6TKhPMUTfc3vr/p/pBTnkJEznGyG20fyW39Y2u/sf9vsP1GuW38RB55P3q+
sf03+Pz/9f4Rua3/yb/m20mQ4/fh/Q+M/ruInPxDmv1D5D9z2H9G/huX/Tfk
H3PYP0b+P5f9f+TfipzPaGsf+bc0+7fIv6PY/0P+LZf9W+T/0ez/If+iZv+i
7f1t/Uf+Mc3+MfIvKvYvkn/MZf8Y+V9d9r/a+of7l/1nPH/YP0j+08j+U+T/
0+z/4/nD/lPyD2n2D5H/zGH/GflvXPbfkH/MYf8Z+f9c9v+RfyuSH8ftY/8f
+bc0+7fIv6PYv0P+LZf9W+T/0ez/If+iZv8i+Udd9o9y/7F/kfxfmv1f5F+M
xM/IP+ayf4z8ry77X239Y+tf2/yxtd/2/jx/2H/qfUI/JETiO9A7rIfCct/u
8fUM5Nh3ObyPc1D/mzLh6OnDQ/P5+C146I/vVcGdJnIOnXe+VJA/4u9fIc/h
/YFwvm2H8PkJfvvuEbwrpgd/0qxcIdWB/EctD+d6Z82n8WrbY2sHPZj9orOk
XNX65+8L9lfEdcBNud6/P3AL+of3r8T5wPC/eedUVfXlOPfhEJ0jTu+v9aqV
5Yt9VibiX8Jzaf9MX45+vSb97J3DE+yvgPdGP8j7++P3ypOHTsyMj4P/Uf3o
6TtfjnHFOLP/zN+fRsaP/W9JlvevTvNrBc0vtAvtXEz+Udw3yTA/0K/hc0CD
/RcxbhVlHL/1xs9vX9eHLm85VzTNQd7Q417+jN++ZxrUeWrQiHgfv0Uf+O17
PSMv84DzVMqH5WYVKqhOVfjywKL3Av8i7ovnPE75OTUTdZeU6SV8+0L0hd/+
0/17PjLg5Y1u2v7XV380r7CqPKRLleHrAn5yaNOB4sNUPjVmUqcKdZP/HPct
Iyde0X8E61Ouuyz3qehd79/fyyctqt7w3sP9ukmrIz2/C/a3yJp8fkChQ3eo
+73f6Xyzm5848UCg39HuWvIe7D+D3yotbsKiEmNKR/xveC7aIc/35ehX+Z0j
/es/H++NfpD398fv0u+tzlWdkV19/vbk1Jwj4tSS/mN31fxFu9R+51kZZ/af
Aa8f2NZ7RLZiORT73wZK3dDrT6onK91RRHH9UB25DvcRfeA/H+1CO+d77fPv
j/sODNcn+e9/TfoV+kX0mS/HuGEcZfz89nmfN5pfkPBf2y+Qg5+a5MAhljfP
+Dd54bjQOUPR6+E/stw/8ny5f+0bvL/x/a5/Ttj/3j6Rx6AfLO239X+kf6n9
xvbBv/Xfjh/klvYvtLX/+vvU33j7r78P5/9v4xuz3f/6deyB/Pp1xIG8qPi/
1hnk16+zjNw/Mn6JGf+W1C5xY/c3th84b5L/3faNGf3//v1Qu7v4p7h91H5t
av/18ywj7TfKs/6P4/eaof2QF7W0P6ul/dfPU4w833h/2/hePw89Mj6R+1Nc
xbdjIBc+q8BzoScgryb2BvNUyGGvgKdWo/MlYC/ADqhG/hPwSeDvYfBYkW8W
vluNeKz//sLnmYdCDnsB+AJ7gp6vDrMdFG6/ZjsI8kSxVz4W/BxC+3cvFXuI
7QTqP5ftQMjFPxbh6f7zxV5gO5HGV0N/4LxyyGGvtCI7jt7P9499FIrz/Nl+
sRe6SrvYfwd7owPZMdz/sDPaU//PEXsB4xaOg/jjr9nO4/nVnu0kkcNeYJ4L
+VGxN4AvsEcgl7oH54DYGa+InQG58H11TeyAS2IHQA57A/h7n/B4ur/bTe67
n+orwOfB7zk/Nr/YCw8ID40THkrPV2wHQX632CsnyA6CHPZKH7Ej5DlB/4s9
NFbshMOwEyAXPg9+35b8M1rshYnE0yGHvfAs2YmQnxF75VUZ13YyzpCnb/bs
FbQL7aT3U7CPesl7Uvsidg7ksDegH2CPQA57pYfYGSNofwvYC7AfpB3++Eq+
s593hnkAeWmxVz4kOwly8l/5ediQk39Es3+E/EcO+wfIfxHJHyL/kcv+I8I1
l/1ftO51JL8q7P/S7P8i/47D/h3yf0Tej/w7mv075P/Q7P8gvaLZv0Z6QbN/
kPxrLvvXyD+k2T9E/jXF/jXSO5r9Q+R/1Ox/JL2n2T9Gelux/4h4h2b/GPkP
I+ffkP9Ls/+ro6V/yD+i2T9CuOmw/4j8F5H8IfIfuew/Iv+Xy/4v8u9o9u+Q
/8tl/xfpPZf9O+T/cNj/Qbin2b9D/g/N/g/yr2n2r5F/ULN/kPxrDvvXyD+k
2T9E/jXF/jXyD+mIfyjsf9TsfyT/mGb/GPmPFPuPyD+m2T9G/kOH/Yfk/9Ls
/yL/oWb/IfHTSPyU+LvD/J34o2b+SPw9Ul9A9ofL9gfxa5f5Ndkfmu0P4tea
+TXxT838k/i1w/ya+KfD/JPsm0j/kn2m2T4j+0axfUP8PBJfJ/vGZfuG+Llm
fk72n2b7j+wTzfYJ8XfF/J3sE832Cdlvmu03sj802x9kvym234ifauanxN8d
5u/EHzXzR+Lvmvk72R8u2x/Er13m12R/aLY/iF9r5tfEPzXzT+LXLvNr4p8O
80+yb1y2b8g+02yfkX2j2L4hfq6Zn5N947B9Q/xcMz8n+0+z/Uf2iWb7hPi7
Yv5O9olm+4TsN832G9kfmu0Pst8ctt+qUf1hR1q/cr6ZnwezjuwHW/5slV5J
b5WdsYnye4L1uV78V48K/q0j/xXskXM/lMh3z5bbKQ/Vnt+EuD3ug/PaIN8g
570ir0zR+c27BL/vFvzm/BoPr1GvEEv22hHMDw/X0xz83fPD/+X87Yx/uvZl
wf015N/z+HZmhb8/kPG+uwN+K+fNrvXOoZXvf7m/5BNdLX79+gz2u20h/oy4
TUnvHHtVi+pf1sh5tb5ep/Opx3vv7a6S+JbH5wP7IbOcJ5PsnWPsjKbzl3Du
M9YVn/8s54I65bxzUiPnG+O8Ge8c2vxqNJ2/pOQ8W6yrH+j86nVy/uu/vHNk
9Xo6/xn72ss5t5H97TfIeapyzqo+TOcr41xjOec0cr7xLDmvFX//kM5fxnmp
b3rnqOq1dP7xCNmX32t/Ts3780/Deb/eOcCR879xni3+fpbOt84h5wOc886B
dfl8AZx7jb+Pp/OvcW6BnBPtrKXzC8bKecX3eecYK6dD+PxxnEd1MeP5O93I
+WxyHizwty+d/4zzb73n51H1OoTP18Z5VHLOeOT8tjfkPFvgb286v7q+nA8s
55BrPn+ccZftX4/35FLh3wX8ooN8D/PzYP1Z80MFFyFnfLX5f/B7yNl/lF4z
bD8cJH4M+7xj+P6+nPSHw/rDVn9QPaM/jzjh9gf1Od6nrg054y9+j/bhfuH+
z+rLq0p7w+1f7D+/2JaOtyzsHqzf4vId11eT34efX1qFrw/sx6LyHdd7/R3w
izEPNC36Xv6/7CtQa1bKt5X/cr6hfId8tPzen99fPD/xnbi8/vObb1zVY83K
YH/RFvId9s+b8nv/+VV+WPtVYhC3WNv4UKcXhgb+j2LLjl44OPw2//2bnhw1
v/f64v77Pdlr9Zu3NSjsX39ofuGhUw8H+2s2kd/j+UXlfpAflt9D3lruB/lq
ac/zmP/SXsjX5Gncptb2/cH4fd95fd5pAb50vGlX/R7v5PL9hy/W6NH9ueH7
/fcr26zjmmeXHPWvH9h0VdLg3cH+os/L73F9ktwPcvwe198m9/P7T9oD+Wpp
r9++n57d8PAb24PxP9Dtm5GPBf5HfIf8efk95IdWjJrTd23RYH21+CZzu8vB
+cz4jvYflt9DvkH43OPC7zZQfiStH5fXj/cJXhXNH2H/M/t/6wqfQ530KuF7
kHP9cjXmN3IdcO0Xqq9GXsV54aeMf/cIX0PcNkn4nN9+4Wurhb91ED4Xvv9J
OSc1zeeTkBvqo2KQh/loLJYe4qt/8h9531uE340j/ryZ4nts/9vy18H3kN80
WvigP77CF8P1x4F+w7n35YXfCQ/y7/9v4YPgh1uFL0KO83PbCr+M0fmF64TP
NRV+B74HOfgg+GFD4Yvh+//qKuGXi+h8Q/CtpsK/+HywD4TP5Rd+N1/4nt+/
wud6Cr8D34McfLKa8MuVwjchx33BL+8Svgk5rnOEv/an882+TvL4Vg3hX3Ie
azD/hc+tFX4Hvgf5euFzScLv+Hy234VPgl+Cb/rvL/dNF34Zo/PfhF85G5p7
/PUr8FmRN2/v8bn2wu/A9yDvI3wQ/BB80Z+/wievCb9Mzx0+//SS8Lkvhd/V
Fb4HeS/hg+CHXYQvQo7zq/cLv+xP55/a9u+BfR7O/wrsc89v6NvlgqNBfKDe
C08svtIsrzreZs68+c/vdY9mfAb1Bd6nro34EfMjb7+BAiplxRdX51fOr2MP
z678ckpQn/yi4NuO9k99tmH27Yrxjex7zfzTVv/j2fcxsu+D8enTeNLCRj9l
Vzs7HOs4/tJNKv2oenby9kX+9Zx/zfrD819mJ/t4aWAfZNTn5PDzjrx6svW+
nPYtiuxf4J1Xml+F7edg/1w5P1I9v2ZAjzZxdfUwqv/BeWQ4V3Y0ne/nnTeX
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
6zvi9NuZ//FqnecCfgl+gft8Qvwi9l62R/P9mOL8X/asS6Z8e9Htkz19x9zM
AT7vOHnPb2Uf3Of+/kybnjcPidf/N2/NhA7V/pI/K/obdVusvw8+93rvgU/8
OU5nO50oti+Tmltg4KNzDgfrM6tclyNhYWpqkXTnE+IPTz8U12rdkROOPp51
9Ky705yjG69M2NokkC/5uOPWtSUvOvUqTVnfbG68St096o8utwX4XX3bivm5
Tux1JuSr0nP6nlQnlm1tj9blgvnn6d8zTji+ccW/vprkJX548f23p+yrjvoq
v/+7ZvCDlW44fvGX83Myrr/gyrhqz9/zF/9s2D+v2D9P9Y+K6x8pPuFwfMJ2
fhrFJxTHJ2zn81D8IbI+KT7jcnyG/NOK/dPkv3fYf0/+Y8X+Y/LfK/bfU/zB
5fgD+dcd9q9T/EFx/IH865r96+R/Vux/Jv+6y/518j+77H+m+IbD8Q2Kzzgc
n6H4huL4BvnnHfbPU3zD4fgG+ecV++cp/qM4/kPxCYfjE+S/V+y/p/iE4vgE
xW8Ux28o/qA5/kDxG5fjN7bz5zuKPgzvoxnwl7A+/fNfSN9G9w/j/AM+92ot
1ddhPUP/Mr9eK/oQ+nGt6EvIZ4k+xfqFvoV8rui7LqL/xL/k3x/6EuvzH6JP
IX9V9C30L/Qx5O+Kvjot+muf6DPI+4m+Gyj6b/8gTx9CDn0K/dpO9C3k4n92
3xL9yvXFWPfVRH9z/egx0WeLRL89I/oO8m2iz+qLflss+g7yeaJPoV8PiL6F
HOsus+hXrq/29bX8netnPxZ9B/0HfQj5CdGX4frcQH9B344R/VtN9DHkc0Qf
yjzQ1URfQg59ivUFfeuvj3B9vsv5wVS/rrh+3XB+aAxyqq+P7K9H+w9o3n+A
6rM112dT/brD9etUP+1y/TTVr0fyL6j+3uX6e6ov11xfTvX3iuvvqb5cc305
1V8rrr+m+nKX68up/lrz+qH6fs3rj/YncHl/Aqrvd7i+n+rTNdenU32/4vp+
qk+PrC/a/8Dl9Un1+S7X51P9uuL6darPdzh/i/YvULx/AdXfa66/p/0LNO9f
QPZZpH6K7EtjfYTp/F6yHzXbjxQfj+xvQvZLZH8qst8ctt/IPov4X8m+dNm+
JPtKsX1F9qVm+5LsK832FdlPLttPZJ8otk/IPlVsn5L9qdj+JPvLZfuL7E+H
7U+yvzTbX2Sfa7bPyb502b4k+02x/Ub2pWb7kuxrzfY12Zea7UteF8y/KP9T
cf4n5U8ozp9IvLr2/U7jrwT+lV5Vam+eFOhnfMfz8XvIG84/sP7AW7n95+++
NGpy0XcP++37Rb53EvmD8nvIU8pd+u7N7kF9UGKpQ3mmjQzqP554rXGTPtcq
+u+fNHnat82b3+G/35zBx8a++EyhYH/yHS031rw18F+2l98/L/JWcj/I8Xvs
I4H7+f0j7cH950h7/fnxjwpzT+RbEozTxxUH93s5WP+V29W/bc1z5/z6ym+7
x9eu1ylYPz2uJeY60/Gsf/1tPVcteig1mJ8p8ntcX1XuBzl+DznuBznaA/nT
0l7IVcrQM7Vf+iGwH9ad7Vt961/iJ/Id11eU30M+5PvuH9aYVdzv/y+L1Wh3
uF3gn8Z3P/9Qfg855V9H9g8l+0azfeN9ms+vIvvAYfuA+G1kfxiyDxTbB2S/
uGy/EL+P8BOybxTbN8T/Xeb/xI8V82Pi/5r5P9lHmu0jst80229kHzlsH5F9
oNk+IPtJsf1E9oHL9gHZP5rtH7IPFNsHZP9E+BXZL5rtF7LvIvyS8v8j+6dT
fYTm+Drlj0fq5yi/3uH8esrv1pzfTfn1kf1DqD7A5foAyn/XnP9O9QGa+SXl
vzuc/0754S7nh1P+u+b8d8oP15wfTvUHmusPqH5Cc/0E1R+4XH9A+fOa8+ep
/kBx/QHlz0f2H6P6DM31GVQ/oLl+gPLrFefXU/2A5voBqq/QXF9B9QGa6wOo
vkJzfQXlj2rOHyX9q1n/kv7TrP+If2jmH6T/Net/4j+a+Q/pf836n/SnZv1J
+l+z/if9qlm/Ev/SzL+I/2nmf8S/NPMv4g+a+QPxL838i/iFZn5B/FMz/yT+
pJk/ET/SzI+IP2rmj8QPNfNDym/VnN9K+b8O5/9S/mkkf43yfzXn/1L+ssv5
y5SfG9n/gPKXNecvU36u5vxcyl/VnL9K+bkO5+dS/qrL+auUH605P5ryuzXn
d1N+tOL8aMrvjeyvTfnRLudHU36v5vxeyh/XnD9O+c2a85sp/1dx/i/lN0fy
Gyn/W3P+N+Uva85fpvzvyP4oOD/Bj4/T+Qmrhc/c1z4h111vpzkm/00xOV81
Fvp32rmzxZkafQ7uDeLjhxYXce4I3m+T7Eva/YuXHhnxdC29K8O/Gqyv5Pvq
Vd65oqyqErf6h71H6uE5/vjseeme6YWnbnbyD0vtOvaurDqf9+lfr3OWii1r
lFvhPrK/hT8+a0ot7XGtwR6na+OnPnu8+xV3e+KwHO2GB+1LlvMo7iz5U7e8
xQrp0nS+kXfuanD+gNe+gH/clavVbTXUH86/NtZOX5ocUy93/vKrbJmi+ZdX
G3jnr3L+1Mhhu6pMf+4P587UB4ulLI+pbL+VHjd8V+CfGFYwvWfZO644pQ+8
N+PzpjlUzufSHytSLMDHNRvOx/2QftjZ4H26Y5ZnKjdrQuC/ndGtp+4y4lIQ
H8/6Tu5103/3r7/n3rgLRc/kVxXHVyrW+NnKqrY3D/z+a/TP/cX3zdro8+sv
NmW+rf8LQf9Xybj+rLvTG1c955ieNSp3oD/9urDw+fP+87Pv2Los77d5fH78
Wp3pet+twf5hr8r3b0SeU34POc7voOf412NeQM7zq+HzpbcOjivsy38csqj+
my8E+1/h95DjfpD/JL9H+/4h96P39/dPakbnQ9H6cXj9YP2F1y3+nXYO9ZhU
q0a+4/71UxZ8M/PzmumR+Qc5z78v5fcYn4NyP8jRHsjvkPZCvqfb8d+/3BnE
91+ZnmngTZOD+C2+43r8HvIru9UTCbmL+e9X/p3MTYb1uNnv/wryHfn7+D3k
2wVPXhJ8wT7Ihva73H7pyGTgG/sngAdlBR8+oPNrdgievCz4skzwBnLglXzq
HYJn4fE95GJeAc94/gEfef4BL8oLfgBPIAdeAD+AJ5B3FbwCfpUXPOP5ly74
xfMvjIexmPe7wP9RQ/DkTsGXRMEbyI8JHrUWfJoueAU58ExwzgXeQZ4iePOL
4E+i4BHkwCu/PkfwDHLCD5fxA/rQe06VyP4ILy7qnrdGa+BdLNkb54D/73j3
6tEPr8aLXjvpbv7s91/zzA78P96nro3zxXl9lvmt2fPHxuRXg3e2vdzvak59
rOLDS7tWCM4vw/he3dn1Yna3qhpO44v5UtWbP5rxr9742J6PG+ZVRxdn/v3s
P8848hngZxt3WuUdmf151z4jPhvYpy37dFx1clludbl0/iunxmVXd2SbPLzu
6GB/Llo/itdPiSPNC+2/+2bfvr1/9pML8j9w1Jd752Xd5NdF9cw4Zymw7+e8
pRtOmVBAyaeW+eK/34phamTPW/L74//ukizvTK8Z7G9VefP7fb7aU03VLjj0
wsrKLUR/VfGvJ/x2Gb9Jf7msvwi/3VjoXwT/XMY/zA/IeX4QPrqMj6Q/Xdaf
xA9d5oekP90IPwvjv8v4T/rTZfwi/eCyfmC9zvyB9J/L+o/0m8v6jfS/y/qf
9LvL+v2orEesz1tlvUIOvMX6zEX8bZPgAfBhp+AF5Nj3uozgA8+f+BDexGKd
Q3gU4beK+W05Wa9Yv61kPfvvJ3gAfGgoeAF5kuABxvUtwQvIi8j43y34w+P/
qqxnrO8HZL1DXlPw4CnBh5KCF5B/J+tVyfqtKusZcqx37D+4UvAAcuAF8AN4
Ajnho8v4SPijGH8IHzXjI+GPYvwh/RPxP5N9JtcF++uQ/nFY/5B+UaxfCH81
4y/xL8X8i/SHZv1B+KwYn71PXz9G7CfSH5r1B+lHzfpxX+/yq6rNLaIOPf1S
71+qLHMv/Li50vKVOf32o78xrlx/MzHu+N3TJ+TT+Bw06a7nrp4O8k9pfWle
X2Q/arYfX8uxb3mWV4DnsZg3joH/pHSDTk22NlzpdF+9unGPd7PqwVO+z1c3
d+DfazHgt62Lt2RRr2bc57I7++vp7+x86mf//sQfNfPHNnlHd2188ZSTrVm3
Z1acy6SPn5o9snDDIL/Hu28Ff/wwzpAnHLy9WdaaaU5h79O9qdzM813zB/6r
RR8t/+DDZkXU4zPfnVOv1Gp37pm8Pw7IGvQ/xh/jy+P/uC7S81itLLpv6XL3
PpOaW+dLe+j00hNBfdtAGQ8eJ8ixvirJOuT1RfiiGF+o/Q63H+sT/STDmAx5
vLS3j9d+hfeBHP6Tyye3/TRv5INqJ/lPiP8q5r8Yj0YNT7SZOOBRasdpR85L
9scP/Qz5HjlP9Kmzu1e323WrakbnX3vrEv6oWLJ3/+D9K/789K/zKhX37/te
13otNs4P4lNYb1h/WI+QM+6y/iH/iWb/yfcy3zH/sR4gLxpaT7HYq6H1dtp5
T9YT1lcxWW+Qk/2k2X7KIfNd1oGL9cDjg/7n8Tkh6w3r7wlZj4b5o3n+YP6F
xxX//pzfMl8byPpbIvMZctKPivUj+X8U+39ofSpenzvkuosyv9eR/qD2Odw+
vMlr0m/rCB9wPm47mb976Xzc1qjrlv7n898xHlg/jG+DZT6DX1SS+R6+Hush
FisTWi8R/6hi/yjxS8X8kviTZv5E/NJhfol2FRX+wP1H/EkxfyL+p5n/Ef/V
zH+J32nmd8R//X6EnPzDiv3D5B912D9K/mGH/cPkH9XsHyX/ucv+c+/T9/9G
7Hvyryr2r5L/V7P/l/zfmv3f5P/V7P8l/a5YvxP/idQfk353WL+Tf8xh/xjx
F8X8Bf2H/uH+I37jML8hfucwvyP+onl9E29QzO8I3x3Gd/Qf/F48P8g/ptk/
9k1qk+1L01FPEkv22hHkt676/LHkc7mD+rcNW79p0qj61Yh+EfzSrF/kfGt/
fuA+kBN+asZP0k+K9RP5PxX7P0k/O6yfSX/J3/Evop8V62fif4r5H+nfSP8Q
P3GYn5B/0mH/JMYD/s2VMl7h+YXxjMWmhcY7wr808y/mbdlkPHl+Y/x5fpN/
WLN/mPyniv2n5B+OjA/5dzX7d8n/rdn/TfNT8fyk9WXMP5d+0Nw+Wj+a1w/x
E838hNvF/U/8VzH/Jf6gmD8Q/9fM/2l+aZ5f8qLJeH+ObxD/18z/yT6K+B+I
P2nmT9gfBvs/mMYHI8Ltg77Bc7dTfQ7eD9dhH+Dw/RMQ14mMf8qEo6cPD82n
5Fwn/5xnyBPD59b5ebiQX5Nz5b190/OrJrKPF+SHwvvuaT5fEPfDuXiJVJ+U
uODe3QvnbHM6ZOz7lUUV04M/aVYu6F98F7muJr+HvOXhXO+s+TReLSlXtf75
+867Pz+2dtCD2QP/LvZVnpOxr2BVHd5nK6gfRH3UGDp/y8/LkbwvvWpl+WKf
BfkPdK6VOkznV6G/pP902ld/PWc1OD8H5+ZwffKrTx46MTM+Tk3IqHte4VQo
WWT3kCpB/v82eV95f78/uP9R51Kd+p/PDcd8udH5kWR5//LS3qVe+91X5H0g
R39K/0byU23zC+d2ePtGVpX9J6v793+2QZ2nBo2IVxIHiPj/X3no8pZzRdMc
0TvOPtL/nj/wgHOiwpcHFr2XSbVN+bDcrEKBfVczUXdJmV5CSdxEz6D4Gu73
uOg1PA/y8/17PjLg5Y1upSFdqgxfl0Nd2//66o/mBf73q/K9oifXl+T3fv9s
OlB8mPpzvLaMnHhF/+GOmdSpQt3kwD8Ql3x+QKFDd6j8s5ufOPHArdrzdxb1
+1e+q2lNWh3p+V0u3d17X9a/OkFwLy1uwqISYwJ8xvv+S+JGtaQ/IH9K+uuU
13/6DelPyOW7+7X3fIX2QH7p91bnqs7IrnT/sbtq/qLdz9+enJpzxF/2N8b7
eu/vHEZ/iBx6B3q2zrbeI7IVy8Ht9+NEmC+Q4/dyvcv6+X2JP5SSuMPrT6on
K90R8Ce0d4HXfv99IL8m/Sl6KqKfcD+5vx5K8UWMp4yvwnhDzvon/C/Qf/RJ
/mnWP9n0Dcuvf/5sYB/T/nJ8/qGh/txvX2L4fEWH8cFwvpJD99d8zirk2P9u
jKF9tvcz7F/jtw96JSmcn++PnxbcBO7Lp/982f9CvyLnx71C+s32/jifsqOh
/3BuAs6NYv20geonGb9l3z5H9J7D+g96v7rodeEDkf7pYOgfW//y/EkvHp4/
tvYny/sPNby/Yf9k/3rOv2D9A/8O59H47399+yuY39fPf/TliO8dozgn3d/3
f6ZInBDyI9K+eEP78H4zDe+XW/wHBcP+A799Bn7u9++Xz+0dsGXyQff7kfcO
LJAzt5JP//mnD3x9rERSIe3lqZRW8unL68v7Hze8v63/YF9/Tn4SyA32W9C+
T2ef7VH3kuPZvb/j079/Qq+dyQNaZlY7Mg/+qF3ZvY583nD/5JT+LST9W4j6
1zZ/bO03xJcU3Z/95/71BvvHImf75r++3ihnfGb5WNofLKI/p4Xxy3B/o9xy
/+TwOaB/+/7m979u/Vcgj+Db9dtnvP4G22/rf1v7je2ztD8W3kcjer11fG/s
+ab2J1uef6PjY5TbxofxmdsXzoOPXp8WypM03t/Yf3z/dfT8cB7Q376/sX3X
9/8EcvaPGtqnDfLYDbbf1v+29pvun8ztN4yf8Xrb+N7g803XJ1uef6Pj48sN
/U/yCy756SL+w+vbSdH2s/5h/wfjG3gneCjzT+ybR3aGf/8O5J9h/H+YzoVl
/tlLeD/sgD7E/7Gv7kQ6xwdy9t+w/QF9VtPQfvHPyLnPd0b8b3ifTNJ/Han/
OpL/jfdngV3yVpin+3LYHTXDdoj/fr2pf3pR/1Qh/yTbJxgfsqNcar/s6xTs
A+pfT+/H+oXnD9u/sHsmGcaP/a/8fNv84XM/B1P/ct4w49saikuvJf4JuyeV
6qDo/pE8XsjFXlGjhYdG7Bfh/bADThL/RzwTcc7CxJ/nid0xVeyQeWR/oP1k
x/ly2CWnwnaKL4fd9Lj031zqv7YUd2hL+PuF8PLBwtMnET//WuyOU2KHfE32
B/KOOE8e8p1il8BO2Un2CcbnqIzPLBof6IusYme0JXxHfIXztCBHXoOMr1pH
8wd2T/awHRR5PseBIee8Vp4/sHs4zgq59xnxf/ly6IuwXYN/vv/Fhd+d9Qfi
LojDcPwF+7/ROQRB+8RvDr98JD4juIa4CsdfgBvAMd5fLkXiKpXE7874zv6b
SPxE4jp4biLFd6BXk/icJ5Ej7tNK4h7bKP6TKHEd7A/7EemnWRJX6SZxCY6v
sH+I41eI6zyMcSH7gf2TkfiKxH0+lnYNIXxdKnEdvBfHdxCXSTSMP/yH0OMc
f0H/tpf+PUT9i7gMxo31h8TV/HGvRPEXzD/ctz3Nv5MSl4HfnfWHxA0U4gZP
UfxF8jecbhJX2U/xG8RlEKdh/SFxFXVF4ipXKf6C/JADcl+O3+STuEpW8btz
fIX9N9cofnKXxHXw3D8ovsP+w5oUX0nf7MV9EPcYS/Efiasg7qN6UXxnlsRV
LkpcguMr7B/i+AniOhiX7hTfOSF6AfWNz1B8BXGfPtKuByj+g7gO3ovjO4jL
oF2sPyRu5MdhOP6CepEPJa7C8RuJe2nEvVh/yPj7456V4i+3SNymh9x3BMVv
/j/a3jveiiLbHr8iSUAJghIMKJgQEIHBMGiXhNGHmHDAhGIkGBFFFATvOMpT
SQZMKIoBMyZQzF0Ko0hGRVBRJIgIgoCAkn++W3vt8qy+e5o37/fln/Ph7FvV
dbqrd+29dljhMxPf9/9eXt6UZ/wPkrP9Czn8qAy/T+nzm+tn/EfkRTs9P/MT
lz5/3u//v65P5+9c8m/se9TnMW/9phz+SM76bf/0hZ16frz+1v9/rZ/xK2N+
+/n8L5+vcf/N8Xx+ZNbfvhDfaFHyb9J7uH/7ED5lzG/uL8Z/ZP7WOzs/28fG
/Hm/31xf/Z1bn84/6uH/+fe8yq8nfMlYvymX+593f83nV2bnnh+v/72dXT+f
H8b1Xc785vPh88N4Pnn3X+VG/pjKjfwZvb9G/pGON/KHVG7kl+n+M/KzGJ/g
/Cqd38ifSnh9lF+m4438qZ2+P0Z+Wpy/9PwjlRv5a9E/KD2/Sscb+Wu6/4z8
Kx1v5O+p3MjPUrmRn6XXN/LPdLyRX6byvN9v5Ofp9Y38Ox1v5Gfp8zXyj3S8
kT+kciO/TJ+vkZ/F+ATnV+n8Rv6Ujjfyy1Ru5E/p/EZ+kd4fIz9Nxxv5Ryo3
8td0fiP/Tscb+Wv6/I38Kx1v5O+p3MjPiu9P6flZen0j/0zHG/llKjfyy/j+
cn5eQvNz/p2ON/AfHW/gGzrewCdUbuBXMf+gdPxHxxv4TfRPS8dndLyBX6nc
wGf09xv4hY438K/M/SV8Q+c38DFH62N8j38f42N6fwx8R8cb+CCvn/EflRv4
j67fwLd0vIFf8f1l/CqzPsL/eH8yvqfrM/AffT4GvqHzG/iEyg38Sp+Pgf/o
eAO/ycNndLyBX6ncwGdi/KV0/ELHG/iXjjfwjTx8zNH6GN/T6xv4mM5v4Du8
fsYHVW7gPyo38B9dv4Fvxf1bOn6lcgO/UrmB//H+ZHxP74+R3xntZ7LPOP4a
3rfKEpddmslv7SHf4+9YDr8CuEQG38jJn2X/hOV59jvHl43rq/5meWF+wavv
sbzZgO7/aPjyZ3Kdsrn4Teb+lNz35bKOoowc8x4h1+Hng3GYh+VhfR8ldb/o
ud97fctl5q8n3+PvSp+/vgvja2Xubz35Hn/H8lHHnVrnrhp//P/YV8e/3nRT
Zv/tOCZ8/4j8HctvfPrSJ28rV9V1njO13/RP12T2B76/Sf6Oz9+6H6/Y+MOI
Bu7U1fe/c/Osepn1j2r29oznW1R3Mzos63X5sN8y82Mc5mH5uQOm3dSg3d5u
2Tt7D3vuxwqZ+afLvI/IdXh9GId5WN59t2/b9rutsru0Vb++l4xYklnf9D06
dD326yVJ3beunFX1hV0y67tQxl0m87C8Yaee0y+etCK549Sp3Ycs3JG5/5h3
ilyH5RiHeVje84OLZ59y49dJ0dI+L408Y9fs+yHfXyh/l3m/p9w/YdCMP86L
Li+V6ba5SlZ/yPfL5e/4/s0gfAR5IDnvb1o43s7fBF/PLInvdiL7La++AXoN
369/e5/qf/ki8jPMFj5rJzzXzD/P9YeYT9dP9j3jN8He3C56drV8xvhWwFtW
0ff4B/u1jGtd8jsXZvpvhk/fGt9v5fx/4UMDT9qswJMW8Zec+jPOj9lG+VXg
+21dyAMc76/wre0iPGxsf4bx29OQZ4T69hif+VL4yiYX8pjp+sE/D9554aGP
9qfweoEH7ODAA6ZyJ3xrxMMW7X/hewCvzwmBZ0x/H/jQwJPWKfCk6frnCx/Y
cuEJa0n9o8ELAB6BwGN2oM7/qvCRgfee+ePBtyU89+ncwMOl4x+U/tfgGTg9
8MTp9cH3BR4w4ZlX+YHCx7a2kKdN798Lwken33cp4amL+lX44B4Tnrjp1N+7
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
mR+76c6Bj767t7t64n0jR31Z0Xep9kPL+575Se/PwguvGrCt0Q9phZHn/uv8
lZXd4ocuq9Plo1g/2/TMZ+ef9MyevubaZZUf2rif++yvX31Wb2Idlbebd9Sm
fT+o5d7ps2bI6G/K+oeJP7jv5T32uOXF35KDdn/wg/fv35CsGHHe3C5nxfXt
vnVH+6LiI90hh124bv5ZTTL81WN6pSOWjnovKXa7tPnk3XKu5UW3XPnok/H5
LS5Z/4bkzb3uOSPZ6/fk2uUvnzevcRla/65ufbv06pc+m5fc/eQny09uG59f
r4XdPll66QHu5/rF5/W/ae9M/uD+l570/th7/tBTe75Z9cFXtibn/3jZmv96
I+7/7p/uemznFn/YJ103HDSr3uqk5ZBNi/f7e3x+7fqsmPRhv+VJ68dv2zDu
1qIMvv/0s3XfrftcHde/ZP4qvvXZY44ftT7W9z734LfDfzxhF/92r5c3t1m7
p7t/UcU+R18Q97/h36jc8B/09xn+oY43/Asdb/iPFN+1+8cY/qPOb8QnVG74
Vzq/4V/peMP/0/GGf6fy8Jnxb1Vu+LcqN/wrvX+Gf6DjDf8uz3+i+TP+kc5v
+D95/p/eX8M/0vkN/0HHG/6jjjf8xzz/Vscb/qNe3/CfdLzhP6nc8J90fsM/
1PGG/6dyw/9TueHfqtzoH6hyw7/R519T7KYtYkex/XSZ2CWuMP9A55d4Wwo7
KXwf7SMvdgvsmCfIfjHidyq/XeymyWJHsf2E9x120P+2f+FbYhfBTmL7iPvT
lF4/UtPBzmH7BnbRBLGT2D5Su0fsINYfX4hdAzvnbLJvzhC7aKXYSTXJPnpO
7B7YQaxfxoldAztnGNk3ncQugp20J9lHe4jdMlTsGLZfysMuETtlEdknI8Vu
mi121ENkP8FugR3D9ssgsaumiJ31ENlXsJtgR7H9BLsFdgzbL2+JXQI7he2T
t8Vuait21ENkP/0udgvsGLZfGopdNUDsrJ/IvoLd9IDYUS3IfoLdAzuI9dPl
YtdcJnYO2zewi/YTO+k8so+OE7vHiR3E+ukdsWtg5zxA9s0AsYvGip10HNlH
Bn6h64ddg/wy+GmQG/6HXr9Jgd+h76eOz+tvZ8TXVf65XG+OfN+M+jPk9Z9l
/fXFp1d1vufi1irfheoHuD9HsI+g9+pk+nsHvGw/8rvwD/ZHPfdyra0fvDSt
arZ+S/jszy7kudfrTxV7ZmoJz31dd/gvQ6d3fqmVyoN9VN+1LZP2WLmuVqZ/
t8bDJQ9o2Mh9Kh/1WeR3nEnx7c1/Oa3Va31jfemU/Sfs9sGofd3if1z/5dUd
avjOYZ26frZPhpfMH+3nug0Xjik7taE75YVBe7zTdj8v+Vh6/9g+OnW3N7cP
mBWf/63y9xPW3TK5eEd9t7Vkfceq/FxZT8PD5h35Ze2ybv96d22d9nvEl64/
fHSjR47Y3w0bdv5vJy/c08t9iPFPsl++ePeXJu/eHOd/rMpjp+0/bi/X+9v3
jh7zdnnfuVvRvm2Pj/gN7Kf7RS9V6PHKo3fOiPcXf3/A8LJf33vD6vSen96t
tu9fo32+u6xndsnzreT+Wqfp/m2rN1N51xL7pbb7ufXNLxzcvnLG/0L+BPLc
ypdcP74fyEt7SPI3ji2ZP/bvaF9ifx3gnl69/dqmrWpn+nffMyP9sPc1dZ38
Dr/nxHXPbe4V8x/6iL30esnzaeY6j+yx7aF32uv8Bj6qcgP/VrmRn6pyAx/X
9Rn4r/6+Ivln9R8w8OH4+0rHp3W8gU+r3MDvfeH8dn9MAx+O+Fzp+KiON/Bp
fT8M/FfHG/itXt/Ab3W8gV+r3MBvdX0Gvq3Px8BHVW7g3yo38G39fQa+6wvX
l8H3VW7gvyo38F9dn4Ff63gDv47zl45fx/1XOn4f1186/qjrM/KPVW7Y7zo/
4xtNuT+T/BM9AT9N5ZfJ+/aw2An8/ubxnwwn/Hcu2Q+wC54RO4Hfb9gF14md
UFTw7w//QOyC92An0Ps7W859ec7+CDr/YTf0EzuC7QfYBTXFTsj0H5Rzf5bY
AXz+7yF2A+yIEWQ/4FyvJ+c8n+84tyW/z2+h83uJ2BWfip3B9sUBcq53ku/3
pfMd77faIWR/SH5lOkPee7YvrpFzfbSc83y+N5RzG9/z+Q27AnYG2xc416vJ
93y+4/1vJe//l2R/QH/ME/1RnuwLtQvETmD9gLxN5HHy+Y+8y1ZiR1Qk+wF2
AewE1g9vyLkv54Q/m85/2A2wI6qT/WDwU+h4Iz4V90/p8ReVG/nXen0jPhPP
z5J/mfiMzm/En1RuxJd0fiO+pPfXiL9xfIrja3p9Iz6TF3/Q8Ub8QOVGfCkv
PpMXX9H5jfhJXnxJ5zfiJ3p/jfhCXnxK12fEH1RuxK/y4m863ohfqdyIv6jc
iN/p9Y34jMqN+IzOb8SfVG7El3R+I76kz8eIz6WF82fib3p9o/4svt+l119R
fCZTf6fXN+qzdP1GfZauL3xm6sv0+kZ9mV4/r/+MUV+ncqM+S69v1B/F/NLS
64d0fqO+TMcb9Vk63qiv0vtn1E/p/EZ9mc5v1E/5wvVl6otUbtSn6fqM+iOV
G/VrKjfq7/T3GfVrcX+XXn+lcqN+L+6v0uuz9Pcb9Vm6fqP+TK9v1Jfp9Y36
Mr2+UZ/nC+fP1N/p+oz4ha7PqL/S8UZ8Q+VGfEPlRvxGr2/EZ3S8EZ/R35/H
f2XEp/T+G/ENXZ+B3+v8Bv6uciM+o9c34hs63ohP5MUf9P4Y8Rmd34g/6PoM
fF7HG/EdXZ+B3+fFf3R+I36l8xvxH5Ub8QuVG/EvV7j+THxD5UZ8Q+VG/CbG
30uPz+h4Iz6jz9eIb+l4I36l99+oL9T52T5g/RDyYdcnIT6xKVv/XVLv+K3Y
8Xhv8C+f382Ib6g8r7/c/JLzeUUS4hM7Mv5B8JvXJdNL/NjNet5DHuyHNwRn
yNZ3d982fs9f65VzVywb3/iNDlOSQ076/O43ekR8AvmKbwU97a7p/+v8aq/E
8/XCK66cXtRoevrPMn+77vhLKrqvfhl9/A3f2PW/zepW3PDkh9H//P7O8qdX
f398MqjCjm/eKFPeDa5QdtKzr9v155gP8u9W/+WnhicuTgdPnD6mR/PKbt1F
XfvvPjT2x1l6yQ0333HOmuTNPe84fcKPW5NP1/VaVXdxfD/5/EWdp/6+k8ud
PXP5qmTFnC1j5nbcnvifyz786hHx/Ssrf4/3tsJe782fX3uHyj96sOfcGfv+
nsxbeP9vVzfYkLRt8uysTm/E/tTh/FwrOMGWzPvXct6UdyqvWpQUlZ/R77yD
yrgnqjfrP+77qJ9aSD6y1E/6+36/+5/PLo74QO+S8//TNOAE2f4/zUvGb0zH
l+AE1dwEOY91f5Ven6vXN+pz9fpG/THlt9r8WXn9xYz6aZUb9bk6v1F/quON
+lFdv1FfrHKjPlfvj1Ffq9c36mfj8ym9vljnN+pndX1GfamON+qT9fpG/anK
jfplvf9G/bWuz6hf1vUZ9bd6faN+O+IHpdfnxvO/9Ppcvb5Rf5yJ71J9sc5v
1Bfr+o36bL2+UX+t43vIudZCzjl+P/Vck3OuqOBfPr+QEZ/3hfNH/IzPv1fk
XJuHc47PNznXcM7x+dZOzrWT5Jzj90/um7w3NfzVdH71lnOvh5yDfP7dIufS
Mjmn/pvOp9vl3Fkk59BaOn9wLuKcnE/nI78/zel8xPv3kbx//6Dzb6WcSxfJ
OfURnU8T5dzDOTiFzj+cSx/KOcXnE96PHfJ+8PmI92sX+b4snX+r5FzDOcfv
D84tnGMj6fzCuddCzsFH6PzDuYZzLsO/I+daC5xzdL4Z9pteH/+fT38HuZF/
ovKe8v2zhfEnlbfcOuPuXqO3JN0HNGv9+VNrM+/npfJ9a/k7lrd7Z+mspf+o
4r7ddP/YOrf/mFnfAvm+vfwdX//c6zt0HLitsesx9oXXO3c+JLP+CQdtevOm
vjVcy/2X7fHCyK3Z813G6TwkHz9k5SNXXFTLPfzNWXOOPrBsZv7mMu+bch1e
3ygZh3lY3qpb2wbTL1mfTuhbrXWbXtUy17/wb43eWFV9UtLjwcZDbrmmXEaO
cUfLPCy/aVuLymt7rksO6D/1w5Pnb87c/+4y7924DskbyLhBMg/L3fhha1tf
9XbSYua6QS3nZtfXUr6/Qv6O5UPf6ntvq1fruWfqtur2Y7dqmfv7rHx/t/xd
6fkRGf9I3w/DP/KF421+UiM+rHLDPzHxMdE/qn8N/4jwy4z/odc3/Ae9P4b/
oOMN/0nlhv+g6zP8q/h+lG6fx/1duv+lcsO/ivG90v0Lsl8y/qX+PsP/ULnh
f+j6DP9Jr2/4Tzq/4T+p3PAfVW7YRyo38htVjn2P+ADvf8M+ifHF0s9X/f2G
fZRnf+j9NewLXZ9hP+TZTzq/YV/o/Mb5q+MN+0vHG/ZXnn2o4w37S69v2B/x
+ZZuf+j9MewPnd+wr3R+w37S+Q37Sccb9mGcv/T8W5Ub+TcqN85PlRvnX3z+
pdsPKjfOf5Ub57vKDfsnXr/0813lxvmpcsN+UrlxvqrcsK9Ubth/KjfsK5Ub
9oPKDfsxXr90+0Llhv2jcsO+Ublh/8X9Wbp9p3Ij/13lRn51PN9Kzx/W8Ub+
r8qN/HB9P438ah1v5Eer3Mh/Jny3DOeH63gj/1nlRn5wtD9Kzy/X8Ub+sMqN
/HOd38if1/FG/rmD3Mif1vFG/r3KjfxqlRv51Xp9I39cxxv54So38sNVbuTX
q9zIn1e5kT+o+8fIj9PxRn6byo38R32+Rv6gjjfy/1Ru5Pep3Mh/jPOXnt+n
v9/If9PxRv6kyo38OP39Rn6l7h8jP1TnN/IrdX4jP1DHG/mlKjfyB1Vu5A/S
+jP5kTreyH9UuZH/qHIjf1TlRn5onL+QtztjX4M3YS39HeQVvpn7cdXX93DX
Hz/OLz5wTaZ++Tr5Hn83juTFx7RpumBKQ1dXeOF4PPgVwMPNcozDPCxvf2n9
uUPK7e3eH/ph25sur5CZH+8j+L15fRiHeVjO8Ree/9Aua1sN/GFR0nbZR7WT
Q8oY/HkxP4rly/o9dWyr6j8nz7770itPHJ2NX7aReZvJdVj+nIz7WeZh+fd9
fv71mQXzkmvH7XLHbmOz+Q/4fqX8Hcu3LHTn7FWlrjvstjIdh/fbPXN/G8n3
+Du+f2yftLpsr8qH/3N73v3LxL/Ac1mP+Bu/kH6235XEt+q7fk9fddp9F0b9
Srz2jvntsa/qyD5rVm7a24uWt9H5p+w/ud+2dt8n37QYXrHbiDLumg4XPH5m
3y0x/lpp/6KPT6oieSfLUswH+SDixzps3w/6VK0b+ZEaVT67QSv3W9L7ymee
L7/LxuTvc1rvmFxcpOMDX+MqeQ+y/d9HDv+22bhLfkvK/1T/0RHfbkgOmX9i
3fGf/Gk87b8t7Qr5G4fX3NG/4SFbkkqX7Dijdt11yf5L73r5iVNjfsLLffr7
q+/blPxc9rYqM8f9msGnmR9+KvHD/+WochvrrK3h/hqee3r46CZ1O1wc+3Od
9F9L6i1+dU7y9GdlGtx6edls/LVk/Lp0/Er/6v1VqrmQDxj1O/bNoYXvh15f
/l77xl9J+0NupOITdWl/LZDnPl72wdX0/IV/x90vz7kBPd/qsu++lH1YnfYf
6zfef1KflWKf8f7Cc79b9sGh9Pyvln11hOyzM2l/4bljH/Dzx77b0S7sQ95/
rB930P7Cvhkn+yhT/yf7ooXsk0Nof4ySfTVd9tl02l/YN+1lH/H+eV32TQvZ
R1/R/jHOn5i/V/r5Ycbnebxxfqo8fGbOB5Ub+lflxvmrckM/R/y39PNZ5Yb9
oHLjfFa5cf6o3LA/VG6cTyo3zs+Y/1f6+ahyw35QuWEfqHy2nGtz5HNCyX6L
8ecFt29dce/Wau6Lx3/9bo/XNqbh/Ir45RUf9q3a6rxqLugFxPXx7w/776dO
l64cVcOtbHzK5N6NtqV3LTh/8y1bY3+78Dm79TTZP/sRvzC/31sX9P69Qnqk
ytuMLvr+wfZV3YqPyvy67r/WpivDZ8Z+o/NRr3/WwJ5TV39cxR1SfuyIEx5e
nm6uX2PLL49GfvfirukLTb8p4y4ryW/5LmH9ZehPle+zvHOtJUfs7v762rnv
1jhuRQY//GsJ79Zu7uYS3q0vMvX3U4a7kf33q+Fun7TrbeOO3pKJf47/h2//
7Jg9nZxfXv6v8qaf3z3w+e+bO3muvnXNYRs/bdpF5SvkuRwoz2koPZ/P5blj
H9Sh53+fPJcq8py20fOpJvviStknvD9mkv5h/uuD5bmcI89pEz0fwz5ROfZF
W9knvD9q0/t/BO2PnvLc/yH7gJ//sfJc95XnzP5VH3mux8lznknPF88Vz5n9
pzfluR0pz9HR85PzxU+QfTCBnr/xfkR8SN571GVgPsgX33zY1OZv1Ha/vf95
k08+reSXXHjVzV81+1jHG89Hxz9V7ucjxo2p7oc+dfglW9fs4/B/yAMfdV3R
38AFYn8dw77U8fXb9eo4t/2nyZBn36p+QpVyru+0aR363R7tE8O+UHmXwT/N
/eiLXd1rL467bcEFX8p6NsfzSfi+5bln8KOuVR/u3eH3X5Kff3lt5N7ttyUV
OvW5aMr6GB/Z64eDO5U9entS8aBXNvSusTqpE/5vnp/8fn/0wCf33Nuptntz
bdX3B5et5E995fYJbfafpuPP9LX7rzx2V191+8lrJq+q6QbWP+ioi+bH/jOG
flO5oT/09xnng4439IuON86PjH9K/pHOb5wfOr9hH6vc0K86v6Ffdbyh/3W8
od9VHj4z55vKjfNN5XfIe/OkvDdP0vtj6DfdHxvx3sp7vJDeX8P/0vnryHt5
nbyn4fv4fr4l7w3eo+vo/THsd53/Lnlv95H3mN9f3G+8h/x8Ksl7VUves1r0
fq2W9/IceU/L0fvJ+Q38/KrJe/V3ec/4/cJ7iff0ZHo/Df3tCq8f8YUm8neQ
G+9/krM+mj/+PtxHyA3/QuWz5X1ZIN9vWj3vg4kjT1Q589Py8xkkz+9aue6J
7Vd1fXLw6Sr/Xnhhhb87vWDdwmndvj1Q5Y2/vPC7iU3qubt6t+ky552qGXy9
fsn7VFv2HewW/DPPR53fsH9UbuAzKjfsI30+xvmv68dK0T+hNuk/wz7Q6xv2
iY437BOVG/abyg37TOXG+aPrM/APlRvvj94/1u+/0f7j+3c97W/83lqyT/n+
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
3Y/hPmTkjTv1nH7xpBXpnadO7T5k4Y7M/F3mTO03/dM1yU1PX/rkbeX+lH+L
3x/WlRYdW7LOzPjl4Xe588Lv1PGX4/0Iz82fHp5j5vffGK7rO4d1xPND5HeE
dacNw+/IXL97eG7+4vAcGZ80+5c238n+cub5Ke+j9X7KiyD1batS5JNDDrvb
yh/H34f+DdtT1IFAjvwW6/2uK/kxFn7J9decP4P8C/G/kIehcs3fkO/FjlI5
8gO6B7vIPxrsJLbfXKNgt3mx73R9DSW/At/fGexAHY/8gO+DXZeOCHaeXh/5
L1b9Wy/JnxG7Fnauzv+95D9Y9Vd/kfyJh6Xu6paS+MWjmfhF72D3JmIH6/pg
v18R7N50YrCDVe59yK+x6gORn4O6QPEzdDzyK6z6NORnPBT8GomHZOuDxe+A
H5LBH78Mfgf8kLj/Jf/mueB3wQ+L+LXk77ST78WP0+vj7xsEvyxdHfw0HY/8
GORhih+pz6en5Nfg+/B8hurzaS7fvxj8yuSH4Gfq9cHfYtV/ddzJ/vqmfZ3T
n3Ka4H2WfgifiA/UEB6XWB+K74dLXW3oZxrXh/xhK/4p8Q2zPxC+t/KPkd86
M+A28J/0/iM/1tIvleT74QHXcX0DzqPy/ST/VHAn4FDR/5X8VXwvOJaOR/6l
4FJOcCqVI7/Y0g/IT7bqx86W/NIJAdcTnLJxvL+Sn2rVL6E/v+B2wPF0fvQ/
FtzO7RVwPJU3kfzlUNdb16PODnLkP1v1dchftfTDUMl/teq7oD9WB9zUXRBw
VF5/IripC3HQuP9HSH7zoQE3TgRfVjnyo5HnfU/AoVWO768JuLJ7PODMKt8k
+cchvlQfOLjeH+QvW/rlVvn+1ICLu3oBJ9f5YT/k1NcnOfX1eM9z4gNZ/E7q
z51Vf14Y3zD7D5jxDal/91b9u8SP0pz6bGfVZ0t8KbHqzyW+lVr17xJf8zn1
096qn8a4nPp5b9XP4/zPqS9Pc+rLzfNb4qPOqi+X/gJpTn8BZ/UXAH6XU5+f
WPX5Eh92Vv259A/wOf0DvNU/QOLT3qqfx/mbU9+d5NR3m/VFRn/PIshRH2jV
Pw8viG/a+L5V/y71196qv5b8D59TH5xY9cFS/5xY9c+Sn5Ja9ddSv+tz6ne9
df7hvMyp3/bW+Yv4f059c5pT3+xz6pvN80/yo3xOfbt5/uL9y6kPT6z6cKl/
dlb9s9Sv+5z6dW/Vr0t+mbfqtwv5qUz82+Xg3/L/7PkHuZmfWDC/md9o2reQ
5+CfzsI/5brOwoehn3LwXWfhu/r7DHwb8hx81Fn4qODDLgcfdxY+rvyV/x7/
dRb+C3kO/u8s/B/yHPzbWfg3np+JD+P5/nt831n4PuY38e0C+9DEn5Mc/NmM
33J/uwx/RMH82fw8XN/Cn9C/Lgd/TCz8EeNz8NkkB19NLHwV4y18GeNz8MnE
wie1f+y/x6cTC5+GPAd/TSz8FfIc/D2x8HfIc/DnxMKfld/JwGdxf3Lw9cTC
1y/H/jTwZeYnZHzT6K+u78esgvwPq//R9tTCZ5EfkIO/mf414tcWvin4pOnf
CD7pLXwS8WsLn0V+Rg6+5i18DfH5HHw3tfDdQv/JxB/THPwxzcEfnYU/Iv6f
g387C/8G/pGD/yY5+K/pvyG/xMJ/Bd90Fr6J/I0cfDy18C/kz1j4LHBBCx8s
zN/M5lcV4pFZ+w/1exa+ifzAHPzK7E+E/DULHxR8z+fge6Z/I/hmYuGbgk/5
HHzKfD8FH/U5+Ki38FG8fzn4XZqD3/kc/C618Dvk/+Xgx956P9F/Ngc/TXLw
U5+Dn5r9yQQfdBY+iPzNHHzZ9G+RP2vhm+ivZNUXoT+TVT8QPjW+kOkP0FX6
+0hdmvTJ+VP/S+kPJHVtSflQ56brw3s3PNStpVLHpuOPl/47Y0NdndTBRfsJ
/XsWhbq89O1Qp6fj0X+maqi7841CHZ6OHyP9lT4OdYP+llBHqL8P/Zl6hLpD
1CHq/OdIfx2pW/TXhDpGnf8c6c8jdY9+XqiDzJxvUpfoV4U6RR0PfkSpS/RT
Q52iytG/Seo2U6nj1PnR/0nqPtEHSu8/+vf4UDea3hLqSOPzkf4/UnfqxoU6
VEfrd8eHutBU6kRVjvNtfqgL9S+EOlFdXy3p71Qc6mKlDjdeH/2hpK7W1Qp1
tirHezcr1M2mD4Q6Wp2/nvRfkrpeL3W++nzvkf5NUhfsN4c6YR2P/ldtQ92v
fy/UAev9z+OXlvoxM/9b6se8VT8m9XnOqs8D/pRTX+et+jrgN1Z9IPDBnPoy
b9WXdS3Inzfr31Kr/g34U079o7fqHwvz3836wSSnftDMv8d5b9UPSn1dYtXX
Af/Lqa/0Vn0l8FerPhD9Aaz6M8Q/cuqTzPxg4PtW/RfiEzn1W2b/B+D7Vv0Z
4kc59UupVb8E/ZtTX5Va9VVSX+dz6uu8VV8HfDenPi3JqU/zOfVpZn424mtW
/RbiQzn1e2b+OuJzVv0Z+hfknD/eOn9QX2+d73I+Jznnc2qdz9iXln0i50ua
c76k1vki9k2SY994y77R/gz//vxNc85fn3P+euv8FfvP59h/3rL/oJ9z7J8k
x/7xOfaPt+wf9PewznexD9Mc+zC17EO8F5Z9Aj6LssLfUJv4Gwz+vCLI91t6
18tPnFrRVb5kxxm1665L7665o3/DQ7bQ+M3pmy+Ou23BBV+mXQb/NPejLyL+
V3xMm6YLpjR0xV3TF5p+U0b88Hi+tTiq3MY6a2uY/QlPar+q65ODT/eYB+uF
/ODRTep2uLipb3bZXpUP/+d2nU/3D/gmDP4R7N/v+/z86zML5qXXjtvljt3G
xvWD3w93hPGBjavnfTBx5InSf7G+5kno+PCveEwJr8eSNPCXRHwOfx94bb8Q
vqboH2O9nz5xRvH6KmvTOXNf6nhSy618fiTL+j11bKvqP6fPvfvSK08cHfFv
4a9gHgudv9u6hdO6fXugP93gf63Qqc9FU9bv4rpUfbh3h99/SVf98trIvdvH
+qW+06Z16Hd7WV+/Xa+Oc9t/mg559q3qJ1SJ95f555lffuuC3r9XSI90I8K+
SiuFfabzg7/Quv/1SuSr0y8e//W7PV7bmHx9+9YV926N8ZPxK/2r91dpZu4v
7KvuYV+msk91/F9rDtv4adMuHvM0/vzugc9/31zlzcpNe3vR8jYe68R8vP9u
n7TrbeOO3pJ8MtyN7L9f3J/YfxZ/1ZVPX3XafRceK/V3e7lQfxfxA4O/sQhy
6b/nrP2F/VmthLdkfXJlCf9LvH/Yf8e+du67NY5bkey7vHOtJUfszutPrj9+
nF984B/n9TdzP676etw/++/7QZ+qdWu5MQb/G/P/TCD+ls31a2z55dEK7rDy
Y0ec8PDypMvAnlNXfxzxtSELzt98y9ZKfkXjUyb3brQtqf9Tp0tXjor3d2D9
g466aH4VV237yWsmr6rp/+5r9195bOS/+/uc1jsmFxe53lc+83z5XTamh1c+
u0ErF/sT4f6E57uH6J+6mfWdFdblDw3rVP1dXt4feW/Sc8N7pPOD3+hOg98I
fD3E46Pjsb8s/Yj9Ze3PQ+afWHf8J0Vu2PBvm4275Le04k/1Hx3x7Z/6D71y
+4Q2+09LJq6t+v7gspXcpAc+uefeThGfE/2fWPpf3s/Eej8NflDdv4V8P9n3
v0+HCx4/s++WZPr+k/tta/d9+nWL4RW7jSij8hUXXnXzV80+Tja8/3mTTz6t
5BbdfNjU5m/E9WPfWfpB9pc7IOwr/1PYZ/p8bwj6z4negx7k5+ut54v31/p9
OF+s9x/7M8xT24fnUUnnl3PJBf1VzYfzMdoX2D+Nvrzwu4lN6vk7erfpMued
WF+O/bNloTtnryp1/WG3lek4vN/uKsd+8pX2L/r4pCqaRwR5E9GXOee7s/bv
sUH/Okv/5vFLYf+0u7T+3CHl9vbvD/2w7U2Xx/itk/39UdjXXva5yqGPSE+p
XM5Pt0j4AzsRf+D3Yf+li8O+8xvDPtTxeK+t9/sq0f+mfVE6/3ARPX9vPX/s
n6Aftqc72v3PfNn+lU9/VqbBrZeX9R3+a0m9xa/OyfivbZZ9VDs5pIw/osva
VgN/iP4N7LK88xd5obKP9Pk2DPads+w7OX+dpd+0P1vZ26rMHPdr+kqf/v7q
+zZl7CfgoMzvCP1YIejF9L6gJ1XeMJxvfn/hHR0azjm9v7OJP2w68Yf1DvoL
esvPDHqM9Y/P0T/e0j9y/vmc889b55/BP637q5AvzdTPaY5+Ti39DH4+y38B
H59lX+J8yTkfk5zz0eecj6l1Pop94HPsA2/ZB8o7Z7w/0EuWfpL96az9CX05
Jdil/rZgp2bwU4sfL49fHPa95T8iflY32JX+uGBn6vyIn1UIdqUXO1PlsL/l
ucEO198P+13ODdjxKs/jd8TvCbyI1URPx/wl2NdiV/vrg52tcvgn3wS7x38e
7CCVw/+yzg/RH4mlP/B+4nN34jfG8xK/1q8Ifq7K64t/b/lfhe9Ltv8I3i/x
S9OpwU/N6FfxS9MlwU9V+YHivzcPet03CXo+4svi/4OHHs8ZcuAbwkuZlgt6
QudH/3Hr+YTP71uLX+5fCH56Bt8Qu9a/E+zcDD6WY3+klv2B35Xz/njr+eD+
59hvSY795nPsN1P/iH2TWPaN2Lf4XZZ9a/q3Yp+lln2m/Cz//nxPrfN9n7D/
vaWfCvWJvf9z7KMkxz4y++/g+Vj2kdgPiWU/iP1o41PBfjT9L5x/lv2D+396
+N3pU+E+6PpQX3Zn2JfYp3z/vIVvQW7hD5C/EJ57uirsg8z6LpDntBfxy2O8
pV+wfut8wnhL/xXyEWf3P/Zns7AvYEdn5IeG99bJe5yRW/gf5BY+k8evC7no
Ldc+6DEdj/wc6/yF3Dq/Mb91PkBu9ocS+9rCNw8U+9zCn/D+WvsH98O6P7KQ
4vAerRKcJdqneO9aBr9L8MiIfwB/Ers7vSbY4VE/iH9j3d8G4h9Z5yf8yi8N
/mf4rxb+C//XwufgX1nvF+6XtX+AT1j3B/dXcA13QMA5VA58T/waVz34OSoH
fmDZf8AfrPcfeA3xkGf2T058IcmJLzjsaOt8tPS34O/Owt/xe3LiL+b5Lvi/
t/B//N4cfJt5tlUu+LaJb8F+sN5/4HMW/ovnnXe+Wvg//DcLf8b+zzn/XM75
Zz5/zG/5Zxhv2f+QW/sbzyXn/Elyzh+z/iOPXx1yyz+B/2fpP+gzS7/h7631
if9j2tfARyz9DL1g6QfY7/8+ftpI18XPH/iNpd+Ar1v+JfB5y3+Ry4p+rSv3
N+afwh+2/GPgM5b/hfeN3r+Mf43nk+kPmSOXvDh3s/TRx+fOynuU1Mvu6lq+
e9TC9ybMS1vIJ+ToZ8M8WZC3JPkokt8ifS+ulTreawv68f6hf6UfaGGfrogv
5MlRb6h92qj/8RSSdyc5+qozj4Ml70hy1DMX9hn9U3+iHPko6VeidYjUv4Dl
3Umu/Zak/9KOetKPyZDrp8hRL8B1BPT83FD5fijJj5K6n+3PBx40fEL+tOTD
IU8Onzsr9yV9FaakjfatvXBos4oen5DLe+k4zm7JV5J8rwELigefVcZ9U2bI
A90aLkrxCTniERyngHy+yGvI9zVIvmbpiyv36V7LB/ysvn5CLnY1x8H1+itJ
/grJq8l5xzjYzsqBqzGOasnHkxz2DNs5lvwVktcUe5nOcbezctjl7AftrBzn
FZ9jOytf89hr6/qdsCkJuNmvKT4hryjnwV5yPuBzZ+XPXLJo8Bdjf0jfGnnU
HXtWquLxCXn4BF4Wz4mdlc+U8wif6MMO+WHhfXP4DPxesX8E+BfwKe9zurNy
0Rf6yf3TRN94fOI8YfkQ+RxEcuXLYB4NkXfnc4X64+eN53NH9HWUo3+eMX/e
eOJ/ddxfj88VOS/TnR3fnc6dKdR/L29+Ppem0/jrhF8Yn1yf9pDUi+LzcDlP
IH9YvsdnM5IfHewV/Qz9P2J8r1jqBW6UT+FnU/lN8n2xIZ8Y3jeHz+fD+xjP
D8Hf8VlB4nSWfDeSi77QT9EnKif/W/ModlZO+W8Jx8f43IGfsrPjz6NzRfR1
Zv7X5fNMml/rFyiOADnlHzjGt16hc0fOy3Rnx/O5IudlJv7GOBiPh59alsbL
ee/w+UuwB/T6lN/klogfB7nYEw6f80m+INgr+in2jN4/ig+rHwP5T/L9z/LZ
luQ4F9D/ns+H8BnjAny+cFyH8Rv4H3X9kIc6HVTLNSf/Q+w/PYeuPXfZqleq
Rftl0kFHtt1wzIbk7B8r3zb9sWpu3hkz7jyxQtRPgTexhusofYZwzkAeeD2O
9OgzhH5fkLeQvgsPil8zlPr3wf9gnje9P9T34UfwPWF+8W/Gj1mx5sdh1R37
NzgPMK+f+ulhdR+P9eefy/Wb51wfPDDL6PrwL2TejP/RXPQ99L+sk+fXvors
30yhvmwtpc8r3T/tI9Kc5JgffSIvo/kD3+WRDjz1hXz2+vw9eJql3xQ/X/Vr
HqD+BbPF/+gd9p1j/0P2r/+LnD+yj1U+OezPVPZlclbYpypvPPTqZiNmVnTb
ltww7YGJe7tNt/Y/bfA1MX7mb33k26O/8umT/xw7v9J95dymX89ef+TLMX66
4/ORT27xvyU/fra03nBX3T3yVK9GJxRH/fRLo2eWfnjXLu6C8fce9Gqtmu7G
kvhvrF+q8VrnVauOO9AfVxIfruPLFW8YXGtZ7I/yYsezl/d/s7IfKOPwd/p8
xL84bt7N95WvW9Fx/Jdxr2Na+KvHj4vnE/yfi9sdf8Gd91Vz7P8Inq7ny/Zy
Yz7cZ1T0nwS3T/ucvPmL9XW2J0skjwDy+pL3ca/kfdxwrju3ySGRn0XOGyfz
qh6HfAXFPS4K6+Tf544Ov8ux/1ONcPHjw33i9SdLJe5wbfgd+vsRr+kX1u3u
kzgO5NXD83Nlw3OTPIzYH2RteP7+uvD8km5hH/Dz1XED5O9o/yWy79wTYR/q
+CPC/vWrwr5Nt4d9HPfHFyX7M5V9iX0a5eFfsXwW8flB9qtn+5X8A8f+Afen
YvuU7PuU7XvyX1L2X8h+d2y/k3+Tsn9D9nXK9jXZtynbt2S/e7bfyb5N2L4l
/8mx/0T+n2f/j/ynhP0bsv892/9594/sf8/2f97zyds/5B9k7k/e88nbP+Tf
ePZvyD/M3D8j/1bXz/E5tv/JPvVsnxr1MTqe/JeU/Ruy3x3b7+TfpOzfkP2e
sv1O9m3K9i3Hf9h+J/s2Yfs27/6R/+fZ/zPqV3Q82f+e7X/ynxz7T2T/e7b/
+fmwf5m3fzh/lP0D8n9S9n/y9g/Xb7B/Q/5hwv5h+MyPj8Dus+TQL5YcuLcl
h/7Omd9aX9FOzp+Y85fKA8L8B//79XUu+Te29aOl8khn1p93/0156X3y/u/P
T9b/Xs76i/9frZ+ub44vnect//nS8zHnL70OLsqhn83fL3muM631l1pnkZk/
Ix/18P/8e7t1352b31xf6XlQUV42Z32l5/H/4f+V/JvUeh/J4+b10fq9tf7S
8zQy6zeff97zK71OLMrrGOuH/Pr/x+uX65vzl/0Pny89n8z8hF94xi8I33GM
7xC+4BlfIHwnE18mfMozPkX4S8L4C+FTnvEpwl9Sxl8In8jERwl/8Yy/ED6R
Mj5B+Jdj/IvwO8/4HeFfCeNfhN94xm8I/3KMfxF+4xm/IXzQMz5I+JVn/Irw
nZTxHcKvPONXhO9l+r8SPpUwPkX4Xmb/EX7hGb8gfMcxvkP4gmd8gfCdTH4/
4VOe8SnCXxLGXwif8oxPEf6SMv5C+IRnfILwF8/4C+ETKeMThH8ljH8RfucZ
vyP8K2H8i/Abz/gN4V+O8S/CbzzjN4QPesYHCb/yjF8RvpMwvkP4lWf8ivC9
TP4b4VMp41OE76WM7+XlNyEuUdiXFv/WoG+f+zn08UtXhP59Ov4K6Uf7Teij
6dCnFnLpy+yEJ8xz/1vK/0lZv4BvAPNMp/oT6bsecf3Qf13HIy5T6F9k+NPd
pYGHSPp4HqjrC/pW70sx99cV3kLF9YW/MOqHkn++NXCe6aWezxU0rvCF8KhC
PlvyXs8UvTeb8v8CXlQRdo30GZ6l44HvdDTwnYHC17Ag8Di4HcLjAHnPwriE
m034GfgkhGfCg2dC95f0h3sw9BnzD1P/WPA1SB+xBDwOkG9bGPpzHRP6kLkZ
1P8S/SjRN+xh6h8LvgjhkUjBIwH57sLngL534HmAHHwGeC/fFp4DyMFHcFfo
E+fAUwD534QvAfr1ZuFR0P0rfAfSR86NFR4EyMGHIX3wUvBkQA6+COilycIj
oesTvgnoR/BQQP6R8HFMDn30XEvh6YAc/WjRd4v7Rw8SvgXp4+ekf5+OB1+F
PDeX9Ag8FpCjH63wcDjuHw2+COGR8FcJjwTkt0h/MeH5cNz/VvrO6edYwj+l
b7byHAY/Mj6/Qr4zvP/cH7iMx981Dv1/9fqU/+k4/xN6DfqP9ePSwGuU/Cvw
HLk3A78Rre9A1X+YD/KilSXvc/qNvN/yvuv18/Bt0v8J63+cH4V6G//gXxzg
poneC/GHWJ8RPn1r6D/Wj38JvO4J9FuwByO+KX1jHfrIvh/6x+r92dx6jw6P
9qyner/m4zP3OqV2rB+Zifxj0YvT6Xw4IfDWO/zd1MBfr/Lg38xPFwnP1e2B
30rXt0vQh36C8PCIvlS59PVyo6UPbHHo7xXjw6FvV/KI6M2nQv8uvf5loe9X
8hf0iQ39v1R+Q+hLpn1aG4b+ZCpvF/qOOfQZfTf0H9P7I33L/APSx1X6l+n6
Xw1927SPqvRvi/LQN03156ehf5rOXz/0bdM+vv1D/zZdX6/Ql03158+hP5uO
D33pfkgXSZ9f6e+m15e+cf4z6eO6V+gfp3Lpm+dqS59W6Z+n9//L0LdO9euE
0L9O1/d06Jvn/ip9gsP6Y/1H69AXT3F46Y+n1w996TZoH+G3Qn+9tHD9u7oR
0id2fejfp/LRoa+g+7v0Ab4q9BfU6w8LfQO1z7H0D9Tx0nfQnSV9gj8P/QdV
Pib0RUxaSp/e4tAfUde/R+h76NDn+LDQ/zBeP/RN9MOlj+/LoX+iju8p/dZn
BJ4D+X/cv/R+p/x+h08bnwbuuW/gofXHUnypnvDdgee3ufDgQY76hEcK8NOo
Hzh+OoPso2lSlwu9DJ47vT+ybuG5zOhvsu8823dFwuetPCjC8w35LBnXVPI/
UO+u979k3ZuIZ3g9/f4/7M0X/py3jn96/jn9quTvvs3gB8B1upN9D74+4fFz
4PHT6xfm5yecny/61i0O+tdPEp5ByN+Q/q9Xhz6ifgb1Rwdf34ehT2hykfD4
QT5K9G6Z0Gc08uFhfcK3Jzx8bobw8EF+i/AFSp/TdEnob6ry+0Tv/kP62n4o
PAiQg88O+vNvwnMH+TzhoxOeOif9X6N+Er486M/ewqMH+XXCdyd9Yl0P4cHT
+yt8iNLnFv1tdfyrwheofbaFRxBy6Wur+g88hLo/hI9xVOiTmzQHT6PIJwif
oDxH31x4BiGfKHx7U0KfXif9eaN9BHtV+sLuqBJ4UCB/UPrX3hv6ELvmxI8g
fYXd/NBn2HcTHkHIofeahz7F7lbil8ur/wl45irVY9zfXniXqL7nT/lfJf98
680Sf2P7KeRzLE0L/eN4PkI/nC7+JeuH0bKeqfI9+vDr7yv07x3br80L65OU
Tx1yyZck/z4+X8rbE/849ufA36POZibpZ9L/jvX/ZcGehN3pjgv2Ztyfone2
1is9f2F2sAe1fs0Fe1Hl38p6jxB8kuur0A/5BOEJf5j6ex8QeE2Uh3pd4DfR
9Qlvg/KIBz8rysvIvi8WHu+Hqb/37MDLkrYQ3o4fAz+LL5x/P3+T8HwH/zjW
h74QeG2UZxt8LJAHXs5/JYX+c9QvFYV/ZL3wvAt/hspvDLw1aaH/HO/fTPn7
vwsP/KzAf6PytrIe8HwLv47KhbfEgcdb+Et0/wqvT1LoX0f9LrxCDjzywiOk
z094g8j/jv3Bq8vfHyQ888I/pHJ5Lq6X8Ii3KfGfh5J/fbADTzz39xdeJeUH
Gh34lXT+R+TcOkZ45IN//mi0L6Qf+u/XBR537u//auCFSsCfdG/gh1L5fYH3
Jv278LwL/43K8+pTyD9P2T8n/zNjn5B/5tk/C5/qf3rWn+S/efbfyP/37P8T
/poy/kr+f4YfjPzXhP1X8v8d24/kv6bsvxI+kjI+Qv67Y/+d/HPP/jnhF57x
C/K/PfvfhF94xi/If0vZfyP/NmH/lvyrlP0r8m89+7fkn6fsn5P/6dn/JP/c
s39O/mfK/if5Z579M/I/Pfuf5J959s/I//fs/xN+kTJ+Qf5/wv4/+a8J+6/k
/zv2/8l/Tdl/JXwkZXyE/PeE/Xfybx37t+S/e/bfCd/wjG+Qf+7ZPyd8wzO+
QfaZY/usTuDl9LC7dhxdws+pcsQXjhD/kOMLQa/U0biq8OPqeOjfwrg0/kV+
NHwT4iBx/1P8xXH8Jaw3xsd/oPg49CLmYfvvssK6dvcQ5c9Ok7+H3vyK6new
nrnBP8/oV9GHfqrov9eDvtTxVNfiOH9V9LmM3wh9H39fYX294/p72H/C4+Vm
kv3XO/ByefCbPRb4uXS8+J9JhcDz5cAzA/mswDvmmgYeMsf8L6cEXjF/i/C/
1Qn8Yjpe/Of0lMBTJv5x3J8HBV629O7A0+b+LnxikJ8QeNE0Lrpn4EeL9yfw
sjnhaXOVxZ6EPPi/tbU+QvjXdPzu8vcjAo+bm0H2J/jNagSeuOS+wA8X73/g
xXPCk+f+IfYk5MJLp3Hj9wM/nY4/IPDiOeHJc+cJ3x/kPwfeO41vdw38dzr+
XPl74dFzwp+ncqynYuDpc63IvhXeQCc8ghn+p2GBF9BvWRj47a4L/IDx/RC9
+GXgGZT54++/X+y/vwYeRMf235LAa+hPFf4/4TdUOfRieD41XVPhmYKc/MuU
/Uvy3zL1yVwXxv4l+W8u0x+jMH4u38f+jOS/J+y/k3/u2D8nfDRlfJT8Z8/+
M/mnCfun5D+nrD/Dp+ILCdvH5D979p8JX8jgj+R/efa/yD917J+Sf+TZPyL/
NGX/lPzrlP1r8h8d+4/kX6fsX5P/mLL/SP5Vwv4V+Y+e/UfyrzLvF/nvjv13
wh884w/kvyfsv5P/6dn/JP/dsf9O/qdn/5PwjZTxDfK/Pfvf5J8m7J+S/52y
/034RML4BPnXnv1rwicc4xPgM4f+As855D1Zr5H9QPZRyvYR5aekmfwU4Wsv
vH6svwDfO65/pPDAF47X+EPK8YdlhXWvWL/OD70JOfRY4fUjbsj1RXK9pHD+
6N+Ezz/8e5Gz/grfL00L7bSof8FHrvnnwlMOOfjasT7wuOv1he8c4y8FD7rI
pwvfut5/4WHX5y9886gju0J46HV+4XOH/EfwvGP9wjev9yfwt+v1hZc9yoXn
HPJpwod+KfIThCdd95fw3aN+WvjfVS689fr7hb9e1y+89HF/hN+j90/uh8qn
CQ885MJ7r+tv0Knn9IsnxfjDucJHD/ky4amHvKPwtWP9dYTHXe+v8N1j/MPh
fur8DcP1VC7rUfmlwjeP5wMeesi7hPuR4vo3hful8rz+XJm6edIP9H4k/H7A
finsaxXtF4kHanwwfP5p/0j+3zSJ3xr5fx7xzWGUH039rRLub+XELtlP4reP
UvxE4o0UB476ebbwCSN+PEZ4hiFvH+KpKfJTJN4a76/wJSI+1l14FCH/Qfgg
EX96Q3giIZ8kfIzC0+jA0wj5hcJXifgSeCz194GPUuwMtg+c8DHCvpB4ocrB
hyg8iQnze0o8UPF18EBCjrwv4WH0E8Se0P0hfJr4HjybkMM+EB7PDD4t8cLY
B1R4LiGHfYJ5mP8UfJmKDwmPZuH612l8FjyVkEu8zyH+h7/T5yN8kV7iwyuE
R1L3t/B5Cs8n4pnx+d0V+Cz/W+K/4LmE/BvhC/1V4qv/LTyiOj7ks+r7/2zI
d1U54Rue8Q3KL/WcXyp4jivULzG/WvwRqg+P9gPlD3jOH6D+fJn6E+gHyFk/
fE71GZn6gUL95Fk/aXygQG/i3x/3P9yPFL/v4XC/dP7xB21686a+Mb+4xf7L
9nhhZMw/POf6Dh0Hbmus96f72Bde79z5EP19LWauG9RybjmVNx4/bG3rq96O
79/fGr2xqvokXX/3BxsPueWa+P427da2wfRL1uv6Xu9brXWbXvH9eqZuq24/
dqsW799bfe9t9eqf+qdsnXF3r9Fb4v0Z0Kz150/F+LsL64nPL6w3jg+/V/ff
hHA/4v765qw5Rx9Y1qO+Y8KQlY9ccVGs/2j/ztJZS/9RRe/fwk33j61ze+Sn
GBrWq3L5PXr/5H7o/bsw3C9df4P+Uz88ef5m1Pn7fttaVF7bM/pXsh6dX9ar
818Wnpe/VORnh+ep65f7pfPL/dT55Xp6/2Q9MX4Snpeu/8jwPPX3fxXuR9pL
5CeG+6XXz+u/SfZrwvZrL8EPkJ/P+AHtf8f7H2/KI0b96Ah5Xy+T/PlbKX4H
PvJBEvdaSf0DYP+jPoDtfzqfHZ/PK0M+arpS6hPahnxVmh+/t6hI8vlVLvnW
TvOvhccb8tuFj3ye5DeDpxxy8IEPlfxvyQfX8eBLR/4yeNQhf7Fn4EOfJrgq
eNIhBx84+uSDJxzyz2Vca8mPr0T8xwOEbxx1SZKPruOBzz4k+fmMz8LemCnf
M/52neCFyL9mfm7JR9f6f/CsQz5d+MoxTyXhMdf1C187zvcLhMe9cP3fIY88
g18Dn3xb8ssZn3xc+MrXS/3Bb8JjDnnRisAn/7Hkx4NnHnKpJ0hRXwCedcg3
CF/9iZK/30F47CGn+hnP9jPFbxKO31B8xnF8Bvvequ+m+Iln/I/iEynHJyh+
4jl+QvGlTP0KxU8cx08ovuSLCv5l8HfP+DvFJxzHJwgf94yPU3zCc3yC4iue
4ysUP0g5fkDxFc/xFYofpBw/IHw9k19B8QPP8QPC1zPvN8VvMvqB4k+e408U
v0k4fkPxB8/xB4rfOI7fUPzB8/tN8S3P+oHiL57jLxSfSDk+QfEXz/EXik95
jk9RfCXh+ArFpzzHp/L6Z1P9V6a/KdXPOa6fo/ovz/Vf4VPr2zL5M1Qf5rg+
jOrbMvFnqv/zXP9H9Wue69eo/s9z/jbVVyVcX0X1YwnXj1H9lOf6KapvS7m+
jerXPNevUX1XyvVdVD/luX6K6r88139R/ZTn+imqj/NcH0f1fY7r+6h+LuH6
Oaovc1xfRvVzjuvnqL7Mc30Z1Q96rh+k+jLH9WVU3+e5vo/q3zzXv1F9n+f6
vmXcF5LwccK/M/2FqX4h4foFwvcTxvfDp+Ljmfge4f8J4/8Uv0g4fkH4fsL2
PcU3Mv29CD9OGD8mfDxhfJzw4YTxYcLHE8bHCd9PGN8n/Dth/Jvw/YTxfcKP
E8aPCR9OGB8m/D/J4P+F8YuE4xeEjyeMjxP+nTD+TfGNhOMbhO8njO8TPp4w
Pk74f8L4P8UvEo5fEL6fML5P8Y2E4xt5/BPcf5XrW4Ldup/8PfDpWH8S6nJq
Im9L8p/KqBzfS19g6fMX9Svh647xM+Kn8MxPQf67Y/9d7A03TPJjAg4dz6c+
wV5xmyU/ZGiwZ+L9kb9Hfk6wd2P8Xuwlh/yVzpIHAvnUYG85sbNgj+n8+H5/
yZ9pEOw5nR/n4xeSn8LnYzif6rtC/DzqR5zP5SU/6iE6n8UedYX4ecyPnR3s
4WSL5GcFnDz6d+L3+i6SfxP8mcg/hvNxmOS/8PkY7IN6rhA/j/zGOFdPlfyr
h+h8Fn/AFeLnlXW84BK+seR/Bfw86u+w/iruGMnvCfj5Mp3/nuDvuJqSP9VZ
8tAgF3/JIT9N/CmV4++RH9Yg+GM6P+oWykt+k+ST6PrqBn9Pvxd/UOe/Vb7f
JvlbbwR/UscT/pzpv8z9/bn+j/B1x/g64dPyPf5l8HfH+DvFBzP5SYSvZ/QD
xRccxxcIv3WM3xI+7RifJnzWMT5L+LRjfJrwdcf4OuHPjvFnwtcd4+uE3zrG
bwmfdYzPEv7uGH+n+IHj+AHh047xacKfHePPFF9wHF8gfN0xvk74tGN8mvB3
x/g7xQ8cxw8IX3eMr1N8wXF8IY+fic5Hz+ej1Isko+R7qSfR8YX9HIqKdoR6
PCv+7Dj+zP13m1N9Gf5+g9THsf07M+QDuVOlfknyhfT5PBryifQclnyjeH/k
+x1SP8Xn8x0hnyk5TOqLUKcD+T0hH8rVkO/fCflSKsf3qG86PORb6fVf7F6S
r5W2kvohiZ+qXPLF9HxtH/LJdP5Zcj52l/q18XQ+Bvx6Nz1frw75ZHp/Bf9N
ndTPcf0s6jOXSH0U12cKXib3v5Ln8+tfIV9P49NzQz5fjC+GfDrXX+rjJN9O
n9/AkK9H9a/R/kd98flSn8f1xTjvt0n9Fdevbgr5iO4ZqW87QeoEIf815DNq
/aDkO+p4yW9MZncO9XvPh3xJlXe+rCSfMr1M6s9w3kIu+ZhSN1vefxryNfX6
+D6R+rpb6Xym+vRM/SnVdzuu76b6dH2PC+Vav5/Bf6j+3HP9OdXve67fp/po
x/XRVP+dcP031T+nXP9M9ekp16dT/bnn+nOqz065Ppvqnz3XP1P9tuf6bap/
9vx+UX275/eT6vMd1+dT/XvC9e9UH+64Ppzq3x3Xv1N9eOb9ovr/lN9Pqg93
XB9O9fme6/Opft1z/TrV53uuz8/jH6T8Ls/vB/mfnv1Pih97jh+Tf5LpD0X+
W8r+G/kPGf1L/lsG3yT/M2H/k/wrz/4V+Z+e/U/yr1L2r8j/8Ox/kH/l2b8i
/8Oz/0H+rWf/lvxzz+c/+bcJ+7fkn6Xsn5F/69i/Jf/Ms39G/r9n/5/8U8/+
Kflvjv038k89+6fkv3v238n/9Ox/kv/u2X9n/jW2/yj/MOH8w1EF/R4UH1I5
5TcknN8g9YAO/Y9CPWLsv1811BOqnhsS6g2jfRXqEbX/0n6hXjGej6GeUfsT
Sb2jyqUe0uMckHpJXzh/FX+89EcaG+otVT4/1Gsm50j/obNCPafKp4R6UY1/
vhLqSVXePdRzJi3Q/yrUe+r6pF5U459ST6rjbwn1qun90n9rSqhnVfk1oR7V
nyX9lR4L9aoqHxfqZd0w6W8k9bS6f94K9bpqP0o9r45/J9TTOvTXei7U2+p4
qdfV90/qefX3Sb1wskL6e/UN9cQql3pgh/5N94R64RjfD/XIbo70x2oS6pX1
+qNCPbOegzNCvbOOl3poh/5fz4Z66WjftC+pp07ukf5VYf74+98O9dgednzb
UK/tC+ffkNaS/lxS761yyj9OOX+C/L+U/b/wib4r2f7x5B9k8a1C/ylh/4ns
90z/GfKfPPtP5P959v/Iv8nYX+T/pez/kX+Tsn9D9r9n+5/8G8/+Ddn/nu1/
8i89+5fkHzv2j8m/TNi/JP/IsX9E/qVj/5L8o5T9I/K/Ez5/yT907B+S/+TY
fyL/MGN/kv+csv9M/l/K/h/5zxn7PI9/mvK7M/VflN/uOL+d8q89519T/num
/wjl33vOv6f8dMf56ZR/nnL+OeV3p5zfTfnnnvPPKb/bcX431Rd4ri+g/P6E
8/spf99x/j7VH3iuP6D8es/59ZS/nnD+OuXXe86vp/qDlOsPKL8+5fx6qj9w
XH9A+aUp55fS+ez5fCb7xbH9Quen5/OT7JeU7ReyvzzbX2RfJGxfkP3l2f4i
+yJl+4LO35TPX7IvPNsXdP6mfP6SfZewfUf2qWf7lOy7hO07sk882ydk3zm2
78g+8WyfkP3r2f4l+8yzfUb2S8L2C9lnnu0zsl9Ttl/J/krZ/iL7NWX7lfJz
PefnUn6y4/xkyp/N5NdR/rLn/GXKn/acP035xZn6fsofTjl/mPJzPefnUv6w
5/xhys9NOD+X8sM954dTfnbC+dmUf+04/5ryxz3nj1N+tOf8aMo/Tjj/mPKj
M/mPlD/uOX+c8qNTzo+m/PFMfw/hS3PgT8Mn5MCn6go/T1HBvz/Oz9u3rrh3
azWRr04/f/zX7/Z4LeJ7lS7ZcUbtuuuSrQt6/14hPdKNqLmjf8ND4vlbfEyb
pgumNHRHlpv29qLlbXzhdSK/g/qXxO9Q3DV9oek3ZRzmuazEv4j23ZThbmT/
/Wqo/rx90q63jTt6C/2+jcn4lf7V+6s0y/Snafr53QOf/765a11z2MZPm3bx
E+TvIA+8eIjXFRUHnrgYn6vwzdyPq76+h9q/1x8/zi8+MOZHhU/fGvxJnN+1
z/LOtZYcsbvav3997dx3axy3QscHvLu+u+rpq06778JjPfJQIA+8Gruhr4Pr
X8JTEfGzPH69swb2nLr64ypuc/0aW355tII7pPzYESc8HPujCT+Ka7jvB32q
1q3l7iH+lQN+6nTpylE13JAF52++ZWslv7LxKZN7N4r8QOD/29vglz+88tkN
Wrnfkr/Pab1jcnGRu+bKZ54vv0t8PoEXCv1+iorD/on42Jm+dv+Vx+7qB9U/
6KiL5ldx1befvGbyqlif833g81OeQvD88f7E/uP92bXqw707/P5LUr5Tn4um
rN/F/fzLayP3bh/t9+uENwz7D/NBflC4nynu79nhfuv18/gd6f1L+P3D+1vI
i4J/a5IPH/jknns71XZnvnL7hDb7T0veWFv1/cFlK+n6sD+x/3h/lv+p/qMj
vt2QHDb/xLrjPylyI4d/22zcJfH87DL4p7kffbGrC/dhc/Lai+NuW3DBlypf
fPNhU5u/Udstu/Cqm79q9nGy8f3Pm3zyabw++s9hX3L/uW9aDK/YbUQZd02H
Cx4/s++W5OP9J/fb1u57lddv16vj3PafJn2nTevQ7/aybsizb1U/oUq0z1eE
/ZjK/nQHhv2q8uFBXyX1l9718hOnVnSiz6zfl/Lvw77EPmD84i9HldtYZ20N
13h0k7odLm7qW1+2V+XD/xn932vH7XLHbmN3daL30u/7/PzrMwtifzncnxYy
D8fPmF+0PPGLdg/6Uve56FNdH9Z9UvtVXZ8cfHpm/5J+8axfnnn3pVeeOHqH
8qT+0O+pY1tV/1mv/5mM27x63gcTR57oFgR9ptefPfeljie13AqeUffpE2cU
r6/yp/7Tsr93tAv8eby/w3sDe7CoKPC4xvyE74W3+oJ1C6d1+/ZA30n4gCBf
Fd5nfb/PCe97tP+wL4lHFPK7wn5zsv983bAf4/UL9Y9n/RN4BWP/4fCeR/vj
0C5rWw38YVGsL1/2Ue3kkD/VH5T88623yv3h9/ek/1pSb/Grc9Q/fvqzMg1u
vTxeH8+nr5wv39LzaVay79aleG7hfPxTfbnsl2bhfHesP8GvpPlxxK/kK+1f
9PFJVfR8l/oCfT4v9+nvr75vU6wvL3tblZnjfqX48MbkGHmv+P2g98/x+yf6
LDlU9Jvou2j/yXOfbfDHTg/6KOkd9FP6ddBX8f4Ir/uh4fz04Bsr3L+q/z3r
fzofPZ+PpP8RxyiCnPSjZ/2I/YP9wfuH9Kdn/Unn7/9H25vH/TVd++OPSIQI
klRIQonpKjVEommq4WwkbW+KW9RQVbSI0JaUaogpVXyRSU23QluzGlJD1Kxn
G65GJvNUNEiEihBjCZGf37Pe73X6eZ9n3ZP2+/vln+eVZz3nnH323mcN773W
eme1v+J/lup/iv0tdP+I/SjVfoj9Taq/xH6Uaj/EP6nxE4v9LNV+in3Mah/F
f8jqP4j9q/VfFf8hq/8g32fS73Pz0zrtMmnMapn1q5/MTd9bq3t1Pvc8rvsI
+nmO+JfjR++092N3reG8els+fdDfbt+yyq8jL8wG8G91/9n6EM9sa7O/q+rf
xP9O6n//ecJ9Ox9/RNd8A/MPDun/1PguFT5D/35L3Ef9e/JXHxDwf89GPRP3
zX2mj1wu9rG2v26z/ZCHwb96wPaLX09+uAPN/qSXhR8O+zlzf2O/u5z7Qv14
ykW/lqpfRX8Vqr9Ev2bVr6K/kuoviR+5zuMoF/tVqP0S+5TUPol/ltU/E/uR
1X6Ifi5UP4v9KNV+2E+3rzX/WOxHVvsh9jWpfYW/5+sHf7BaH1lX5W+X76PU
70Pi01LjU+gDl29m+sL3N9bL/dNNbT39/cT/K9X/G27j8fvfa+P1+3PfUM51
lPf3+y8UfvcF9jyfp2tsPLX1o1zX7xibj5Lz183my+Xg5/Tvgz8pl+876/ct
4yt0fPx+qGfs99X3M8P8Yf8+4C/79cRfGL9M6hh/yfTv8Rwf38pm79wO4qdf
PxjfxZcQvyAO8etvMH/b/Vf44y6/w+KlgvET4qlq/i2eKBlfGH9ppV+A53j/
hIcN73G56Pes+l3wlaz4yhZmz1x+ttk735/QRy4fbvrK50fil6zxy5rgv5X9
4/fn+lCu67PQ9LHff6rpa7+/7I+s+4P7q3Xf8t/iYojNR8n5+6LNlz9f7E9W
+yPfT6HfD/U38cFVRX/L85M+nyON+MNvM38hJ+B325gf4HL1O4ebP+ryPtA/
WwOfVP0j+zPp/nzc8JiS+OgLhte4vIfhhe6X/8TwRJcLfpoVPxX/rVD/Tfyz
pP4Znxvxq4v/VOs/If5Jof6J+E9Z/SfxL7P6l+I/leo/iX+Z21r+1fDjQvFj
8ZuS4p+CHyfFjwX/zIp/2k/Hd2vxk+CjSfFRwXeT4ruCf2fFvwW/zYrfCv5d
W1+xz4XaZ51Xtb+CXxWKX4l/Uah/wfmjXOdP/I9C/Q/xnwr1n8S/KAL/wvvj
qH8l+jup/hZ8KSm+ZPuC+ZrECav4sYfFy+kk4NeIp11u69YDffH7J7O/VX8E
se9J7ceZhickxZkpF/2ZVH+K/Ulqf3ReFH8U+5rUvop94jy1US72N6n9Ff8s
qX8m9rU2P+JfJPUvBP8rFf+T9cm6PqMNr/Hzjc0Mz/Hrgfe5njacs8pvEv8r
qf/VU841nje8Ue6/XiY+p/tf8Nms+Kzgm0nxTcFna+sn+HWt/kPw16z4q+DX
WfFr2d9J97f411nHJ99f1u9P/Jes/ovMf9L5F/+3UP/X/Jqqb739XWXfxb8o
1L8Q/z+r/y/7L+v+43O5T/T8QuKDUuMD8a9K9a+8PgjP0fuzPwzt0l+lf5Ve
xzpDyvvl8b/ZY5Pe6bD2PjcrpoF3f3XuPbdW9mef11Y9bdbveqQHNtlm5w++
9kHx9O6zz/pm1wof2eyLfeZOGLByerC9rml68bP9Fiy6sUelP3ZBXxzjVeqV
Prv2n+ucqv4arE/S+l725bG+WtuAn2pbl0+79I3Fr03smQYJjwLlg1p53yse
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
EPi+0heMB6xWH7vjpT9YMuKlzmn6HX3vH9xlVsl8G8qnW7/W8gzr45rZx5Xy
FYwPKFuc8YXsPEGQP2L9LooLrQ9GqfwyD1m/izTO+mAUv0MfN8pHWj8N9tko
t0WfOMqHWb+OdJf18UjKv4N+HcUm1sejZJ81ytEPJN9pfULyBejjRvkfrZ9J
Qp+TpN/3TdaPhH1KMvuoUY5+Jgl9Tmr5ZetbvxL2MSl/gD5+lG9l/VIy+qjk
x9HnjfK51o+l7Gp9WvIr6CNI+bPWTyZdaX1mStV/6AeT9rQ+MUUf9Gnz+bV+
MsVQ6zNT099XWr+YNNb6yKSh6BPYOv4V0/vD2vvYlOegjxzl6IdT3GZ9ckr2
KaR8ovXbKVazPjyl9idFv510pPXhSXujzx/l+1o/n/So9fkp90GfQspXs35B
aVPrI1Tjl7jU+gWxj1BmHz4fn/Ujyn+0PkV5EvoIUh7oDx+f5jepfjwM/fFG
oi/eX8EDSnnAH1bpX+hV3pc8nZSDLyCtAN4w1b/k72KeNu9H+a+Aa4OHJJFH
lHLmZ5FnUPUz+E7BzzO/xn8Gvk+M/62a/SI/8qPgRe7Yv6708zHiX9u5y8rA
tx8pVL8+gnxq9LlO3xF8ivxlsDOF2pflPb95rDW/yK8n/xp516Bf/Xryk5GX
jDyYPv/oy8O+rOeDJ5TyldCX7TH0//k6eEgpJ38aedPIk+n7A/1Z2YduW+kv
hH43BXnHlB+Q/GLkFVP9Sv4w8oap/jwA/F7HgdeLPK6U3wD+rmvA27ULeGIp
Jz8bedlUP5Jfjrxyw8EDSjn52cjLpvoR/YzSCOtzVPwPeEgpJ//Y2eAdAw+Z
y70/M/TeLOnPQ/60NvCmzRb+SfKjoU9UQR5bytlXiHrvNvCstt7/P/Iv0L/o
d+CJpTzwX6rzH/SfZt/pR6zPZ83/5vep+oH8aOApq51PgZ8hDcX5FHge/P2a
zkfpPzEPSONn9U/B0yTXL6CezKofTT+3pW3bcdDXSz3/CvSP3x986ORJL1W/
PYG/fwz5SQMk/2Mi+4G3x90vYt74r2Z/2hQ/YX999tVX/3sFOV9Q/Djg//D3
Jz/Ag+AFgH/p17N/Pvvm3299Bv169o1n33n0offr2X9zBei5ztbH0K9nf/8F
6OuPPomVfUZ/fvbl1/6WF0Lv3Y++m7+U/mzD0P/+W+h7r/qN/e3Z1171G/vP
34e+8+hD7/cfjf7y7CuPPpQuvxH8Ac+AN0D1G/kPXgbvwTvW59KfT/4A8gbU
4nfwHwwC78HF1mezOj9Ef3z2xUefT7+e/f/R5xP8IZV9pd7zvrvS34z9+9Gn
tECfUr/+YvS1HAQ9d771KfXns/8u++6CB8HlQfxaja/j+NPlQXzp6x/E34If
1OJLv38Qn7k8iN9dHsRvLg/ie5//AJ/w8Qfxvc9vEJ824RtN8avLg/jbnx/E
1/7+QXzt8gCfcHmAP7g8iF+b4rOm+MrlQfzdFL/m1vvX4k+XB/FlU/xdvX/H
8aXLg/jL5UH87vIgPnN5EN834RP+fkF87/sriE+b8I2m+NXlQfzqzw/i86b4
u5q/juNvlwf4hcsDfMLl5tc9Tp7a2vmBnQctKlr1Iv/x/Hh+afHrqsH5UKU/
P5Xzq0tw30nQi1ofBD7rjDgw7yHxH/IbnAdX9WMQf/v6BPU3LkdeOvu2Fepf
Bv6vy9W/HSL8FnZ+3wnXzy1VPz5qerVIpmdr/YU0/2up5A/OlvwRrZ/Z0PqZ
F+9Yn/NyuPR3Z39r9rXeETxhlJO/fjZ460eBh4zyZ60fe/m69WnP20r/+07w
J6gXx5HHq+X+64E3e+N8PHjCKLf+3v/DPvY1/P866zfv/dvb9jaeLsqPs371
pcW3q9T038rgj58F/oAPyBMHOfrblx9Zn/x8BXjEKEe//Yw+/HkP8NRR/rTx
BaBP77s1/5C8LeANSAk8YJSDLwDx7ys1/xB8AKkn+BWeAg+d73/c1+LXCcUR
4CmjHHwH5EEo/wM8eL5/jU8h/c54FspZwi/AfsnUiy+BR45y+vNXGY9DQR48
ym8yPojiXOOJyMq/wP721IsfgueNcuPnWlCCJyl/Bzx1lFt82zuD57um/wL9
5OOz76pvBk8peTT9/opfbdVhfNgLuJj3X2qjXONDPZ/W/C/VfwE+6NcfivFe
hDypUaL/Zor+Yh4t5ZPEv3wKPMqUU189h/oe1Z/wC7PlYW1Q67+wpvml+RPz
U7P6p0H9o9+fepG4H/FAyo8yvqL8W+MxysrfRP0GnohyCXiIKadefAZ9oclz
TDn4lvI6xsNU47d61PiWEvC/tDV4gin3vuXAnchDTDn4qPKaxlNV038bG58U
eanyr8EDTDn4qDJ4qmrn7za+bqkH9ODXwUNNud/XeLByT/AUU746riP/ymTy
YEM+1fjA8j3GE1Y7H7b4tH/6JfTgJ+AZphx8YBk8YbX8hA2M7yvtAf60L4Ln
mnLedzD04MrgQaZ8X1w3xnjOMnm2KZ9ofGn558ajVuMPMz6yAelY4K77gqfa
vx/oRfaFfxo825SD7y0/bDxwNX61i6HfwLOTtwOPtI8PehE4ZiYPNuWB/+Tj
B+5X9DMcsJ5f0rH+qfBHyT9XeXD+IPfvn+z5vWvn2wG+J8/vnLY2PzfKr/f6
b71/UL+s7+f1F3p/+xnn52DcfI9g/uaXmKeavN9Db3z46uSN0m5vXXDXiY+s
UxvflAF3zr52UM80e8SCw4+Y+I/6/M4/+obzd18xHfTnHz2663F/ra3/yFVe
3HnMaaumQwaPOfbgyfNq189afcT+2/11XtHvjp88ssZ1K9T3x943dDpwSff8
+vQLbj15dt9a/eCU7Xfre3avz+3VdjdNu2Wrj2vPH2Xj4jjr63PX2hP/8FrX
vN8JM4/faNjatfvPsvcuL7Z5qMmPu/KQy0/rskba67EZY2Y9vLj2fgts3Anv
UZvfM3ebMXL83GXFxnuMmvWjB96ojR/zkqbbPNXkWLeMday9H94r4T1rz1/2
tfZ5Ky62eazd/yBbt/JQW8fa/TFuvkftesxLebzNU23+mvoXBPGJ668gPkmU
B/FpdX3H57f+/CA+9fsH5yP+fkH85c8P4sPcOr5a/Fd9Xx3Hf9X8tf+rxc/+
/CA+9vcL4i+XB/GFPz+ID1wexI9N8VdT/OTjC+Ijvz6IH10exEfV/HYcPzTF
nz6+IL5weRCfNsXXPr4gPpX1q8VXuXX8tfi80r8dx19+fRB/+fiD+NKvD+LH
av93HD/69UH87c8P4mufH9VLqp+C+KfaH5aXUf7B8jRq8iD/weWW37EhcPe+
tfy6UThfHNx6vuhy6K30jOmx2v21b43KWZ/EulGVz8S57FeC+hKNP2vPt3EX
dv+Pa+O3+z9YYp5q87ffz0fsctLSLdJhV113y157bVob362bfHzb8cf2Stuu
v2D1687/tP7+c949edunuqQfT5v4ztCf3ll7/uADd95o1sHvl7ce22PoTof3
qL3fQd/Y/E+Lej5QHPbfW4w/5aguNfk1/QYf+NqBPfI5dxx77uCb1qmNf9tP
Z59z+G8/KUaeMGDoE1e8U3t+snEVg2yc9fV5fp/HhmzYOU8bv/DiH/+wd+3+
A+29y9tsHmryYXfNf2T+L7unFz++4Kq+p79Wm58JNu50tb1HbX43Gjvjvm8/
u6Q4eemgVd8Z9W69/5DNSzrH5qkmx7plrGPt/fBe6SJ7z9rzD7F5K4baPNbu
j3VLQ2wda+93vI272MDeo3b9CzYv5XCbp9r8NfVPCvzzCl/ueP8nyvX70fwK
zS/T/IyAP1Lxbf/+NT9iiJyfriv5GRn8ysgjyZdJ/gjyFpjHkNta/n2+vy1v
ArjQyjX8BufOxW3glXxYzp9Hgr/xx+Bt1PNz8L3zHL52/k5+TPJiPifnz+R/
JO9jLT9c7L+eb5MfkryQ6j+Qn5G8jF0lv2Eg+DPJm6n8i+Bty3fg90dJ/oTz
a4JXs2N8uLL/A+T8nPya5NVU/0H9D+W3w7l9wjl+Ok/O75GXUZC3UvMzyE9J
Xsos+SMvWd5HcTJ4Mc+Q/A/yh5I39DLJb/gb+EHPAC/ou5I/EeB/Lg/w3wpf
7Dj/068P8F9/f34p9NMnSX5CgG/6+wf4q18f4KsuD/BVH1+AT1fz1zH+7PIA
3/T7B/idXx/gby4P8FmXB/imywN80uc3wB+r+K9jfNbvH+CPLg/wOZcH+K7L
A/zO5QH+K/FLDb/26wP819cvwC/9+gD/dnmAb7o8wDd9/gP81q8P8Nlq/jrG
Z6v4uWN8268P8GuXB/ic3z/wf31+iT+MBP5Qyy/Hv6i+UPurnCz1STj3yTgH
yiMlP1zxT81Pf9Py5kvk0edFkj8f2P/Uev+3SuSR57aWf4uLM8FvSl5Tzb8l
f+gfwBv6bckfRt5xQd5PzT8+Cvys94GXVfNvkfdckne05h+MNH7WX4KXdY7k
95KflLyk+v1Tb3SHnzBU8rv5fZO3dY7kF9Ov4O+nSP44+V3vBa+rfv/8bpkX
qfnD5HdFHnXt+0feOL6POaXmj/P7HoLv+07JX6Z+eA76QfPTkTdfIo8+fyD5
8+RnJS/rTyT/fa+Fxl97P3hrNb8beeMleWm/IfnjQf2GP7+pf2mQH63nk3o+
4HJ8CHF9cMfnH3L/2vlGdT7U8fmGy4Pzndr56gpBf6bgfKDKr+gYX3d5gJ+7
PDjfcHlwflCtX8fnAy4Pzi9cHuDj1fp0fL7h8gA/r8bf8fmMywP8v3p+x+c3
Lg/OB1wenA9U89fx+Ue1Ph2fb7g8ON9weXC+U61Px+c3Lg/qpxLlQf2Py4P6
n+z7u+P6H7/eftbqm/z6oH7Jrw/ql/z6oP7L5UF9l8uD+iGfv6C+xuVB/Yzf
P6h/cv0a1Pe4PKhf8vsH9T0uD+pnXB7UP7k8qK9xeVAfVe3Pjuu7fH2D+imX
B/VFLg/qw2T8tfojlwf1R37/oP7Jrw/qu1we1He5PMCf/fn8/7Ot9UEuD/Bp
lwf4tMsD/N3lAb7u8gBfd3lwvuDy4PzA5QE+7fIA33V5gN+6PMDXq/frGL92
eYBPuzzAz10e4LPV+nSMr7s8wG9dHpwPuDzAn6v37/j8wOUBPl09v2N82uUB
/u7yAF93eYCvuzw4X3B5cH5Q7f+O68dcbv3Q1kysY9P+ExbXrSe/57+q/8VF
6GtR40dCPiFxcbVfAb7t1wfxbTU+i/sTcICk+Vmzma+K30+U/LTV8HvgBFnz
36YbbpFeMRwjaX7WcYZLJOAUheaP7Yffb2w4R15f8tPM/vRPwHlq/Q/U/j0p
+WPAdRJwnlr/A9rfC2B/u0r+4tGwi7cYDpT3kvw1i4ffIs5Uy480+79OMvx6
jVp9h9q/SZKfBlwtAWer1Xeo/dX8SJzLp98YDldoftwM2MsZhvPlL0v+5e8M
d0yjDYdMmh8KXNF//wXJf+TvNzCcstD8y36GmybgqEnzQ5F/4XmjK0l+4qn4
PXDW/KnkRwb1n75/gvpPvz6ob/XxBfWr/v5B/apcX6v/FXmtvtflQf2oPz+o
r/T3C+onfX6C+leXB/WdlX7puH7Vxx/Ud7o8qJ90eVD/6vKgvtLlQX2sz19Q
3+vzF9TPujyoL3V5UB/s8xfUn7o8qD/1+wf1r/7+QX2vy4P6Xpf/Fn0xvm11
pNi/9f5PYv+q9cXvl1mdFd6L/6r+01sE/Z+D811//0sE//lA6p8usryb4nDL
w8mzpX7D4qY1E/Js0m5Sv8K/XzbX7ORSqY85z/KG0qWWR1T2lPqNsywvqODv
N5L6kjXw+80tzyg/I/UryKtK37Q8q9r39+X2uOiSkt/REKkvMfx2lXSU5VnV
4svZYt9GSn2Tfl+vSH0Lv88H8X0WUj/1gOW1Mc+t9v3h3AjnrwuKXaV+5RTL
ayumWp5bLT/M8qI2TvyOT5D6KX5fn+H7WiL1M/w++d3tLvVZiy3vr9jY8gDL
YVI/hry+xN9fLvVRyP8rrrU8wTLv1VqfhbzFhDxGt4eUGz4/oeTvD5P6Jf4e
54x5R6mfQt//NKnV/6y+j46/P5fjey9b67r5L8yv8PcLzldcvrrVfRYTrA60
1n9pJavrTFZH+mrxsvSfQl1osZ7ViZbfl/5WqFvNqGPN2n/pDqtLZZ1qrT+U
3b97vsrqXPP20n8Kdb0Zdb6185Unra6WdbZ5X+kPhbrejDrfWv7FEVa3Wxxq
dby1/mSo+82oA87an+pkqysup1udcf6N9D/7g9VVs866dr4y1eqaE+qc00Tp
P7W91VWnZHXWtfyLu6xuOqGOOl0o/c9Qd50utDrscpD0v9rY6rqLE6zOu/y7
9Fc73+rOi0etDr38jfR/Q115Qp150v5mu1tdelpoderlmtJf7U6rm887Wx19
/o30f/vI6uJZJ5+1/5jVvX9Qos4+f0H6nwXxp69/kF/l8uB81eVB/ObjD+IT
vz6IL1wexJ9V/lbH8ZtfH8RfLg/iKx9/EH/69UF85fIg/nB5EL+6PIhPXB7E
t1V+f8fxuV8fxLe+P4P4zOcniO/9/kH85vIgfvPnB/GpXx/Eny4P4k+XB/G7
y4P43OWB/+rzE+QnVuen9s/7R10i/mng/zX5Nz5/gX/i1wf+qz8/8P9cHvhv
Lg/8syb/1eWBf+b3D/wXlwf+r8sD/8blgX9cfV8d+/c+/4F/7PLAv3N5EB/4
8wP/z+cv8P/8/oF/6/LAf/X7B/5rFb937P+7PPDvff6D/F2/PsjfcXngn/n7
Bf6HPz/wH1we+JcuD/wzH1/gXzX5T3594F/68wP/yeWBf1HNb8f+aZP/0eS/
+vWB/+3jC/xXX7/A/8qt46/57y4P/DOXB/6Zjz/wP/36wL90eeBf+vwF/nmT
/+3yIL/b5y/If/bxBfnLLg/y010e5If7+IL8bh9fkL/t1wf52f78IP/Zrw/y
n/35Qf57lb/Tcf69Pz/If/f7B/n5fn2Q3+3PD/LP/fogv9zlQX65z0+Qn+/y
IP/e3y/IH3R5kF/n4wvy41we5D9W+6/j/EOXB/mDPr4gP7DSjx3n//n9g/w6
lwf5db6+QX6ly4P8Tr9/kF/p7xfkf/r1Qf6g+D+1/Ea/PshfdHmQv+jzG+R/
yv1r+Z3+fuBVS+RVWyj8asqv1xf/p9z4Gvqlfu28BsSt+G9xsfmq+240OP2j
GP2Tq69daYUPy+8+NnTZg+Pa/Pl75j5jF263Yl7js28vfnDRmvmk/pt89YfP
VvjSuK/ttNUL0zfG/derxZ/gjSvIG4effv0x4OvgfVT/7b/GRaNHfPR28ebb
N5+/9vClZdc9jv7h9PcrfAN8hXlCwF/4HytdNXnHi14vv3fSqBlvPdQ9f9y/
1ydvX1Lxh2r9uO7PF07/9I1zP+2Rnvz9e39b/eYPi3Xa37OqD7KfVf5XTT9e
+Jdfn7tHn3TbO2vce0bnbmm3G0+/daf1Z/r1e5/x96fuf3LFdPP1U0974YCn
S1uvJZV/8ff+l0x+8YPinEkvDph68D/KLz37zX7T/lKtD/kCWAdCnj3KXzlx
sxkD/9Qn/ePeJ7b8y8Pd0ryDfnricwMeqt5v0KSVD5zcKU1b/8ExS4e9VB45
4oDf73nsJy7vP+zwXZ4a/nAx/po7eu7YvUs+dubMEWNOr9bvjS12fXD05kvL
Df++xyELp/TKE174wZJTPq30YzB/lX+N+SdP0DrCH9Lt4GW79+n3bjFpzWVj
N970k/LTF0Z/1LXcxuXkjwLPXy2/jPuqL+47oMvMO19+vdK/0yel88eu1yud
/sCKp00d8kkN/x+3f3ndVs93Soe2x79/K3k/yrd64pyTrn1pYLp1Yb7pgu4D
0tA1J3748FZ7+/WPYn0ew/rw7yjv+vxTD61xy+rp5ztMza9suLiWX2Z8jT2S
8R7yXIT/Fhfrvr5X73lbr5a+fvN+d/fa/o1afGY/Hx06E/tzPeF3+Xo7X9cq
6cR23qwna/kZdu7aP/H3P7nyp/913kEVfrOPfVdpU/vOiiXyfTXxh4K/LV0A
3raNvvjno9foV/Gvb2D7Ki20fVacbfvLrw++H19/7Bvuo3L9+Wf/8bLdKvwS
E+n4xTHCH/SzqSucucpVK6aXjn7zvatfqPfX/MpXu3zY951e6euHrrXql3/1
WfHl327Zb8SPqvxPrkfXgF9U+5sOwv0oV/34reGL9r/8jO/49YbL/I37NOv+
vPruG268bMiyYv6YK7Yb3PPNWvwfrH+1f5+6YZdvbftp8fBlu497v3u9//Cj
+PsXbJ/kj9965s+3n/9Nlxsf6grpunbeVeYdVPtX8dtlw1r5k94yvV98z+xA
2UX0/0vgq94DPHEHvDt35oEvVvgH9SF4ZkvyzVJ+tum1tK7puRL6za8P7JfL
A/sj61uzL75/Avvr19vPmn1xeaCfXR7Yb5cH+tvlgX33+Qv8E3+/wL77+gX2
ya8P/BuXB/bL5YH9dXlgX/39A/vq8sA/cXngf7j8S3u/M/ikV18udl5wf59i
0071+qN2vqpFhc1/vf/qt/5z3jqv3PRYceXjnTY69YjOAT9ZtX8+ke9rYLu+
ebec1m6XemToe5c/ie/7b/j9GNH/4F12u1urT+7Y/vr6//HosfnI8z4u3ux8
Wvc5U9+r1yd3W7/toW91R9/oBYXqt0D/ulzrZwfj7yg/39ad+6DcVPyr6bav
iudtn+WjZH8p//AM4R8+2exauT54Sjcz++bzt/lpnXaZNGa1/Mnc9L21uvfL
U2X9g/Xx8Z09eqe9H7trjbzF0wf97fYt16nFb2q//yH62b7PbuCNIy9rtb/m
iH5Wfr8/T7hv5+OP6Jq/cUj/p8Z3WZvj9/kN/CO/vonfW/PDtsT9Wsdfs48u
n4O6iftsH9XsI/RChp7I3xb//EPTS3me6ak8V/QT+UNfBn/ogWZ//P7UF+DB
5k+XB9+P3x9+B/2Qmn64F/M/vHX+K3xJ+K9VHvifLse+TJvZPq3Fd3+Af/Fm
q3/h8p1Mr6UBpudqctgVrkvt/fBeCe9Zez732zsB/7v9rPSfyhfYuItr7D1q
1x9j81Jinurz27H+ypQH+sH3V6AffH8E9qHCLzqOn/z5gX3w+wf+sV8f6L8K
v+tYP/v1gf71+Qv0r1+v6wf75eMP7JPLlT+6hi/g/2u26h+X/8riwvJhixNr
8iD+cjn0coKeruEbj8O/ntPqX7sc65aSrWNNzvmGHqy9n/Jzq/wN27fFrbaP
g/ik0v8qn2HjZpxQu347m5cS81Sbv0B/ujz4PouG5/v66/g1vlN8QePDbuZ3
Fr3hd/YWfO1kzP/PMP/flPhsEPY74rq8qcSHd1jcyjgW61jFrzdY3MQ4Kre1
/FtcHG1xW2m826uAP6OK3wL74/LA//D3C/AXvz7wP3z+OFL2P1H+2MC+in6r
2X+/PrDvLg/su89v4B/J/Wv+j8tpH1ZptQ8+fu7/L7buf5+f86B/u0P/LhV8
S+evj+BjiLvKnS0Oy4oP32Z+V94G85YEn+oj9ndrwceeMNyuBI6X+wp+F+w/
H18Pw63KnxiOldta/oX4nY8/sP8uJz6zsBWfqfLzOvYPQvxW5YH/U8W/Hfs3
Lg/8G5cH/p3LA//N5QF+6fMf4G8uD/A3X/8Af5P9WcMX/foAP/TrA/zQrw/w
V5cH+KrLA/vnz/f/t+JzLg/so8sD++jywP67PLDvLg/su8sD/8blgf/i8gA/
q+5vuFH6ruFISc9/jK+7T0Ic6fNA+S0Wtyazf+8Wz0n8eqbhZulynNtcLvhZ
YF/9+kC/uTzA/1x/BfifXx/gmz6+AL/06wP8Uq6v4b8uD/Bdlx9puGGxteGI
5Z5yfhfMv18PXKmwcdfrT3rivO5pw0HLnoJ/Bv5Nar1/pf8U/wnWPzU83+Vm
j1bH98G6lGr8gX/l+jOwby4P9n+4/seIfxPY96b1c3ngn7ocj/Xzi34S/wX+
q+//wH+Q8zn6k1WfGnn/XKsDhBz9sbPuc8qf2X32Wd/s+lG5z2urnjbrdz3S
A5tss/MHX6vqI36234JFN/bo8nlc3GfuhAErp3vb6xSnu/wrd3917j23PlP2
y+N/s8cmvZPx6NX56bUPDuVbop6RfTuMr65aH/bb3gV9Ow5t79ddnc+Q92Ck
9BGlPM94eLN+v9/A+6KiH4LL+Xvto6731z6lfj1+P+3SNxa/NrFnQp8hnx/2
O2Vf9Vlyf4y71ueI8m2l78J09GOgfJDIHxU5xpW1D5KPr+H5vC/mMbGfBOXk
9VKeQ8qxbnkpeMes33qlX8lHvQV4eW6x9ffrsS8z9mmB/VnhV7bv8iDbhwX2
n98f+zZjH6f7bf/69VOuOHzzHcd9UC54fP46k9Lneu/J8y//JP/D5+/j9/Z9
f5s/ds2X/eqqZ7ud1yU9cOrFLw55Lvv1i08d+19nHPVY8dm8X8y88Pa101YT
jhwweU4Vvw5t98v75uPa/fT55fW77Pv62NsqfsrO4z44o/eCTfPX8Xc9b95r
0aLtq/j7F7jugGnnbnJT7zXT25tfPf++s6vzt1/sl/bbctM++UzgWPAn/fql
XS69b90p/bPiLJS/grh/9LeXPPl+38+KPYEHUD5kUD5y2tSqbgjxgl/P3/9o
2A4HnHVej0Q8lXI+d/tnTjxvpX4rp87wlyjHuPkeif4w5TvYde5Xwd/y8WHc
Jd4jYfx+/x/auNyvX4g4RMZfbGfvmeDn+/Ppr31m85iAk7sc68p1Tlhfl2Pd
uP4F1s/nD+uesA8S1t+vx77M2KcF9qeP/1Pbd3mJ7cNyC9t/fn/s24x9nO6y
/av4Jf4+si8flpH9kOvb9HryopIn9QTpjzgA9oN2A99xlR8n158k19OuaB0u
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
330UX1+C/IxjcB/qEcpvR35HFF9RfyAvpUSeio4/nSw8L5QzP0h5TChnfkzb
m8YDgzwZlzO/hjwwyLNx+Y+RH0Qelh7gYaGc330D/pwj/JnfVeQ/kK8w0g/8
/hvw+9SA3+cG/D7sXwB8u4jw7ab6PpxvhPkl/H2Ez5MvsAF/zRH+Cnw7Rfg2
8OmyAZ9OET7Nv4/weeCrof8AfDXEF4Dvlw34forwfeqPBvw5N+DPuQF/zhH+
jPOP3HD+UUb4H/VHA/6fGvD/3ID/lxH+D3y7iPDtxeSL/N/PR1J0PkI+0Aif
17qoAN/NEb5LPuEoPpH64pr/wfO3Bnw8NeDjIb4BfDxH+Dh/H+HH7I/VcH4Q
9v/i7yP8G/hmbsA3Q/0E/DhF+DHw39yA/5YR/svfR/g3+Z4b8MvQ/wB+nhvw
89D/IT7dgO/mBnw3N+C7OfI/yCfccL6QI/+H+HQDvp4a8PXcgK/nCF8HflxG
+DHOH3LD+UOO9BPw7yLCv0e15Nf3T+uYHvD5ba0P7Zy2Nj+lpr/C/PaW+9fz
Pw+F/HWcQ60g/dckPmOeQO35UXzj+WURPtPyfvX4q6k/Acc3ZcCds68d1DPN
GrHg8CMm/qP2/m3zj77h/N1XTD/+848e3fW4v/r4j+D55ENvfPjq5I3Sd966
4K4TH1mnNv9Prj5i/+3+Oq/oe8dPHlnjulp9bblsrxs6Hbike35t+gW3njy7
b238I1d5cecxp62afjR4zLEHT55XG98oG1eBcdaux3vxPWvyKdvv1vfsXu8X
bdvdNO2WrT6urc/rd6098Q+vdc3fP2Hm8RsNq+wX52+BjTu17d3+HrX3x3un
R20eavc/7spDLj+tyxppr8dmjJn1cMWvyPufuduMkePnLis23mPUrB89UOWP
Ur6fjSu9ZuOsPX/Z19rfq7jY3rN2/W62bhnrWFufLey5xVk2jtr497Zxl8fb
e9SuP8TWrTzM1rGaP/gFfzC7jDqQqj6L8QviBsYRhcqj+hPeP8rPPqzVL+E5
dO35f0Ve+jZSX+j9IQP8k9dH+Cmvj/ARXt90/jVtk49vO/7YXmnQ+gtWv+78
T2vzM2jOuydv+1SX9O1pE98Z+tM7/fnsv/C9n4/Y5aSlW6SRV113y157bZp0
fKO/sfmfFvV8oBj531uMP+Woyr88FPJr+g0+8LUDe+SJdxx77uCbKvvJ+w88
cOeNZh38fjnt2B5Ddzq8jk8lG1eBcdbkeK/yVnvP+vx/Ovucw3/7SXHYCQOG
PnHFO7X5vej5fR4bsmHnfOv4hRf/+Ie9a+M/28adrrb3qK3/ofbe6Tibh9r+
GXbX/Efm/7J7mvvxBVf1Pf212vxvNHbGfd9+dkkxZumgVd8Z9W5tfBhXmmLj
rD0f71UMsvesPR/rlr9v61jbP3hugXHUrv+bjbscbu9RWz+sW8I6+vuxriuq
73pN+pJq/QPsZxHZT/rv0feJDwH1besl5olTTr87yh/n781PXzN5HQjkTyC/
Jfq+mR8T4Zfy+1r+DPMv4PfQP/L1Yf4G/KPS6iwqfGDJXPv90eYXpQnmJ/n9
mR8Bv43+nb//+siv4O/hB/r9mR8Avy7Bz/P7M/8lqn9j/gz8WuYRuvwJ5D9E
9Vd7I3/iZ6i7usX8bJe31rf1T/CDfXyt9W0b0A92OfNrovrALZCfA5w02/xX
/tlE5FdE9WnMz0Bcg/OLBbX8u3ss7kiIQ3T8qI/rgzqRqj8p82/OsbgrIT5z
+bnI32Ee0kYWx/nz+fvfWVyWjrQ4TdaX5y8rMY709/8I+TX8va1PFX/w930t
rky7Wpzp9x/Y0P+4qb8l/erQv8Z9I/tNvpdIP9hPng98Vixrr/ev8gf4+0tQ
V/tty3Nx+brIH47OP5l/HPn//H2Uf+z5rYbbuB6hnPmxkX5h/uXFhusUhxnO
48//EvJPzzTciXmo1fkF8ld74vdfNhzLr2f+5TmGS6VsOFW1fsgvjvQD85Oj
+rEhyC9tO6wd16vx27+M/NSofqn1/IL1Yf/jz+f5BXC7dIzheD7/zF8Grkmc
0+e/7T7Lf47q65i/GukH5r9G9V3UH8BNi2cNR62dfwI3RX1ZFX9djvxm4MaJ
+dz+fORH8/fXGw7t9+fvFxuuXGxgOHN1fo38YztfmlBSj1DO/OVIvwzC7xcY
Lp7mGE6u8V/RUF+fGurr8bywvj7M/2X9UVR/PqjlfCPsPxDij6h/z1H9O86P
iob67BzVZ6P+vIjqz3G+VUb176ifzg310zmqn0b9fG6on89R/Ty/34b68txQ
Xx7ab/YDiOrLcb4a+g84n81RfwF+vw31+Smqz0f9eYrqz3H+nBv6B+SofwDO
p3NUP8/vraG+OzXUd8f1RTi/i+Jf1D+nqP75kpbzzRjfj+rfUX+do/pr5H+k
hvrgMqoPRn5IEdU/Iz+ljOqvkR+TG+p3c2T/eF1D/XaO7C+/v4b65txQ35wa
6ptD+4f8qNRQ315G9pffX0N9eIrqw5HflaL6Z9Sv54b69RzVryO/LEf126Na
7F+IfxcN+Hd4Pt56vl/PTxT/O8pvLBrw7aIB/ywi/NP7S/7v+HDRgO8WEb57
BPVbgG+zv1wDPlpE+CjlDfh4EeHjnJ8G/LdowH+LBvy/iPB/55/53/HvIsK/
+X4RPszrG/D9IsL3Ob4I32Z+WgP+nBrw57D+i/Iof5fPj/LzKG/Al1MD/pgi
/JF2uQGfTQ34aorwVd4/wpc5vgZ8MkX4JJ/fgE+nCJ/m9Q34a2rAX1MD/p4i
/J3ja8CfU4Q/c34jfJbv14Cvpwhfd/8twJeJZ4b4Zkt8E/Z3y/97/6NeOcJn
gb+F/aGYXxDF1zy/jvBN4JNhfAN8Mkf4JPDZIsJnmZ/RgK/lCF/j+XwDvpsj
fJf+WwP+mBvwx7IBf8wR/sjz/wb8O0f4d2v8FOK/qQH/DfvDAf/NEf7LvJoI
32T+RgM+niP8i/kzET5LXDDCB+e05G/W86ua+A1Yvxfhm8wPbMCvwv5EzF+L
8EHge7kB3wvjG+avRfgm8KncgE+F3yfw0bIBH80RPsrvrwG/yw34XWrA78oI
v/P8v/8dPy6i75PfXwN+mhrw09SAn4bxG/DBFOGDwJfLBnw5jG+ZPxvhm+yv
FNUXsT9TVD9gP9vGRf0BXkZ/ny5Wl8Y+PxU+hP5AqGsrUOdW2U98d6hbKyZa
HZvL2X/ndqurK+z+VX3T9ujfg7q8fKXV6fn42H9mM6u7y6tbHZ7L2V8JdYPF
SKsjrPQP+jONs7rD8i9Wh+jX74v+Ok9a3SL77FRy9Oc50uoeM+oga9/XdKtL
zKhTdDm/rzetLpF9jFzO/k2o22QfJ9+f7P+Eus8CdaDV/KN/zw1WN8o+Pn49
+/+Ms7rTdKvVoda+r2utLrR4xupEdfwJdaFpe6sTrc5X0d9pLauLZZ8nf/6a
6A+1u9XVpgesztavn4Lv7jdWN1vMsTpal5+D/kuLra6XfZh8fH3Qvwl1wawT
djn7X91ldb95mNUBu5z11VF9IPGthvqxHNWPEb+J6vOIPzXU16Wovo74TVQf
SHywob4sRfVl3N8N9W85qn9D/WNuqH/MUf0j92dD/WBqqB8M8+9p76P6QeKn
UX0d6ivD+gTih1F9JfHXqD6Q/QGi+jPUJ+WG+qQwPxj1Xymq/6Jf2lC/FfZ/
IL4f1Z/x/KihfqmI6pe4Pxvqq3JUX4X6utxQX5ej+rpW/ySsT0sN9Wm5oT4t
zM9G/VYR1W/xfKihfi/s/8Lzuaj+jP0LGuxPjuwP6+sj+w77XDbY5yKyz9yX
kX8C+1I22Jcysi/sH9Dg3xSRf8P922B/c4P9zQ32N0f2F/5fbvD/cuT/cf83
+D+pwf/JDf5Pjvwf9veI7Dv7SzT4h2XkH8I/KSP/pIm/lfxvET716QujP+pa
bpNWPXjZ7n36vVucs+aysRtvWtnPddqvf6t8/vRP3zj30x7pid+/97fVb67O
r8Z9baetXpi+cRq3f3ndVs93Qp11FT9NW5hvuqD7gLA/14AuM+98+fWdMu/T
yle3uPj6mhM/fHirvfMWT5xz0rUvDUy8n+7fiD+C+3f6pHT+2PV6pdMeWPG0
qUOq/Igm/ryfXvnT/zrvoO2Q39Df8yQox2XjjH+pRzKepQqfRP4VeDlWST9v
55Oo8CvWt3R9/qmH1rhl9fTzHabmVzaszodY39Lv9b16z9t6tbT9zfvd3Wv7
N1zexJ+08Rf/fPQa/Xon8q9MEP6VJf17ffL2JV3TPieNmvHWQ93Tl1a6avKO
F1X9f8a/8IMlp3zaLW/w9z0OWTilV/r7Frs+OHrzit8HfKrkZS26CD9U//ln
//Gy3VZOk21fFd1sn7m8ib/R5EvKvc/4+1P3P7liuuv6qae9cMDTlX36apcP
+77TK9xf3FcjbV8W2Kd+/w1/u2W/ET/aKg/EfbY8dK1Vv/yrCl/41vBF+19+
xncyx8n76f772dQVzlzlqhXTG0e/+d7VL1T9bZT/bDXh7/rwrWf+fPv530R/
urWy1d9V+Cf5KaPvl/l90f6yny8NNf6xFZLxlM2r6c8/3H3DjZcNWVbMG3PF
doN7vlnDNx576oZdvrXtp8WMy3Yf93736nzkwHfnzjzwxQ3zy+C330P47R9t
5d1Ks4R/eKU9jv7h9PdXSIvevvn8tYcvLfZb46LRIz6q+AN/MXPmiDGnd87j
r7mj547du6T+ww7f5anhD7v8u48NXfbguLb05VX33Whw+kdx1E+uvnalFar1
P6n/Jl/94bPd03dzn7ELt1sx9/zs24sfXFTvv23r2w/6p8J3u2J8e9u4Coyz
wjfx/Wxm3025t31Hfn/yrj0d8F8rP9yZwg/H/RXpR+6vaH+mG0+/daf1Zxb3
X/iXX5+7R590+ztr3HtG524u3/TZb/ab9pe21PXv/S+Z/OIHxXmTXhww9eDK
vkH/F5H+x/dZRN8n91e0f5v4QV866KcnPjfgoeKVEzebMfBPfdKH9z6x5V8e
rsY/esQBv9/z2E+Kvw6atPKBkzulOes/OGbpsJeq+J6814F+ONb2F/dVgX3m
z4f+S2+Y3iv7mx7U9c3R+jbxy/4Y9iX8/u3fOLvPItjzyv7DLmXTg++WZh/r
/W8G7P3O4JNefbnYacH9fYpNK/1H+/id/5y3zis3PVZc8XinjU49oho/91Pu
tn7bQ9/q7jwalA+Cvmyw7ynavxuZ/k2R/hVexBp/E/fPdUePzUee93GxqPNp
3edMrfjFub8n2r4uVrZ97vImfsANzX7mS81uluuBZ4zyo23/fR63tO877kOX
87uOvm/q/8i/oH8Sni/iumj9uX/sO/3cjrffr6rv5Xx+6bROu0was1r+ZG76
3lrdq/Mf9q88a/ROez921xp586cP+tvtW/5T/Tf8sib7y7xQ7CO/fjvz71Lk
38H+pgb7W9w74b6djz+iax5+SP+nxnep4i/6/wfgPdYS/sntoR+hF/MDpidd
DvuWvhPwg4nfRT/M5W+Y/io/ML2VXzY95nLon9ygf3Kkf2D/coP9y5H94/o3
6OfM3wT6uWzQz2Wkn4VXtRa/wL8sI/+S699gH8P9A/tYNtjHHNlH+Ae5wT/I
kX/AfRN9P9RLkX6i/xXtT67vS+aXFvBTXe7rG/Arct6i/jnrwb+P4keuzwLz
K+ln1vT3w+ZXFvAzXU7/G+uWW/nIFxf/Af99gNmNcpDZEZczPuls+6bog/1E
Od/nUvOLoa8r/Jv5usab+GQJP1vmZ0l5m/k99INcvj7ir8h+UF9E+oPrF/HT
cr1Ot7i2/IvFuS5nfB/FX8IPX+s/wvVDXFqubHGqPj9tZ3Fp+UWLU13O+B16
nXG8yxn/k4ed60y58i8rvy/j62h9+F49LC4vf2JxusuJbzxpfm35V/Nza/Pf
4H/kyP/ge0XfD+LjHK0P57/Bf0sN/ltu8N/C/lPwb4rIv4F/y/eK/NswvqV+
jfwzzneDfc+Rfcf+z5F+atUn8f5v8I9Sg38U6neuT+QfwX8oIv8B/mOIT8F/
DPED+D9l5P9w/vHeaTObh6Ry7Mu0te1Tfz/2n4nwLV4f4Q+UD7N1T9gHteez
T6/yg1Me6RfKI/tEeaT/WvVBff9TP2BfpDNtnySVX2nfbRph37E/n/53hP/x
+gifEd518rAnlb9pequ40fRY7frI/vL5kf2mPLIPlEf7k/51hG/SP4/wJ36/
0f7hfETzg4GMs++oD/zIyj/kd4e4K5n/UdWnEX/qYX43cSi/nvFNNL+MjyL7
ybjyLIsriSP5/YH/5gj/BT5XRvic8/sF35efrwT7h/hEND+cX+AaxbJh7ThH
Dd8bbXFNgTjH5RsDP4j8P+IP0fdPvIY43UuG49Tev+F8ITWcL2Tu6OB8IYz/
iT9F+Dvfp+H8JbQ/jE8i/J/v24BvpwZ8O8a34D9E3z/w3xThv8D/G+1rhP8D
f84R/sz3b7B/RWT/WvdLff0pj+IzyiP/n/Jof3NdGuxPiuwP5Y34bRA/Uh7F
J/x+Iv1HfRbpN/59w/lm6F8TH4n0M/VCpB/Whf8e+Zdcl2j9id9E+o34ehRf
Ep+P4hc8Fvp1dcxv5b8SX4niY8ZdUfyFvrb8/kr9/lrfl3FPtT5N8ivBN8I+
+vy5vPLcXi87vdj8i33mThiwcuJPytnPRnmyKD8F8gn4/QSRfxV9Lz671up4
+ZPyKegH6n2OpD5K5SNFznrD1j54/8TP0CB3vgbhcYjky9ZplbOe2euEpD/R
dJGPFPkg9CtprdOszseb5OyLwv5L5LuK5LuKnPUCWkdA+bYinyJyrH/6GXjQ
+JNy8ObkE5Efx5/LKz+sva/Cinnbu786955bnykG4SflKwPvXAs4Fn8ur/zq
g18+48mrXi3uOP+rZ36hW/fEn5TzPELPKZZXvvh3N787ZsePSztXfq/gT8rX
RDwu5+B5eeW0d4qDRfIbRU5cTXHU5ZX3gD+jfs7yyoEblWLH/f4LRX6jyOmX
M/6Zhp+R/FaR016pHaP8Wch74fe9RL54/vUL1x3ZO1l+S3//STlw+6x2IpIv
FPlaJ7ww7ox9OuXnO42/8MCNXy74k/LWvgkrYV/wX1Vfqzz0lLP/wjH4bo1n
qsrvo97KMx7erN/vN0CfxYq/h/flc7T++2f7LVh0Y48ueTOzK/le2BvKvX8f
+jLNkv70tDfUP1o/vm1r/6g8XfpL7PPaqqfN+l2P/Mzus8/6ZtePygc22Wbn
D75WxWfTLn1j8WsTe7p9GCT9ozhuvsf9Nn6Xfwp7tgt4co1/q6of5HM5Djy/
sr+YV87zFOmPzffmPCg/GOdfeRYp57pugXW+xdbXr/+K6dOyXx7/mz026Z2h
b10+SOZX+3fwOujlkvra17dh/wk/gfPYUs55XYp5tj78df5griPWz8d3JuL5
X+yX9tty0z4Z5wv+/M7jPjij94JN89fbcfG+qefNey1atH3lv9D//qzLpfet
O6W/40SU8758jp5ffPzevu9v88eu+bJfXfVst/O65AdOvfjFIc9V/OvU59s/
c+J5K/VbOXdGnEC54fV983Ht+P384vpd9n197G1Vfu8OuI736SHx5YLH568z
KfXMU644fPMdx32+7588//JPcuU//3DYDgecdV4Ptw+KX3DcfI+7bPw+vl/Y
uMoDpp27yU2918xvb371/PvOrvJD+VyOA8/365diXmkX1hR8mu/NecD7+/2H
DMpHTpu6bhYcwq/nunKdsb5+/eJTx/7XGUc9Vnw27xczL7x97bzVhCMHTJ5T
+b+jv73kyff7fubnhnsKfvYprluC+2xh1/vzOa7tMM49gZNQzvvyObi/zz/n
FfNQYn71/uWPsI48h6G8Y7vAf5W8tW67Lm/1a+vyn7f4fdX5zb94/xzJhac8
un94fdP9heeofr300f5Xxyc8JP/u+MPxLef4i0jetH7SJ60m1zrif/P5/7f3
b1qfcP41z1blmodH+RzIN2jNk/537x++n+G+nicX3T+8vun+cs5dk+s5zr86
Psib5qdp/OH4lnP8tf3XtH4iD99Pcax/8/n/t/dvWp/a+wl+kRW/EHwnKb4j
+EJWfEHwm6T4juBTpeJTgr+Uir8IPpUUnxL8JSv+IvhDofiD4C+l4i+CT5SK
Twj+VSr+1fT+On+Kfwl+kxW/EfyrUPxL8Jus+I3gg1nxwab5aZpf3T+KXzWN
X/CprPiU7h/F9wSfyIpPCL6TFN8RfCErviD4TVL8RvCpUvEpwV9KxV+axtf0
foI/FIpPCP5SKv4i+ESp+ITgX6XiX03v3zR/gt9kxW8E/yoU/xL8Jit+I/hg
VnxQ8KtS8SudX8V3dP8ofqXjV3xP8Kms+FTT/mk6H2jy39H3oiTP7qXW/8Kf
Pwr9nGa28BBX9yeeQR5h7R/VpL/Zr5P3mSX5W+xHSr3BPqWt7/ch+3LX+AcT
9Mt64DG+RPWr8RK736/9qcg30mr/qv6t9jPf8xHsA/lKfX7AN9SK71T5HY/i
3Hhrw3fSo3J+Ntx4T4uZ+D34T6vxi15U/ob56Hf6P9YHNd2GPqiUc1yvBfhO
Rj9W9GnN7NNKOfu5oE9nof2X2O80g6f3DfRBpZx9m8iTfKv0j2E/F9bda/+l
NusbUP4f8PSyD2vr/d8tnccYfVIpH41+oJ6nhD6hPj/o57kpeabR59P3F/qN
8rtG/wS/Hn0XSvQRTewj6vsD/WTJU8w+s5Sz3yr1J/o/+PXPol+r6xf0caX8
efSzfQ88x/8HfW59/tjPCXXr2n/tVfQrnQ6ebPS/qM630O8V65bZB5Zy9ocg
T7T2XzsI/VafBc82+7BSPhD1+eeCR1r7R6FvQ3Eyfi40f8Wv38r6zjk/wCTh
H5/SwhfA77/Cf9E3q+TfGZ5Z7d8m/5p6jfpP9SP6gmf0CU/L3mjvD+77m3qN
/VkVP77DvufyIXzf8+x79/FdBL8KP9NA+LOUi/4vVP834ReGl3fK1HvbG79q
TT8SR1b9aPPXJ83Acwzfrvq/WP+ld7wPE/ovufxR4431/N5k/LEun8Nze+jF
WWIf1jTeRzz/wxL8j349+sJn9olHf3hfX+jD/Ar6WD9g+tLnd6TVxZeD0Efp
MKuPr/xDq3sv2adnttW/V/vL6uaLC9BnabrVz/v47rK6/nwh+hz9wer7fXx3
Wt1+mgK9ubPV7/v1G1vdf/kG+iCh/r+aH+t7kB9DH6Itrf+B3x99B9yvO9z6
D/j9V7K+B5l9sND/wOcHfQ2S+6fW38CvR1+Ecn/0yUJ/BB+f9Y3oknujD9I1
1n+h2n/D2/tOlL9GnyMbf3U+gr4P7p8Otf4Pfv0d1neiZJ8t9J+o5NZXwvXv
09ZfQsbfPe2APlxXWX+K1Dr+D4re6LOE/hcuf9b6cpTfQx+tfaw/h8vXsL4b
3l97vPXf8PEdZX070j7os4X+HX79VOsrktnnaqL1F/H1Rd+QxD5h6B/i16Pv
SN4WfbB+bf1H/PmHo1/h8+Cphz9ZnQ+3ft+lft/2k/wtq0ue1uJiMvTpoeCh
PxXxsF8Pvgjq32vIIwE5+V+pl9V/DPpj+/XMa6deJk8E5Rw3eGJq53/i3yX1
754HHx795ovAk0f5I7juOzhnY70I5eCVFD9vVRl/DT9uax0/16utzf6u8p9f
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
4FGhfOlci9e+hvPT2fAnfP7AR8PfF4cZT42vP/wD8ODU8GnywdC/IE8M5fRP
eJ+LxD8h3wz9C5w3+vWrgc8FPC+JPC+Un4J4hed//DvKybcCHpaCPCyUkw8H
PDkleXIoJx8Mz3/JE+PrD76dB3G+ui14eChfB3zcxF8GgqebcsE3SsU3JL+0
1PzSAeALb9Uv1fz0Bd84779siPGQtz7f8wdKzR8YKPUDxGF8fNAPlKt+sOd9
rv8hfxXnaJSLfipVPzXVj2E+fH4xX1V+B/iw/XrwZFO+C/jCD4W8L3jEKZ8J
vu1D+H7g4aYcvNrV+Ixf298fvNms8y/Jg055P/CJ8/qZ4BmnHLzhLl8AHnTK
yadN+WzwbPv8gI+b8kPI0005+NYpv4g87JCTz51y8rxTPgt84X4+DR5xvz/4
xvn+r5GHHHLwrhecf/Cvuxy88NX62Xj9+eQL5/qTR9z3F/jWeX/wx/v9wWvv
8wN++8o+g++c4/8xeNApx3z4+DYCz7zv34b+NeK/JvVfRwE/mI38fMUPZP8X
uv/5pbTmP/0TPoTv9YvIn99Ozu/+E+de+FlcBZ4/yun/sz5A/X+xz1ntM/k4
WZ9wL3g6W+9PPPDzf5bP7/JnwHcHHrx0P3jwKL8dfH7Mb54Pnj/KjwGfHvO/
kQ/u84N85cz85QPBQ0j5reAT/BNw1YHgGaScfHq078hHdzmvOxL58bOFP4x8
fbTv3wCPn38f8Ac6IT9f8Vn3N/B7xd/+G3gh868HCr/dIvARtuKflf9Nvj/i
jrPBA0j5TeA7pH1HPrvLz4M/8EvYccWviU8ORH654pPk+7sP9Qc/BA8g5eRj
BE9jfgU8jZSfAj5C8BSW884ynkL/fsD3OAX5+wPJAwm51M+U6j/L+U3S8xs5
nyn0fIbbnnZVv185PykV/5PziULPJ+T8JOv5iZwv1epX5Pwk6/lJUN/dRrng
71nxdzmfSHo+Ifh4VnxczieSnk/I+Uqp5ytyflDq+YGcryQ9X5Hzg6znB4Kv
1/Ir5Pyg1PMDwddr37ec35SqH+T8qdTzJzm/SXp+I+cPWc8f5Pym0PMbOX/I
+n3L+VZW/SDnL6Wev8j5RKHnE3L+kvX8Rc6nkp5PyflK1vMVOZ8qFH9s6j8n
54al1n9J/Vyh9XNS/5U0v9l+en1brX5D6sOS1odJfVvt/Fnq/7LW/0n9Wtb6
Nan/y5q/LfVVpdZXSf1YofVjUj+VtH5K6ttKrW+T+rWs9WtS35W1vkvqp7LW
T0n9V6n1X1I/lbV+SurjstbHSX1fqfV9Uj+XtH5O6stKrS+T+rlC6+ekvixp
fZnUDyatH5T6sqT1ZVLfl7W+T+rfsta/SX1f1vo+wceT4uOCfyfFv6V+IdXq
F1rx/aT4vv10fLyWPyz4f1L8X84vkp5fCL5f6++mdb96viH4cVL8WPDxpPi4
4MNJ8WHBx5Pi44LvJ8X3Bf9Oin8Lvp8U3xf8OCl+LPhwUnxY8P+k+L+cXyQ9
vxB8PCk+Lvh3UvxbzjeSnm8Ivp8U3xd8PCk+Lvh/Uvxfzi+Snl8Ivp8U35fz
jaTnG4JfFYpfSX1LrX7d+oGwnzvx6Uo/Il+05O8vaamnWVz8Fr+fATup9aeC
ryfFz5r6Z0j8njR+X9n8jfJ95MfMQh6I7z/zVzJ//1vzZ3z88HfSd5Gf84j5
Q3795uYvZeavwP/y599k/hb9svJc88f8+p74/SbInznL/LmafXwJ+SlqH48z
f7Roxc+r9aN93hH5UReJfTb79D9lK35ejQ/+cHk48rMMJ6/W92LY1a8h/8bw
80sq/A328SPkv6h9RDwg+Pkrfv9OsKvjkH91kdjnpy0eKFvx80q/IB5JxyP/
C/GKP/88izeK7yK/B/GIy6+zeKds29vyp5iHRjniJc9Pe9fiKY2fiiuQH/aR
xWN+f9Yt7Ij8pm2Rh0b5oxbvMc8kIx706/n7w5G/tVP7/E/w+Rf8uVD8eZTq
BfGPBV8vFF9v6p8m+Huh+Htj/5xWfL1Q/SDnC4WeLwh+Wyh+K/h0ofi04LOF
4rOCTxeKTwu+Xii+Lvhzofiz4OuF4uuC3xaK3wo+Wyg+K/h7ofi7nB8Uen4g
+HSh+LTgz4Xiz3K+UOj5guDrheLrgk8Xik8L/l4o/i7nB4WeHwi+Xii+LucL
hZ4vNPU3F/uY1D6yXwt/b31y1xQ5/76tzfLcqvhAzp+Tnj+zr8N4/P5kqS/j
3z+F+jj1fw3/7JZZv7Qq7K2Pz/KJ0ieo3znG8o38/qvh7yejfmq22OcNLJ8p
r4f6ou+jTody5EOl3fD76ZYv5dezrof1Tci3crnh1wPyvqgfwvmpvx/yxbz+
H/lkfj3t4xLUr80R+7ij5Yt5/f8XLJ/Mrwf+W3ZF/ZzWz7I+82nUR2l95gWw
X19HfZLaL+Tref0C8vlcbvlc/fJWqI+bg3pjyqdavp7XL9xr+Xx+PeuLd0V9
ntYX095PRv2V1q9uYvmIBevbvos6QcqRz5hYP4h8R5fz971Qv3ee5UtW62P5
lPlj1J/9EvaWcuRjplPw+76Wr+nX8+9XRn3dYLHPUp9eqz+V+u6k9d1Bf9E2
yqV+v4b/SP15rtWft9bvZ63fl/rorPXRUv9daP231D8XWv8s9eml1qdL/XnW
+nOpz85any31z1nrn6V+u9T6bal/zvp9SX171u9T6vOz1udL/XvS+nepD89a
Hy7174XWv0t9eO37kvr/2vcp9eFJ68OlPj9rfb7Ur2etX5f6/Kz1+U38HU39
dSX+LDX+lPPjsnZ+3Bqf1PpDSfxWaPwm8UNN/0r8VsM3Jf7MGn9KfJU1vpL4
M2v8KfFV1vhK4o+s8YfEV6XGVxJ/ZI0/JL4tNb6V+LzQ+Fzi26TxrcRnpcZn
Et8WGt9KfJY0PpP4P2n8L/FpqfGpxG9J4zeJT5PGpxK/Z43fJf4sNf6U+L3U
+F38v6T+n+QfFpp/2NrvwfGhKL+h0PyG/lYP6P2Pxlq9YHW+Z/WEjhusZvWG
Ln/Z6hEL9l9CvaKP/0qrZ8xfR38iu38VP6EeMtMOoF7S5ain9P5IqLes8C2r
18zfRf+hn1o9p1+PetGqfsLqSV3+kNVz5t+i/9U4q/es8COrF/X8h4etntSv
P9TqVcuvsP+W1bP6+Pa1etS8D/orPWH1qi6/1OplS/Y3Qj2tzx/qdT3/AfW8
Lv+F1dOWC9FfC/W2FT5j9bp+/nmr1fO6/FqrF07s73W31RP7/VEPnCahf9Mf
rV7Y5TdZPXLJ/lioV3b5dKtnLi/Gd3mF1Tv787eyeuj0OPp/rWX10n496qlz
H/SvQr21r88wq8fOF+K7vNvqtXPr/VfMk9Gf6/1h7fXe/nzJP86aPyHxX9b4
z36y78qGtfwIiQ9q+JbET6XGT+K/1/rPSPyUNX6S+K/Q+E/im5r/JfFf1vhP
4pus8Y34/1n9f4lvSo1vxP/P6v9LfJk1vpT4OGt8LPFl0vhS4qOs8ZHEl4XG
lxIflRofSfydNf6W+DBrfCjxU9L4SeLDWv8piZ+zxs8S/2WN/yR+rvnnTfxt
kt9dq/+S/Pak+e2Sf501/1ry32v9RyT/Pmv+veSnZ81Pl/zzrPnnkt9daH63
5J+Xmn8u+d1Z87ulviBrfYHk9yfN75f8/ULz96X+IGv9geTXZ82vl/z1QvPX
Jb8+a3691B8krT+Q/PpS8+ul/iBr/YHkl5aaXyr2Oat9Fv8lqf8i9jOr/RT/
pVD/RfyvrP6X+Bel+hfifxXqf4l/kdW/EPtbqv0V/6JU/0Lsb6n2V/y7rP6d
+KdZ/VPx75L6d+KfZPVPxL8r1L8T/ySrfyL+b1b/V/yzrP6Z+C+F+i/in2X1
z8R/LdV/Ff+rVP9L/NdS/VfJz82anyv5yUnzkyV/tpZfJ/nLSfOXJX86a/60
5BfX6vslfzhr/rDk5ybNz5X84VLzhyU/t9T8XMkPz5ofLvnZSfOzJf+60Pxr
yR/Pmj8u+dFZ86Ml/7jQ/GPJj67lP0r+eNL8ccmPLjU/WvLHa/mhTfysTfxJ
dxjvcwke6BL8zz5+8ln3Nx7qNAk815SDVzt9a/ii/S8/4zvynGb+DPKl8z6H
gkedcvCW+/4iTzzl7OsyyHjaa/1jBx+61qpf/tVnxZd+u2W/ET/aKvPvKL+h
nU+D53Ft44z/o8LXZly2+7j3u1f93x996oZdvrVtpV/tZ77nU/A3aX7XgjFX
bDe455uO71xz9w03Xjbkn/rDg6/+I+OxJz7v++OYdt66Jwv+fvt2Pr7Kfycv
RQYvBfkwKN8ffPPgoU9vgoee8u+Aj+/Ad+fOPPDFDfPLxqfn1/cfdvguTw1/
uDx25swRY07vnMdfc0fPHbtX6ye8J8Vw4+uo1t94zzN40NOexn/u79fXeMO5
L8eBP9yvB295CR7ztJnxl/v4m/hbuK+4/3R/7nPSqBlvPdQ9L+nf65O3L+ma
Nl3pqsk7XlT53+TF4v7j/ShfZPPp8/s9m28fn/KqPG98Iy6X76/Q76+Jv+v8
SS8OmHrwP8ovPfvNftP+0pZW+nv/Sya/+EFtf3L/6f687Z017j2jc7c07MbT
b91p/ZnFAxf+5dfn7lHFp48b7zvm4a3iBeN/r/bf+g+OWTrspXL0iAN+v+ex
nxR/HTRp5QMnd3I5v0/uS+0/9+G9T2z5l4e7pQUH/fTE5wY8VLxy4mYzBv6p
ev4Gf9/jkIVTeuXxL/xgySmfdksLt9j1wdGbL/X1Odv2Y8b+TP1sv/r9oa/K
T18Y/VHXcpu0qumzIni/Ut+P+7Iv9sEcnb+F+aYLug9Iac2JHz681d55myfO
Oenalwa6/PQHVjxt6pBPvL/ww5PS+WPXq/QP86en4T5aH6K8NXsI/+VI05e+
L39p+tTlfTDurbvMvPPl13fKun9FvyTVL0Nu3u/uXtu/URyA/ffF1/fqPW/r
1Vz+OK479sqf/td5B22XXzR9Vt1/h6n5lQ0/17N4j27PP/XQGrdU+iXgj2uj
vEf7d1Pl7fyknV/on/gtwBv7pS/++eg1+vVO/YWfdhP7ngt+3/va9+7yJv6p
N2y/Fdh/eUPbjy5v4i/v3/5e7OdC/dbN5Vs8fdDfbt9yHY+Pzx69096P3VX1
n7Gf+Z7+mB/9fj+Zm763Vvd+Hl9sdlqnXSaNWc2v5/osgX15QdbH9l0P1BX1
T2YfK/9Y7HtS/dnEL5W7rd/20Le6+75DfYHff/gh/Z8a32Vt99/unXDfzscf
UeUn8fvYEt+Vfh/y/SX9/u4zfZb3hH77k+k7vz/X/RasO/meKIc+ytBPJfSV
y18C/+wBZj/THsI/K/o/q/4X+5jVPjbxT4p+zKofuX+4P3T/iP7Mqj/F/ma1
v038Y2J/a/tH7Eep9kPsb6H6S+xHqfZDednUPxH7mdV+in0s1T6K/5DVfxD7
V+u/Kv5DVv9Bvs+s3+eVj3fa6NQjOvv+GP6f89Z55abH/Pq/4rqfQj/PFv9y
5wX39yk27ZTJ67bp3u8MPunVKj4L+El9/9n6/FP/yfa/q+IX8b+T+t8LO5/W
fc7U98rvY39MPXpsPvK8Kj9vJubva7iP+vfKq7ewQ/7mBb5voI9q+2uA2cek
+wv7odwM/hX2S4W/gK98Y7M/+ddmj3x9nrf9nI/C/n7I9nsV3zXwy4l+zapf
RX9l1V+iX0vVr6K/suqvgF92HOViv5LaL7FPhdon8c+y+mdiP7LaD9HPhepn
sR9h/z3Y11r8JvajVPsh9jWrfZ1u/p6vG/xBH7+u60rCXy/fR9bvQ+LTrPHp
t0wfuBz6wsc33tYr0T/d0tbT5eL/ZfX//mjjqernbLwV/oJ9QznXkXJ+97x/
b9vvfv917Xl+/ddtPDX7RrmuH+bD5+9hmy8fn/BDlspvKd930u9bxpd0fAG/
8jjKu5o/7N/Hz81f9uuJvzB+mdwx/pK3gX/fynPczE+6Fb6LoYhfbjV/yq83
Pk/ivW3jzI+p8t+ft3gpM356wuIplw+1eML7Uo61eMPlwHPc/gDvifR7qfpd
8JVS8ZUvmT2r+AHN3vn+2Nz0USJ/C/SVyyV+KTV+aeIv5fpQruvzZ9PHiff/
hulrv7/sj1L3RxN/9dU2Hz5/r9p8RfanUPsj30/S74f6m/hgN9Hf8vxCn8+R
0i/U/ICvmL+QtwB+N9T8AH9/+p1rw+9cxfzRmv4hPqn6R/Zn1v0JPCYTH73Z
8Bq/P/DCzPcwft6qPkHw06z4qfhvSf038c8K9c/4XO4rnT/xn0r1n8Q/KdQ/
Ef8pq/8k/mVS/1L8p6z+U8Cv7vtX8OOk+LHgn6Xin4IfF4ofC/6ZFP+0n47v
1uJvwUeT4qOC72bFdwX/zop/C36bFb8V/LuWfy32Oal9Fvub1P4KfpUUvxL/
Iql/wfmjXOdP/I+k/of4T0n9J/Evkn7feu6g/pXo76Kmv1vxpaz4Utvw9njH
zw8QD/n1X7Z42fHroyyedvkAi+cK+I2wv/+Eb+F9GJ+o/XhJ+KuVv1v0Z1L9
KfanUPuj86L4o9jXQu2r2CfXV5SL/S3U/jbxj4t9LXR+xL8o1L8Q/C8p/ifr
k3R9gNekk3G+0dPwHJcD70t8Y8M5K/xA/K+k/peea5xleKPc3+1bbf8LPpsU
nxV8Mym+Kfhs1vUT/LoWXwn+mhV/Ffw6K34t+zvp/hb/ujY++f6yfn/iv/w/
rJ154FZV1e9/mII5i0IgDjjlrAhIDtjZJlbXypuaQ5bWWwk4vGpqOePPBl8V
RMshATXNLC1NE1JL7GzTzIHJGacUUTJQwzknuN7f/n7X6Xz3s9q8772/fx54
1rPPc5599l57rbX3Wp+o9ov0f9D+F/u3Uvv3+LSfxfuCfmjOp4l9Ual9IfZ/
VPtfxl/U8cfvPR7jRPcvxD+o1T8Q+6pW+8rqR+Gv/X/ypYbHaT117LcXzuVi
y2tlXq9x0CG3uhGoyxHvu3eLdX7a5Cccd9CCl29YY4V4RU8dnHuqLdcb8MyE
Ic35oAVtrrrkATf1MVDnpyZHhPJhba5IU8cbcp5rZf6S5odMvWLh4r+du2Yc
JnU6KT/gbyv/YMbla8Q7N91+9zd3erN+dO+ZZ3+mT6PfPkDdn1S3q2/4PDgy
lG+B33tX+v31t9EflLO/lBNI+WP4Pny/3c+y9h/zYshtOVfyN4fd9olnpk97
rB7Tk1f2kbBOHH/JPpv+S316jIfEtdoe+aPDTc7Po30ciust6/MZUxhf7E/0
b1xy7b/WQWvGB+s+D5PxoXVh+bwpX6H7zTP7Ldgs9v3tfi+/vOtGMfkbTX7v
+bAvNoBd8d2DwkHbbNbU/6fd0h922ZIVrrhj3cmDTf7O6we+sf1v+sT4vSlP
7/h4rK/8/tVzV7qgef68Hq4fz8X3Uc64D+zs6pOPnXpB73Wa+cP/6zkOyvF7
4q8+f+CLJ9+8cvxOj//0vF3/G6M+ecjZF6wR1U+28fXg84Mmhg/76+ELf/Ze
fLuefNVhW+7W3ZyfS/7Y8/XLW/7i+TvO6RUOnvrjTW/st7Z9P3/vben3W3/Y
/EF/6T4V5fZ96furv/F+IN9xWDxq6vXrRrVDKD8Rv/fX6fcH9gflb37v5P99
5tEPVNtMOGrIebNWDB/M/+79F9/SnL/jeMD4CBwvlL+Pz2+d2sd3cD3Kv/25
dx9+Y+CSGnHb6jnEcynn/X4JdtvO+D2UH4L+/Efq34jf08RXcb19ERfm98n1
azxfe96U6/rQ/mvyv5nHnfH5pP6azm/NX/88ODSUCx+wIifQnj/0IuvDq350
6sPWy3p/3fh95zq/T9aFrL6Ecz7cnj/rSlJv4dXaU28OT3rT9LH+/jHO7y/1
n1M/3+5vR8mf1PoYsb1uB12/wfcN38Y68e1WHnK5f1hfaKzTv079A7s+8z8n
O/df+v06fpYOao8fnh+4sn1+wPrfiX/Y96v/MhX7QJSvgv3ZtdvnA+37nf2l
INfX+GC9rPfnnI+w6zv+t12f9umitn1q/bv48t++dsJu79Qp7vZ6hdfGfj3l
qe4zD1guPrnc+Iu/tsm8Cq/L/PtXQv/1Q//1k/7T/QNdH+i/rNn2X6x/fvHN
eWc+fPUL1a0XfuKstVZaJeDV5Iuf//WidUf3CykOP5ivJt8d/fOS0z+l/nX8
X7v+i7j/NZz75++/wfn9pfGj60Omf9vybtWfKlf/wrl+9OSF63e1OYz/4+u7
8kw/iXyKk38u9+f5Z93LeP/e9buX8f5d/7Bw/93Hi37X9sXnu2zfX7p+6feV
no/XvrvwfLpU/2h7PT8zS+Ttc3Tu9d3fp9dX+ZLWOZD/8fVdueonlbf3Ud37
8+Tdy3j/bvtlvH93/un9O88vOvKu0vNdxu8vXb/0+0rPx2vfrc/HsS/t/k+B
PQc7L4wT+w5c8KzOFOXkm5NrrvWrLgPP6HPgik+W+pES18js+5L/ovER1R/k
d6NOTo06Odae3PatYedrfIn8bnK7wfE2ufa/6veY6h3UqIMQrkQdBMrZk9xX
VP1KfnkAt1z3d1JdhldZpyG8jDoNlHeDbz4NXPMZrftt9rd4bk7ra0fw21FH
PztfTj77e+CyK7+T/Hpy68Gxt+uTT38XuPTg1Jv8QvDJ54BLrvWZDwe/G3lk
1XDUQaB8HPjZ5GZfgjoLlJOvTq661q8m35xcc9YpoJx88VPAFf876iDY8wE/
nNxw1d/ksyPPL7IOAeXGDwc3XPUD+dzkcrMOBuV7g9++CNz2tVEngXLyucnl
/grqcFC+K/jtAdx21d//TPmUNfIsw/moc0D5NeC3zwW3XfUn+eXklrPOBuXk
25NrvxbqMLTvf5VAbvmuqPNB+Wrgk08Al1zr+zwMfjvyWMOBqJNB+VHgs5PL
vj/qfFC+Gfjqq4KrrvV9jG8Prj049/b95NdfDG79MNThsPnXWX9460Nmv49B
fYnRqCsxGxwdykvxFdXP5NxQzvr7rLuv+pf171n3XvnjO4r/vy44PO3f95Zx
PVQ/DwcfdDS4oKp/wcupWUejq/XX8MXIFVP9m17jdOrd9yX+k/TybHJ+Mv06
G+cRUCcuYr/G7g/rSn0L6v7r+qLcgw8GtflJpfj7PeAXnAluAfSryVnfn3X9
Ueffrs/6+NS7fcjZgZx1x25F/uzR4PhQ/mzK56zHgTtwJjgzlLO+EfVut+Tn
Il+0Zt1+5WuwPj/r8qt+Zf191t1X/Tka9fGPQF18cpAoR75sjTzaipwlysk3
INdA9SP5DOQyXAmODuXGNwDXQPXjX8FnOBNchtfA8aEc+cj1zajbfy84TzZ+
UN/M9J7ktyLfuSJ3YJrwW8gXIFfgcXCgKGd9M+o9cBzs+4ehLgPrmF0AzhLl
jv3SxFdRv2006rY9AU6n/b701819V9UPvcAXIFdgrOi386DXvo846GhwOu37
Mb967dTm+FFOewfnwKqSfUqOqI1vnLdmXUbVj/eDTwwOqtWxt/HdWf+E9v0/
T85gpt/AKwnQU2Ef2f8Ej5ScUlyXf+X4AetTsi6l2t8zZf0ZLvznUvyY9TXH
oK4m7EuTox4H63QEcjApfwB1VVaBnkMdR/t+6j3qucngkFLO+pisi3kkOJl2
/6hvuQbqWmp9GOq9x1G3ZrjUN2D9SNaNPFj0G+qlWF1I1W+s33gN6jaS40r5
iajPyLqMqNPYfD/qb6LOjJ0jo3y/Ral+KOrEhD+DA0o562/ejrqbqt9Qj8bq
hn4aHFLKz0J9SdaVJKfWxtfoVD/zDNTNnCX1Vaj3WLdqltQHOBr1L+9A3Uty
bCn/DurCsP7A5eCsUs76VTtCz6GOqMkd/9Wu7/ifJnf8S5M7/rfJ0U79y5J/
Zu0d/93aO/6btXf8e+uf0v6X49/b+HH8U2vvxDea/YnO/mvJ/7bf5/jX9vsc
/9raO/EJkzvxB5M7/qvdv+OfNfsrnf0rkzv+d9N/nf1Xuz/H/zS541+a3PG/
Te74l3Z/jv9l7R3/vXm+nf0zkzv+vT1/Jz5h9+f49/b8HP/U2jvxDZM7/qtd
3/Ff7f4d/9x+v+N/2/Ud/9vaO/ELuX4WnzB5suvIZxoYVT8me2R90Yv84/7y
4Jj8135R9WN6bfy/48S+4XUnQS/ifL7JH0K7B/D+EPH/SucjHP/b5KXzY8mu
XIN5sbXal479a/L7xf/ulvqwU5Pei9CDUfXju0mvRujZLD+X9hz1ovIRYHdH
8ov/JvwS1AOMqBMY95P6iKwPdxH0IuvsU456g8Z9ZB1/ytdJ9Qwj6hzGbqkf
Sa499eJeqINP+X2wR+5LdRTDVqizTznqPUbUgczyT3+U6jXyd8W1UOee8mT3
DY7Jv+0Xs/0D8hrBXTwXnAXKed0NU53J+keow0856kNWc1Idy7ALOA+Uo94m
uH4rZ/v7rHuMfgu9UUef8lR/cFBM/u/q+fmvVE8zHoj6pOQ4UE7eaarjNTi8
jzr/lKM+Z71JqiMaNgBHgvLjUz3SiDql7CfrP9rj1IsPg8NA+bGw529KdVDD
fuBIUI56qvG5VGc17if1S1kfknpxIjgJlB8HPuol4KLuDM6DzQ/wde8HV7fz
+dlMP5mc/N3twN0dK/pP41df7OgfLqmXJk6Y2Zs2/gr7+w/h3Cc4gpl96MQH
TT5Gzocq30zjh7we5ZeKffkmOGSUU1+RC6z6cxj4v2PA/dXz3+QP3wPu8Cyx
TxmPeMA5H106H7cY/N5NwO0dJfXPZ4p+A+fW5Kz7dxfqqlXghFH+IvjDc8Ed
Hib1b2eB/8s6bKeAs0U566sx7rQ3OF6Uk697NLi6qv9Qjz3id9U/A0eLcvJ1
PwOubqb/wK8ltxYcW2tPvjG5xjFxjpv+I78W9Ys/AEeO8tPBN74eXGPVf8k/
nWB6cAw4XZTfCb4x6uxn8T/Uy69RR7/aGJw4G3+4LuoUB3LEKF8d7cAJCI+B
U0f5JPB7DwO3V+v/bpV4A+QQhB3BeaOc9RVZV/E5cOoovwD84SvAHV5T+ATk
P0+BfvsCOGyUUy8uQV3Fd8GRs/HV2X6y9oj7RcQBM/14P+bdDm39Y3L+fy4+
l+2PdN5/MPkc8Euhp7PrO/E9k48FvxR2bibX/Ai9fun8Pvmsk5D/oddPr439
q+1x37j+XVn/pOu9U49I/ZTnD4BPehC4pCon/5PcT5UPBb/zZnA79f6nga+6
I7iq2p58U3JNVU4+6fngkqp8Kvirk8BdVTl4onE4uJ4q/xb4qyPBXc3GF/ie
R4DrqfKTwJfdEFxZlX+d/FJwS1X+FPiy4Lhm/fdL8EvPB7dU5XhuEc8x+/3D
wWcdDS5rNn7AZ0U/ZtcfAb4qnmN2/6PAn30a3FmVkz87DtxZlTv+k+kXxz+x
9o5/0vRfZ/80UF46/+f4p83+X+f9EWvv+F+yP5v5h9be8f+a8d/Z/7Pfl14z
/9naO/6xyR3/y67v+BfW3vEPTO74jyZ3/C/rP8d/svaOf2Ryx380ueMf2fc7
/oO1d/xPkzv+hckd/9T63/Gvrb3jnzbnvzr7V9be8c9N7vhfJnf8L+s/x7+0
9o7/aHLHf8zsR/G/rb3jX5vcyX9o9kc7+z8mJx8V5zQyuXP+weRt/uvymdzZ
X5Tv7xegxzK55HVm+reUX8JzD9Dj2fXb5y9vnK5y3Df4ns9n/Yt+ieinrP/A
Aw3ghGbfT34quanZ/jH4p+SeHiryr4NPeyi4tNqefFhyYVVOvus94LqqnPxa
cmtVTj4quagqX7pT4tdOAbc26z/wUb8OLqrKyecllzfrH/BfyX1VOXi3xuXV
/iP/9UVwX1VOviu5rtnvB9+WXNus/8G3RT9m1wdPOIIznPUf+b3k9qqc/F70
U/b9Tvwg2P13ts9N7ox/iZ9w/uT5BXq+TM9nlPLHOP95rl/PRyAuHRGnjofK
+QzyyRaBS7ZIzo/g3AKuz7p7/OP+7IoxxYVm1xq/IZ/lHHBZdP/5EPBPsI+e
7Z9fB37JL8Et+bzsv5MvAw5jrfvP5KeQm6L2g67/M2R/m3wVclXUflD740I5
30D+TBe4M8ov6Y24Ds5RhF3k/AT5NOTSZOejZP2/WfbPyachl0btB9of4HRW
en6C58m+CztB9+/BG63JfdHzGeS7kOvyhpwfIV+GXJkj5PwH+Tvk7uwh5xvA
W417Jg5rrecnnPiffb8T/7X2zvlPWb+z+K+cf+zqov1+qZxPcOKbpfirnp/S
+Kpd34mvmtyJT4f29/PzXVn+lhPftPZO/K65v87xN5M78Vn7/U58077fiU+W
4o/2/U581q7vxB9L8Tlr78R3rb0TvyvFf5vn1zl+bdd34r92fSd+af3jxL9N
7sQ3Te7EN0vxW7t/Jz5r13fisyZ34ttN/3WOXzfxA8TnhrXjc83472z/ZvEH
cnX1fHkX/qg/9Hykcq/2lPwk6puR0Bvry/lwjX/q+XTyR8kd/Zmcn3fWf7n+
h/2dzpFn+1vkA5ELdI+cvyV/5w5wd/T88DHg55Cbo+ePyTfCOdx6rpy/Jb+H
3J6sfjH4RsPANZoq53tHge/zWXB9dP5Tb5Crc5Sc7+b8Nu6RnC+mfuiF95eX
8+PkI5GLpPOf8xbniMOFcn74BvCRHgMXKcvPA3+I3CE9P67ze6icX6Z++BP0
wxlyPp18IXKF/iTn58k3WgCu0X/J+Xfyn+aB+/SqnO8m32kYuE5T5Py4k79h
9+fE/03ehfPR17TPR5vc2R9o2vf8ZfsDoX1/2f6HyZ39DZM7+xsmd/Z3TO7s
35jc2R8wuRNfN7kTP2++v/P+hsmd/QOTO/sDJnf2L0zuxMdN7uxvmNyJn5vc
2Z8xuRP/N7mzf2NyZ3/A5M7+gMmd/Y9m/HTe3zC5s7/RjJ/O+zvN7++8f2Ny
J3+qWT875/9o/E/zf+z6Tv6PydNrlt9k3+/kL0XKnfwlkzv5XyZ38rtM7uQP
NfGDzvk11j9O/kwzPjrnP1l7J7/H7s/JXzK5k99j13fyZ5r+6Zz/ZHInv8bk
Tn6U/X4nv8vuz8mfasZn5/yiJv7aOT/Mvt/JP2qeT+f8I5M7+U/2+538LpM7
+V0md+LPjf3bOT+o6Z/O8WmTO/Fpkzvxd5M78fUsvibxdb0/t76Ss39gcic+
bXInvmtyJ35rcie+bnInfm1yJz5tcid+bnInPmtyJ75ucid+a3Jnf6CxnzvH
n03u7B80v69zfNrkTny6uX7n+HszfjrH15v+6Rxfb35f5/2F5vqd9w8a+75z
/pjN31R/cknNPLYpUn8i1XN7uW6/zz/6n0uqiahroecnS/XXnPh2aF8/829N
Pjr5/fHyFAdAvHY5k6+I86p8/005n4a4QEhxoLXDPnL+7cYUt6h/nOIYYQ05
n7VViktEntt6RM6P8fNnpThH9XE5n3ZiiutUKX790Sw+pevfs3J+LK0/f64R
58nyO3T93U3OL3K9vLonjndpPULOr5E/jzhTNVbOR6b1vxfi189l/qmuf2/J
+TTE1cBVfy3zT5fDegmueNUt5yMT/3gB9+nDF+V8HPz5kOJAm4ST5PzlRinu
WL+a4pDVHnI+9Fcprljb+/u3zz8i/sg4ZbhKzl8ibso4KvIXe8vz7R95bjTI
+UQ7T9oTp5tQHy7nI538T5M7+Z8md/Jbm+sX6lM5+asmd/J/Y/v6WX6vyZ38
0WZ97Jxfae2d/Elr7+S/2vh08jub+++cv2pyJ7/Tru/kT1p7J//V5E5+pcmd
/Fh7vk5+r7V38meb9adzfqncf5YfbN/v5J+a3Mk/NbmT/2rf7+T3mtzJ7236
F3UxkEcatH6Ts/41vw/vp3Ndxl/qass3Cswb0vnh7O/a9SdK/OcRyX/CuZuA
czhB8zdwrgbj96+15q+shvd57vk8yY+Zn84NhXvTOaKg+RsbpnNBcR+8v57k
l+BcUXVCOmcUNH8F56oCzlll8+936VxT5Dw6UPJLcK4qrJ3OWWXzj+vbbKxv
mt/E+TUC8+tRyW/h/HwM87O35E/hXFvAObds/mHfiPtIQfNXrk/n2sL0dM4t
m3/p+a0TOY+3k/wpzi/sg4dzJX8G8Wf40X2D5mcdnc79hcvSOcCg+WObpHN9
POcXND/K3k/nBMOakp+Fc4thUDrHGDR/DOcSoR/7x/ckf4nvj8A6uaLkTzn1
c5v+6Tz/RN43TmnldfPPPV/RrC+d91dMfm7K+6xXTXmgWf2lDVJeZ408z+pg
qT/1TMoLrfqkPNHwnNS3Qt5qRB5r1PpLP095qfHklKcaR0p9KOS11jenPNes
/hTyeiPyfLPzm8irjcizjVofCnm9EXm+2fnNu1PebuxOebz15VKfDHm/cU7K
A64OkPpUo1NecT065Rln9c9GpbzqemTKs87iP1ekvOYaec5huNSfQl51/HnK
s87s1++kvOl605RHXS2U+mfIuw6/SXnYYaLUv0Jed/h9yvMOF0l9tdkp77y+
OOWhV5Ok/tuNKa+8TnnsK4R+Ut8MeekBeepB66uNSnnz8Q8pjz5OkvpvyIuP
+6Y8+XqA1B9DXn18I+XZV1r/zPE/7fql+qbO/qq1d/w3Nz73luy/O/6F9Y/j
f9r9Of6byR3/y+SOf2Vyx/80ueNfSXw18z+sveO/WnvHP7H2jn9r/ef459b/
jn9b8s9K/r19v+O/mdzx30zu+KdiX2T+p7V3/M+S/x7b18/8c2vv2K8yf7Lz
iSZPr13d9BMnin3q2H/2/Y59Y+0d+6SRd7Zf7fk79p+1d+w3kzv2mckd+9Xk
jn1mv9+xX6y9Y/+a3LFvTO7Yxza+HPve2jv2cROf7mzfWXvHPzC5Y/9Z/zj2
n9x/Zt/a9R371eSO/Wpyx/43uWPfN+On8/ld+33O+R2TO/aZ/X7H/mjmR2f7
oZF3ti9N7thnJfvK7t+xn5rx2dm+tOs79lPJvijZp/b9jv1h7R371frfsb/t
+o79WrK/rL1jv8v9Z/aZyR37rGR/WnvHvjS5Y1+W7HOTO/a3yZ3z3db/zvln
uz/n/LLJnfPpJnfOh4f29Xvr+W5r75zfNrlzPtt+v3P+2Z6fc/7Zru+cf7f7
d87fW3vn/Lt9v3M+39o757utvXP+3No758tN7pwvt/5zzufb73fO39v1nfOD
1t45X2ftnfNxJnfOP5rcOX9o3++cH7Tf75wPtOs75/9K5+vs+53zddbeOV9p
7Z3znXZ/zvlKGz/O+U9r75wfLJ1vtPbO+UWTO+cXS+c/7fc75zutvcP3sfsn
TwecnbBI+DoDE88zJC4E/Rr+fTg/E48zfilxOuNp4MRSflTikdbbJU5ptS84
wZSDixrI5fjv8pXIm+B1dPwdkHiscbPEaa3BabX25P08mjhAlfJXX0k86vrL
iVNdrZA41SbX/HEdn7cm3mkNDmogB5Xy9Nqc/9LxCZ54Dc54tVnijNv1wWOt
nkqc1jAQnFbKb3519dvPXH6l8KeL//KjH+8zIHzuhh9O+9QG98v5l6Y+ovLF
70m89Boc9UCOOuVv3f7QNn+5d6Uw/9Qt7hv6uwHhQ3vj1MeH3N3E5xNvNy5K
HN76HHB4KT8n8cTjuokzXpEzXug/L36T8WPIlyWXfoPEwTV5ie81DuPq27ju
ZxKH2OTkr5O7nsU/wD8n95zjlPJhiVddgW8eNksca7s+z+eRe87PUX7flXt3
v7HKq/WcR677/GeHv5/tj1/XwwubX6d5w3HLv8XVghOu2nnEmi/Vv7ztuhuu
3DGvf63j8z3hyxzbw1N8uNq1h/P40aD89yfA/ea5jbcTJ97uj/x3ct/7yPya
A57WJIzL+8DZopx8e3Ltwbm37ye/ntx6jC+TO/PHnt8F4CevAm7yB4lTbPfH
ccf4xQDh35AvD8575v/fnLjSYfvEyQ4hcbJNzuexL/iW18v4moPx8QDGB/ja
9v0DRD9ulzjrdv2x4FOTS63jc+ffHnRb310XVuu9uF+/+dutmvn/zvM3+XGf
vD4+t9Hi6qNPPnL36jetZhx0yh/G5/8KbvcJieNt95e4bG9UR/Zw4Wg3NOO3
xA/6OPjcXwaX+x3R/+OET7vFen88dvV1+pm8xI8jX5xc8QlJv5ncWb9M7qw/
JnfWl6Z/Oq+/Jk+v2fpi48fRz9beWb9N7uhvkzvru/VviT/orO82fpz1ydo7
9o3JnfXL5M76a7/PWV+b+HDn9dXaO/aJyR37w+RbP/r1v96yzaB4zjGf2v+B
P6ye7Y8N7pkPA8Bf53Pl3+LqvWfCl/uvsk7c4gfLfX7iCatm+2Ppdc70+zF+
1pf5dVOPvvnQv+hZl16rH8c8pnwO5vdTeP8d0f8lPqWz/pp8j28NfmT8Ch+L
t0+4Y/eTDu+TxUfiSht03f3ZVXj+vVb95uhfk+v5+G3wOcrx3CPGQdxL7Kvn
0riKb6dxFufL+CLPFOtbxP/t+s+CTwz+cX1IWt9M/vMHl9v4e4cvH/f4X/MH
PXfjA5l/5jwfk+++4E8Dqs2Wi5vv/+qI016Yl/lvun4fKfo5zc8l9dIeu6Bc
f3Kp2A8vLf+DVWZd/3p9/bEnx6MueCezXxz7yOS834XgM+vz1/pJI3C99v03
+mVIWh/l+S/gOMrWR+iF+vykJ6rNxT5/KumlODXpqeoo0U/rg1t+UVqH6o3T
+mP9U+KLOvPH2sPuiLBDsvjRQvT/tHb/m9z+D366yh370+SfTeOyxjjN7Gva
F+u27QuTj096LWyT9FwmJ68QzyX7/b9Jv6vGOPN+X0A/ZtdPr836qe1x33GX
9Duy/n0w9Us9K/VT9v2O/irpB2vv6AeTO+uDjO/e+HzOf3TWB5s/jn1s7R39
V9LPsX1/mf41uaN/S+uXtXfWJ5M7/F+7Pu3xV9v6x+TwC+Oi5Cdmcsf/Mjn0
cg09ndlvtK/7tO1rk2+ZnlvAc8zk7G9yLfX6Jb4yxm3AOM6uX+Jr4r7j8el3
ZP17TeqX+qXUT9n3O/rTxrczP0Ph+5v4Hu5/v56/q0cOEv9O4wvvi39Ivjfs
0Frja+z/gej/IeKfbYvxDr8ujhT/EH5rfDj5sfUg8V8TT3uNmPwKxrX5t7ja
Jflt8dTkx2X18531x+7fsT/c/kH8xe7fsT8k/tDUL1D+qrO+ltZ/GZ/Z+m7X
d9Z3kzv2UWhfv3fk71gqfFism/W97fXB5L/A+H++Pf7t96Ffa/RzFt/S/tP4
WH/4WysmP6waKPHhHZLdFXdBv20l8Sldfz8r8THE7eJvUxyvOl7id874s/aI
W8XEvZ9vv4dyJ35nv89Z/03+fcRn7m3HZ0zu2AfSv5l9YHLH/jG5Y9+Y3LFv
TO7Yd3r/ar+Z3Ilf2vN34m/2/Jz4m13fib+5/feezA8nfmjjw4kfmtyJv5rc
ia+a3Fn/rH+c+JzJnfUxW184ovX6zvpvcmd9z9YXWd9N7tg3JnfsF5M78TPr
vy1T3Kg+JsWRqi/J/k/XHj1+Yw0/MpvfQ5PfWk1Nfmx4QvzXuSluVvfFvk1f
iZ8566t9v6PfTO7E/0zuxP9M7sQ3TV7ikzvxS5M78V+TO/Fdk++b4oZh9RRH
DLp/5/S/yRFXCum+BwR9fldhv25CioOGqyT+6dg3cv1sfTG58/xD4ftNntaj
dTA/eO6huX/HvrLx76xvzfzsPP7t9zv2pcmd9b30/Ezu2Kcmxw+1/Yvjxf9z
7FfT/479IPaV6Vd7teeLfD++Kt9I6+qQN7Cs8h1v+8Qz06c9VvM18faa81XK
LbgH+cxyfeMbzBC58UDadULs+pfgPDlftxL+Sak9eXx8Ja+PcvIL+TpErl9q
z3rqUmfd+r8b9UJPxOvLOI+4rO0nIN+Fr6dL/fKTcN1u5/psNx6v46T9FusN
eGbCkBUjX+/uqbdyj/3+0Vo3AvUW7Pni/dGOfAl403zV+olaFxp1oJdZnvyz
wZGv/3j+14vWHd34r18Ru5bxPsr5Pu3GfiJ/arnxF39tk3k1X/uf8lT3mQcs
p+0tbkZ7WuWMiy0vcsYj+ar7G9zP4ut86OtlbU/9wtc+2C+inOs9X+fK9bX9
R6U99/P4qucfuH/EV+rDZW3P8yp8PRv7gZT/Hdd9qb1PFZe1/S0XfuKstVZa
JfL12m/OO/Phq1/I7FO+0t5T+U1tO9bkye96vebr4st/+9oJuzXnczUutgj2
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
C6fJ5OBN0W/K+EW0H8iBuhM8eMqZr0LOVDd46tK+JqfpVvDYdf55+VGl/H7O
P8/+x/odvPU7vXL/4ZWK81TmD16fR55oo/84/7z9W87fwv5I7Z3v5fzkvFwe
85Ryzk/wu4znRTnnH+cd5yHlnL8ntzny2f4F5yXnKeWcd17+E+df10tp3nEe
Un4L5q+X/wIeVw0+l/G6KAdvzeYt5zHle2L+cd5xHlLO+evlh3F+evk/nH/g
e9k8pJzz9yzMW85jyi/F/DsO847zkHLOX85bzmPKOT85LzlPKWdebtofOrXh
wbXb15yXnKeUs+6Gt77qvHXyy+tCfjm+z80vj158bmzrfGief93eH8jz65H/
XXv538g/qwv5v9HL/6V97eVXIz8vFvKj3f0prp9efjjye2Mhvzd6+b3khRby
y6OXX87rFvKfq0L+s7s+Iv85evnP5KkW8u+jl3/P6xbyz+tC/nks5J9Hb3+Z
89vLryZvt5CfH738fM5/Lz+c87eQ3+zWV2jPXze/2T1fOrYVv8/zfxn/9/K7
LT7n5B+Tt1zIP629/FPW1/Hyezl/C/m50Ts/w/nt5ScjvzQW8kujt75y/hby
m6O3viP/tirk38ZC/m0s5N+66y/yv2Mh/9td3zl/C/nPoZD/HAv5z9E7/8b8
YS+/F/nhsZAfHr38cOYPe/nJtKsL+wOhsD9QefsDbX8zX99x/rMqnP90z49y
fnv2NeInoRC/rb34LddvLz6O+FJViG8HL77N+e3F9xEfCYX4bPDis9gfqAr7
A8HbH0D8qC7Er2Mhfh0K8evKi18jfhkK+ye1t39Cvnph/yAU9g9CYf+g8vYP
uH578XHsr1SF/ZXg7a9w/fbi+5yfhfh78OLvnL/e+sx5552fpL3tnX+08zNO
fAvx0boQHw1efNTmrxN/Rvw4FOLHlRc/5vz14uecn4X4Z/Din5yfhfh75cXf
OT8L8eG6EB+uCvHh4MWHsT9RF/Yngrc/wflZiM8r513j81UhPh+8+Dznrxd/
xv5FKOxfVN7+BeubevHz9vm6DvnxUl9S47tTWucDe+O++Le4+kI6f+zWX+L8
9OLTiI+49ana/m8e30X81vVPET+KXvz2qy3/N49PM+7lxScR/4qF+HX04teI
78RCfLYuxGerQnw2evFZ/t+L3yO+HQrx7aoQ33br1yG+Hb34dtt/zeO/iO+7
8QWub178Wc6XZ/HT9vjOz6e116sO+Yut8+d5/Jfj3/NPGJ/14qcc34X4qOu/
cfx78d8ZHK9O/I/juxAfjl58mOO7EP+MhfhnLMQ/Ky/+yfHvxccRP64K8eNQ
iB/HQvzYrS/G8e/FV3mez/OvOf69+G77fHOe39Xev8jzJzhvDjrl/pM2HvWx
+Lc/fOzca/7W8IvZ/kW8/xV8jnLWR956n7EzvnHnwvrsve4bPf6Zpdn1z8L7
m+Bzev3Ju+418Jy+H67rO9849aZt38nkS3dK70/h50Q+9o/fmPOFE5+ou54/
9roL927sa1sP8f4R/Jzc316vXPSHU2cPCuvcvfCtF87b2NofzvgT3v8iPqfX
P/Hn3/rZD1ZYPe73wH0nzLh3caXy/fH+Sficfv+Cey6aNm7mh37n/tct97V3
G/uW/bt0v/T+3/g5kX9rxAnf+eZ586sxH3169xN+kI+P0Xj/G/icfv/kIb+f
ee2wNeOMPRccdvi5b2f3z/f5OZU/vNqeX935ifn1wFuPnL36r3plcr4/B5+j
HPmlLr9D84Y0/xH5b+75cOS/BS//jfaJl1+I/Bm3fgjyA6OXH9g+f5/nRyL/
oy7kt0Uvvw35R1Uhv7L24lPIj4mF/L+6kP/nxi+RX+PWJ0R+VizknwYv/xT5
SVUh/zIU8i/d/ADkNwUv/5L63csvRH6qmz+B/NTay0+l/vfyI2X/OMuvQ35V
KORXueenab94+WvIP4uF/DO3/gXnh5d/h/ypWMifqr38KeTv1YX8vcrbn+F1
C/llsZBf5tY35vzx9v84/gv5jdHLb0R+Xyjk91WF/L5QyO9zz9e37Z88fw35
j3Uh/9HNL+D88PLvOC8K62vtra+0/wv2Re3ZF5QX1sfaWx95fwX7qvbsK7Yv
2Ad1wT6oC/ZB7dkHbF+wL2vPvmT7gn1WF+yzumCf1Z59RnnBPq09+xQ8aXd/
pcTXIE/Vi9+8lXiVqG/dPzwu/EL6h1uC030WeKCUkzdPTjZ5tZSTh8fPKb+b
PM55bU64tQdvIp7t8CeeTbzumhzvtxLH2+SDE68w8Berf04e8nltjl2jP9Jf
d7rOgEieIOXkEa6R+HbxS+DdUR4S79s44LckDrjJhduY8Zl2Bm8w8Q2HhK2F
L079OKrNabf25CGCjxiHgZco7WvhqFt7jqdD8Npf+F0cP8JBzcaf1/+sb302
xhXHmY4v4SBn44ec1+cwjnT8CafR7m8hxs+bGDfzMI50/CkHRcfPyhg352Mc
6fgr1e8TTqVdf1eMH46bOzGOdPxx3K2Jcajjh+OG40jHn3BEs/ElnFiTc3wN
b3M4tX29eZsDa3Lah+BL1w+AN61yvn8fPqfyX4Gj/HLiKGf6EXzl+gZ8Ttt3
Ofwh4TbHVYUvx+t7+o3tvfHH8x/rgAO/a+LAa3w67Iz318PnVO7pZ17fm19s
743PNu8pn7/8/eQ8/wC8am0P/nP1F3xO238RHOqrwGvX9uS474nPUQ4esrs+
Cl86e76J78v+zH/f+uCVe/MbzbqvSPzvmjxwyo8DT/zmxF+tyWOlHLzpKBxq
k3O8kBM9BrxcyskzL6yv0dOP4FFVy4NPNUD4VOBVh/3BsX45cawb/wXx8O8k
Pno1Erx0yqk/FiQ+fH0NePGUg5+VcbQo/zh47kMS/zjjX1O/CCdcx0/05u9g
PF93/cf4+Pf6+9mRwoG39t/F8+Vz5XPW8cFx8QeME33+o/HcOQ70+Xr2E8eH
p3964/nyuR6E56zjg9yzFYRPyfpBfO7HYxzo8+dzn49xQPlGeL5D8Vy3wXOm
HHw2cq7jDOGr8fnzuS/EOKCc8YGCfomefqG8sD7Fwvrkjp+2PnL1ayzo11jQ
r9HzDyj37DvKC+ubO75o3xXWt1hY32JhfY/e+j4M48lbH0p8143BW/fG57F7
HvLTfb/zXj1jg7tO+GDUs/UTwyau+LXzmvlJvt+jDn8Q3Hu3/uARiccePf+M
drdnf2029zPrTP1LVzh34tNDrv/m2/WKfx986XlPN+dHyLvfChzwoxMH3OTk
0ZNvzvulfKP1/njs6uv0i1csXHPkP8bOrdY/qdde06/P9b/H57Pf26NnX67T
9bPzy/WQ/V8dcdoL8+pPLfjTgGqzpn83wfPx1oc58lxVfyj/91nh8x6D58vn
OgvPmfL/xPPx/J92f+X1S9jO88/4fMBnr/mc9Pn2wXO9AM/Z+gfPZwM8lwl4
Tvp8eZ98zvr8eM5E+bn8XXxuS0el56jPj89tOzxHyvm8vPlJXmbBPokF+yR4
9gn1ljf/4N+6zxfrd1Ww70LBvouefcf+9+wb2CccX579Gj37lc/Hs89gH8SC
fVAX7IPg2QfsX0+/tdebfP7AvgoF+6oq2FfRs6/Y/559AfsxFuxH179i/3v2
kXFlnfkx/qmD3z39/ZXihn/f51uLJveNf9/6C3cds+UH1r+DeublK/XDP339
r6v99q3qiR++v/DH7zfrA+IH0YtfIf5Qe/EH/pI0/1eDfdD49+8O7vvePy7t
Ew84bex9r9y9Sty899Xn7TapyW8Gz7Ze6PDF2f+efoL+i4X1LXr6s70e5fOH
/fck+u0h9KP2/0L0+2A8B8oR/6u9+B/734vf8L7Yr+xn7T+PD8z+3wL9vj+e
g/avt76z/zz7gP3vrT/sX2/8Mx7lje8Sv36XFN+KXnwLvz8Uxp/LV8aNdieu
9RqwE5rzkcy/6PPkI3evftNq8fhPXh+f26jZH8D6Gr3+xfocvPWZ/efxk/n7
vfiw9pvG9/h7vfnH/vPGD/tnDfTLkegnHV/slxXRT5RvgN/v2Y/sv4J9QrvS
ONOUY//E1Z+M6xb2F6rC/oKNa2d/wV0feN9e/J2/19tf4e/34v+Ib1eF+HYo
xLdd+4G/v7C+VV78l7/Pi+/z93nxZ47rwvoYCutj5a2P7fmWP1/4f1XB/wue
f8Hf541v3l9h/Qne+sP7954P78/zT+H/VJ7/w/v39Bv0kjv/Snx4XM8dX/C/
3P0n5q95+pnf5+mPI3F9zz7l/Xnjg/3j6T9+r+ffWn0/z39Kfq97/o3f7/nf
Vv/P8e8mg4diHEXhp6h8tMhPT/m84dvI0/12K1//Q/9c6l5o/Yt7RD5a5GN6
8o0+Eoff9olnpk97rB6GV8p/jnqkrFP6WalfXJJrXpLmJw0X+WTNX5K670sH
teu/Z3XhpT681kXQ+gjo3zgB708QOesKnYr6JqdKfaGSXOumaP0UlX9e5MoF
0/ySkjz21HO9p9pyvQHPTBiyYuSrjX+cV2ufs2/OT5Tkn8D50SXXJs4aXylf
G/FQ2QcMyypf/PyvF607ul9I9uPgyFfK15B9Kd2fKsn7n/JU95kHLBefXG78
xV/bZF7NV8pXhD/eH/55f4mflOTPyrqg68NcyPvi/b4i17ibxt9K8rPELlP7
rCRXu17te5UvErnazWo/q3yqyHVd0/VN5TeI/BffnHfmw1e/UN164SfOWmul
VSJfKVe9rvp9kchvEPniy3/72gm7vVOnfavX7dV+X0H/c71BnZcwS9Yfrodt
vcW/D39fi5tM/d7wk2cj7ybVZRweuN9EOXlb4AxmfC7Rj1H1I+u68DqsA0E5
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
/4n/FtV/E/+oyvjcPX/mn1Zq/4n/Vqv/Jv5pxh8Q/yeo/yP2e1D7XfyfjM8t
/llU/0z8l4zfLf5bVj9K/Jta/Rux/7P6ZeLfRPVvxP+L6v+Jf5rVzxL/r1L/
T/yfrH6b+IdB/UPxf4L6P+LfRfXvxP+p1P8R/y6ofyf+WcbfFv81qv86B/Ww
Oa+D1L/neQzqlRky/ydBL/B1qKy/Yl9EtS/k/ELU8wuTW/v5DUeTctYLV44n
5aw3Tg6o8gEkfh40fk7uHjnASxe2+XuMi5l9IvX/yQUbB87nIuGDkbdJvbKr
8H/Ta5xO+0X1D7nAk4XzSfnaqGf9ADic20j9etb9p/45TOr/s172AcL5tPvb
I9X7JodzG6nvz3rn1D8jhV/Auv/Dwfn8kdT/H41658OEo2njA/W2aSfNlPr6
c1HvmhzPA6S+/eqsuw+9NF7q77OeNjmhv5T696zXrhxQyv+AevAXg6N5jfAf
fo9655OFk0k564GT43mu1P8n94B2iPIPWG+8n3BC2/e/SlAOKOWspz5POJyU
s+6/nT+T+v+s134ROJ/3CF/hVtSbJ4dT+RK3ot651SEUfsEmqGe/UDiflJfO
11Kf4RxnpefPxL8I6l/I/A06f2kftbkCjX3U5vIusflMOc+vfTHVkY56fk32
v6LqR+ojcACD8g2Gts+3Wr0zyp9GvG07xF10fyCdd6W9TY5hM//adYF5frZZ
X1h3E3UEg9bfZD3GNmewqV/KeoQnpTqFqMPc7E+tiP2dN1Kdxaw+6YmoJ0n9
dKrUX+X+EuqYVjNlf4n2zT97rv9UZt/ciHqGrCv4Y6kPuhzsou5Up7OaJPbV
HNRLxDmw+DepH4q6i/WmqY5hpfU72S7d/2rhU2Pa9WFp/6CObRb/ZV1W1l28
TOqz0v5KdST7hklif7FeJet+vib1W2fhul9KdR7jbKlvujvaoY5u1Pq5PPeG
OpZB67+ybin1k9YvvQD7p+n7V4q6f/or1vNMdT4rrY8bUE+S+un3Un91Cuyu
nVId0VCNadfP3Q32FvXOfcInkfhLrfEXOb8Z9PwmuSsvwf5ZKPyVtr7o6lI+
eS/YU9NgXymfRc4PRD0/IPkBteYHUD9R/6h+Iu/4Sdhfpwk/VfRnrfrT4v8t
vca/xdUO0NeMP40W/vllsHe+BPvnP4UfQnvJ9r+Ev0KuyIOwv/oLX+QK2Du0
f7qFr0J7ifpJ+THkrpwH++sN4a8Mhj1C++Rk4cuQN0S9pXyTG2Hv0P5Rvsg9
sLemQG9dJfwTckcOgP31kPBHDoU9twPtO+HbkIe1C+yTk4W/Q3uH9s8Wwpeh
vQNOUq38FfKkyCm/TfgztLcmwv76jfBZyP2hfaf8H3JrLoP90y38mhthL1E/
3Sv8lXmwt2h/Kd/mu7B3yDnfRPg+tJeon6YJP4b2Fu2vW4X/U8ovkvPXUc9f
i39SqX/C+M2+sG80fiPzM+j87MJf+3xCb5Nz32A47BePT07/bZjUr4b9F96E
/aT+He0Zq38tfIO2PdTVtbRlL33Yv7BXTob9ovWVWZe6HX9u7AvWT6b9pPWX
Z8NeGQ37RetPs6429ctRUl+b52GWwn7S89f7HZrsiUNhXwyT+tu0V1AHPd4r
9Z9Zd3kL2C9af/lHsJfwO+s/SH1o+n0Hw37S+Dj12gewzzS++g7siV/AvthN
6pO/DnuF9ovW354Fe2Uv2C+zpD4169mjH8Noqc9Nvw91rLP9A+q1+bDPNL5M
ewV1vrP63n+GvUP98ojUp2Z9+gr20/ckv+DXqPc/AvaL1j+nvUP9sofU14b9
Vs/ZL9lP10p9dMnPyfwb2V8Lur8m+0dB949kf63S/bUu/LU5V83vk/2jSveP
ZP8r6v6X7P/Vuv8n+1u17m/J/p/dL+WyvxJ0f0X2l4LuL8n+UdT9I9n/irr/
Jfs/te7/yP5X1P0v2f+Juv8j+zu17u/I/kk2v2X/rFb9IPtjQffHZH8o6P6Q
7I9Vuj8m+0NR56/sH0ad/7L/FXT/S/aXKt1fkv2vqPtfsv8Xdf9P9r9q3f8q
5Q9r3q/mh0l+XK35cZIfFjU/TPIHo8Zv0qvlv+Xnd9r5ZZXml0n+W9T5K/l/
UfP/JP+t1vw3yY+qNT9K8seC5o9J/lLU/CXJH4uaPyb5b1Hz3yS/K1tfJP8t
46dJflfU/C7Jf4qa/yT5XZXmd0n+U8aPl/y6qPl1kh+Y8eUkvy5ofp3kh2X8
QcmvqzW/TvLDouaHSf5h1PxDyY+Lap9J/lil+WOSHxc1P07yB6PmD0r+W635
b5I/GDV/UPZXgu6vyP5T0P0n2V+pdH9F8jNqzc+Q/aOg+0fp1fZfsv1f2V/K
+NOyv1bp/prsH9XqX8j+WtD9NdlfCLq/IPsvQfdfJP5fa/xf9l8q3X+R/aOo
+0eyPxJ0f0T2jyrdP5L9kVr3R2T/IOj+geyPRN0fkf2DoPsHsj8VdH9K9teC
7q/J/lSl+1OyvxJ0f0X2p4LuT8n+SqX7K7J/V+v+newvBd1fkv2XSvdfZH8p
40/L/lul+2+yf1Tr/pHsvwXdfyvVH6G+aOd3NfpD8pOi5ielvCfjc2J/o1lf
yKVt7580539l/yXjS0v9klrrl0j8Imj8grzN9v5Iw59dFTxK5tUon5U8zXMS
ZzMof/bT4IW290ea/ZkPnknnlnZKHM8wU/i0XN/BEc3ym8m7BAcz/qfwYWlf
8DqTxL4gTxOczfoa4cf+CTzTuxLnNAx/qc3v5fpNO0DX73HghYIjGpSvy3yv
nyQOZ5wk9gN5pOCUVlcKf/cX4HmCYxuuFn4teaPgkNbK5yWPs72/8S/+Cc4l
gnOa8XvJA23vXzTxUfJa8Vyxf9HwiyU+HzQ+L/mPQfMfZX+i0v0Jid9n/q/s
T2T8eNn/Dbr/K/sPtc5P2Z+pdH9G4tO1xqclfh80fi/x44wfL/H7oPF72X+I
uv8g8fVK4+uy/xB0/0Hi61Hj6xJ/Dhp/lvh6rfF1iT8HjT/L/kal+xuyP1Pr
/ozsbwTd35D4fKXxednfqHR/Q+LzQePzsv8TdP9H9icq3Z+Q+H2l8XvZnwi6
PyH7N0H3b2T/odb9B9m/qXT/plTfi9zqdh5c0z/t9bSrq73eZucPsvoSY/Xc
guTXcT5z/VX7egbWQ/rRKwm/+RSsp5y/hwjf+iGsdyOx/q0k/OpTsF6SM/Bp
4W9zvZ2A9Vf51l0L03p1N9Yv5XNzveP6t6bwpcmV5vqqfGna1VxfNb+Y8/73
WL81f/SnWM/ewPr2tvC3uZ7Z+ib86h9iPX0M66vyuWk3X4L1VfOrOa9n4X3N
nyXXm+uf8r25XnJ+Kd/6Tay3n8H6u6fwv38Nrjn9XOWbk7vNOpLK35b8/Kjn
gyV/vdL8dcnPx/v8y/Lra82vl/oDUesPSH521PxsyV8Pmr8u+dO15k9L/np2
/kLy76Pm30t+edT8csm/j5p/L/nlleaXS/511PxryS+Pml8u+ddR54/k90ed
f1KfIGp9AsnvrzW/X/LTo+anS35/0Px+yU/P5pfUP8jmp+TnR83Pl/z1SvPX
JT8/an6+1C+IWr9A8u9rzb+X+gVR6xeU6kuKf+nmR7TrfvIv8x9r9R9lfzyr
byL+S1afSvy3oP6b+GdZ/FX8y6j+pfhXUf0r8S+j+pfiX0X1r8R/qtV/Ev8k
qn8i/mlU/1T8z6D+p/hflfpf4n9W6n+K/xXV/xL/PKp/Lv5lUP9S/LdK/Tfx
L6P6l+JfR/Wvxb+s1b8U+6tS+0vOf1Z6/lPOT1R6foLcXrZfIPxe8nwPhVz5
veQRs/1Zwi/m/ynfWPjF5C7bvBf+8ufB++X3DxQ+MLm91l74veQG8/fvJfxg
fp7tJwnfl/dD+beE/0zutH2/8KfJZWZe6GjhM5NbzPbKLx6Lz7P9EcJvJteY
/aN8Y94P2yv/mjxnfv9M4T/fj/9/i+cHhf88Azxr298T/jX/T/n9wr+W89dZ
/VDxb2r1b9Ir44arZecLxD8I6h+IfZvVhxH/IKp/IP5LVP9F7PvMPhH/Jqp/
I/Z/rfa/2MdR7WOx/6Pa/+IfRfWPxH+L6r+Jf1SpfyT+QVT/QPynoP6T+AeV
+gfi/0T1f8Q/qNQ/EP8nqy8l/kut/ov4d5l9Kef/az3/L/kRte6vy/nxLH9O
ztcHPV8v57uDnu+W8/VZ/RDJD4iaHyDn36Oef5f8gErzA+T8e9Tz73I+vNbz
4XL+vdbz73I+POr5cMk/qDX/QPInouZPSP5BpfkHcn4+6vl5yT8Imn8g5+ez
+mOSnxE0P0PyB6LmD8j5+krP10v+QND8AcmvqDW/QvIDas0PkPyKWvMrdN7o
+VFZf2tdf2X9q3X9E/ujVvtD1v9a13+xf2q1f2T9r3X9l/Wz1vVT1v9a139Z
X2tdX8X+qtX+EvuvVvtP7K86s7/a9kOt9oPYX7XaX2Jf1GpfiP1Zq/0p9lOt
9pPYR7XaR2I/1mo/in1Yq30o51uDnm+V879Bz//K+dPs/Jqc/416/lfOL0c9
vyznc7P6B3J+udbzy3I+t9bzuXJ+Ner5VTmfG/V8rpxfrfX8qpyPrvT8jZzv
Dnq+W85HBz0fLed78/ra7fPRlZ6PlvO9Uc/3yvnxqOfH5Xxz0PPNcv630vO/
cr45O98o579rPf8t55drPb8s57+z850lvgbjNeB8ufwBcCTRjn+Lq60f/fpf
b9lmkNkf5xzzqf0f+ENz/ulB1CV9N3Eqw1PC/yHvGJztjI8sfIqML0beFa8z
Q/he5I4tSByvWvljz4L7fUjigAflfyc+F+OtXd3p/pr25D6CQxj2Ff5jeo3T
wfnK6l/fAa7hvolzWP1O+IYTwQsDRyysLPwzcjNuSq9B+X7kfVn9TeGb3Qzu
XUgcvLC98O/IG+P4U74aubvgOgXl736F+0Z47Sd8bPK+OS7nCB+c/+d17hU+
uPBdLE6u44tyHV+/Ae/a8teEj83PU6587kX4PO/veuFnC3cm9Mb9Ui7zJ+j8
4fxrz1v+La7WBe+b8l2ED87xR7mOvx3xeT4f5YePx/3QP98G90s5ueq8/g+F
r87/s/29wlf/LHjxdr5X+PL8v+2vCF/+SeiTf0K/kJfr3H/U+0dHdh8P/TZL
+ueL0Adfg36YB31BOfUJ9ctz/54PGM8WPiC5fRxXdwi/j+OP+lHH383QF6Og
P5QvS14i9cd5wh+kvhoH/aX8VPbHhtBfOv7a+rCra8OWvlxcbQt9MhL6ZZrw
Rf8IfXQdz+87fELouYy/OQT6BusKrt/ED7aEvuL+o/ITS3worofgbGfn567r
4f3Qnu/qTs+5se9uBS8ZHOWMb51e4/T3e7jfq2bn88ljBgc7Kv+azxcc5TBR
nq+sr1H1n/CrKuVXkefM6xwqfO2vgmcNznV4SfjhMn+izh9ys7k+/VL42ceB
d824467CHyfvKqZX42FRTu431y/lf48A937zy7ZZZ89vbBvJU7ffJ+NC9bes
X1HXL9HfuC7/Mv0XVf9xfFCu40P0Y1T9KOtn1PVT7MOo9qGsn9n4Ef0fVf/L
+hlVf8n6EHV9EPshqv0g61/U9U/Wt6jrm6z/Udd/Wd+jru/nYD5yfq4j/HTO
R85P5ddSH1A//Fb46hw/S6EfdPy09U1X169a+iizb6Pat+TSc/5+Wfj0/dt8
+uqjwqc37jueq/LfZf3Knj+59pzfJwvf/hfQB+S6vSB89x0wX7fG/B2J+Uw5
5zu5bc8Kf174eZXy80p8P9E/teof0Y9R9aPon6D6R9Yfd3+9PS+b+jqy/lS6
/sj6EnR9Ef0bVP+K/RXV/pL1I+r6Ifq5Uv2cXm19zOxXWT9qXT9kfYy6PpI7
DE5vxh9m/9s4kf5XruOTwieW+RV1fon/GNV/HNji1Tcce8rJZQbHOC4SPvOD
4B0nzu4r9VPCZxb7sVb7kdx3cMzjZsJ/J6+Yz0/5y8KNrPcQPvqF4N1vPvcz
60z9S1fs/ffBl573dHN+ls+fz1ef/zFH/uLa3r3eqr/0wMild3V3xS1WPnDj
EaHJX3lW+JrK38T5r3onzEOdX6JfguoXuf+g98/52eY6N/NzK9wv7j8cjd9j
zw/z6TuJoxyflviJ2L9R7V8+D3Dgg/KlhX9p+2jWHlz5zRNnPg4WvnzXHv93
Xjb1r9L1G/24OXjLVt9e+MxPYr4djfl3t/CxZf2pdf2R+Emt8RNyvzn+lf99
fGs+dXWt05pvH45fzCfOr42EDy7+U1T/SfiotfJT+XzY//p8NsV84/w7EPPR
GT9Rxw/HX/u58m9xxfG6BeYfxzPlJb6sxH+ixn9kfgadn+SOg0Oe8cfl/oLe
X/u5rZ/VP+F43QTj90cYz5QL17VSfjevy/mj+o3jmfbFZsIXb8+Hrq5kx72c
zW/ER6PGR8W+DGpfiv0U1H4S+7JS+5L3RftB+0/sp0rtJ7H/otp/Yv9GtX/F
vqvVvhP7N+j4LfGLJT4aNT4q8eFK48MSH40aH5X4uZt/j/hv5r9JfLXS+KrE
f6PGfyX+HTX+LfHfWuO/sr4HXd/F/snyj5ULreu7xMcqjY+J/RLUfmH/sX+0
/8S+qdS+EfuuUvtO7Jda57fYd0HtuxIfm+NjKsaRjg+Jj0WNjyXeOX9PV3e6
j+b8bZ8nH7l79ZtWs/Fz/Cevj89t1Oyv8vdsn/RX1PVF+Nm18rNFfwbVn7I+
BV2fdF5q/FPW50rXZ1m/TF/Z+Guvz0HXZ7H/gtp/sv7W2j9in1Rqn5T45sfh
eTC+uRKeF+VrtJ5nV9eRreed2V9B7S+12/g8KR+A37Mdnr+Ob4kPR40PS/y0
0vipxIc5Tu35SHy31viuxL+jxr9LfHeZX5n+Ffs7uz+ZP7XOH7FPgtonyqXX
/hf7t1L7V+yHSu0Hsf+D2v8yvmodX/ih3QPx+3V/Q+z/Wu1/8Y9q9Y9Eb9Rq
P5HvRH6p8p3IV5qEz40V+XDwokYLh5ly8qVGCMfZ2oO3ohxlyucI/0/lbKcc
Z8qHtevqZd/P684VTrT1L9rtIBxoHb8csSr/ZYvfPDC7v/Qap3PdVDn5VXPA
qercvwMDv0efz/1ox+uonDytXsJhtvvD+9fgc9p+DnhivcAZ0/Z8/zHlOEM+
FbykSeAoZb8f7/Nz+v0ngRe1IThS2p58qXHCcbbnD97TQeBAqZz8LXK2VG7t
cJ1sfIPHNBqcpkyO6x4hnGjKv4V2I4UDTfk08LZ2BIdL5eSPKSeZ8hFox+uo
fBR4VE+DU5WNb1z3fHyPPp+n0I4cLJWTpzVcOMyUD8X7N+Nz2p48sTHgjGl7
8sfOF46zzQ/oS65LqV7f5jI/svkbKdf5f67U53gI5/MfQPx8CDjQlOP7yKfJ
+POqH8GpsvasF8Q6Qlrfi/W/+L7yrXohH4b5D8aRhnybFv+i4TBTfjx4yspZ
ppz1n7tR9zmrb9bz1+i/41oc58XGSx2NPNQnwImmfEGbW2qcZsq1rhs5zZSz
ftv38RxGgwNt94f6a6y7NkbOn7O+LOvKqv3BfFDlNFPOuh6s64U6XyZnfa1N
kGeJOlsmZz6rcprt+eM8/UXCaaYc+YvVHOSh7gIONOWsL8Y8TK3PxnPXfB91
3Kw98z2fQx6o1udiPuOBwmmmnPXdLsG5wp3Bkab8PuRT3oc8y63Aiaac+a7M
g9X6daxvx/fXAkfZxjfybZmHm52f5Hl8vI86Z3b9Y5GPfBPylPcDR5py5psq
J5pyq18mnGbKrb4b8nAmgtNMOeu3TUOe7fvgQFPO+mu7C6eZcuZfMu8SdfCs
PevbbYg85B+BA0059eYv2vaJjZ/Z0ItSZ9Xap9eubuSVZvWPqPfegx5U/dfm
Fq8RVb9R74oetvubKPblI6J/+X2Pt+ssmpx6bxr0oOo/8oSEM9T0H/TeaOhB
1X/8fJtrz798fTpe9Cv1ptSBtP6jXpQ6l9beqa9h8kGsV9muY2nj61LozYnt
Ot3W3vQm9OjBoj+Zf74P9OR6oh+trlm7jqLJqTepRw8W/Um9uAb0pOpH1pN8
rF1n0uTMf78XelD13xToNZ6jVv1GvTuoXedR7m+d+AD04Hai/1h/gHUHVhT9
TL17QruOYjO+oPeoB1X//Q567TvQcweKfjsaevcy6GHVv9R7PEev+o+fp55e
U/Tzargf6uHzRP8yv356uw6ktadeZN2B90Q/Uq9KHU2TU2+u3a5jaf2zCfQi
9aTqR+Y3Mq/xUdGvjv9rz9/xX03u+Kcmd/x3k6fXzD9txl9n/8/kjv9vcsc/
bO6vc3zA5E78wuROfMDkjv9rcif+0fRPZ/9Y7i/z303u+Ocmd+IX0j6LT5jc
8f+a39/ZfzO54/82z6ez/2pyxz81ueO/m9zxT03u+H8md/x/kzv+ocmd+IDJ
nfiFyZ34QNM/nf3fZvx0jn+Y3PGPTe747yZ3/PPm+XaOX5jciU+YfKb415Ol
fl1EvXvWwb8SnGnKyYvOONKQ34N6+2cK59ra9/w1+uv9a/+VU53bV7PBwabc
4dua3PHP7fvJk7xFONaUsx4/ua9qPzr2a/N8WI8fdfrVfgvgDZBDoPYn+bLk
yqp9ptzeDwaBQw35jqhfyLqF64JzTTnr8b8knGp7/si3IhdV89vJA1AONeXk
v5L72occashZz18515Q/i3r441An/0xwpK1/yQsAR+BKcKQpJ3+VdfofB8ea
8mHIa0cedbgAHGzKWc9+hnCu7frgCZBbC46tfT95BDeDU3AvONWUj0Y9/SOE
M005eQzk9iq/lXUdbsX7R4NzTbnxXYVDTTnz75l3D46tff9fwSs4ExyD18C5
tvELXoByqm18Iv9eOdWUk89xF/SE6gfqHXI3fib6h/En1tVX/WB6qcW1519u
f4GTYdcnf5Z6QvWDE5+z+1fu2p6in9T+Uf2E/b1aONT2/dQr1DNjRb+cAb1C
ronuX5FPQj2j9RvIrxzZ5nw399eZ79Scj4ZeEY603T+5WX+CnjlD9Av1inCu
7fupN+6AHlH9wfzOXtBDy4v+oV4QTrNdn3qBeuJC0Q/kdyw4u8WJbuJP0BvU
I6o/qLeGQY9NEf1Fvsnzbc61tSe/hZzvqaIfyD8h9+RPop/IByEX5CjRH8dA
LwmH2r7/BuiVx9oc6WZ+Q2/Mgx55VfQH88OZFz5U9M8o6JXPtjnXTXwXesXy
vkW/OPaBtafdw3M5Np4hj6jXyzq+en7H0Q/WnvX3t5Z12MYn4ivCUeymnHGn
ie34vrW3esWoY2wca8id+Jb170uol8w6yi+D82jjH/agchYpt3rNwlmk/BTU
U2eddXKsbfzjrzNnseHjBnDc1D66DHy4z4ELN7nFS2v4AspZpJz195WzSPlR
qAfMuvf7g+NI+a6oxxyEs0j5P1FvmHWIzwdn0Z4P6iVfjDrKw8BxpPxC1Aue
gzrCl0j9kcNRj5l1moeDg0j5aqhXPEE4jZQ/jHq8rNN7IDiL9vxQL5rcha+A
A0n53qgHvAh1gtcG55Fy8hfIXbhE6rOQP3GNcBAp3wz1oldFHWmtD2T8AdQx
Jue6ff+rBHIpdgUHknLWS2Yd5bXAeaTc+ALCWaSc9ZqfE84i5eNQD5pchUvA
caT8GtRjniucRcpZz1o5i5SzXvYpqKP9d3AcKXf8G5M7/oOc/8n8Q2vv+Bf2
fBz/MTuf1oU/je87/qNd39mfsPaOf2XtHf9K9mcz/8+u7/h32flV8W+b/Y/O
/q21d/wru3/HPzC5498199/Zf7Lvd/wja+/4P9be8f9M7vhHzfjs7D9Ye8d/
tPaO/2j97/i3ze/r7D9a/zr+k7V3/Cdr7/hPdn+Of2jXd/w/u77j/8n+aObf
NuND5vcUmf+Of2PXp910D+woPV/onD+w+6e90+ZKN/YR7RbhKNn1nf07u3/y
H8a0OU7N78d8Z1xM9YPDj2nmP+wi2klqH7X9sRtHqv74QsuueaWeIvbNMNhF
Y2AnqX9Hu0c4S9a/tGto56h9Q7uIdpLaR6Ng94xsc6JMTj6EcJBi+/ofieQy
qH1E/sKqbY6Rtd8AdgntlIPFPpkNu+li2FFav418A+EEWfvRsKvIsVL7inbT
HNhRB4j9RLuFdozaL+R/kPsxUuwT8i/+ADtK69vRbtkXdswAsV9oV/0edtZF
Yl/RbiL3YaLYT7R7hLNk30/+BbkXl4t98wzsoj60k8Q+ot3z8zYnytqTp7Vp
m7Nl7WkX3dzmeJnciV9Y/6t9s6Pw0ciLHtn2P6x9mx9v89Ozb7qVD+Psr9v9
s1437Zx9wLmmnPU3GbdR/UT9JRyL5vfLviQ515S36y8vn9k3S8CjVk61jR/U
axsnHGrKWS8MdRKrR8Chppz1zlgHDXUg7f5YH/RU4VBTzvqcrL/5JjnUres3
dTHHgnNNOetfsu6l1hdT++QtcKJtfKMe24uo0zZc6tuxviT1Ujc51JBbPTzU
HT0cnGzKeT+sg/ZxcLBt/KIe3eWoUzdD6q+p/YI6rCbfCPXwXhWONeVqP6EO
p7VnfVbWZUWdVvv9rAfHOnH7gINNOetr3iUc6vb992fdwBDAoab8Jzi/wXNq
XwTnmnLWB1UONeWsz2p1WVOdVvt+2ktXC+eacic+atd34t/W3jmfavfvxMdL
8V+7fhf+6J+o/+XEh0W/ZfFpa+/Ep0vxe/E/e0feZ5tj7caH7fc58VGTO/Fp
u38n/tv8vs7xW7t/J35r7Z34tcmd+G2TH9I5vl2Kj5rciX9b/zjx7VJ819o7
8X37fU781+RO/LcUv7bvd+LXdn0nfl2K31t7J/4o+zvZ+WNr79jvdv8a3/ii
rP+cFpy/l4p9wfV6WNtOsPvjeYIHYAfo+n+pxH/fFPuBdsF2sBN0ftMuWAo7
oav19+H4gl1wfbsOt11/FtZ98ulPkfV/ddgNrGP9mNgPrE97dLuOuLWfKed7
R8v6b/VZE9+n/kDsB67rc9t1rpvnMzqt23x/jKzfF8CuuAJ2xppiX7BeNN/f
WNZ3zu8lmN/viv1B/cB5v7fYF4uxrm+CdX6UrO9ct/n+z2T9ngS74jDYGTPF
vpiJdZ3r/F6yvuv8f07sD+qPu6A/KrEv7oRdIHW47f55bpPnOL8g6z/thjPa
dczt+rQLPtOuI279uxXqrbMO+46y/rP+L+v+xv3a9gP5sTw3rfkpzv6UyZ39
F5M756+b+H7n/Rm7vy78deZouvtP9v3O/pK1d/aX7P6c/Tdr7+yv2fc7+zMm
d/YfTO7sH5T2l2x8OfszVfv62f5KM/4675/Y9zv7S3Z9Z//E7s/ZX7Dvd/an
TO7sP5jc2b+y+3P236y9s39lcmf/xeTO/p31n7M/Y/fn7M+Y3Nl/su939pes
vbO/ZPfn7M9Ze2f/zb7fyT9r4oud869sfDj5dyZ38rNM7uRniX7J8susvZNf
ZnInv8x+n5NfZ+2d/CzrPyf/yK7v5A/Z9Z38MpM7+Vkmd/KrTO7kT5ncyS8z
uZM/1cSPOucXWXsnP83kTv6RyZ38Net/J//O2jv5a/Z8nPwra+/k75ncyc8y
uZOfldmPkn9m7Z38MpM7+WX2+5z8PGvv5N+Z3Nm/EP8ly7+y5+Psb5jc2d+w
6zv7NyZ39mfs+s7+jPWPs39l7Z39qSb+3nl/w9o78ftS/N3aO/sz9nyc/Q1r
7+xP2P07+w92fWd/xq7v7D+U4vPW3tnfsftz4vfW3tn/Mbmzf2X35+z/lPYv
Svtf9v3O/obJnf2N0v5NM/8678/Y9Z39mdL+lrV39q/s+538Qhs/tCdoJ6h+
IM+OXFKd/+R1K8ebcoef2szvzvsbdn9OfMPuj3zSccLpppw8OHI1lV9M3h65
qDp/DwFv7kThdFPeG+cVkR8YdwEHnHLy4pTDbb9f1uebwdmmnHxR5XxTTvtA
Od6Ukwe4JziBfwZHnHLyV88Bhw8cVpPr+jtD+HPks14pHHAbX7L+XwiON+XX
gYf3S3DyPg9OOOXk2Smnm3LyWcll3QOcbsqZ7/BdcP4uBweccvL2yE3N6n+S
Vwiu7EzhCzv5ufb7nPxc9/yQ2sdOfrHJnfxiu38nf9raO/m59vuc/FNr7+SP
Nv515/xia+/k55rcya81uZM/a/3r5Bdbeyd/1uROfqnJnfxkkzv5pyZ38pet
/5z8a2vv5C/b83Pyb629k7/d9G/n/FyTO/m51v9O/rG1d/KLTe7kF1v/OPnZ
1t7JvzY5+a3C4Zb41iu2znW1/pr8sV7tda7Zf+i8Px/a12/iZ7r+kd/KdU7n
J9e1NdocaZOTL8t1Tucf161VsI6NlPWL6x65q7r+cV0iV/VIWZ/2W5TWHXLC
df05GuviHW0Ot90f58+OmD+/l/WR8+/xNsfa5FyXhCNuz/csrHuntznk1p78
1mvaHG2Tc36QyztL1keue3x/sqx/XNdub3O27f6gdy2vRtcvrnvkzn5a1j+u
a8IJb84/jE7r2hlY52bJ+ubYb8361Xn8m9w5fyLts/0nk5P/SO6jtuf7/Nyh
Iif/Ujnf9vzxvnLCKScPkpxIlZPPqRxuytmO11E5+Y7K+bb+x3W/rhxyyJfu
lNpNUc445F8Hj/NQcDqz/iNvFBzSbH8A7cgJVTn5luRaZveP676I79Hnw3bk
Xqqc/E5yO/X6M/A+uZzanvxS5Xzb88H79wgn3Np39o9s/jr+kXf+oVvP3zr7
wzb/HP/E5I59bnLHP7Lvd/wPkzv+g8kd/8Hkjv9kcsd/sP5z/Ctr79jnJnf8
L+sfx78q+Rcmd/xLub/M/zC543+U/Ce7f8d/sus7/lPJf7T2jn3U2F+dzzfa
/XHcM46o+SeOfWLtnfXV5I59ZNd37A+TO/aFyR37wX6/Yz9Ze8e+MLmz/prc
sb9M7thfTfy6s31o7R37y/rXsT+svWN/2Pc79ofJHfvKru/YT3Z/jv1Ut9tn
9qFd3zl/25xv63z+xuTO+tnYV53XP5M79kPTvvP6b3JnfTe5Y/+Y3Fnfm/hB
5/XT5I79ZHJnfTW5Y1+Z3LH/mut3tq+a8zOd7Yfm+XW2H5vf39m+aPZvOts/
jf/T2b5p7q+z/Wdyx74T+yI7/97cX+fz1TZ/nPPDNj+c87/W3jkfbu2d89U2
/53z0dbeOf9scud8uF3fOf9s/eOcDza5c768eX6dzw/b/Tnnz+3+nPPz1t45
fy7PLzs/Hdv3n52/t/bO+WqTO+er7f6d8+P2/c75cLu+cz7c+tc5X29y5/y8
yZ3zg/b9zvk4kzvn2+z3Oecfm/Hf+fygyZ3zf9a/zvm+Zv53Pv9ocud8n32/
c/7N5M75Sbs/53ycfb9zvtL61zkfanLnfGWz/9T5fKC1d86X2u9zzg+a3Dk/
KPZVdj7Svt85/2jXd84/Wv8550cb/dP5fKjJhW+anY/h//k5tb/JdyVHVds/
iPdnCceccvIulSNOucMfNjnbKceccvJLyS11fl/sEk465QvRbppw0O35yv6L
yskvJ7dc5em1OR+lcvJbyW1VOfnd5Hbr89kZ7XgdlZNPS86sXv/7eJ/cWW1P
Pq9yyCnn+0E45u3+a+wTcKJK/Re9/sd4sPZzUM+W3LB3wEGn3OFj2fXHYVx9
G+PsM+CMU05e09vgOM0H55xy8qfInVK+K/mz5M6CQ2ty8i+/BI4eOJgmHwye
uHLGKf8T+H/kWO4FDnp7/M2Zfj/6cf0Wx/xD/QrezSrg4HwATjrl5GeRm5Xt
74D3MwkcIPzf2pMfRm4YOGImJ0+H3C/VfzeBr0euHjh71p7jZuv2/LDnS34N
6x6/LeMDHWn1r4+X8UV+13yMg2fk+ZPvTa731+T5XoVxNwHj8CoZf6rfPivj
bxbG1R1tzlnTv3juHAefk+dPPuPqbc6qtSf/SDhroX1/K4U2174Zf7Nkfm4o
44v8I3KPrpfxQ/4XuV8jZXw4fCmTk8/EcXS9jJ+hGDfkND4h48dZf+z5OOuH
yZ31weTO+mny9JqtDyZ39K/JnfXX5I5+NrmzPpvcsR9M7qzPJnfWH+1ftT9M
7qxPJnfWT5M766PJHfvB5I59IM//LeNCgVNt44v8aeWcU34deOXKMaecfOrx
wln3xs97LU56Pr83AIfd5ODJ9gNfFq82P531sXl+4DmT690HHHUbX+BhHiqc
dMod/WnXJ9+aXGtdf44F73NX4ahTTl4nOZ7Z+QHwXLF+xfvAQad8GHjH5I9v
Bs465eSTrtvmiJucz53c0ePl+fO58Dnp8+G4aHPtm/Gh+mepPP9X8FzI3V5B
no9jn1h78ofJgR8o48NZv6y98VHbHHT7fvJPn29zzO36u+C5nornrPmXfK7C
Ubf+Jb96FzzHreT5OXzfZn+n8/yw62t+F69H+T3gJSrnufB8rD15jY+C46j8
RvLR21z0pr6OY19ae/JHyR09B5xnyh37wu6fvEpyRweCM005eZLKeaac/NXN
hPNMOXmiu4MzuggcacrTa6P/9PmTl0yO8mbgPFN+FPjM24HLvC840pQ7+s3k
jv7I4rOyPlh7R7/Y/HDWj6p9/d587sYxptxZP+z6jn1s7R39au0d/Wr35+h/
u76j393n+16Lg+yub3b9uW3+aewr88fRb/b9T2HeTsU8Pkrmr+N/mZx89TZX
vZmfnDcPYx4Nkvnj2O92/+S/kvs6QeYv+1s4v/Z8lN+r8+vjmJdfxjx9R+an
nm/Q57cl5pVw0K095+X5mKeby/x09Lc9f81vG4HPUe7M/1C4P5Pz9+3X83f1
9EHCx3X8C7v/hzFf/or3TwDnnXKHP9rMHzy/gcJhp3wc+LgbgIu7BTjvlJO/
Ss5qNr/2SDx25bRT7qyP1t6xf+z+nPiM3Z9jH5XWf7s+79TyD0X/OfZBc76p
s31i7R37pGS/WXvHPrP7d9YfkzvxD7u+M3+sver3I2X8af8p/5m/d2F7nFr/
rY9xdxHG4cYy/nT91/HLcSmcYLEfltSp3/L6E058z67v2Gcmd+wPkzvxH/v9
jn0i8bfMPjG5Y3/Z9zv2VXN+rbN9Zf3n2J/W3rEv7fud+Gcp/mfP34n/mtyJ
D5rciQ+W4pvW3olvmtyJb5biu9beWT/t/pz4n/Wvs76a3Flf7fqO/dCMz872
gV3fsQ/s9zv2k7V37KNSfM/6bw7GxQN45ecoJ5+cXHL9/UeAF7+mcOQpJ4+c
fPEsv6fz+mr35+g3uz8nPmntnfhk4192jr9aeye+anInvir+aRY/tvbkp38U
/az3twb69Uj0s/Yvn8e+6Gf9fsc+sf4bIPprO+l/5/lVhe83uWP/NPYv3h8i
nPrC+LT7c8an+H+Z/WjtnfXZ+sd5PnZ9x7609nhQtr8xQL7fsT/t+vy+V+Vz
lDv2t8nv3HT73d/c6c3qLnmlvM1DoV/UjC+Rd6n8Y6fP7T9jn1fq/j2vSyq+
/v+6/pi1lryy34Jhxm3J+FEFOesHMk9Q6/+U5P/N+8/kfD997t2Kr8sq5/3M
7nl9tZqFV5XP/Pdy9/fNgnyWI9/7axutOfCPvcOA9Jz5vO36V9967/P/eHT1
mMbZCoGvlA++8wcv/uWLL1ndGq1fU5IfNGCFN47Z/J1q/S3e33//T75RrYdX
ynlujudMtb6Pyn8i8pM/9R83HnfRG/UDdb/u2dcvrfhK+Vt7T1157U8PDs8+
+PNVH11tbs3XZZXTf+veotr30CN7Bb4uq3zu2Mv27f3Lu+tTDpp89692fa/i
K+X/FPmpIuf6OGb8qWess+NrFV+XWY7zLTwHrvUDSvIv7nfbW9MWfyRMuOun
Awacv7jiK+XHffyK1SYdMMryH7S+Qkm+8hPrrdn/ayvG9bb99KwlX/lI4Gvn
+aV6hvprSYXxXQ8U/eW076Z8B7x/GPTQJzrrH84rm2f//vo3jvTa6/ws3d8w
vD9a9CTlbX3T1bWD6J8ZLb3SK6h+Sevqn0duj+v26nl/jtz/q/Y7tH3p+Szb
/fUK9zr9Q31FPTZQ9Fdbv/aKs6U99ZnqOcovgL76CPTYxaK/qK+oxzYQ/cX8
363RfrK0Hw99NUH0GOXUVydBjz0k+ot5JdSDV0j7M6BvqIfOEP2zCPrsbei5
p0W/UV9NctpTH1JPLpD2J0Ff3Qo9dproL+oj+rdjRT9RPtmRUy++InqScuqr
C0SPmRz66n9Dj50r+oufVz1ozw/66ljosQmiv9aFvqIeW1/0F/Xd8Wh/nrQv
2U/8l6cfSu2X8fqF+btlaNc9WPb7g/6Kw3Cd/8f77/6f3f9Kga/L2L5b2+/Q
bp/JvesvW3u/f0v9t9tvntxww7v7Q6/k9WMm4/2Az2n7rfY4bIclH10v3HbD
ISsfvMrzWXyQ7/Nz2r5tn+Xx79L1L2nNO3IhGvmzr692zbi/bAr7gee+/rv3
t2bkdf6791/q39L9X7fryd874+DVwvQruq/+5tTembz0fNiO11F56fql9qX+
LfUf1ve6/drEx/5f9dPYHrtnd/MLMV8i5en1npHwk2td35N9sGZs219N/PD2
KSO2ve2iv9Xp9e16es9rEz907q+7ILf7L91f8n83hl23Umbf3Y77+WP7PsX+
Mb+xVvu0bb+9mtXPTd//EeinhbXaZ7MK/Qe7LPZLdned7LWm/sHD1+5z6H++
Tr/wlaz+6b0vXjNgg7fNLrLPUf6zje46u/eOS6pf94zfV+o0jpv237zil984
cJcN0H5WpfbVhOHX/OmE9XrHn2CeJvuuub/v337PAa89/1594oCP37bprHfr
7/a8NuP3g/u/23fI3zYIf99872232u6BKr02fKWt/7jvp17sMySwrlp6bfI/
PhWPfmnnB4fb/EyvzfmbY6bs8Jufnvp0nd5/q27P48XVpmfscsmVG64UH0x2
YZ1eVzf5gY9fs9y2+7xW/+cPXvrukvn/rI/qeW3OP9Xfu+vxY3qtYvo3vTb2
6+rf//NDm40eDPnDVVtPL66e/9iCna67YV5199ldjw35zut1em3sm/t6nt9u
kXZNyvdpzr/ud+kLZ2981vLhyeGjPterz8L66Z7XZnz1XfDow3vv/TbttDr5
l83+0qrf2PeqtXu9CT30amafXTTqmtt3mfRZ2mV4beK/Tx396UEn9FkufHLT
g3cd3+elepee1/ft+097bbM19ly4C/VfVh9w257nuwbrA0R+jvIf7jXh4P5n
fSRu2bP+fIB1qNmf3LHlX+4eRoj+knmVza8u/FEvTJ70f/+unU459Rb1g+ov
bd/V+rP4oq17qp9E3q3yGt97G753uugn+JfTC/5lPVv8zML9d1MOuyqObenR
Rn/Obum9/PrDofeoB4eJ/hsAvUY911/0W+n5XQZ9NhN6UP3D66DX2nqukcP/
wzzbMFwm+nE89F5bDzb67wTotTOg51S/0e+ZBD05SfTj7dBHu7f0WKO/4K/W
bT3V6KdF0Jv/h7Y3gdeqKvv+j8qgYCgpjjiWc1qKOMSpexs5pKDm82QJZk6p
lUOKaYPKUdOnR3FIQQSH16kSxMQZ4cC9C5wQCQPNFBUxzRHnGe3fy/591279
9r3ax3z/fPx8bs+5zt732muv4VprXdfvyzj6oo2fx2ncYhzz8etC1ddWGmcv
svGVcfPEaBwtx897NW4tjMaxcvxaqHEpHqfK9z9d42GnxtFOGz8ZtxjHfPy6
VePqqhpnp9v4yvryPo2j59r4eYHGvXgcLNvvVzSuMc75+Eb+5XiNkxfY+HiB
xrORGgfPt/HvCxrXGOd8fGNcZJw838bHrvp/fDp/mt9fF+3fVM8/dI5g66iK
PbF/9p/7dwOj+6+W4Qe7nfEpXgdW7KwTK+XnuVLnG9rfyuLxurK/me34b+tn
tdzPL2z+yneI1qHl9becNXvS8+etkbt/h/2g6T+7O7/nBflPDzX9/rf/8fC/
Xrr6Lvnuy9ZBmybu/07Fv8N+8zL7czofmBu+f5DsL+/Q++Mrv7Vv9tyydczA
yvOr/LYOLO3fLcrffF7jmdsX3Paldeb979rsn1fuX9hXkv9Q7p+yv/v8svJl
mdZZecJu67BK/XB+UilfYX9O9Te38nxF+Xau8KWxXz+342v3f/Ez2d0aT718
k5e9v23zeB1bsWeyJ+pn7dzHN6u/DD8w0X4ytZ9w/y/Fz1fx7+z5cvm5qfaT
q/2E8tm4Uxl/6vb/+Xv7DPbCf7q9c4DGhQFdW1931NjbsPP38frTxyf2rz6o
rA8pH+OWj291z9/V+mN//9+fv1TLX+efzXvk5UsO+LhH6Pc+fn1u3Ycf+d9z
N2D9VFkfxedvy+f6DPff9Esb9Ji15/q2vi3Hr31eueumP62wGvtLWp+W5xvx
+WJfPrOulm+Bni9e/5bPt/my8m1j658yv3LosvKtkMXrn3/ZX4/2h/rlTxef
wT412p/7TMV/2Nue/1J7/rr6y0c8N+Lk65ewz5W7/zdswQaH/O76HW19WPb/
6dH+2MeV/QX254p9wB65PsP96+pnU6vfUVa/de2H8jMu+/hV9/x17acu/qJN
/+x8M6w/OVfDz/ij+WdH2rrM+6dun9x/P0J+kV2fp67X+jisL2O/bB3Wdz7/
hfJ90vEJv8uevxmXf7A9/5Z2/9VyK1+oP/wq7D4+3Sy/Cfsu5j/JbwnzwEvm
f02WXxXfv+xfL8hv4vmeNv/pVvldXD/O/C/8IuzuH70gvye+f+n/4JfZ84fy
4RfhZ7h/hN9mzx/KN19+GfZR5p/hF8XlL/2jm+X3xPVf+j+q36bVr72/bTO7
3uu3YfUbnn+i/DLs95h/hl9l9R/Kd4v8Jms/4ftVP5nVTzO272zvtxyfnpff
FL+f0n9S+XMrv/mv//R7lv27tdPHD+LXiP8gTsCvb9O/1uPPvPZZif15u76j
9ff3ydgfWtPiT4rnfrHBuHOU9pmwx3EZVf9I/SKsexlvsHfNv0yfL8bPN6VS
v8X+fZ9MflJlfXfXuTuctMVbm+U3DPnO8z+/o3d29+zVuz267erh+tUenPyz
3/6iLbvj5l3//Mj2y+UHXPLYlj2XlOU7fNm+1RezzYp5vsJ3O3ju3+5q7PbX
RtuC0dd8mL/b3P7L37lhwKVl/PR67x+04tPPvd+85sWbRu4w7dnmU8f3nNX7
oXL/c8LV6xy87eUbU658+q+vafxw2Auh/MW+UlsYl5Zs98rArbsvH64v9tX2
yZmHN9N8jn30sn2zd8I54N7yB7C/33F9r5/075Hf8dZZK04fMqd5fuOuG1b+
bckHGnT9cd9Z9L23mzOKcjU/7L/SkE2+W5Z/lWX7Ppvk+Kn4S9gvWbavs1NY
t6keg/3RdXdcssc1f2t0Lrv/+82iHsr6K85f+sLHavx+nz5DL/tBqW9x57L3
21P11y1/aKU3f332ceX+1l6XdfvZO1PfbOw2+x9//fb6HzWvOeXUKxZm5fP3
WVb+7ir3ChX/aJ3Oyy54pH//XO+3sc5+35zxnfaSn3vCqF49Z09vy64/fIfj
99pnufyp9kMfn7PoX/iPy/at9sr0firxZe3L6rdfpvap91/qX/Xf7J0Vr9u7
e37Wrafu/+GUec0PLx7z5OJTyvfTtfjS9PhAv2fd5vsr7I9vF/k/eXvr+9/X
7us/fW9yf7yr8bOp+NG6/bW689W68Zd1yZ/Vvn19gl+Mn3yE+cese1gH+f4q
7drWERb/1Jf8m4p/LP+/Sb8ba+sT+fOZ+fmhflgX4ff7+ojyb6zyd1r5v6B1
0/R4HRWuZ9z5k+rP+U6Ma7ZOCdezbrB1RLDrPCLsq/v5xGWqn6Gqn/FWP5nW
TePidVS4/8V6P5vr/Vxu74f96wM1/nr8VN3zHaX2My5eZ2Xx9X0z1sHn2/vT
/nz2nXgdGey0n/GJ9hPWZYn6rTt/i/2KPpn7F8XnvM4vJvaH4n2bF7UeqcTX
0i+T+ydzasaP1PiC38K4cZ35L8rraB+Y+P5E/FNb+H75JXPkp/j52p3yO/BD
3P+YKL/lTvkx7r9sIr/kUPkpPn5cK79jffkh7n/gtxwqP2aA+S8HqF3hZ2xq
/sVk+Q34Ee4/4Nfg53SafyN/p4mfsdT8C/rPF+QHvWL+D+eDY+XnDDX/Zpr8
igXyM2aZf4HfgB/h/oPeX9ZHfs5Q82/2kF+Bn+H+RXy+tVO+pfk/6EfOlp/j
/o2eJ19ZfoqPHxPkd+CHuP/xj/mF37Ku/Bj3X4bLLzlNfoqfr3XI78APWWr+
h9pnjh8zzfyXru7v8ptP6r/E41FbW+v8oxDf3eH7w137fuIhfB+o8v0drb8/
XN/m19f5H6sOGbvzPgteDeOgr29GfHDYVVufC6+mrcP3H768/hbH3rPy0sYN
E//vv9ntT9r58b4rXvq9d/qhl8b9y/HjBN2/GAfHdI61+xffT75YW0fhT5Tz
Q939exyw7U9u/fvGdv8yfqC4PgvXu/984rLvL3XrPP7lb7+f3b7GZd3z4vkf
6zzOzu+t/G1e/rr6p/xx/Zflb1t2/Z/C9d5/rfwdXv7i/suH5y/8lZJ/au+3
099v3ff3XHZ/8rX5/nL/yL6/w7+/7v3Y/dv8/vZ+2v39FJ95e5z/VfYvzx8h
jgZ7nH8T8nBs/5f4wg8aO8gPwe7nMq3jf9LlIz6SuEjFc9r3Ez+6ZYXfV/f9
oxUXc6niYrx9zoji694K/jx2jwvx/KnZUfzjkkr+Wxx/+DTnz8H+bYubKT7L
/Ns4vo/4v5KPd7jFDY21/UXi+85TXIq3r9Oi+Dnyu0r/+UyLOyo+y/5DXInW
OZni6IKd+ErVf+7jbxxfGuJMw/U/trggxQsFex+Lq/Hz+WsVl8W5kOJQg/0J
xd20K+6m+Cz1vbeO4gf7VvyL5y0u6W7b/yQuibjJ4rPsP5corkfvp7L/8TWL
22I9gt3jtv5s+UfFZzq/lfyx1P5F8TmvPbU+4f58ftL+z/7JQPXvgTb/x+Wv
ri8of931zFPe/1W+TuYJj28tzqPu7zxJ8/w11n65P/O49//ic0En8+jTNn/q
/u1du39W2Z8vPh9tf0bzhMffda1889pPVPl8ftf1bczj42z+pn5+rHl6lM3P
fD/zrPcf7Myju9j82bX3N7l9kN7fQp/fo/sny9/+6cqfd/ZMlL+4/wudK2ue
/7WNv5/2/er+7an7M28fEecJ+PmMneuW/T/OS0jF39bnT/GpeJNwf/YHiLvj
vNeu5/yo3ft/kb++sFnsr79TaR9H/eXGXc9a9MdGsX/8YcP3j/9r6Q+v//51
7zRuPGnt2/Z7ZflsjcUXjBx5dHV/sNiX71PpP+wnjVym39EtL/YD1gzl+2Zx
/yb3/b2+B/urT2w546QN1g3nLipnuX5Ylne4fc73FPffLFzPfD5M39uhclj5
w7kMz4Gdcj+0rP4eUbxCub9AeTh38f0B5vOi/tEHcvuS0G+Kfdg3/f00eS+8
J+xfKt5veK9/0nu28oVy+fkQ5eG5Fug5sV8e7Q+/WenffC/3+ZOeE3uvvnN/
svWr3bMN82e7zRu0Yjbhp9N/uvr3/1yuP4v3p+/frNK/Xy/efz5J9ez7V7p/
zn3X1/dg97xuz++eI7/4gXifP1yP3z0t8sNL/7tu/yD2u6v3175ffkScBxae
H7/8Evnpvv+H3215JsE+VX675ckE+xi9X8tTCv2L9RTx68eZ//28/Hb8+CXm
v5Mv84D87PNt/D1ZfjN+9MnmP+PX4+dPMf8ev/rMyM8u/Wvyy1kHXGX+P/tV
HfLzLzD/Hr/6KPnZ082/vlF+M/kNN5r/PEZ+PX7+aPNfviK/+ok4j8fK/3Fj
bpRfUd6f/hj7+a9Xxuet4jyfUP/4c/jhT5r/jd/+TJwnZd+/bT5Wfrrv/z0k
vxs/3PP/p8lvx4+fbv47eTOzE/l9dfMnvx+YmH/Znx+Q8J+Zd+mXPv/O13jb
TfOsn+/dpPlsP82ja9n8OVHj8wjNwz7/bq75iPWV98/VdT/dv3mTzZ9naP7i
XGm4zb/8zDzp8+ODmg/4/XCb/xiPX9M87fNzU/PNxGj8Luc/2stJmscPtPn7
kkgfom/u8zP1ta/mSZ8f+T7NH6E88ft7rkG/9Pn5AD2v/IDsUZsf6U86J2z4
/E3/HaB5eq7Nz/vo70drHPb+uYHmM+bRSTZ/Ut7L9T0P2vyLP8Q86+d71+p+
vTWPbmjzJ++Nedjn3zp9prr4HeXfZnMT86Pm5/yBxP7VkKVj+91/YFuuz4p9
qH6/p/7O7dN+M7v/yg+9zWdlfJmu39+lv3N7fvvsBVecsEmmz8r9H3z/jb++
9eA/y1V8Vuxcx31S5R+aKD/3ncv3tL4+3zNRPyv+apWHtt/p4aY+K89360kv
7/bq9ivl+qzuX+o6fVbqr1P115moP+57m74nUf+NuxLvJ9Rr4vn5/dxE/d9W
8/08/22J52+9vpts80/6/Efn3jn7yx7fp/irEHfl67cifqp7Hq8fyvNDnYs2
iLty/1/xURnnhj6/KP7I1lc7hvvvWZxbhrio3YvzzHB/xT9l4dxQ58XYC79s
nxCfwHki9inFubWt/3oH+8TiXDjnXDgRn5cP07m44vSCXeeeIe5KcVhWf/3y
eP3VO9j/VpwLh3nN52/F95VxfYoDw75qcS6ckSfxkM77sSv+r8G5u+IAw/U6
V804Vz2zOG8N9iJvsS3E/fn8Mq+IK8jj9WPZ/nQun12gc3nF+dn+7E4hLs/X
b8W5/xdtfV2eX+vcPMTd+fqZftFP/cT7R/FJvwrnH8HOeb7O9yv6VR+pX7Sr
n7h/QH3Rz/ax/nWj+o3O3yv9h36h8/3mHtY/4vXHXvmB1r9oz4pDrbR/4j1o
596+11W/0/l9pf/R7ukHE6z9f0798mD10/2tfyqukzjUin9Au6cfePtfpHat
+BLiTcrzL/UnxQfk3v9o9+uqH5xt7Z9++ZT6qffPvdTveqsf3m/9j3gRxY9U
1k/0i/fUT6Za/6C90c/mWv8iLuxS9aPK+kn9Yor6ifvP8fr2i/nm1r+0P5HP
0qfHVxf7UmsQd1uJfy7G+90t/raM31lvwIW7/u5ny2dLf3HI9xduukp+7KHj
/rjii+X+OH9fzC/9K/HP++p74/jkko917jsvzT120MfNQ17bYGq3P/TIuy15
7JhF+5T+f7FfuHH2+gm9r1s8dY3c9ycnL/Nv32jKr833XL/f5/o9XMbHFHpr
vfMxj+6/uOddK+QvLP/na5bcUMa3LF6mB/d8s8fGnxtwVs+V8kM6//LW91Yq
r59Y3L/xjeK++QbmP08uypevW5Sr+UZRTv/+TN9LOYL96eL7G/reXOUIduI2
VW+V9qn6t/jn/l6/DdVrfmhRz8Fe7MvtznuvnL+p/YRzS4/fVvugXeQfFu0k
2DXvaX91jUp8rP4+7692doy1rzh+cnfFR5Xtc5La3Sb6vbe/w9SuRqmdefuK
4y9Xy1+x9km7+bnakbcf2iXttJ+1z+5qV7SzQ619aT8zv07teA9rv/oZe2X/
k3al8mXevg5Tu6KdeftaR+32JrVjb7+qj3yI3ru3v+5qV6rfhrcv9D/k/+Xe
PjX/5N9WO/T1q9pDTjtbau2L+L4H1U49/q5O37dO/3Lxlv3++2sfLkd8RCW/
lt8v0t+5Hd5Zc9b1Xx77wMaV8bcuf5fruI/b98s3OO2Z93qF/AS3e3y127lu
X93H7XXxTQd+//7OCdt+1Czy3Kr312XJ88sfLtvXWRzmbbdz30P1Pf5+uG6E
7uP2iwafvfnxJ70Z1pV+f34/Vn/n1/e/etttZ361b8jb9OvZV1xXf+f2Ij7u
PcVxvSd/tdw/erF5yYQvDlvP9A3K8cvi96j/YH/slcfeWOuGt5r3Hr7H0b9p
+0fjnT+csXtzSbn/Sl7B1ER+9elqV+QVfn7Es++//fMy/7Mo39BwbsE8EdrH
+6es+P6NX82Lcq6VOd9vxMDHO8c835avuMU9zT/8uC3bbe/ud37l0er+RWp/
59GLTrxit35fCPFL5FNir9M3fO3+vx944Fb3Nz84p/HAwyOXNg7sc3z3DV/x
8/HJnTvr/Nzj4/acusceO772j8bKTx35qxmnvNs49Y4/jHz9ufL85bj9e339
i/+1XJaNmDJs9NrvNp578tDPX7FhaS/Kv7T5hThPK5T/Bxbff5TF94//xrVt
U/bqlg1YaYM798jeaYzvd/DU3gvL84PBT/3lV6fO2CW0T5+/j/j7HzpeXHvF
fNy5f3z8wZOXy460+HnyM2mH46393aN29bja2bvWvlTRHbTTy6x9bql2s1jt
aH1rPyupXdBOdrf2Mb0mv4T9syGJ/bNX1K5pl5tY+z5B7baP2rG3X9pN2+yi
HXn76a12QTvx9nGh2u1steNJ1n6/qnZDO/L2k9DXDO2buB1+4/E7W6vdLVA7
9PZHuxqndna5ta9Y13j53Nsn4x/t0NvfeNqd2qG3vzr9fNePrqwvauKH5370
xu4H3BH0ASv3p/2m4oOK/OAtsiJ+5rOV9c1U3ZfvaR2//Nmc+1TytyL/YPnK
/Wv1I3Rd7B+U9t0evmvdn/x6tYx9WLd7/pL3f67bXfdx+yztB2j9Wrk/v79H
f+fX337Kyy+d1XcL9lcqz8/vb9PfuV3tv8nnuRPuWPjMSuX+we9WWWHAxd/e
MBv38B8e2/7IRc05/W/83OtPPhyur9P3RXeHOKK9x+wy/70frhvad/GZjm8b
vtq0U+7r1Svfs3lR86nP/KNZzMel/7roypfOHfPX15v7HPv0Nw++54PmhI32
umXPDavrP+Jrx0XzXNl+0EUq2tEbZfvb7aEpnVc801itiB9owkPAfvCHHw37
cMT2eTGOrloZ/9h/vPHHm175yx3fbP5oz+9/Y/nR5fkb+/6dif178j3I3/Hx
Z6cder57yW/+Oe594ZrF9270VtPzw3q88dh2z7z9leAX+PhypuWvnW75a68M
On39DU9fIT/mG92u/8mPPmoe8MORt764Zpl/uIPe68N6z/5+eW+8R39/49Wu
fqt29qC1r331XnnPE+39JvSfQ/uryz9QXEhzDb3nve393qD3xns82t4f+aGs
7y639lV3vjNe7S4ex8r2t7fa1SFqZ96+vqJ2MUXtxNvHs2oXO6udON9nnsqz
otqJt49j9d5fVjv4jr3/On2ZOr7K3p/Jvz+9c+2MT+c/X/lu/ylL3t8o+8tb
e//qrEYf7V+V+hnraT1/4Zemd3brs3220rJz2pKfmND37sC+/6nvH3HzAxtQ
vsbmVw46Z8Pei0P5um23aZ+lh/Xn+zPi8bA/MfPN1bNjV8/+d9xP//uAX2yW
sV+GffIlm/9o6z02CXwufz+nXbX5qCl/70/8RwYHIi5/Oj+V50nFf759cf8F
76++cVb4V6vkpy3zrxaF+vuV4lNuXDY/HJDNkd4J9l+rXjn37m31e1oNf+IR
vTfeX7HPU+4PTb5kgx9mv32hueNB1z+yzo975sf2vuu7Z11bzj8T/+fY4yd2
XyMr3ssbTfZhsFt+UJvnB723ff/brxz7UuOdQ+547pxrVsh1jh/uf82Ogza9
7qYe2aPLyvdx8+QfvXrm8vv/iz71Xc3dOtZ+vXHPce/NmrrFChV+yGeO33al
PsOWD+fP/n6/N/p3a211RkP+w9qZ8+Pqzl+L+M5B4XyvdXzvok7yfH5s8b1/
PXSDXVZ4YLn866vf9PQvJ/fKdzl/ox0/+7Vy/835Houtf/L+rlA/7Gv9L6F/
34H9HPUL+skp1j+eUb/7lvqh9z99f9ZD/XA/63/UJ/3M679O32xT9btT1A9/
av3P8q86vP5vV78hzmuB9R/6Hf3wFOt/O6vd/1794Dhr/0W7fbP5rj59/3L7
tlu3feHiZxvF/uWHzaKey/OPuvy3nYrvz+5dfeFZV2y0vPKz/4WfVXxv47WL
+g6bN+Kj5jWb7bTX1v9Vzo91+mdn6P2gq3TzsvdU6h98v/Hhb776aFv2WZ3P
9fz8hR8f++vy+rMGfv6IH/50N+k3blFZn9fxC17+wa9+ctYl3fKly9ahLzeH
L1t//ov+cQ2/622NG//QONLLxg/Gjas1jvzUxo8tNG5N0Djm4xfjygMaZ/5o
4wtPwjjn4xvjTh+NQ17/dfEvjEsHa5zy8SmOXxtUGX921bjCOOPjC3kHPIfn
H9Bud1I7ftza731ql+on2bXWPt9Qu6SdXm3tk+/V/lpFv512u2dCP4J2ebja
aQ9rn8STxuNQ2b61bs1px15/H6hdvqJ26u0zwd9ow563T7r3Nyfd31ikT+cz
91tly5t/dHKPvF8UB1meL2hezNrWv/pLS4b9ReNLGb+s99N4Tvwl59MVn3nn
qon8lpsj/boPGkdMO+uzI4eW5zNnnNnxt7svWj5b4ZCBXzh80MPN79zUdvYt
M8vvL+pzV/Ofyvobs8Xsz/T7n0Fhf5VzWuzku81M6G8sWq94buphA3v+I2r4
VcX89DHjQIg3xa5xNZvwuxM3u3TG0sbU3R+fft0PXwr2Yv+wh/Z/V6y0P+o3
lR+0w4xHR076P92yN/c7aeKFIz9sDLnyyZljXi7Hl28tGb5o76cGB30tr789
bjp1v6uu3l37MxtX+LZ18W11fEOdjzX6qh1+09qf5U93+POvqHZxptrJAdY+
tlO7ukPt7ChrX3G/3PUT62duo3Y1Su1sN2tfE/Veec932fulXfH522XnkIuD
vf3OoTP+OuUN+B+V/lPH9xnd49s3HHT0P9elR2998wGbdMuK5yn9szr9UJ1f
5PdJN3CnSfnKp+63Vvj+r+33v/M/+P0/2+eTfz2lbesljZu+ctw3BnZW9EWT
/Ena9W1q5/58tNuBasd7Wfuty8/X/l5OO/fno93emohfpN3TD7z9k8+wk96T
l5965z14/Sf4S+H9xflXO1bKT73vovfwe6t/9B4pt7+/Or4nP19qfxfa17J2
39v0y0s7+pkX6e/crvk/43P4pD4P7bL7Y6F+jn/+Tw+vNvLL5CdXnr9OP+HO
F/r9bO+ne+ZX7bjekNX+8o/G3X32//i8b5f+w3Tdd4S+x+/PdXfoPrPser63
h8rh31/HN+Vn/7u4/S2fa3yX/k8ZX5HQV6jsv9OiEvq92CvxtaavHXQosaOv
/mV9Hi29YL/e4tvzrn4/P8cchQFdvt65ya4Pjt8R69Lwr7w+xZ95Ytm/6Z1F
/ujMzh1alj99/0J3Y6L0kqd0en45fNO1jHOK3XW3Zlv91r0/9itmGQcVe3/x
TOGaDhfnFLvyPtDpa/RUnAd2zvv53Nrs8E0XGOcU+3U6jxitT89/0/lK85qE
faTWa2fYPhT2or99c+YF+iyuP35wV6+fr/2QF/T5tvZJsLN/8qTto2BnPjzK
OKfYnfs8X/5UV68v3ss2g8fps6jHvWf6/Z2jiv1c5UOeb5xU7KNs3vD8PJ9X
xpsdnjNc1JXFSY3vv1GIn4ezip14zwujPKjSXqd/ldDfbHb1+q7pa81zfYry
/bXWnwnlT/CzwvUJfZpQf5+2/Al99nD/uudL8KWDPaHPU7k+zoN63eqvoh9U
nk/X1E9CP9HORyv6O2H8S+jLhOsT+jDBntAPCnbX34FjiD2hnxOuT+jjhOuX
mn7QC6Z/fnBrfZxw/4R+TIY9oT8Urk/oywQ7ectTY32iUL6EvpK9v4o+UXj/
rq/j+ugJfaZgT+jvBPvY1vo7oX5Wbq0vVJ4ftdYPCvZtWusHhedL6C+F70/o
K4X791327+p2/Bv3Tz7t+BLzDoJ/GsqvX3eYPXz/gOjv2zq2i+5XKX97F8vf
8cnKX+ZFp/gVqfKTV43+yI41+kcJ/cLk99v9O/3+dfVv9dvm9buLxU25vlac
b8/6vIzP8nN5778WN9IR/3399XbuVInv9H1TP/+xc+GKfp6dK3Q4X8LjXrz8
dfVXV37fN/Dx18+1vfzx39/WeUN0v8r76/D3V/f9dv92v39d/fu5jdev64rj
D2HfOVqfbpn/SP4Wdviopk/i62f+JfRHnQvBv/rrjS/dcD5r3f2d2+z6LFqf
tqfWp7Gucskh7Gr5xa9owqVpza8oyzfHygc/tZ9xMvz9ojMzx94v/hS64/hb
2NEfR/d8nvw17MTnXa2/e0D+HvaTjft8hvyt+P5zxXUudVKws97Bvxsrfw87
fFTX+cCeGxf66/K3sB9nXGd0ZrC/aFxqdGawT5M/N03fM0L+HvbzVG+Ks823
lD8Z2pf8ncdNBwX73caFflb+Vri/cZ3xt7Cja48Oz3T5e9jPkV8DF/Ve+XvY
4avmug+cVezwUfGv4KRih6/KOhfOKnb2G+CmwlHFvpVxn38pfys8f+S3bZTD
m47tJVcavUjsdf6J7w/5+se5Dd6/jS+YEY9s3+98sLrydXS1/Pz99onvN75g
hY9qfMKgd9/V56+rP9e19/01L7+vn+vmL+P3NV1/yvKbGu4fGD8ucOSwW/xr
Zf3qXAxf/zrXgDi/rpav7vmG2Lm7r28sfqeyvjG+YAZnEHt8ft5PfLEyfq3u
+evqz89t3P9yrobrrxpfMIMziN34hOwzhO+vq5+6+q1rP3Xlr3v+uvbDeg1d
uN/a/jT9lX6UOj8wTk3l+lifakDl+rb4X0eNvc3t7DMeYfpXPJ9x6lP2in/G
/fETnZ9h9VMZn+38Jj/ann9gVD8fBB4hdvOvM/nXlfLBdYY36HbGB3iG2OHC
NcQtnCyeYevr5+r65yr7t/RfONF+f3HncvHoKvXHvhi8wET5m54/h504IM5J
W9uXy+Ehev2Le5iJh5gn7Dm8xET9NMmDTNRPA0602/Hj4Dxj/1JU/o0yj2+k
fF8TtxCeYcKewUtM1F8TznOi/gInOtF+crWfyvXoasN5bn3/jYjfzPz+cAvh
GWKv46euaVzCte38trUudclXbW3nX9Legb34LPfv77b9++K6F8M+u/NR2Tc3
/SV//7nx50v/pcZ/cv+q9flG2L/q8PHNnx9/EftdxvVxfRT4hoxP80zfBG6Q
6SMFO3xC0y+y/f2SG0QcFvb1jBsExxD7lso/NH2icP314v7MiPWdgh0+oelj
Wfn2IS85xKFgJ+/I9LHC9XCJTP8o2OETmv5RuD98Q/yseab/4twe988WiTtk
+lLh+/c0bpD0t4LduUTSVwr1t45zfVrqU5XcIPQAsDs3CI4hdrg+pp8V7HCD
GJ+Gmb6Qc4OkbxWej/P+P8QcrlC/bfbP7fH5YK/K+HZkxGfuVfHPdNsOPltf
v1qmOL5mzfWJ8qXXd/ze/KNgZ9xS/VS+/8iI37xl4vlXy4lDdDt8ZrjMbscf
Yvxx+0Hyp/Cv3I4/g3/T+v7vhLzX1vbnFF8xt/L94ivDVa7cH3+GcSlxfYhf
Tjx/GJfcTnwZ+QOJ+mm+Kv+tdf1vm7MP37r8O4d1S+L6wGVO1G9YN7odf2qW
/KtE/Tfw3xLtJ3CZE/Uf4vJa21fKzpV/lWg/Of5Non7C+JN4vhz/qnV8VpoP
iD/RT/4F/gb2uv1x9ntSfAL4IOxvbdtyf+k3nXF8SGr/plr+OWafbXb8IdZt
7r/Ufb+ff8YcxJJvaDp3wS7dmjzeHy/r17nN0pMM33+V/BHToSvP9+XPXKTx
RXqG4f74Q3AP4SBin2xcZPwJ7N+VP7KV/JOj5K9gxx+Ba4i/gt25z3ASsbN/
bzqIdj5XcqHRIYnvX3KR8Sfi8pXcZfwV7PANr5Z/MkT+CnbnPuMvYYdv+PtY
ZzHY2b+GiwgnEbtzlY+Xv4IdPiL743ASscM/XCfWUQz3d66ydAiDfbhxm+E5
W/vMp8U6h8FOPBf7F34+/p+tn0p+See0Zf86Ob8fYONbfL9kfG0tf/nf86VD
fGxl/6pr8WHp52e/j/2/1vGFHzeJ/3zI/HN0kTjHYb8XO/t96Ap4fCXnc+ha
bGr6jOy3isPQcP08+MpwlRPny+H3rs8IX5n4GNfHYb96auL5PO/R+aiML4y/
rm/Jfi77u4nz9Zzzuz9oPxY7+8XsHzv/wHUvvP7i862NKvqqvJ8r9H5cP7Ou
/dTVz/n2fraw91PXfvDbRsXro0r9Ua9Trf7q9nfnRfGJ1fjw4hM+2dsNzw8/
0vwS56OuadzEtVvyndP3d26K89eJv5whLgtxCHH5Btv6CT3u+vvPMG4KcXrY
4/jHjwOvBbtzWTgnxh7zDx9qcs6NfbZxWfx8hvPyY8Rl8fzTOP5ybkXfKI5P
XND0+KM4/q5vmMfi8u0S1hfEKWInPg/uofPdif/8qbgvxClgj+NTl1T0/+L4
0BCnEMq3qnFRPH8n5ie+UxmfFhqXZZDO2bHDfYGbOMn48X8zbgpxBNi3Ni6L
n28Rj/C4uCyu3xXHrzIOlOcPcfwm51fl/nQcv/qPBnGs2OvmV/2PcQ1LO36L
5Y90YI/zN96u2Omvrcex+u//tPev239G187j7LC31rUs7a25il2/f2tdstI+
oiW3sLx/67z7rt//xJZ5536967Z0vXytuX5dL39d/deVvzXXsLTXvT/yO+O8
ztLes2XeXde//9Pev+791NU/P8frk3J8ivvNfe3OR43jWl4MHMbW11f57fNq
4gdD3E2Cjxifm6+WyJ+pnL+E9dPBxm1y/hD8xfj8pVx/S2+pkeIfnh/5fVV+
Ie02Pn8p/Q/xG5spfuOJ4i6l+HuvGtfJ9f1HReuOKv+Rdke5hxl/ivvW8Anz
Gj5ho4ZPGLhO84yPpPfTSPExDzaulPMD4ELV8CEbNXzIRooPeZXGtfj8pdw/
Qa8lxT98w7hNzufS+7fzl5K/1cu4UM5vhC+c2n/U/kJ7zf5CB/7/rNb6MMn5
vfj+hzuJA9nJ/Huup/96fJ2ub6+7nvF950hPtbTzHleO9LBL/u4YtcMTIr3m
8nrmvxMiPb9yfUS/ivVMS33iuvsfo/F7caRXE3Rk23n/sR5UtXwntixfW8eY
RPkK/u6EdsapWK+prB90BntGemfl/ZnfekZ6CaWd/rFypLdRfX9fTry/oOtt
70/l76wpf+f/q/K3WfmL77+L95P1iPQCyuvhdD7zCd+v7t+Zun+cf13lp8bz
6ZTK/Opc5DmW/+jz+0C7nvMDfu/nB8zX8fxdnj8wn64dcxJD+eE3sv+3ouZr
7BNt3D9B8z32NXVf4zxa/GKfbGyU312u7+AzHqh58QKbf+Evwl30+Z/rTo85
j+H+MRerW2X8Z16YoN8z32OHv4hug+sz4p/AbYTjiJ35Llc53D+iXqnn4Zpv
scNffCTmUIbyzbd5c0y0TirnV7iLW2u+xx7v271Z4avCc7lR857ro+1jfsfo
aB1S8hnhMl5m/sX1uq9xHkP9wW9k/w+Oo7XPpnE4w/Xsh7E/5vk5tq9eyU9J
rJ/bUtd7/Dfr63h/v8xfOk/7YeyPef7EWPJOyOOw/BP24zrZp7f8CsZFuMWe
XwLvnvlrtuXPsB/3jvbnPrb8E/jF7F/90vJrLtR+GNz5By2/I47r/qhxpuVX
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
ea94e9jhf54kbh88P+zOxYOXh31l4+65f+fnF36+xPMem4g/fF3cPd6/jx+P
GXcPzid2+Lmri9v5iNW/c3eH6mfs6+p9w9W9QO0Bu3M74ehir9M3husJVxfe
J/bHxQ1l3+ts8URD+xW3E64IPE/szgV1vhPxDxck8g/hdo4Ut3Mv8Tzj95eO
Hzxb8Q/3Smdignih2N8xric/Y4cPChcUXi72RH5GB/ZMXMWF4iqKA9K07w/c
xFfFU8QOHxQuKJxQ7M49JE4Fe53+IPxPuJ+ftfMn04+GXxrsZ4urSP+AE4r9
ZeMqfiTeInbGp37qH/SX8P0aLxcn+C7wbU9T+4Rzi71On/sR40p3V3+w729s
pv5Ff8Nep//o3Gn6A3b6y8nqP/Qn7HeovcY6KWV+XF1+jHOn6U/Y6/ir8D/h
ftIesdOe4Ya2q71jhw9K+6a9Y6ek1NsIi192Li0cUOye37yXxf/QH+gfPv58
qPY4TO2T9op9vnFv4YjG90/r0zOfMb/BqcXOfMn8+ZY4t9jh08KlhVMb2p9x
uZmvsR+x7N8d7Vcm4r8frDn/Zz49X/W7iuZb7LdrPoZjeIjma+y7GvcaTm1o
X5pPiSt+Q/Mt9kR+Vxv2w2v4TPBF4YoG3qrscCPhgsKTxA5fFH4rnNG4/c5r
J36+h8XP32rcRXiM2OGHwg2Fx4jduYjwErHvb9xF17fz+IvbbH22hrigcGk9
/yo3ru1j+hn7z42f1faDmG/lXNcX9D6ww6eFS+v7I3rRIf9gVcs/gF8LtxaO
LfbR4oZyzujnF84l9fHB9R+mmX7Bohr+qvjV2fXijr5t7W+icWlpj9iN/9Dh
+d/txsUkTzw8v7iYM8TFhJeJXfvz+Y7iVjqfh7gV5nefP+GTwiU9UbxM7Ouq
Pe2r9tVH7S28X+MOw5kN9pr80sBFUPu53fRt6/STnWtMe8C+tdrL19V+zlF7
wl7HX6W+m6p/3gd24pZ5vh31Pq39hfc/yfgezoWFU4qd83Pe33DT57jHuLPe
/p1rDCc2fL9xkxnvsCfyf8P7q4tPgy/L+4EzG9+/5CYzXmJ3rqrHD2u9l31X
XFR+xl6Xn3yCcU3hqGKHjwoX9f+Id4rdy+X8vtHGdXV9Y/T5mJ/H6O+xX6nv
g6tKebDPMO4rnFbsdfldJ9bwV+Grkn8LZzV+/o3IC8pPNL6g8QWazhfQi+hI
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
H057Ik9qrMX3H2dccI/ff9G44x9Z/Dz781erXz9g+QlbGdf7l63jx0Pe4qkW
H36ycb/PsPyFy9T/x1keF/Zz1H/pt/da/D79P1e/X9Xi8+m/7eq3Cy2+nv6P
Pr3Hz8P9pt9ea/kdnG+jD+r5G9PUf8l/H2H5E+cRN6N+v6XlR8A9etzytLDf
bdzxZy3/ID7f6JttbfH99F/PY8OeG3f865afEZ9vbBv6ufeftpb/2B9wLkVp
72r//U/vX3c+Sf5zrKta2ltzJ0s7/bdHpFtbnr/U3b81l9Pv77qG5f157zHX
suv3Z90Y656U9tbc0a6Xj/azX6Q71fXy19V/Xflbczu9/On3R//qFulquN3z
vrv+/Z/2/nXvp67+6/zrOJ+lrcP5MnX9s4vxU7Lfp/V1eX/X5XX98pgX2dbh
/NzYX2tr62H60q4L6XzceD02pf1Eu/8lkT+7oN31R+vub7pobc6nPcZ0fVx/
D17l43cc88//pnX2MP2i2F9f0P5N03+z8nd6+evqn/Lr+9tdn8p1LZyfG8cj
TWn38ruuSTfn68bvt8Pfb933m25Fh+s32Pd3+PfXvR/iKng/3e3+9n46/f3E
+XXV/e+6+J26+THmCvbJnS9IvMTK4j75+on4XDiCS40fyPtRfkTT4y/QW4Ez
6OtL50o5P5D2C4fQ+YN3G7ep0/avlQ9AfkDu/L8DFPd6mLhOzke507hUzgeE
K6X8hKzCL1Tc7Z3iVvn+t/T48z7iNrk+bIe4UOjSLjX+3zTtOy0Q18n59c6l
cj4gXCnlP+TTXL9f+RaHils1wPiE8ATmiPvk6+fJ4krBEXR+oHEh8leMP7iJ
4o0OFfcpdX4BR9D5gfH6dSdxdMr4pbr4XPoP+rprGp/N58/tbH6j/9BvBhmf
jf7C+mVl469Rn5aHFJ6f/nO1+s0Q47MNN67nqcZfo3/9Ps4TCvXj3EznqzmX
0/lpdxpX0/lu31X/20r97ijjq91gXM8pxn8LXLc4TyjYnZvpfDXncq5i/LSr
1H8sj6yyv087XGR8NfoP/eZQ47+RDzctzkMK9TPZuJvvG5/N4rbJkwvXx1ys
5Sv8Nudu3ml8NvrfRWonhxl/jf5Fvxpv/Dbjcib4nOn9VedaDnU+ZWyv6h+b
Lnen6fObven63V29f1350JV0/WXnfrr+5AOyN8XtbBr/0+x50/ieXX2+uvpB
l8z17ckbvUW/d/0yrl9e3M7ljf9p9sbyxvesqx+vX+dzOnczVb5bEs/nXEHn
C5J/+W1x2Tz+X3yuDI7gUuMHMr4/KO6b89fgsg3R7z2+3rlvzg9k/U7+gvMH
xT/L4AQ6HxDu4HXirq1v/EG4cD+X/rDzA9eJzkc3zpxPWJTroMHF52kz+Rm7
c9X6GX+wu3HbDjW+IFw4la/CFyzG/cGDxXWbOUQ/Y0cXW89PfYTrJ4nLton4
O56/cZhx35w/6Ny3V4xfuI9+/5C4bJ7f4ty3Y4w/GJ/f7Q5HMNiPMa6l8wmJ
t6ZdH2D8wdg/WS2fa/zC7sa1dD7hK8bN9PZ/ceSf9A95ON5+abfOF3SupfML
v2Fczd8ZX3DTqH2W7RQ7urhwDJ1f2N24l84XpH2Lf9h0fqBzMZ1vSPuEc3iN
8Q1p30OsnXv7hFPofELxI3XuTfx/2X5ov7RbX7/QPsW/zJ1PGOctfdycZ/zB
2L/YJrRj7Jx7iwMSPr19fkHcN1+f1O3fwvV6XFyv+4w/iP/8krheky2+GV7H
KuJmnWB8wTr/YTNxtaQvnb1k+nNwwU4QF2wl4wt6fttdlt8mvzt/VdywQRbf
stD2hwbZ/tCz4nL9WFwu5weyv0Ecp+enjBQX7BvigjlfUHq22ZPiel1u5+PD
xQ1bIs7hh8Y3JP/xR4n8EriDcAgHGH+Q9v2YuF5bW36zc7ucP0j73VXcri/b
/ijtMehrGZ/wXeNePm58OedqOj+O9nmz2uVLxp+r829pdyer3a5u/Ldd1f5o
dyc4n07t9+9qt86v2Vrtr13t7nXj101R+9Vn4/OW//SscSuPMz5c3fnCqWp/
vdXu9jI+XfGZdxL3M9j0d4ap/S1Vu3vl/phfd4fa75Vqt08Zn472R7sbb3y5
ruZf0i7/avw52ift0vlytM+d1S53Nb6c9scbT4h72Wl8TNotv3c+ZvAPxKWE
V1mx6/dDjV/p+cnOb4nP14nP7FH5ftpdbvxN7Pze2yffP0JcSo/vdO7lCONX
Yv+euJXO1+T7+f3BxrdMnF+1uZ3f+P54GF/EvZxj+8fY+f0lxsfk/a8l7qXn
53M95z7rGB/zXHEH28UdHGT8QdYn7NOTD4297nzlBuOG7Wv8QOJDt5Tu1wyL
L/q8ccuGGF/wQeOOjTX+oXPNdrb4WMbPQ8T12tv4gr7+dn7gH8T94j6XK94C
+9HGLZtkfEHlXYZ1BHmy2OGa9RLXbDXjG65pXLFnjT/I+BPr6JTlH6n8y9MS
+ZfOHTve+IPOHXvI2u+Fai/sT7k+Ee2DduF8ubrzc7iTe6ldON+uTl8O7uWX
1S6cfzdb7Yt25Xy7uv0b2gXt6hDjxx1t3Enn28GVG6125eMf7YN24fw752p6
fu9axq10Ph3th3bj4yvt4zi1C+fTuf7EyIR+ABw759exvhS3KXP+JP5TT/1+
gfElGb/gSjr/0rmYzp9MxFe0uZ3f+Pkt5YMb6ftXXM/+nPMlXZ/D9y+ci+n8
Se4fc1hdX6TkZnr74vpZ0f5+eT7FfHBXpC+2eqX8d4hL6fxK7Pz+DuNXbmjc
M+efwYMameATHmfcwZuMj7aGcb2cf1e0/0MGF5+nz+Tn2F6Jn+nA7lypN4yf
9hvjVt1n/LRCF2rnwcW56QEzp+ln7HDbviKulfPbnCs1SvF42Fc0bpWf/9Tp
hxTj67PtC5UHea7lHww3btWHxlej//+PuFUPG5+N98d7c36kcylHGh/sfL2v
+PP0sL+yjt4/nDfnu/H+Xtd7cz5YHD8ypdPjL3i/vFfnkzl3z/lkzej97zx4
utqBvz/em/PHeP+899Z8Q/ihVX2GA/X+eG/OH0N/kryTxaYfyvuFU3a28clu
FPeTfvew9b9FxtVzPmlvcScvEndyI8vPIp5qtrhkdxvfMxG/1oH9p8ZFe8T4
n4uMa7aZ8UfJF3lb3DTnj8IlO1RcstuMH1p3fsL7+4y4Z74/YPExHR4f49wz
54Py/t4U9+xeG9+pf+r9IuN/1vEReT9w5O43ftxPVP/U+zXGp6uLX3Luq/Pr
eH+8N+fT1Z1v8f54b86X4/0M0Xv5jPHpnMv6qPHnuhpfiM6h8+kYF+G47m38
VvLV4Kw6X/VU41aeY3zVzY076XzXwh/478H36LP4+cQwfvEkrC99/+Dnxp10
fivx8eRV+PmDcy19/Osw7qTzW/+qvPRfK/56mvFZ43iptrb9LH6M+qPenP9J
/Wv+yXoY3/OeqP5OnMnPXv9Pq96d/0m5Ys5UOb/V6af9VPWvuPXM+Z/Ub8x5
Lcd/8vrvUr15fgrcTzigzv9MxM+2YZ9g3Drn131fvLOjE/zFaeLaTRDn7j7j
2wXuoLhwq1t+Nzy9JcbZw05+7I0J/e7cuGvOv4ObNUjcNefnwUVjHLrb+DCT
xV2Dg3eC8e+cu+br807j/jl/8kir1yOML+f8xVePivmL1C/ndP2MvzfduIBj
jE+nhpDUP3fu4CDj18Glg1P3NePTwR2cpXr18aNOf8q5nI8Yn7NYH351ZrHO
OmgwP2OHS/l3cSmdDxrH1z7a7nzPoeLiwfF83fidzsVz/if8xd3FretufE+P
z3B+J/XzbXHxtjL97g31fPTbZ42/SX2MtXry54MD6Py/rsb/89zOB6yLnzlD
9dNL9bKX8f14fnTL9zc+IP1mnril84xfCnf0NunbbGf7lweISwln9B8Hx3zR
uvhtuKNjxI30/HnXX3O+KM93i7iU3j+GqXyU6wzjZ/J8PNdtpv+VyM9o8/Kl
9DP30/PtoOcaZ3zMoA+uct9ifE24i+L8Zs5fdC6ix2fX5Y/cbdzD1vzFjXI4
jtON31jHZ3Suo/MV6+LvqR++1/mLfO/F4jrON/007H/W7y82/uMm0i+Aw9g9
wV8cIe6ix6fb+Jv/xPiMrovs7bt13nv5furs1BvnK55fU2d33WDPf62zJ8rX
0VW764J5/m+d3eOynU8R63tU7aZ/lORHWn5Fl+3cn3MxPx9zXV/fX62zT4/8
jo+bk0z/d56di/r6ZoHsxNd4/FjM1elX0UdmP5/9/Uuj9XAZn8bvLzG76/76
+Flnd11p1weusxP3ojgY4mEaXbWzbmEfzvWRXTd5lNnHm+6262/X2YfF8fuZ
r6+Gme60x58Sb4M+rOtP+76r77/W2aeaLrfrc1tebkrfPPdxCDv7fzX82eT1
+t62lP6I5w2n8hdr9N9zHyf+/fdPbvfr536i67386fLFz1PV168rP9fX8EuS
18NlqNE3b6b0zXV+00jpxzOu1ei/5yn9d8bLlP4941GNfnme0i9n/7dGPz9P
6efz9zX67nmNvntWo++ep+KLGA9r+AJ5ii8wzXSrE/r6WY2+flajr5+n9PXZ
b0jpx7tudII/kKf4A3XXd9W/4zet+1+Z1+n+5cyYu9Ph+QldHd+sYB2fzB7K
1+HlS+g/hvZruhAdzjermz/s/h0pPjrfnxrfUvVj9dvm9evn9j6+9bBzH+f7
9bB9A+0nhPKvanFf7t9x/2KeHBM4jdj/pn39guP4WKd4sXlX70++fXz/f9H3
snWzt/+eti49z9ZXI+K4G3EEy/q18rd7+evq3+K6Oy618u9r+77uX1n5O7z8
xJUW5ZvdXvC3P7D3s3z4fn+/dd/v5/7OF7Dv7/Tvr3s/rsvh97f30+bvp/i8
r51+4v1jbo1/hn51/Fn2P7hjyr9tev7tpx2/jpLeU7z+LPlfxL/Bp1xb5cBu
/Memjz9HRrrbvSr7Aw+aLmXr9S36mq83W/uH6fqHZw7fXPpawR7rts2trD/h
JSt+qbI+inXJXmw+Ye1vgfSU4vVjWX9fkF4S+auufxfrkv2jKX2yUH7n2k+z
+ORR0tuK179l+/mbce+lwxTs2xiX3vvHmdLDgu8tnaxgRzdvS/Gb3X9Azwsd
bul8hfq9X3pe8f5AOb5/LdJ1g8NR7t+NkZ5TvD4s9fNiXbsllf0F9La+Kr61
9POCHb2weH1cjl+zpffF/tn5dj6Hnhr8b+msBXus6/d608evH0e6eu803f9F
T+0Y8dGPtfmj+Ezvn7H+RL9/uWW/n9dpdvGVt0THP3H/kiPU2l7lexSfeTt+
0kzzj/j+mvJ1frryBX3uyv5WXN62jsT6tSNPjE+6f2fd/ZnnfXzCzjy7i82v
sX3jwOFyO36Qj0/F56Pt2p/PE+2nre7+zMPefovPBZ3Ms0+3nF//8/IV/Of7
20+SH3SN+T+F/YX2leXn/Nr8m7j+s0r/Lj7zTvwQH/+79v7yzp6J96fyd9aU
v/PTlX9yO3ltC6381N+P5SeNsvG/a+93Xjvx5e4/8Xyp+yt+umn81WCnP83S
52/+Ld8aPkb5fM7VcH2uuvUd4xLf6/3b+Ne5868HROcmgWMS7Kb/XxmfXVci
sX62c0f+lfcfmLg/+c/kH3v7/YXllXv+u/JZM85Bvf9OVr6x4pDzPS2//BeW
V+/56/uaLsASyx+fqHxg8oM3sPx98m0p196Wf32u8rUPUf62569L1yA/Vvm9
H5q+AfnQ5EevYfn75JPTLzez/GJ+Zh/R9QtcV+FYy38/1/LuXR9hmPKJ+R4f
HyYrH3tdldv1C6Sb0CC/2/UT2Lfjvfj4sNh0Fw4x/YK68znpV2emXx3KL33u
pulz+/gc9peL8WiC8Q9fbJr+f/L6tuhfWL80/xStY8rnp98ZnyjY/xSte6rX
s66ZoXWOr2/q9m+kX23roLJ/S3+5afrL4fmlX9sw/epwPXrbpi8drpd+a9P0
l0P5pC/dMH3p8H6lH900/ehwvfR7m6a/Xdaf1k2mX16uz7RuMf3vcD3PY/rl
wU57N33q8vu1bjF96vB80t9umv52KB/58KaPHupf+sFN0/9uxuV/smH66B5/
kpn+dSif9NMz008PdtY1pv9etj/5K6Zvnsf3f71p+ubBLv3opum/BzvrItMf
D3YbP3LXv7d5PfP+49wtHx/Yr3GOPPY2/cPP8PWJnT9V+BzstzBuuP/AeIk+
+L/f/51SOd/CPxkQjav8C/ovufRfKuMH8zX6M+4f6Pw8l75L5fyKv0dfx+d/
9HjQ53F9Gn5Gv8b1ew4zXRaf39GTYZ53/SLXbXH9GsYH6RtV9F1cd8b1a1xX
paL/Y7olPr/H5z+7565/Q//X+VPu/oX0nXLpO1XOn6Q/k+MH+Pwv/aOm9I9y
9x+oL+k7Vc6PupuujesbdXX/k88EPziLda7K/NKB0fgwIN/R+qfZsx3t/Dnm
esLh+qByf83/FT6ZlT/h3wduae77I3Y+nozPgr/n/Te2Pxd4ftjRf4RPJ52T
xP3XqPj/2OHvPS+9f78/XM9Flv9k5SdPs3J/6X80x1r+OPYFiqP38w3s8Ofu
sfhv6cVkL4t/+Jx4dgl7LnuqfjI/n8F+kPiML5j+TVz+tUOcYmv7Shm8ROzM
f7eLD7m7eH8JeyZ7uP+X4vqr7C9Y/WXo/SfaT5aZvog9X2X9YM+Xs0+aaD85
vFjs1i8q8bmcR6TiUxgvZsWf4fvRT9X5SViPYC8+0/uPcVxJld9VF39S93x1
18d5Q2UeNPY4fusN8hVC+TaUng/t2vu/5x16flMcF7Jcps9k+cZa+R61vBHP
3yXulX7v7Zf8qIcizkSpj9H7sfX6rvG9FfP1ttlt7sfDV8j0mXf1+erqx+Oe
vf0PW6v7Wz/e/P3G+lss3X//r77VWK/4LM9XpV8wKuK4vNbl53/P6u8Uq7+6
919X/rr3WxcfG/efEF8W9v+Z15ln/2jz+xHGFY71/Cv8zAr/z+KeP3H/Y31h
5Sv3x4yL6/3vZuPC7mLz763GhR1n8/ctxvX19gc3l/I9bfOvc3Nfsvl7gXFn
fX59QfNmfP9y/pxsXFqf3+HGMs4vsvn1VuMOj7P5f6JxZX1+X2DcX59fnau8
i82ftxgX2Of3W4yru4vNr85ldv27+cbddf2B+cbF9f59s3GJd7H5d6Jxie+x
+XuBcX29fzPvxu+nnH/nG7d5lM3f8PWYR9e2+ZP+Gvfbsv+3tvOvaieeHXvd
/M96HT/Azx/q5tf7Tdff+/ffpKeNTrX0YcLzr2e69tcUet3BPlp66XsrPs/7
9+HSGyf+cLjl16F7MEz65XcUeuah/IOk141uDXrl2NFbh38JbwD7wdID3x5d
/UIvPJTvMNO938zy2/Y0bsLuhR58uN518cUHCNev49wC6ZVjX8W4EHubftsU
4xqgZ459nvTITcfN6u/txofSx5eOfCg/eucXSP/8jkIPPdgvkd44ujTev1eV
nnuso1vmxzpX4cxCLz7cfxvppaOf7v17onEnVA/B7twJ6el7/wj5K3+y/mH7
3llrfm06vhJdt/v/w/wWxq0jEuvnc9UuR8V+aGg/+EXEBx9l/tHFahcryA/0
/S/XXznd/CPX73jO/MufyW+bIj/uVPPf8Gt/Jj93vvm3/eXX4ueub/6t69dd
Zc/PfH+i/EyPP5a/GvzYDcx/fUnP966e7wl7PviE6HSdZ/5tQv+2GZevkl9Y
vl/yA1V+3//y/Gx/v4n89cr3X5z4fvzicYn3Xzd/8fuBifkv5kd+8v7BvEe/
uM7mvxuNq+H9w7kS19r8xbz3lOZBn/+cC+Lv17kbPn+hX3+w5sH9bf5jXmKe
8vmJeQd+zx42/0w3roXPj8xL0v0S56Ocn0L+rObRA23+pP8drnlyc5sfmZfu
0jzl89NHmnekPwcPPpR/XeeK2PzIvPSe5qmpNj/RvplH90nonzJPzrX5Meiy
aZ7z86WlxjU52+avvTTv9dY8eL/Nf68YF8T7H/MW89gEm79mGPfF57/W/mdu
/iVxr9Xz3br4f+Y7xd9qPVvWL/kvmykPuLW+3ZJG7N+U6x944LMi/7NsHxuK
1z5PnHH3L+Gdx/7fZqF8I8U/f0gc8yIeoTy/5n7zYg64Pd9GOfcp7r9msB8l
Hnnsn5bj7+vifU+KOevh+m9KP0ZxG/Dogx2e+ATxxf18STxx8w9LfQiVL9Sz
j2/Mq8PEh3e+O34lvy/8y+fC9f9VlF86YMtnHn+CfhM6gHoOf3/6/s0q/uWX
xJOP/dsyfo1y6b1mRT7uI8F+eZTf9WblfJd4sNj/L8/neJ/wl9y/J+5idiJ+
fID6Dee2R1n/KT7T8bGbq18R/+v9i/lL7asyvtLv4PB6/5uvftVN/cz9wwfV
b+gXw63/MH+IWw/HPtjpF/uqn3j/QI8HHaWbrP3PV78crXJ5/7xW/aK3+smG
1j/O0N8THz3c+u9ElYd+6v1Tfx/apfcPlTdT+RtrWfunX76mfur9U/FiGf1k
kvUPlU+613+s9F/Kc7n6x4PWPzUeZvQz9y8PUL/R+JY9av2H+XOA+uFc63/7
qF/B0fT+pfYY6tn9j0si/75v7v1vbrQuq/qH+JX3J/Y/nKuUsEu3b6Wqf2pc
qYQ9n8vfmX1F8Zb0WZl/p0lvWJ/V/BN4TrqP22+rKT9613fpe1L1c1uifnLx
rvRZuT+6ePpMXZ9zn1T9PZioP7gJe+p7Uu9nbuL9uK5zon4adyXq37kNCXu+
Z+L5OY8jv8njc+RXs79SiX/V/ovFb5b+952Rbm839qGCvcgP6pPB4XP/aStx
DeL41nL81f5Qzr6QOHnBLp5fjk6Gx7dqXQOnj324YH+0WHc1OjWu+figdQ3r
ijyxP9lkX1L7lOF67T/l4hQ2xSkMdvnV+E+5+59a17Cuynx+ENc0RyfC42u1
/5ezrtE+YLBr3Rj2PbWeDHatC8K+ltYLwa79T/k/O1bO17T/a/G9ZXyL1pWN
3bSu1Hoz2AtuavewL+nju/Z/gx/t+5faf2xqHdPUPmSwi3+Yiz+a8m9y2rm3
7zh+cCc4icEO/1X81Iq+kviPTdq5t2+eV+s3cZj+Jf9e7VF82Ip/yH6D9h8q
7ROehvi0lfgt8WnRlc+XWvulX4l7CQcz2OHj0o+mWf/RfnlGO3b+lPiiOe3U
2yf9gX7Uaf2H9Szt2NsvfFzxeyv+l/ijDe0P5N5/dJ6Qi39cWb+zX0I79/Z9
SRSf2jf3/gE3RdzYyv404wXtfKm1b9qb9o8azmep0ydyfY7xZnddfL9+quni
u9115d1eF5+Rm+6822833fhKfIft77qd627Tfdxel5/+onhMcXxZNb8tlT/l
uvlu5/yb7/H3w3Xo+7p9N+MKVO5vXAG/fr5xFVrrI3wW/e7K/dGzRN9ydVu/
HGhcnZQ+Qlz/ZXy37ttEf1t63LZ+od3MFceg1B9dZLqZ0tMM1+8hvUaVo8I/
uMG4HOJ1hOvr1gf7my6y9HpD+TjPjp+bf/X5d3Cx9hQXS7ysYEf3E33MIYVe
ZrB/S3qU+IU+/x9Rcz6ELiz6uVMLvdiyfkxX1Mc/dPF3li7+tYVevl+fHal2
5PMveuC0k5OtfagiQ36p8+2Cnur6RTtZ39oH7x0+y49av/+gC+rvf7zaZcy3
esP618Y57dDb357G3fP3+4zpPnv7cl3Uvez9Ux9xXGPZ/ur0TzT/5LQjbz/o
BdNO7rL2URefRbu5Te3I2w88Bd1f5ztl+6nT33N9KbfX6a8sFk8NXYPW+b/p
/OD+4nGxb+d27rtI3+N28i7X1X3cHs/PG1fuXxff1zTumtsvEo+Mc7gU/y11
vsl1Y3Uft//QuG5+f+e6+fX7iVfHusKv5/f76u/cDpfiL/os9tf/JX9TvIDN
xQ942vi28KamRVwz/r3WeM+4EOxDxu1nUSc6Oz+2/KE9jXslHlawO9dBvIFg
r4v/dK7p5wteZLD/WrwH9ufFg8iwf088hFvFR/DxDS7lCHEpdy94laF8dfsz
r4p3wD5pZf0qngR8Cc+Pcm6Gjy+n1cQ3TBaXZkdxaY4teDXBLl3r/B96z73s
/fLeeI/+/rZQu5qgdubta1e9V96zv99pLblnZft7xrgSnp+2nt7rhXrPK9n7
5b2tqPe4m70/j/9YbO2rbv/zOeOSevujXR2sdubtK94/H1RpH7SLB9RO/mjt
g3bRR+3E24f8lvz3agfH2fuvix92/Vbn/+XSA1+kT+dbuW63892U19hcQ1y4
vYs4lHA9+YYzE/qErbkcZf7So+KlFvY+IY8G+81R/O4H6H0H+wfwgGcXXNaC
N1TGR6EXvsIhhX74dwo98XL/xXTH/f3CE+gXnROVzwef4DnFv3j8ePGZd66a
0I/Q9c2dxG16vOA5BXsP4zbua/V/pulLnm76ktLtaPIpXmeww9s7Rvw98fiC
HV7hOPEL5xQ8w9B/nKvt8b/kzegcH55mqN97jHssHnKoP3iC8AXXtPz2HuL9
4Qf4+ztYvMSh4ie6vjz78p2J/XftV4V9xE+q7wKPch/xKScUvMpgr9VHVn8m
f/By69/bqN+OUj/ezfrva+IV00+8f7TmupT9c0X1mzPVjw6w/nOh+u1s9eNJ
1n/R5RcnOT/K+m/Mfdm18v7q8luUf9noq376Teufpo/XUcmvUr+jHz5h/e9Y
9YuX1U++Y/0D3Xmtr7V/WZ4fwqOBTyNeTSj/7eLanKe88AXGD63TJ4T7fKS4
z0fa+f5V0u2/Q7r9swo9/2Cvy4+BC3Of8gbEiymvF/dkF3FPfl/wUIJ9tPT6
4/y1f5nflW8R667xj/H95eYr4saJB1g+f40++A5qf3BZffx5TOMO/PV3bPwZ
r3HvtxoHH7TxD17uzhqnUvobjJM+PsItXVHjmNd/3fmhc2F9fPuKxq0pGse8
/p2bO9HGpzp9yF+p3d6odjzH2i888nG0U2ufzm06xfoHvAna8d3WfikX/cT5
Ds5/8PqF10M7vsna7z3G7fH2T34H7dzrF97hUrVjb7+xPj95R/wr9eunJvTr
ncvmfKrTxNuCv6U46HD9lpo/Fi/bPx6ard+Sf5bWb1ZBk/pb3cQj0/o3U7xZ
+H54Zv8rvhl6S9idu+b1C2+T9bV4rKH9vKjnwr/dzJ7vB6ZvfZTpWxf6uO9J
R/U9nZ+U8Uvjv3Ft25S9umUDVtrgzj2ydxrj+x08tffCkk86+Km//OrUGbuE
/ZmEPlnnztInc33X4/bv9fUv/tdyWTZiyrDRa7/beO7JQz9/xYbl/l3hPy9t
fsHO0bGv+v4pK75/41e1f7pWha8ztCZ+oo6PML1GP3xT47791Nqf6eN2eP04
9+4Uax+PGPduP2tfzpXz+mF/5gq1o77Wfniv4/SeL7f3C9eHz+EF7yfYjxfv
Bt0bf75JLblu/HstcMvgu4n35vtjyfxT+FLkzd1c8FyD/bPGfe1R8GCDfbz1
C+8f7B/Szv35vqp2Szv29ouuIE/s+oJbq10vUDuv8CvUbock4mNOULvvo37g
7d+5RF5+5+p5/bfmxpXvj/dyeSL/4fuqd95DT6t/9Azidly+vzp+SBxfu2PF
fpZ4uuKeV8YnuLv8nds5/+DztwVPMdRPu3EHa/SpK/rXbxg3WTxle3/vNHbS
9/j9ue413ecau57vhbvs31/HR+HnPRN8AHjj7+rT46dd9y0VH+869l29vnPa
sn+d8D3I9+rq/dvsn+ene95MSn/GdFq6fH3d9/PzwMT9u3a9P3/e/u/tk41P
ky5/nd25T873JP6Cc3fiNdx+hcVpYHfuk7dvdLP59PzJoP+mz7lmZ711uu1D
YWc/A/7fH4z/V3e972v6/qTvm0y1+3P9mMT1zmVy/9n9Hvcf667HX59qnBTs
59v9t7D7c930xPXOffLzacbrUTYPxN+/UZbij8JH4bMzOocqx79YJ6zki9bZ
W+ti88/5AtXxrfich352RR+KeFd06nz/kLyIWH+29D8S5evoavmPjPgDQac2
i+3wBT5oFvsVL4bvj/kEH4c43vj6UlfT8zfmRLo65PmX+cV19cf18fhVXt+U
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
eczjdxzz+D2dT0X9qeTfwL2Bg4N9J7U/uDkPW/4W83U/zd/M59jHyh94QP4B
/kJoH/qHfzHC9Gmm2fmZny9xvs/6cCXN99id+4W/gB3+DfMzHBzsXzHu11Rb
PyT080L7Rq95WoLf8kPjKvj+LvwS8qbcP4A/cpm4FNuLV4HduSX8HNf/vPaF
Cf2frxvXwdefznVoiPeAfVXjLsAhwf6ocR38fKzu/A+uCFwbeCPYnYszVD9j
J77wAn26/vbnVN9r6fcL9T6wwx0hTg0eSVy/af2kx8U1QVfnbPFOsMO3WV1c
kkdsf8q5Jj5+OLfH9XG1H5V9V9wSfsYO/wTuCRwU7M69cP3fE4yrgU4Fdrga
TXE14G1gd+4Fea7Y6/LDnasB5wQ77eVktR/aE3bnLrn+Onya0/T+4NRgr9P3
fMS4SN3Vnvz5eT7eN3b2L/upfdBesMf7q6VOPXbqe4bqn/eBfYZxa+CkYHdu
TdweSr4J9f9Zyy+pi6/mffP+vX3Dl/m7xp9jNR5hJy6S+YHxDHtCXzW8H+If
5ibiE5y79JDGM+wnGHcJDg129PYpn/t/4v9m14ur8radf9bpv7YbFwUOC3b4
KnBV4KVgp1x8Drf4qLPFhcEORwb7fOPKwJHB7lyXV1Ue7NONG7Ojnge768Od
YPpwQ2r4Le8Yl4WfrX2G6/ay/OSEvly4P/prcxL8AvTl0Ml1fVzl3ysuGN24
8v16XL7Pz4nrO7DzffLfQnmw8zzobro+LvH95Mm4fi/fe0Sk01vJjw15bx7/
HD/PlHZ/PvQ3i3JsGfJ0/HrL77P3E3R3M9ffRb/u5xrfXT8XLgvzrOvvoqt7
nXTrnP/D/XT/in7u+OhcYY3M9eP20c8PSXfuEhs/XdfuGNPHRT9NfNlK/3Bd
PdfP3TvSxzts5hDp5GHnefX8oT6wT1J9baL4II9fOcx07Vw/93O67tvSpRtl
4yfPi87uUtPXFT+2eZN08Vzfd3Pp7xWfp+nzoPB8rlvXz/R5u5su3qGmv8u4
KV29oLMXnl9/z/6+6++67t0rpt+b0K8M5UvoQ1b6Tyr/J6EfGa5P8FfsfKrU
9d7Ork/oi2fx92+Zx/ynUr8zoZ9p16f1NxP6nsn6cf3NhD5y+P6EfmmwJ/Qz
gz2h3xjsCf3OUP6EPqafr7m+Zbh/Qr8y3D+h7xnsCf3K8vyitb5juD6hD9qI
v39wGJcYp7An9EPD9Ql90/D9Cf3QUD8J/ctw/abR+HLQYMYZ7Al9zHD/hD5m
KH9C/zN8f0LfM9w/oe9Z8Y9M3zRcj/+NnzDQ5vc2/TOdvTbsrks5y/SzLb9Q
8/+LdffvwL5mxFX6uOF8pbryyb/Jjog4T+X4gj+CbqfzE+j/f4o4TeX+U93z
T5fu5wzpfk43/pLnZfr9WdfCaZpifKYnTPfzSeMv4f+g+3mVdEKwj9H+NJym
0dE5IvnJpe7nfOMvMf7Mle7neDsfJT9vq4izVPovcJPOjDhK5foC3c1LpLvp
68+TpRsKZ+lk4yuh+9mMOFBlfBC6os9EnCdfX2ybwVny/OevSLcTjtJXjZ8k
rl3j/ojzVPpPN0o39Brpht5ofKXnTfdzicUHTdP6H87TdNvfOV/77w9Il9P5
2677eZ7xl3jeDul+sg+HnfO0o6TL+f+x9u6BdlTl+f9GIVwFIndQKqigUKgI
EZDTzmi8VS6CP2sLsRbEQmxFhaRqrcABre1XLlIkpAniFy/t10CQOwayw0wb
kIsJhCZSKhcjCgpUbi1oFfFX2c/nna5n7eUciuefQ87DzJ69Zq2Ztd71Pp93
mdVn+rBxPz9s9ZfoD5smdZzy8WX1iwbx+aP6mapfcMXEjLHjm+faQ/EcQt/G
6rZtZ/Ofgf2Mn5/sZvUtu/y5vuO9btt4f/b28VwazxeGK/yTxvnCfe3X9/le
1835wtck9RPXxHMKnbzTz+u5c7Txh1fr+QL/wPnCC/R8Io9oD+MHp/UvH8n4
w3CB4QR/yvjAxCXI79/d+L88Xz6u58qnjU88X8+nlL8yLY73unHfN34x+V3U
bXQ+Mc8XOMH3GB+Y5xPjdL7xf3m+8Fz5kvGJ1W4V+d23GB+Y58t1eq680fjF
cImf0nPpGeMTn6HnC88V5wufpefT3+m5tNL4wXyvs/TcmTT+MM8XnivOF+b5
xHPpz40fnMaPHm+cPzy+7gc//fEf43fXrvNfpfnLPum8rPrfHe91oaZ+/r7j
p/p8GYz9CX641R3p9PF1Nzqd+U2aV9/NH/vOP75uip//mWZakrfZnX98XY+p
n3/8vmqnj6/L8Vyvb5123SRvZurX39f+fdc/vm6JX3/5/jH+35nsy/n1e92R
qX/+8z1/3/3pa//lNm48fuLxl/Q5041fjk/H8WPVRRc++6N4yZKhz48G9jN+
flM+v8WdJkv15zh+/Pqwe668rrD+8utEd1+E1+eZn/gjlky4v+TcZD6+ZsL9
OcdZXq77A8Q7qH6VvXH1cUuHfv50vTIYTLP8777zwx/i/OtZfovnNXj9npQn
sWRiruVveN7Pul7fJ73+Sb/+vvb3vDevf+T7ep7fMC+5/sGk10dK12NrJg6z
/Xu7v0O/v32fz/hX+0/Msf0r+/yhf37f/fF9Qa+fZPdn0u8P8Uy4UM6HSuPG
OV8YvobWP5XzkZcbd7XEZ3dOM/ro96rh7xSuT3ycCTiOznckrsw66J+Nr9zH
T+7T8VWvEXfR+VTOdXR+8rnJvHl67fzlw7Ufe7S4i15/6RvGdXR+MuNPvuLG
67Pjn3+fuInuv8SXDgfZ+cf4p+E0e3zAuZDOR4brKF86PvVu/Sx/unzp+NS7
+yN//gpxExcm473z98NBdv4x/g75srP8EvzdcJKfNj4y/nT50mvnN+v71d8Q
N9L9TfiJNhV30eOrk/L/42N82vjJPD/ENYBzEPoNxl0cGp9qkfz5cJSdn2x5
W+2Pjb9sfJ16O6tv4s+NEn/RnwPoXtfBnw9WPzUb/1Zfsd6r8Hxzjiu68Zcr
3x/qO974D7XzXY3/UK81fqvxB+pbjP9qfIba+a7GZ6hnG7/V+AP1fOO/Ovf8
G8ZnNf5Gc7TxV42/UB9kfFjjL7QnGp/V+BT1+4wfa3wLeEZxvPE96v8yPqvx
PapVxl81vkN9gPFhje9Qb2J8VuNT1EuMH2t8i3oH48M6N935rs5l38z4rcY/
iecEunPTne/qXHbntzqX3fmvaV3XqHOUxUdL+zesX45JOepx/X3rixVJXBJO
bB4f/YDOv++vja+W6y/clv4O/VjjOsw2/zPrV/KnLrD378Pyzf1Evrl7zL+L
72xBkmefv/9/W75Jfz+eps+FS3q6vb9fIi4sdY52tPpGp+n62f/0+cPtxqVd
bfWPRvPzPWeOruuQmaPj94z9Ueeiur+B/vf5NE80ru8M48KeYfWPOO6Fap9z
rX1UD6mhTtJvWX2kteZrfMDuD/za0e/jl4/G42GRX/KX+n5L9P1OtO9H/1lQ
6D/0G3wHzid0X7T3D8/L9PbjfZfuT3R85EH6k9VP8H0BHz998UMbX7Xz/ci7
sPpN7VSPp31pV8/PJ/9C/OKmwHduxeet3b8p/nAl/nDj/GHaPfYnzN9MXTHG
nfOZGXeMW+cLM/60P1I5H1r8asUh8u/nviLnE5+r8cu4ZRyji8/ciM9cOZ+Z
fRP6nfOLxYduGHfOh+b/1/5J5fxsxh/jTvzoeL4wfsXXbtyf3Nc/aB/5Dyvn
a6f7Dzu1zsfu6z+e9+77117XrPB+tHV2lr9h+49dfTLe37Z+b9Pju+fD7ML4
s+sLfZ729dCdn+N1Tbz+GPPjGcnxXf7zw1Z3xOuT4T98rfQfWf0x2pvzX2H+
PK8b4vXFvqu6JHtJ/6HVD9P3b+z72/XNiPvj9cXgo9r39/4X9+cOq29G/j2f
7/XFqEsyI2n/Lr/+Yasr4vXNZlpdlMusvhjPPWvfOr2+deLzvb7ZDVZ3xOuT
zbS6Jpdb/THGp7WPfX5Xd8T9p17X5EdWf4zxa9cfOuvVtM5QPn4Zt6X6QccW
5seMX6s/ErrXFXS91vi7VOPOda8rOF7v6gq67nX/XPe6gq4zPhmXrnvdPte9
LqDrGr+M2+z6vC6h64y/f9W4K7RP1C10nbp9l2jcue51AV2nLhHjrtC+UZdw
/PnXkS90u+z8jF/GreuMP8Zdof2jjlCh/Wq1X6Yz/hh3hfaJuoKF79fq+2U6
+cLpezKvn1Da38ZXTx7RaH+qq49g+XtZ/oz42A37RD4/bxSfuDDh93fxUd6P
+AK9voL43q243q2v/8QHb8XRb++0+giMv73Ffb/V6is4V935385tX2z1DWaJ
u058yPnzzo3f1vgR/P/wf1ZafQb473PElXd+kPjxDXmNzkf/irjtG4vb/jLj
YxHfO1Tcdefzb2nc+Eus/gH39XFx3z1+fKpx5WdZ/QXx+Zt1xWX39e1K477P
svoIjD9x++Vj6OJXqi8Q/rTS/sFitXNj8WfGH3Xgvb5COn4esjpA3f4v+Xv7
FvZ/S/m3w4Qrvm7t94fxl65Puv7F+BKfPny4Pn7E16+8/zL+GHdzrD4C/lfG
1R5WX4Hxo/oBldc/iPi/2v9Rq2+g+gWt6hdUXn+BugeqX5DVP7jQ6pacYPUZ
+L6Mu/Ns/aL6DQ1cOa9/sNrqjsyz/rtN4u95Qe31Fxh/jKNZVv+A8UOdBq/P
cKHVRXnM6i8wfhg3/nxg/LE+3cDqI6T+oF1jnKFTT0D1PSp/fjL+5ifr987f
k/oq/iPLr8a/Y/XpQ7/V4p4eP3kVdVXF1fb4AdxuuKY3WH2ENL/8d2rOh/5j
42p7/jd1EVR3rb3W6iPwflJcv77V6issMy621z942rjbn7H6BtRdoA6D119w
7vdXrP6B6q+1G4vbfbPxBWkv1fWrvP7CDs7FtvoHcLepc7DI6hvwfKAOg9df
cO631z+4zrjdXp8B/96R4oK/2/zFFxtX2/PbqYug/ePYT/Lxo7p+9XusvoJz
tT1+8gtxu1X3j/dTlt+puntRhw+9Lz+A/m/1DUOnv1t9vji/6htWVt8wjqf/
W/3BbPxYfb44fmHyfon6g6HT/62+YDZ+rD5jHE//tzyIbPxYfUibP3Z1R75r
fHzGj9UvjOtba3U9nD8PV97qM8bxh1vdD+ffqz5ka/Uh43jVz2ytfqa1H3XN
Yp8+zk//tzyK+P6qD9pafdA4f/p+ifqX3f1V/7f6l3F/6O9WHzSbv1l9yji/
c5OdL8375HL93fnKzpXM6ocYd9b5k163o3T+ywvX53UvhsYPNL1xfhH6C1RX
5AVWn8T06gVWf2Sq3y84vIX2gWtxsPF1TK+df/Et6Y3qijRWn8T0+P+ea/v0
tW/p+vq+n9dFuMPqI7C/Q51Uf//05X//hbjlOm/zZauPwPz9T8Qt9/oK8HXf
Km74elYfwfun1z/4J3HF4ad+QfEo9A8a99zrI4zWL7+n/df3ztS/Y38ELvoP
xUX3+gxp/uadE14f4WBxy6mT8LjVRyD/UHHG2uvPnSgu+sbioh9o9RNeZdxz
r98wej6/a/no91z9flfsT7G/c0xhf2do3HOvr8Dz9Q/FPd/d5q//IK45dRa8
voJzzb0+Q1/9hY9bXY47jJ/fl7/M+59+eaTx9fuez6eq322kfnug8e8/aHU5
Fht/n7oh56jfOt/3Zep/cHHuNz4//Xe++i392PsfHH3n5/f5E05W//t99Tvn
849+txPEBWYaP/+GpP+9a+YN6ofef7+nfuv8/qXqf4vU724y/r7nlxxj+QH0
T+aZ7zY+/z9Y3Y+bjL/vdUOcv8/6jboeXv/D64J4/Q+ev1er7obX70Dn71db
fQ7Pn5ln8aezpJOf5utTjk/r2HTf3+uOeP/k+OuT/K5ufDMvuyZZ/3bxO+JH
D6sux6W2/4l+mf7+sNXvKPhfBq7zF89f5/zU9fD5D8cz/r3+B/dHXKja639w
/vX19zVW/+Ni1WWAe/dt49/x/rzN6jygm/9h0v0PzlX3+grkh+4mLvp15u+G
636guO5ef2Gtcdl3tfoQxOOeFPfd6z/w3n6fuOdXWv2FvvndruKic56Hzd/9
ZnHdNxTX/QSrv+D5S14fYmNx388W930ni2/jz7lF3PUbrD4D4+0/xF2/0fo/
+UmfLOQ/wGW/RFx2r8/A8+lF4rL7/LCvfoPX3bjT+Pt9/rtXWF2Og4z/T34y
/lzn73tdEK8PQP+iXzn/v299QL+gXzlfH+4//WJD4/+/XP3rh+pX/vyjf9Av
zrb6APSv+wr5NfQfOP43G7+f/qN1dsbv/7DV7bjE+P2e/3ZyIf+NuocvMr4/
8eptVVdjb9tfoH+xD7i91d/g+HtUd2No9UE4nr97fY6CP3PgOn9xf1Xkl6mu
xgqLT6Hz93PH198o5o/25a+h029aqx+Czt+9fzFu56huh+/Ped2POVbfI/Lb
VbfjYIvfef29g62+xysVX4fzvp7x3U8Wz/qvCvUb4L5/WBx457+Ttz1PXHLP
jwruvHHo0/6b+W8n0Z2L7fz3Y4277fz3SeNmO5+efflrxOX+nPz46HCv9Rxq
bzA+ClxtOPFvND58cEmVN+f+otHz9f7h3cojOc32P94jrjaceOfDR/6wuNqr
Lb/Huf3HW32NSbvvJxvfvK9+wzt1/1+n+77A+PQ3GLff+eZ9/kjn+jtf/d90
//5O922p8dXhpsNRd376pbp/3LcTjI9O3YDrdd+d78rznX3Fv7D8yFnG9f+5
8dHhQ7LvdZ/xz7m//6L7+nnjp5+muigTqotygNVHEX+nEYexhhOCTt2NjVR3
Ywurz7KNcdPvt/onBf/7JPpPjNt+l9VHWWnc9flWn8W57vubP4JxeZS46YdY
fRWPz3n9FOey327vlz7/6kXGZT/U6qdw/5Yl/p4ns/an3b3+idfdOcT8ddta
XRrn29P+tPtNxs+3ujkD59tTF+f1anfn69+i+8d9c35+X/yU+8d9O8r499wf
OPrOz6f9aXfn40+VT8B98fczz8VVqmuzyurbUFfmSuXvvdb65+Gqq0GdmV8e
mdaXoV7GvaqLMYp/dvtXR6hux9Oq2/Hjm9P6M3yTtA5pt76MujSqi7Gl5Rd9
wvK/Hy3kf1+uuhv+/Bvtu+y/fJSHcvjykY9t/4hfed0Nr0/T578/Qu1Hu51q
9Ulof9r9SstvnqX2e0Tt9nOrf3K1/v8vqt2/a/VJuK6U4577C0r+Htpfcfxq
K6tPEvu/atfLrb4J7fe7ajevX9Ik7b//zGW6D96+xt8YoMPVVx222vn68Nj/
tFD/gboOcPgXGn//E8at9/oH5PV5HQB0/PEXi9vu/P5lxoWfZ3x+7hec/2XG
93du++nKR0XfQFx4fKnO5+/zH9E+tMveVv/iWGvXY4x/T/ucae2E/nG1r7hh
tdcHaK1ugfPz6Qm0q/Px6Z+0m/P1N7C6Be7fpX1pV39+9PlDqAuiOibUM4n2
87oH11j9EnzDj6ouxgG2Prnb+BcHGP/ifnH7PyJuv9cPoX3eLG7/6219zffd
TFz9E6y+SN/+H+3zHXH797D8hz30/Sb0vR63+h9L1B78foXVh7jf6qJ82OoT
TJUftL++95utfkHf/ifv/4+pXba0+gN8f773v1n9AsYNdVQOsfop5NNRB8Xr
n5xodTE+a/VN0nj7YPBO45tsbXUtvP7J6Pij5N86Sv6tU7LnM3UzfHxwfVyX
1+/g+6nORj3N6nMU+E6D9POPkr/zFP0+Kt7f2+v7UcfD63d4XRev/7HI6kJ4
fQiv2+D7G338KeoyPK66DOPrQ6zTHqC6DF5fwtZv5JnUfn7O+4TVf0j5NUuG
zsfxuhYHWH0IPv9vVHfi21afAp06FZ+x+hQvs7oQpfoQ8BE8/5B/n2n/H3oh
PyyOt/zKTO87vk8fz/Xr1pfjffednnItwp/g+Rn1bQXdfEmtx7f69OUpN6Bx
/hfXi494H8sP79PJd6U+6dbGzy/Uz66mqh8qv+vp8sGebnxcfPX4fPmNXqjP
3ExVt3lVxk/u1cfXt52ynq6rujyGkj7f9Dnj60vWU9UL9eez919Jx/e/o3zI
8ADQ7xxffzH0n5r+SdM1v2/wad9ufOy+5wN8nZt7ng8rfq3+uP3251PUTcn4
Nrf1HE+9gxWF433cF56P5J1nx/P8WVHQR7/juTYYf/7uuVX4fs0tBb1Vvhu/
s+tL8xaL+q0FfQPlA/LbdcurzNrvijRvLNPZ9+J34fpar/ONznz07T3H31o4
XvUf47fr5Lvx23XFI6trCsdf0XO87lvL78L3Y96dHc/f317QB+R76rfrFtfL
7i/x1msK+lTnB6XnB/5j53CmesclLtRHieO9Poq44tXShDP+Q58f1PYcqNHh
C+Bj9vpU26TcwXa7sfUd2om0flc3fyh8/0GqP9Swj+L1q7ZPuW+Z/+L94m0p
7tB6fTV4VOTxX23+FeXTR/67+1N+IF6Y58mjG7evvd78N+eI93WI9j99/rBZ
ysVrD7H90z3FexL/KZs/yE/QWh5P6Madizx9dOIhR1gePvrNKTcx84/AE0vr
s3T+kHPFw9rVfBjoR6dcRPIv43jj8rWfMn/QS1PuY/tl8/8sSbmAmf/mwpTb
17i/Bh7Zz5XHv8z8K/IlNfgs3J+0uXhhaZ2xLj749pTb2L7V/Dd9z5+++nTL
0rom1VDPCfQC3zN0nW8wfhwX+Z/Z/N/4pXF8gU9qn5/xSUMv1I8IvcBvDr3A
/wy9wLcMvcCnDL3ALw29wP8MvcDv7PrHeD5n93wazy+N8xf4nKEX+JWhF/in
oRf4lqEX+KjxfCnwXeP4Ah+1Ri/wPeP4Ah829AL/0+5fxv+M9i/wTf3+Or80
9AK/NPQC/zX0At+10/WTjjuPT0R9u5p/T1UvnH/w6/VLo34czxv857/++ZSf
n/zT1yZ6G/On9Hw3Df350nd+1U+K5wb7Ieij/V32F6bX39O/0W1/qfX9JfJb
RvskjzSen3SR6ofwd/7txw8Lx+M7+xc9R7z+pe3/tOP3fyIulz0/qMsOP9Hr
J/cd7/OaBXZ95H/vgk/anh/kD8H3m7T8IfiMf6TniNe/tPyj7Hj3/7m/3fxP
2j/vro/9oZ1H+x7t0PaHqL+1TH+nXo4fr/2l+P/Q4T7w3HB/+sifQbs+0rxB
/0bn/0/rEHbH98U3qb9U4o8yryjxXfj/e54frk/5838z5y+v7zhT6fyWF1H5
8eQzL03ua6fbvuhzPr/4b/XfJ/c1r68BB8jP33f84nRfPGufvvMvTfO6M72v
feDPpc/lqbcffjk4Xa5b3kX2/fo+//mev699+9rv1im934PrUjmfQvXNatVP
rLx+4uy0rmPLeEQf/b5pgn0In59vk9aVrLaz/YO+48V9a9Nx6vGV2LeofH5B
XT84adTTQqcuI+8l6qGh353WHawOUL0wdKt7GPXG0KnXhr9rqT3f/1r10kb+
ml9k74c1qrem8Vl5/MHqHpLHF+d/UVr3r/L38zzVM4OvM/rd8f+o9zXyefy0
+lDiJ3qMvJD2X8RP/RfVm0OnHh0cOH+/n656bvBfRvOXbn/7RNUj4znj8Yc9
07qX8f+hW93FqMeITr29u0b196xeyWMV9dhiHmb5PR9RvTP2X31+Rt3J0bzu
EY337v79IK2LGfXs0G9RvTbmJdSbRKcup+rnVR9VPb34fooP7D32PdftP6S/
u/5hdesZ/6EX3s8DdOotKc5Q+/jW/zhZik/snXxucB5DJz+V+gpbq842OvWC
VQe43trqk1+qes9wyd5u9dlPS+uu117/XXXV2w+N6iDXP7f66qr3HPx5H7/U
Q+b9sKvFLzhuFD98cba/zv+Pr5M62Oj3pXXT66Os/jr1sFUfu6Zetp1f6+qX
ZP7/QzWvZPw9YvXXj1A9Zc7j45d62MxvDrH1seq+V7ru2uu/Uw9c111T59vu
D3Xva92n0C9UvWzVz67hhUX/UL3oHZRf+YTqSVv/aI4a9Yta/SR03su+j4Zu
3FLi59G+e4vrxt9nW3xsn+T/D76/vV9XTZTib+PHXb6+Nv5qHA9Pz/iDcX9X
plw3+HlxPH83/qDFX/6rMj5g6HDpjJ8XOvw14wPG54s/Vhn/L443bhr8xNDF
v6uMPxnnN24b/MY4Hj6x8SfjePw8xhcMXXyzeO/5+Nwy5dYFDxJdfL3a+JZx
/8RvrIzfGMfjazO+pecH1cYvtPsX3LjW+YLwEI3fGZ/P341PGecXH68yPqV9
//Vr43fG8aemXD/4kXH86He3vly44Fc/i2L8jOa/m9a8n7YZO/8tr1/x75Ti
X9QFOCblQE75/JpP1KpfnfnHVJ+31jyj8vrfmq/UqrvbeH1v1meqX115/WrV
z2We1Hh9btXHbTUPa73+tuqX16pfnuX3ar5Xax7YeP1t4nqqS5y9XzUfZJ7Y
ev132kt1c1uv3y0+QKP68O34+vCPNJrHZ+NX9XdrzcOr8fW992pVlzjnC47m
4zX5215fnvGp+uANPOD0+p+pVH++8fgT61Otc9olqlONrvhXrbrQtdefV/14
1lGt14+fp/WA1mkt4xhd9Zsr1W1uvT686rs3Wge2Xt+9L79u/Pi5dPjrdX6Y
P7/c1s+dP4H/054fET9fk3Kls/prcMHZv/ue+ftWp9zrzH+wJuVut2fY+L8s
5Zq3b0jiHP/9/E254K2P/8tT7ni2f27c7RYet31/u75ufF6ecr853r9/a98/
Pt+46S31ENAvTbns2fh8UNzztP1n2Ofvb/evG59w11nnwGO39q2tfePzr0i5
8ooDd8+Xy1PuePv3Nn7ggqef3/HLjHveOj/j0pTLnvGNL0u55vSf2q6/sev3
/fPafsf1jX6vmri+ED/yvBVfXxLvIv7l++vG7aw9f2D3lLtaP2L7o3BFlbdR
+/6r6pG1qlPW+vpH+Re2PszyK1rVQat+bvuja8SrXFXgwxjXtPX58abiFR5S
yO/ePuWqNr5/rn3TRvzEyMNA1748eT2V78/D89y1wJ8zrmzwMtGV31IfoTwB
H3/Gta19/ghP8i2jfdrK92e/kXJ7a9//V15Cq8/P1vfKL6rS9W93fuPK1r7/
f6d4n0Otk3x+rPwfiw9063/l3zTKu8n255l/qj5Lu86zf18V7z/Pa/X17eh3
+f14Ssq1qU8Zmx8dvq1sfaX6YJXqg8nP0q0Pla9csX852/KXGVeqD1bY/3um
Uv2zbH2ofGfyoKnDlM2vPl+4/jPSuk+tz0/XplyY9gHLn1d9uYb4rY+P29O6
VpXP/7R/Sl2sbP2n+na18vDrHS3/3upeZf5R1edrVJ+vvceuX/nw9YLC/ee+
i6+S8YmPTbmE2f1l/s19vsDaJ+2fuf+B/INS/+f4ETeszt7vo993TuB/9fj5
aL734HCTEZdCnIlu/sX5ByN/beP9Bx3+yhsS3mScf6Lv/JuPuDiZP2L0ux3K
n9d4fHxq19cO1/+113fz8CPy551u8XudfyAuI/vc2f0Tty3r/6Pfa4b4Or+X
8BZ+U/fv5ome6598fte/SnXlf2q8iK79PjriKrRftvnd1O7vpRNwPe62+8v3
K50f3xM+AJ+fPWpxN4/veNzpcItvbWRxp0UWP+P7rErrILSp3sXlPP5EXI7z
7mjxrZcprrVKcS1vv9kWl/T5wxcs7lXIj4m41G0W/0zP+2CWf0jc6nbFrY6w
+CrxDeKK2f6bngc6j9q/i2/p/mj+tGs2PhRXpX5J5fNH4rtc1xqLr9Efrk/y
s50vv5OO3yaLLzPe0vzjLn76/ynuebHinr7/M9vihh5ffo3iwmkeU/f8Okxx
Yc77dYuvEq+aqfiV7x/yPiY+4/unaf7i2zQ/6fZnb9R6++4k/ta9n+9WvIr4
1V02vumP2keFAxDHn6/+uzKJ/3T9f7HidcTvPH/tc1pvvyiJL3X9/3cVr9E+
e+v769pXbeYqfuj7q2dp/Oyu+NDZtn9/mtbD2ofO+j/xzFMU3/T9U+J5Jyu+
5/E14lnax699/5751U2Kr55m+7dXKF62ueJnnv/Fepv41UOWv0A8kPhg9n5K
8mN3as+3948+rxkq/ub8PeajxE99/5z+sEDx1wW2f9/n/+zLnyzkPw3Q351y
rRt4weh/q/a+eMTtalcYXyjl2u6crY/hPlyrdvL8DfPVZ+vjk8TLIE+CeTj6
S7U/dNaIC9luKF4kunFrJ73/wkNaMOIjVSvES0LnuNL8Bl6Z+GU1PDN0eAD/
Z8QHaNlvRTcuQsZvwc//r+IHwDNA303z6vtGXIl2R+OPrCvegI5vD7P6Ra/T
/oe4US08L/Q+/yC80FG/eYL95ri+lAdO+3fjx7i5NbxUdIu7ZPk7xqVtXiGe
KLpxW7P+9SfilY58fNtlfMhLxfvcV/zqD4kHig5PgvvzdfGG0Y1bnfmTC/l7
A/RHxSNlXjB+fr12+APNrz9izy94p+KfZvkj1BOgfsHHxHtH/zvxVpk/bmzj
66Se+AO81zkj/mv9VvFg0X+acovrja2+2NtTLnINLxkd3tQLj3qWP1X9kXhU
0b/FYxefvTlIvPa0/YJrWHv8nrip+KbZ+tm4Qc1C8YTQiV98oRC/YF2k3+0s
8Z7S44PLU8PrQTfubtZ/4YVTR2ah9T94dOLTVb6/alyhrP9dIF7k1SN+ZH29
eJLoffml04yLX9v6dpeUm9R+3J7/fyqu0YsV51tfvKO4P4n//gW159/DJRNn
rJ4tXhm6cZlaeE32/drlBX/B5ilXd9KfX3eKZ6Z92PZy46ONfrfDzQvxgcuS
/aGfNcfY9cOP22/EJ2vuEq8MXbyX9pejcdh4fT/j1mfx4zQv65HK+ZWXply6
LH5sXNra+Ym6/uoBxcecbxD1QnZ8tm5DtaPqOaD/DJ7cLc/y5cRr7ebvrXiB
a0e/G+frwoPbKqmj2d1f5nVbj7iQzSGKQ6L3+effk9Ztyfb3Cvnlgzh/Wtcj
29+j/5TiR9Rj2F9866+oXkP0T9X7UP2P9uP2ftgl3VfI8lO579Rxph4H+h+o
XgT7E94/3qZ6H8wj/PlG3RTVr2iuVT0LdOrx8D22tPUrdV9G87dfNtSDQV+b
1qVpf8v61zE98fGL0ro4LfVK0Mkn22HE9c7uP1zdBSOubnus5a+xP3vOiDub
3X+4vnpONzfY87nPf/B949L7+oi6GVeO6mZk60O4xseNuMbBO04/n7qkb8re
L8RlqZ+yi8Unvplyf2t40OnxO7eqf5S9H4073H7S5u9wgUd8z38PXjD6nuyL
j55j7Vvs+QW3WPzpBh41Os+b0bxpuuZPXfygj79ztnjqPFdcZz/s0BF3PNPd
X+b6feLFKy8/m3+/RDx68jJcN256Nn+iLtD7Rs/BTG9Sbnt2fe8UT5391QKf
qLj/oW5djO/+WcqFz3T8CmtH7ZRd353i4eH/9fH5AfMHzrb5ycE9/BTNq9sN
RvPs9i02v35I9VyoH+/j07nQnt8wU7xA7q+PT3iE9YhP2DwgXiH629O6Rtnz
9SHxEHn/72rr183FG4Tb5vy9ExTXhx98sMWnHxNXVvOAxt//o9+XDvdX/P5e
i+99R1xm8bGbp8Rrtv5V5Fvx77cX/J3c301G69RMl989OAyu67lfq/58tr5V
vmC134hrlx1P3SXGoevGDcyvP81ryI6HC7lmNA6yzx8Y99b1iZQLmMc/lR+x
ROPT9RenXNh2mq0P+vhBVncpe78dL96q4tLZ+2v9tG7CwNeX8F61zsjWF1ZX
rD3Q1q+vSnwB+Hu6+N+pKTe3uczWj/BuF4zWse0XbP26wWhd3XxqtM5uD7f1
dcF/N0CHR7//aJ3ZOv+uj+9GvSf4it7+8MTfMeKLV4vEG0fnuL8ecRmz+/Mz
8f5/PHrP1/5+55vo+ZP5o4j/nD+K07XTLT4H7/En4lP6/pi4mfX00XMu44s+
kXIzG3iX6HOMm+77m9emddGy9qOukOIslcdX0vzyA7L2e7PqGimOl8XvuC7m
YR7/8/yM+yy+zbrk66M4XNTjQX8grRvUevzv1aprtGgUp2w9PkldoG+N4mTN
P1t8rM8/2scfvCqtO5etn69I655l8Rn3z7uuCynuf69O66bln6/8R80TsvO3
aV267PxvSeu6Zbrnj7g+TfUCeO56//qU8Qd8fmx1XTP+GdwT1Set/tzWX8rf
rfH9ePx79Luc//DNtG5G1HOI75fW7YDXGccfqXoKo3nA5tn4J28EvjP1RND7
+JTp/u++WfvCjdA6PNMPNS6x63qu1tTdc531reaR2fnT+cWbM93yDjOduhMb
jPpRplP35w2jdVj9dVt/Wd3mbH/jKtWrkU+gXmP7XwV/+wCdejjHjtbxta/f
27TuUu3xQ/jbNylv2de3H1K9oH8frbPrP7L1dR9/9I6US92+0/aH4Co/NnoP
VV+2949zxz2/aXv5p6aP4mj1YRY/I35HfOUfxaNGP0h1R/5kNE6y8fH9tK5p
6/uX1B0lTvRVi2/18Qeox6vj22ssvrRQ+dZcV2vxrWU9fJMC3yA+37ji7Sdt
/3Ch6rr842gfs11p+5fsex1U4Efuo7oVxFnvsfiwc719/mN1XaoLbf51lvIJ
bhnFuevFFt/+vZRr3/r6UR87qXVqe56tT/v4uPhtDlJeOPlE6H18TOdaOv/h
N8PPxs8SPm7TdzNfjfPtflIp/77x/Pv0/EuGfn58F3DsnF9pXLrMvwofU3yK
ZjzfLr5f5h/g+yxP+Nvd+1X+3QYupvt3/1TcOt4Tnh8OP5P8ds+vh2sHF9Pz
59eKW3ed1peeHw4/k/z/Eh+T4zy/Xf6A4F5m63tx5XhOeH67/Anhf/D4054W
d3J/BVw8uJeeHw/3Dm6m+y/gzpXmFz7v9fx5+Je7FvhV88Wd47zu34B/CffS
8++Z/8nf0bi/A/4l++uePwc/c7H8DSU+pvwZjfsz5E8J/4j7U+Bn4v+YYf4L
uHbyT2R8u77ni3O5bxmrP27n6fxtzuXm3+nnd/oK02+186+w8zN/s+drHO/c
bn/+OJf7Fjt+leXVlvwVabvx0/G77frj+BWWF+P1cZ3bzb+j/ai7zPnteN83
5N9x/cbthuM91eM9rnyQ1X9ZYXGxlVYfmn/b9YdOfHNF4fy+bltq9eecq32l
1Q/3ebvXF4ffvaJwfp8XeX0f53bzb/t+tX2/ON7nFUOrb5hxu+F5p9ff2PXH
8VObf8C36jhX6NOf/fnSxIgvuXw4w8ZX3/ED+ynwu9v0vd/xLfuO/9+dv/P3
D5c++zMUP3O493M8P/xKuJUeX+XfKX+im3+cafqrTYdntNg4lnH9Vt/1n5Rn
4jq/rzWdfBfnWKLDv+T37cbP7jve9z1K9Y/hg91q5+87Ht7kKRYHQic+Rtxq
F5sf9B3PvOJ0i5P4+c+3OFx6f7P6RKHDr+S3r//I+7vWOJbo/H1ZQYdXyW/n
C5A3Ql6Ozz/Q5xX0RusK+PpDrTfQ0/E0GLzW+FbUp987Haf1VPVtbF0h/n58
PuuWf9L6YfzzoVu3sJ5BJ+5X4n/gX+P69rLrY92S5lXy0/GzWVew3kD/Y61b
VAevna31DDp8bdYtcLbRfV3BegN9ma1bWM+gs26Bqw1nG/0bti7w+oHOpV2l
9Qi6rxuO13oCnfF+usY/HG50X7ewj47u9dXhcKNfoHXBWq0L4Gijw98+W+Ob
9Qi6rxt20HoCfZate6gHgM7zAW42HG30c21dxHopvX8PNnCzWW+k979bt8Dh
tvsb6xbWM+jws7+kdcVBWm+g+7qF9Qw66xa42nC20fv4uLf2zC/ga8IZEM8/
vj/ribSOUbe+GP1e5fU5Qj824XPuVohvPBOcvG3t+ZPyNUt8kvLnE9dIn38d
vwy+JpweX98/nfA5v1c9aPwNcV3qCfmCJsThRIeveW3C31wTx1+X8Dn/s8jf
5P0GhxP9loSvCX+z2x9N+ZzPZPxNcXki/u7755skfE7mEd39T/mamwVnE/0P
xeckr+1D4nSinyO+Jvm5nh/z/oTPyf5fx99I+Zrsz3f9+6SEz8n+TRdfha9J
XP0ecTbR4XPiK1L9t9CPTPia06LOIXrK59w623/4ivibzE/hcKb3l32dvXI+
S8LnfGHGX4G/iW/so+Jwoqe83OAg2Pjq6m/5+KWuB/P/fcfHV6d6/snC+qSo
98V3+4639dmEr8/wj3C8j8/0fuT5XWm95iuHFyV5+l3+cXp8N7/sO3/anweT
zsfpO39a73gw6f0z5V0NJtN9+uzzB/75fe23NuFBDSZ9/bcweV7hX+j2N6x9
J7x9+86fPu/Ru+efff6kf35f+9n5s/wka9+Bt6/H//g3OvP7GYX5vY2/gY+/
YxN+ru+DdHxc9g3g5KbnZ96/RfZ+pV0YlzPs+njvbyUuLhxC9AvEv32buLfw
KtHh58K9FP80dPi44p+2cHLR4eOKvxqcXHTxYYOL4/cPfm66f9DlJ3Mc3Ft/
P/P/p/PwF8fx8G/h3sLBRSffBm4uHF10+Ldwb/39SD5oun/QrX/g3zI/9ecP
/Nx0/2BPv/7g3sLBRRf/t4KbC0fX7k9wccUv9vvfip+Mfz6uT/0n6gSLn+z9
o4GLK35y6CnXK+fjws90zrP3f/3O3p8WP8veP/AzS/WndPxET/yt+PnwM8Xn
bj4tnzn6WZoXwmVZKZ84OnxNfAJwNtHhZ8LN/JJ8+HH9en7D3fxz+ejR4Wte
p/8Pzib6GeJnug8cfb7m9cTfzpIPHB1+5j3GIYjz633B+hkOJ/p5Gs+fNx8/
OvzNs3QeOJzo8DPdJ4++IIkfdT559NXiZ64xTkN6/XsFFwAOJzr5+3zOKnEU
0uPJO+44CejiCYgr8IsGjib6NXq/KU+S9VB8Pr4Hxe2aZfL5o8PPhMMARzNt
n6hLpnzo14SudVvzlPIYnxGnAH00Hh6qrD6krT+3qPExFuo7VCnXmh+fn+b1
n+CXleJfM5L35vbBuUaHXw232vkj7xH/+hT9/XP2/uL/h2t9nq1/xT2pW8U/
nD+C/wSO9SzxZtD5O/ERcZTj+sQjqbdL/H9dfAn+NeN3A/FO0JkPXCw+jvsr
4V/zfj3H1r+MT7jVcKzR4V/ji3L+wzZ638Ct9vwu+NfUxXZ+ydfEr4brDk8I
Hf418XN4ROiMT3wZ4+PTz1Rwr/cQLwhd9eQizun8I/KTF+nv4iXF58O3Jg56
gng16fWvX98hro7zj+Bf8/d5Nr+Ab61+nPHv+vi4Kd9+nSz+NX5/i588vnSD
xZeIm1l93NB3kz/D6qvG539N/E7yG2hvdPicVl+165/ib1r90/j+8DuZv62y
/SF8k1b/NK4f/qbVN43j4XemnKvu/Qp/0+rrRv/YXPzOlH/VvT/gb1p93bg+
+J1WP7WLz4i/afVTLb70OzH/xSeLDn/T6veGrvycmP+SJ4UOf9Pq94au+qyV
1We1+NhTldX3tet/R6xPfH8NPqfV343Px19q9Xfj/mg/o7L6xPH58DmtPm62
/uO3j8+0bkNeP8mO79u/zs4vfnBNHMB1+NWMy/H6huIiPZ69/+FPw50ef/z+
MS5d/5r41Ddo/jz+/G8I7rTr8AwYf4Xja7jThe8f+8Ouv1f86UcV93YdfzT+
p/Htf6jaf0b2+ZeLX834Kxwf3OlC+8b4G3/+B4gbZ+dX+9fXK25a6D/h3y60
f/BzCu3HvkGp/9TE6Qrtg680a198p19WXHz8++/xqsQ/vOfZn2VD4p+ve47j
72TxaU6Vr2z8/v9hy0fv7cNmjuY/xy9P9c7XuNCeb/BT8f17fgR8V7gVq8Wx
QE/XXzvVH5UPHv0l4uPCxZ0lTi46PH/mn+vL54x+mvYDztT68x3mPzndvp/X
B8Cfda/y7PFpocPHZX3nfK6vql+ck8wvu/f/S8XHhYu7iTi56fXtFHzLE6x9
aF/yvh+x9u27/6v1/R7U93vSvh/3m33mPax9++7/6L7sOXO0Dtxz+agdDpmJ
rvwSjY+8fejfJb7uShs3Hv+Zq/l4iT8JX/SiAn+S+X6J76l8+qqHzxnz6lXG
52Q9VOKTHqn1WokvCV80nd916zOeeyW+6QVaj5T4pvz/PfzNpsTf5H6W+JvE
b0r8zSe0ninxX3V/bX7X8V8vStY/Rf5p3cM/bUv8Uz435ZR2/FN4cyW+p+5f
VeLD6v43JT6s+KRNiU+q98dE3/vjOO3/3iceV6o/NsH3hAOIPuL7XoPewhHz
88O1gsPjOv1vE3Ge7PzDvvOzPwzHwHXadRNxLv631zew6xv9vnSCfaj15fNN
r3/RBPtw+J39/PiW4TmkejtBv8Pn6scrTtl+/zneP13/sOf6h1O9/rljr38w
Oe/XXv+lE8QVTpDPyY/n/r6+cH+DazL2/l46LJ0ffq7qHLUen20TX+LW9Zss
vp3mP+4VnF104tZwcz1+zbqC/ID7LT6f5nVMb/ew+LbyEYKb+xWL31M3Lc1P
63TituTH3G3xW/i7xNc9vnyG2hWf224W312qfQPyd+fY/gH8XPIfTrX9jfO0
Llig/vN+i98T14ab+2mLb6f5yeSndfF9+Lmt9r03t/j3Z/Xcgbt7o+2vsC9A
/ozvDzykdQX5Sb+w+Db5tV/S+PuW7R+wb0J+i++fLEvi9/+ZxecZF+TvzLf9
lT6+rvsz3N8BlyzNW+Kn46Ou1T4onFT074h/CjcBDio6vCq4Bp7f5XVpPP5y
pPimnAfOKbq4MzH/d//DneJbXCKuKZxTdHEZGrio+G3T/lnOr4CPyvMdTio6
x32o8H5+XHxUnkM+f4Vv+lFx6+Ccot8kPir5AzeKk4r+Sa0fTimsH+CjbiQu
qtc/3Uj8U7hMcFDj+80Y8U+ZBwfPUDr8053F5YCDis74hrPt/gL5omt80azn
0uPL+TufYdwrjrFIHGh0+M5p/e4uv/jkhP/3TAMnOtpXfGfWjeJ9xvnhQ9M/
nd+2g/ZX4D5/ThxodPjOcJ3hPKPDh07ntfx0fOeTxYU7UJzntH+W5xd3if9M
nsFnxIFGh++8pbgxd9j4gg9NvztYnOhof81nt1Vew93iQKPL118zD4dXg76f
9gfhXsCBRoefCzcXji46/F24u3B40fvmx/BzzxN3aB9xdNHZD4n68uLwovM8
+GNxc+9LeIX98Rs9D2v6qZ6XdvzjFdxd73/wc+EawdFFJ77+BfUvfz59Ufxc
uLniNcb5r9O8i/4Fhzfur7iIKTe3679p/tlgsNjyz+Dnws2Fo4sOf/djGp9w
eOP+pXxdfEJxPPzc68S1gqOLHnWZxa29SvHK9P50/sUrzb/Ylz8IX5XnD5xV
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
zfeRzU/MP1vrfTh0PeW+OF8f3+xP9O8fFsZvzqex8Vvva/sfcC3hysG7RF9u
XMuvineZ6hE3mfTxf6xxLX18Fr7/AH0H506aPxXf60/FtbxWvEv0l2v+cKS4
lu82/+ky4066fxdf6hLj6KPz7++Ka+n7Dz82bqSPL3zLcO4XiVeJ7lxJH7/O
xYSjj87nbSau5TsKfNxV4mY6Hxfe7N+LG3mmja+njUv5GfEq0S82rmRWP824
mF8RLxOdz5sU19L5tjwf5FNunY9LvpN82rX7k38hX/SE4vqN+WeuM66l50/h
m3aOPjq+ZTj68C7RD9T8YWNxLW82f7g/PzQwJtH9/b7S3u/mb8zqU3Fe+Dql
+hxwPgr8qgF/9/ii8Xkq5/P08enM/1yYP3j7dPxt1rPyBdXufzJ/WH2b+cPM
n1S5P2l26g+r3B/2uPxti43zgW7+rdr9W+Zvy+pXsh4ijuj+LfM3ZfVzxcvg
vd4ebv4t8zfVnh9j/rna/XNzUv9ftr54TeqfE8+3238y/1f2/GDezb6Y++fM
/1W5/8v8hVl9xEdT/1vt/rfZqT+s8ue/+d8q97+ZP7ByfyDzJvVD3Z/O32b+
wNr9gePr9nTPD/5dmv9r/l7vbZy8wvn5mSzo2ef/hs9f0MvzC9rf89DRyVe1
PNbQlybrx5c+5/Pjm3dOJTrrxzrNMx1M9Xj2A51TOdXzD5P4x6aZ3tc+xIst
jjzl9kvjO68s6Du1Fsec8uc/3/P3tW9f+4lvX4mPU4tvb+9v+JbTs/3DvvFV
0OPz4fHB6dtm7Pp6yucfuJ7O/39WvU7rAHTxe4t8ZfF78efV+PXQxe+t5F+r
xe8N/SPyu6X1Dbv3C7w88mZ8/wk/n+J+4fdDxw+Yxi+9PlXUrc3qd4jvXORr
47fj/T7f8rPJP5U/rT7d4hf4HZ3jh36u/JJw8Pz9vKn8hs65S+/fThYf697P
4mvH+93jZ+JfV8pPrcW/Dh0/qPjZ+t2tv+HlMf7cvyV+eEvem/uDxA+vxQ+v
xQ8PXfzzIn8bPyEcvR8p3wMdHp/8nZX45za+y/H9/ZL1+8z6dcl7sqt/J/9H
5fWtU977YLDc6tuZPum6z+vHrw82qmcbhx79YfkF1U71Q/Jhosv/Wsn3Wh8g
Hyz6WRoPu4tDf7bGCTp1SYbixA+Vzxf3Tzx4OPEe35X/tJHvtF5m8WH5b6sX
GecdXf7T6o+M445+vt47K8WZ9/W74kkZJx6d+sVw7M9P3mMd30G+5/BBp9c/
vT1ZnHdfvyvemXHc0U/T/u3RxplHv1s8eDjxd1n91eBnimMPjzI+X88VOPXO
/2P/ZaZx4tEXiwf/ZXHiL7L9GXjzc41Dj36j8hHuNk48uvzR1SnGiY/2UXve
JA49PmV0G7+txm/o8KLhSPv4m9r8uFzfkvc7+ZF6z4c+IxnfHacaXdzgGo70
Vrb+W0+86NPFkRYfOI7Xeqr+qnGq0Y8TT9o50+g/Fu/5IONAx+eL5yxOcvM+
cZ7RtT+j9fvWtcfP4UV/wjjS6Cn/8q3tbuZvZXyyjwnHGl3xx/oPxYH2+PnR
4jl/zzjP6IvFm36lcajR4UV/wjjS6Cn/cotW7WnX/4w4qVu3vj8OT/ol4kzr
foWu+8n9zdbPR4sXfbpxpNG3T/igO7fik4c+1fWfcy57jh9M9fzEv/R+q53P
zvHOyRuvb8j8Ke4f+2PO4Rt/fMfJcx1O3jdtfsz5LxWHz/n8dv1ZfNquP8v/
RnfOnut/LE7ej4wfwPPxKnH83iqOX0GvpUf7vCZtnyy+ZO3D+qEaf/1PZfvT
qf5A5o88QPq/i+P3gDh+Bb2VnrWvc/Jcd05eof+0Xl/Cvl9w8ly/TL4drS9K
/adO4wQ+f13n+a5PB657XVjfv+b55T7r0JP8gXVqzz9X/e6M44Y+R360dP3W
9a80v+KJyvPv+q5P/q8qXR9144d8cvLMnQ+ifc1mR3H6Xmr7m4cqL5e6PL4+
7Pt+P7X2+aS1TxofuTdb/31Cvm04fbfb+k375jUcvpfa/nnf9+9rv77779c/
366/7/72ra/gHcNB9vro9PfxnOX/wZcWB3lo+wPaL6ydg5x+v3VqfCA/tvrb
+Mk2FQfZ3/+T4h07Bxk9XX/s1+5m+2/av6w3MY5xtI/i4nCKn7b61bq+eoU4
yr5+Un3D4CB7/fQLtZ/7DeM0o6u+YbODc5ilK1+4hmPs6yft51Enu/L62Krv
V7/POMrp/V23dg5y9A/td6uuXbW31efW96vhMC+1/YfDtV96tDjIu9j8VfUV
azjIXn+d55f2nyuvj6rPq9aIg+z7G9rPrXY0DjL6ucn6tuMso09t/hb5P5Oe
X5DyUCK/Ne7f+gkPJK9v9APxPS668Fc/3xl+2Nb3KY+O83ftZ+fP8mtT3gP1
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
tHBqF1r8jX1F5+Ciq/5I+0Lj1KLDo4VT6/6qPn9YH58H3p3VNw9d/LjWOZTp
99upnmOcQW/f8Ry8xyqNq1gfug5/UfOE7Hh4d87BQ58m3h3x1cL1U9c7098i
HiRcRH++HtPDHxFPLH778118+No5i+jrilf3r8axS9v30gnVTax8/1780oyT
h76VeHXKy6/eafEBeHVw7MbPb14YdZ/+UZw89F5+U7J/lfNd4D5caZxP9L78
Cj13Lf/W348vrp3ziZ7OP16QzS/78heJq8D59OfTReK1wnH9oK2/6HfO6UR/
t3iLvHd9/6vgXx2gq75LTZz4K7Y+5/srP6BpbH3Kun6RcRzj/vbwt16n+J7q
NtW+/wNPVtz76il7v/Tlx+BL2lqc2UMsPgb/kffUaeLMoh8iXu1RxrFF/1vl
s1wszukK25+EZ7rAOKdp/yn7h9l3WW6cU3R4pscZ5xQdXirX7fEt+GbOgRzf
v/P6MvAcVZesWWH7i/Ai/484kn9l+5fsX2j9mPVv1b8Jf+vlFh+2/Cnm7/H5
mpe1tTiTPj+j/st+4mjeZfFteJniXjeLbP2oj52cM5bTmfPfFlh8mLj6A+I/
eX40PEp+e/s4f7LAZ2nFZxl6fQb4UNeJCwUnCn1GevzEvnY8PCry/Pc2f5rx
oRr8puj4M16veewHxZlChx8FN8r9OeYPb9wfznw/5Up1/TflSQ4Gr7PvBx9q
qbhQcKLQyfdVHnC1PZwp6S9TfsQfaH7xXnGk0MnXJc/E6zewviQP+QBxptBv
SOp2/1cDRyr6r/K5vyYu1PHiRKGTz019WK//Qj4vXCg4UejwoMifOkucKXTW
w3ChVokThU48ivPAmUInX/xvxIWCE4X+Kpu3zhdnKr6/8oXhQsGJQr9E+cLU
B/iW8cPP199frc+BE4VO/hZcKThTcf3KR4cDNWH1H7RuUX7RxvW14kyl95+6
51u2cKTQyReHCwUnCh2+1DriSs2CMyUdftRN2v/dSBwpdPI/bzOOpOuWHxr6
IP0xTkymD1w3PmRwItHt+dHq+RHtw/Mi5VB1esqH7DiR6fE/M+4cP/36acob
PNM4keirNW97UL+fVJ4UOvO6ey2PCh2/C9zITcSRRB+Nyz2XL9DvUZ7fIcvR
T1Y891SL86LzXGCcnpPMA/qP5//n+bC+4pDovm/g8TP+ze897Hj2I6w+X51e
f8edhUM51eO/qvF/jn67f4N/n5XkcXbnpz70lwvHv0R+K7iSs8SZTNvnsJmf
0+/R8cfPRMcPtcY4k+jsdzOvWK15huvOoUS/1ca3j//UbxQ+JNeDvwbPGR1f
XsrP7vytOi98uMb5cfsk846fiQ/X7W/OSP4eHMk4PuXDbZ/5p/z6B8mPf/+b
hnvb92feLD5X4/mdzK/5O5w59PTv67fic8X1P6G8Y/JoPL/zSOXV8nfi+Ojp
3x8Mjhw6fDjySt3/eYHWlYxfOHPoc5WXK35bFl+DL5e2UxffIN8FLhw8AHTF
Qxq4cuKz1XZ+zpvVF9f1xfwBzhw6+RzkTbs/m/l+Wl+ky+8n75u8bDhx6OLj
VeLjUT8ydN2/4IJ6fjl8Of7OPoHd3/BV4ZdDPzP53tu0nl9Oe/F3OHPocOXE
N2zgyKXjo+zfdS4V/0Yv+B+nfP4+vcC36Dv/YKp6gV8b7Vfwt8Tnp3wr8lc6
/0zBfxF6wZ/Tohf8LXF8wZ8S13/SeP9JnH+P8f6cOP/7x/tP4vmS8q3Y3+zu
T8HfE9dX8G/E8ZuP9/+EPj/hWxE/7/wzBf+PxS8z/0p8v4L/KT6/4G8J/brx
/pb4fPw716b+nfj8gj8nzl/w58TxKd+K/ddufVfwL8X17Z3M9weTrzU+1fRn
f740HMUflqsORLc+eL78Ovv8gX/+8x3/Fj8ZevwkrWc+mPTxl/an3B+QxusG
k2kea5eflx7fxafs/Jm/cmHSX8mf6vx9fedP68kNJr3/pfHMK4cXJftY2edP
+uf3tV9abyj3d6bPI/yd3frX2nfg7Tu18+9kuvPz4/MH/vl97dd3fmvfCW/f
Pn6c8aXYP4/j90/W37u1fy5OFXq6nr9JfOhufBk/sh3Pj+ybf/+sgjvl8UH4
UnCl4Eyhw6faIpk/7hzXx3zz98Wd+rI4VOjwp8Q5asU5is8fxbVmzjw4+X10
rN/gTx0l7tR9lt8Av4r358GWvwl/Cu6U4uvx+eR7zk/m1934IX8R7tSrzN8P
nwFuFRwrdPhTcKd0/dG++IFYfx8ujhU6/Cm4U74/cLH4Vay/d7H8Bvw3cCdu
FYcKnfc53KoSn+qD4lLBqUIf8RfeO3OX5PdJcf/gU6mf0b/i/qnf1PhA/584
V+jsu6ofyl/RxfeMz9jAaUS38Vdr/MX1wxexOgsDdNbN1G1y/nrf8TOS8Rmc
q7h++IziVzZwGtFV37TB9wvnMe4fcWXN+3YTxxF9d/EZ8RV/WpxGdHiM1yp/
a5k4j+jwG1v9f3Ac0eEz4vuA04gO35E4GZxH9NUJt2YzfEpxffhyqR+9SpxH
dMYfXEY4jeiM3y/pPN8S5zHaL+H2DNoXW31N3te89+Unj+PFe63gMsJpTK//
Vu1rUUfhf9y/xBc3vdV6IL7/Qps3zhfnEV3rjuAyiqcb198mvpat6zeJ84i+
VHnBS/X/zRHHER0+I771U8VpRIf3BXfgfnEe0T+rdoPbeKM4juhTW/+uY+vf
nP9mxw+mqqf1oSKOF9ef+m/z+tDmT6L+cuhzU39Ftv5bm/pvGq9PaPnl1J+c
8vVZ/mHUU0a3/NBsfWZ8qwbOFbrxsRrxsbr45AdG3++The/X1z6WP5Ktf41v
1cK5Qjc+VgMna6rfv6/9+u5/3/X33d807prvz/xm1l/bt8YZrv14rf8rr7+e
6uvUcBr9/N/TvP1BcRj9eLjjcBbRX5Ocf6fgNPr536h1xmXiMBauv8GnVbj+
4DS6rvV9A2fRdfqP51+w71+Jq3ipOIsFXRzA/PnIcxbO4vjr36l2/396fbdW
5HmN1++t4DT69a0VV/FH4iwW9Fp69vnER9R+hc9/poLTWOg/rfpP1j7kX+n7
Fe7PvQ2cxkL/qdV/4vOtfkDr9QP65n+j/Zx/mEjnj938RnkHwZVT/kF8PvHq
ZWmdpNAZd4+kdbBC/2vx5X6e1pGKz8cfQR7OZuLUoafrmx2DQ4dOvJx9fHw2
6PDpmP/BqUOHLwdXDs4cOr7rdP7Xrc/hy22f1jGL46k3dkPiw+/4MfDlvqQ8
gYPEmUOfZXmvJ4pTl96fdYMrB2cOHT7d2RpfR4tTZ9cXXDk4c+jw6eDSwalD
hy9ndcri+D9W3sXuWp/OFqcOPV0fRh20OP8F4stZHbG4v+yXkWezVpw69HOT
9XPUKYvP73s/Wf2t1vmkafw56lvE97f6E7XHv6z+Qev1D1J+1vR4T6Bb/YyM
D2z1IRqvD3FkWj+j9foZm6T1ITI+sNVPyPi2Vh8iq69q9RMar59g9Tkar89h
9UWy/Uurz5Hxb9L4O/mVXX0Jq8+R8YGtvkTr9SWsfknr9UusvkaW//x0Wn8i
4wNbfY3W62tY/ZHMn2X1MxqPX1r9kdb5soX8mkl0+C0WB43xBV+nxBeC75By
HaZ+fvgJ6bjpdPzHqe+4Oz/+xpJ/fmrn37mY342/rZS/23d95EWnvp2pX39f
+/ddP/n9ab/t9L77R354mhfu+qusLsvUP//5nr/v/vS1P3HFi5UfQb4BOvOC
RcoDUL5A6Gn+4q4tHDr0r+m8xrELfXWa16I8yrw+ML6zhcl9fqyCR8z71fNX
3pHmXbTn2PMdvhxcOc9fgE9H/HsD5YOg8//DlXN/3YVp3kxzgvJp0OHL3ZFy
7upU3zX4l3Dq0MnLaNUOnt8Bnw6utPvPLkzzPuAQxveHT/ce5Xd8zt5f1DPc
LuXAxedz3Ckp5y4+H/4c3Aqvv7KNzmscO59fBV9wlvJd0BkXcOf2UL5Q2j57
8rnZ+3elccH4N3rv8138MHx5cMTQ4YPhK4QTlvYv+DRbRZzBvl8xviVuUnBF
4IChnyV+GO3k8cP7xFX5Y3G/7kt4Rh0/DG4YHDF0218d+PzyBPHDeL47/3X0
e9WQ9wu8E3Tymnm+LrH1BfwvuF//VxwwdPkiK/J35JeM498v/tcx8vV6fqe4
fC3cMPH6QocPBrcAThg6fDC4YJ6fCB+skW8VThg6cbf7Cvm9V4t/mNan6OI/
ffv3xPN2lS8MTqL3T/ofnER0+IcbiWv1W5Z/Bz+R/ud8EviHH1P7wkFEvzbJ
W/kBfqTQ4R+epH1BOIjoffOL0e92SP+Ck4gO/xCuDhxE9PniJ35Lvib5nUKH
f8g+p+8/HyJ+Iv0OjiL6nfJ1biWuhHgToRMPPFi+OO9f8BHxha4nTiI6fDl8
+3Dm0OWrr/DVy28fxx/z7M/Vwy/qvb2+eDTo+AbhysnP38VH5Os6U/1rM3Hq
/PtfIq4cnA30dH/ov59vVt/6KvHl4DgdJc5c3B/FNeEOeP+ELwdXDs4c+k16
PvHee0KcuvT6n6k+Ki4RnDn0odZ7+Evg1KEX5q/Rf/vyT+DLwZWDM4e+g+Zt
cOk+J05dtG9PfB++HFwIOHPo+H6ZF/6nOHXoffw5547xb3TLL8r49PDJ0vh2
5s8Lbh/vQ3T4ZPQvj19+UXwxuGJ6H4UefDLlecrvGfrJ6m/7ynfp8ZO+/SH4
YvTblOfR8cl4vnn8ifct+dvrJzysjk+Gb1R+0tDhj52s5+OB4pCh/1z8sSPE
zRFPJ3T5fcP/m/lDxCcjT8Wfn/DH8MXDIUOvxSe8W75N5/v1rZ8HM0Z8Qvpv
8LKs/9A/4ByiK3+igUt4le2PnKm4yCL9/ZviHKL37Y+m7+edgnMYx4tPCJeQ
8Ygu33r42v35t4fys96k9v+sOIXRv/XcJw/e84/Wil8IF+S/xDFE31x8Qvme
2umK96CLa4jvpv2OOIfoO2j9cKi4BJuKY4gOXw6uHH706D/i03H/4c2hw5fj
+Q1nDl1cI/j9zfvFqUMvxE+if6XxyMHgDZa/CF8O3zycOXT4dNx/OHXo8OWo
q8j7KP38jksgzkccD1+OfgFnLr3/t1Zw6Ur8uZPErYFDhw5fDq4cnDl0xhv9
98FRf57y/vFBPfw5e69lz593iX/G+IaDhg6/jPn/i83/Cv+M+D3/Ri/ExybR
PyP+GXEYOGjo8M24f3DO0OGXwS37hThm6PDP4J7BQUOHXwYfYE7CW+v4Z1tq
fnqHzc/gisA1g1eGTr8nPgbnzI5v4JI8Ks4Z+ibiB0Ycydq3zz+Inxn9dnEG
0eEHosMRRIcfiA5HML0/G8b8dp44gejwBTn+WvNfwQdE9/1N+ILozp9I86vW
aQ/UfiT6UPEVdN+/5P6gwxlEhx+Ivq84guh9/Dn4ZivS+Etc/0biozF/hZOG
/rj4Z4wP9zcV4seT6PDRGD9w0tC/I74Z6yM4Z+jw0XbW/BdOGjr3g/WF75/0
5deIy13BPeN9ht6X/w0fba3Wb3DS0G8S/+x6rW9uFAct7o/uC++3BeIAojOe
VH+jqc1/O1t8QO67+wvhA6b5I936CL8kn7OdOIDo+Fm4vnvFEUTvy286OeHX
PNPAEURn/57zHyROIDr8P473+jF98XuN92i/U8QJjPZN3m8viN/o8M+uU/wI
Dhr6dfJzBYdLHDV0+GfEJ+GgoWs/X/VV7s38gwsX/OrnmiHrEjhpoYt/dp7i
h/uIg4bOe091xOtXW/42+73ER/35Bv+M/Gc4aOjw04jPwlFDT9ebg8Fi8z/A
7/uhuDAfEscPnbwxnj9vEgcQfSPx+5j/HCSOH/rVytf5otr3R+IApu27YEic
A84furh9DfsncxPe0WPVyzV/31bterc4gOjw/WhXOH/o8Pvg9om3FO0H/y+4
f+IAohf2p6L/w8U4M13fxvX9meZ1xxT89+JmxfMbDhY6/DTWh3PFUUNfKu4a
7x84bOij36uGd+v64UGhq+5IxNeoh4AOX435C/MhdPhptD8cNfStxV+Du+b+
X/H/26+Jq/akre/eLX4f7QrHD52/E7+aa3wC+H7cnw3F+UNXf4/ze3xEv3k+
1HD+0OGqocPxQxdXMM7v+xfw/dD9+UD+FtdPPhN6H3/OuWpXWv9aLD4b65eX
GH+mz/+leHsLl835qPDX4K7p/R/nT/lzT5AfEuOP9S7rR60n4/zw885j/Iij
h+7t4uMTfl6aP9nlV/btj8PXQ6c/WP8s5g+n/Ll7iWfE/df9avl+cPbQeZ7A
tXe+PXw2+BCK58Xxn1He1Y3af1kkzlt6/dPrbxx319XH3fXN4XfNvwef7QjF
1xRv8/dTjT9hqThv6PDb4LZ5/4ePBxcPTh76fopPwdX7tuXPFvIX4v7xPPys
uHgpz7Xj6xHf2VCcPXQ972Lc6nkY1w9/bmmBP8f+Ac9vOHHp9ZfzK+DHpfXl
u+c3fDi4cJU4cejw7eDawbnz/qsPzPyXd4l/h6/tM+LgoX9XfDnW53Dm0IkH
wqWbEKcOnc9lngWHDt35c54fd624csQvlunf6J8wfoz8Dt36LslbnF7favwG
9BX6+4qCji/F/SnmX8n0NG9yndr5U+nxZd19CIXrazw/0+rLF/XB2J//cTx5
Cpaf4PoK078lvbnqljXnn/DKmt9+vNd5cf3yHv0Ff7vZ7fvs9+2G34Xry9b3
U9WJ63h8Z6q6c1K9f1xe0DneOb3PVec5dbA9n/p0u3/xu/D5wYF8rrruW8Xv
8f0XDouPz+mM34I/jfngkgnnP9HT8X07v2HkH7hBXIdcT/mN69X40dHhTR4j
3/l4PmTnC9/b9s/xncN/w48+/vvxPbrv9zb5wr8qX7jziY423/m68qOjb5/k
R+1cPyE/Orr7yvGbo4+e7zOXy1e+/CD9G32xfN2vVJ6Uz6/wjX9CvnH85Ogv
13F/KN/36bY/Kf93S/6AfOBxPHGdlfKd+/6R+9rxu6O/Q++v2+XrPtfiO/jG
df344ON4fN+qz5XlV61nvvX3yc+eXv+95JnV8smHnuZPvrXezeIbul/tS+Ur
f1p+c/TRed+7fPT7pOX8G9194VvZ+tB95+IcxPmJy6t/0l9Dh6sk/08Nbwnd
uW8r7P3mfJa9bfwxrrYSV8nH1z3P/iyb0PHD19nxg/Rn0sf33uIqMa5nG1+5
7/g+/WPGVZI/ONrnBuM2yR8c7SN/cHsa6wj5CdDxG8jfHH4E9Na4TfI3x/XJ
39xo/VDL3xzXhx9D/u3wa6DLv6346r0NfgR05ya92PZvnftEPXJ0xj/zbvm7
6/T4jgsFLwp9deJr3ax+peXnyT/fUF99lfwg6B82bhI8JXT59xv5t2rqwaPD
b5S/vpG/Pr7fmUl8ZS/5x94W+u7GVRKfIK6f+sHiE1TiE8Tx4hNU4hM04hOE
Lr6CfC1PB28J/SHjNsFzivZXu1GHUXyF0Pvm3wyclPPS7b+4b9D5rcZf1fOi
e77p/a71+cwsPwR/I9yJGfZ+hr+Ef8T5a33XN0/9Vj6k2vmnvytfkXxGtThX
cfyPjGvxiPLR0FnvyidUL7H9KXw/nxLX4rfFu0CHa6E69/V4fvte4iK/jTh2
tJ9zKVabf3ye4lk3iyvh84cPGxcDXgZ68J/FtfD8f8b/puJmeH60+JPt7uJG
+Pv7HuNS3CteBTq+pHPFlVho8wfnYpxh/n/e/3AtLrD4G+N/UtyMz1l+GvsP
s8WdWGb7yxfLdybOnv79P+LXyqeWz69eZvlzZ+q58y1xJ5wv+zH5wuQTa+Bd
oOPr+764FsSb0PH3ppyXLv5rfMPKx9c+Y8cdPxm/KRvf8GL5/Bn2+ebvb8f7
+zs+rT8fzL9RuX/D/C21+1vMX1G7v8L8LbX7W8yf07g/x/wnlftPzJ9Tuz/H
/Cet+0/Mn1G7P8P8J437T8yfUbk/w/w/2fg3/1Ll/iXz/9Tu/zH/SuX+FfP/
VO7/Mf9K7f4V80fV7o8y/07l/h3zt1TubzH/Tu3+HfM31e5vMn9O6/4c8zdV
7m/SuIj1eQ+f/TnPn9Pz588PO37wvz0/edH+/kMnzp76WTx+uhOctOx48vY8
forOeyrNV/b8mvL52Zf2/Gg9f4dDzf/SfJD+66M+xxk91wd30P1To+P/ejhf
4zbd7+pvf57ftP/Xx7d/8fMvuvBXP5dP8PlvtM/X/vmE4gKN508/3/Zlf750
/r74snNtvP/uk8xPc74h9VlYp/v6vG/++mPjZvj8CS7HCeJyLBKvA/0643J4
fgj1N/5e3AyfXz5tXI7PiNeBTv2JjcXluFn5ZOg7OPdCdSzQqc+iuiztteJt
oPN+vUZcDHgZ6L8Q10N1OZrG+NjMX1eJy3Gr+U94v6luSf0Oy79bZtwLeBjo
cDXwvd1g/HXqdxwJF0O8DHTqf6juR/A+0utn/vo79ass/zedvx5IHZPQnZvh
82fncqhOTBxP/PBIcTnerXwQ9IuNm+HrC+dyqI6L3d91W9W9qTz/bJD+ZO8P
27eJ/YLC8dn7afR8ulD1DJYMZ5hu9THq8fUpOt/nOda+o78ftnx0n/L6D1a/
ohpfvyPqX7SqfxG6+w5U/yE+3+qXxD4vutUvaVS/JHSrb1GpvkXcX6vvofnj
v9v379rH+5/VP6lV/yTa1+pjVPg8/ftrf7Nabd/f6nc0/nyz+h/yz3ft23f/
rT5Ktb59f6v/0jxl7dt3/61+SXb9o/fanjNH427P5aP27erDMG/zOhnoA/t5
rrpz01x3Ltt4fR3lNWyX6eJFizu2V/b+dS6b67TXv8qH6Trcs0vEPXPduWqu
v0FctMvERSt8/+C6uc74uUL5DYX2adU+me7cM9edq+b6d8VF+6G4aIX2Da7b
+PN3XLZC+9dq/+x45rM/Ejet0P7BZSu0n/L8t87OP1Pz6svFTSu0T3DZCt8v
uGyl/IJS/kDK4x0MUg5Ot77Xuj44E+hfUXxgY6tDgs7683GrI4PO+lvr7uhP
6M4FWazPQ2f9Sf4znA104iu893x9S3yGOiN3aj2MzvzqUKtzE/1P84PF+rvm
d9n7Z2/FBeBM+Phhn4E6MOn5O+6Gr//5vHSd332/WVq/s67w+NNK44rAOUEn
fsG6CZ+njx/FLYLzgk58h/Wh50duaVwQOB7oxL+IO/B90vv7VLOu4kKso9Cd
C7KtPs/6ZzPH6uCgD5c++zNBfUqff61WfJv6WL5/RHycdppv+zfEX6/T+vWN
tv/m3DPfX6NdmeftbvtbzlX7vu0fsr/APs89tr+zQPsTMX+y/Rviy4orN1+y
/UXWw/h8/tz2Dxkf1C31/TXntvn+GVxu9sE+Zftf1yR87jXBS0Mnfk19m0/b
/utZin//ncbPSttfJS/083qPHW37m+n8bTpx/NDZ32Af0fcP1S7h77/F9gfh
qj2l99Azvv+m/Qf2WX1/db72L9L6mt36Ez8K8QvfPzzOuALOf/H8Rfk7Qk/3
E9ZMHCbeBrr7Xt1fzrrjV9mxVx+3dLiend992evKrz3V8/Ne4vzuj3dfguev
OrdsrvkfUz/hYDBNfp/C9U/69fe1P3Gt0b+XTPj1e16u+z+4fn3/Cfdvnps8
z9dMpPXSs/s79Pvb9/nz0rzbyROSeszZ5w/98/vuTxqvXjIx185v92fS709f
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
u83/1Lq/3fw5GX/D/DktnA508z9VcDjQ0/EQ/uQ4PuVjPVJtJ04WesrHfNLO
F+/n2t7PcX7jY1XuLzO+Tg1na6qfb/6VCk4WuvlXtL/1mtDNP9HIPxG6+Usq
OFno5i9p4Gyhm38C/lro5h8ijzLOb/6hFs4WuvlHKjhZ6fcP/0ijeWydnj/8
NZXm0dn45jzy52TxJ/mT4P/Z+cOfVMPZCj31pwTvG938KZX8KXG8+WtaOFno
5s9ptE4K3fxLlfxLtv4K/1Il/1K0r/m3Wjha6OYvquQviuPNX1TLXxTfz/xb
FRwtdEbCr1+fXzUUN7Pe2+bXheMHU9WN35XNH6Z6fvKafX1r++OV1yc1PktW
X4Dz4+NN9zsz/kzj9fOMz1I8P/v2Xj8JnX7k9WH6rs/4NM0b7fo4Hm6O14dA
Fz+oXmv1A55v+/d9vvGBSp9Pfnb40Kbavsb/ab9eaN/S+dP5cc7X4fipxqcG
yc9j1YrEd91x6Kd6fOyfJv2vuz7qDi5I6lD4/uZhiusePxPOB/pp5D8p79Hn
l7b/1c62+ogWv8ziuw9rX+onyou5x/L3iS+xj+J8xJeK73GEuB5wPrx9Fhba
x/JfMr7MS8T32FhcDzgf6H+p77dE3+9E+37wP+B+ON+S5wV1eJ3fZ/tj7QU2
P9d9b16o6/f5r+VvZfff/GftA9b+p+nzue++PuD+Lyjc/9G8Ys+ZcD3gfKCn
8zvWeXvH94c/RfyZeHR6/Eat/NfDfW192Dc/XCv+1NfEnTpeHCp0+FXMT7w+
4jKt38gfhFOFDn/qb8Sd2sHyv9n3PSOZv+0XOnyqm5RXt5E4Vejwp5aKOwWH
Cn178at+uXrErdoejhXXJ/6UOFvkT0T7Ki9O65eN22vFsUr77zot3Ck4VGn/
hc84rV4ljlWMD/GnWPfCoUrbF37hxvUB4lihw5+COwWHCh1+1TriVs2CYyU9
5SvuGxwq9PPV/18t3wAcK3T4U3Cn3B/1DvhVyfy0W/++TPGzP9C+7nvFqYr+
Kf4U3Ck4VOiXiF/F/P1bVn+b9SdxAzhV6IyE0vsl5Z6yfuv4pn3Hs25AX2P5
PbzvXytdHJU6PX6d+Pw14uzE99P+DOeHo4POvAP9MnF47P7H8+cO8/fgZ+V4
ODrp+XeJ6xNHx67/8ca+f5x/pvg76fV183vGl33/0Blf6FdY/e952v/h/F4/
S/yclv05cXS6/qN1hbWv3b8Z8f3F8Qmd8WXtGzrxlRnJ9XXjg/0Na/8q/fxX
RvvB4bH2qax94vPVPo21T9xf+Duhi8Nj19/Y9Wfzx9uSeV6X38tI+fXjJ/jZ
GV/Z+Nk1+2Hoxm9ul9n83fjWUccX3fjWrfjW3fsh5Tc3cETS9g1+eet8OeOX
t+KXx/HGr456wOjGrw7OSNp+wfduGI/WP+CDN+6fMz56u8T83cZHr9nPS/t/
8LGz/A3jY8d+so8fuCDsx6bXH3xwzQ87/5zx0zO+jvHTYz8U3fjx7SNWX9j4
5rXnjxvfvGE+j278+Gz9Zvxu9hlifBh/unV+s/Gn6znGTzb+ccTp0Y0P3Tjf
2vjQLXl46MY/bs6z9jH+d+PxXeN/t/Ns/Bj/ufH9BeM/N7OM32187Kz/G1+7
2cP41cYXz/hTxhevHv31fOmMP2V86Yxvbnzs9qPGFze+duv5B8Yfb53fbfzx
yv05xl/P+NfGB2+cb2588GYD45cbf705wfjd5o+qfXyY/zPTLf9M36uLX/Sd
3/gFreuWvxz7hOjGN8mOn9r5I/8suz7Lf8yeH33XZ/7F53z9fe3fd/3mT8jW
r333z/z3mW7+nOz6+z7/+Z6/7/70tX9f/ULz12Xjv69/m7+wkb8wjjd/HfXA
Qze+TgunBN34Jq3za8xfWMMpQTd/YXBO0u/XH/+SP5M61aEbn0B8q+77mf+8
hnOCbv7FLH5s/kXqrfv9wX/ZwilJrz/8m63HD8y/mvF1zL9awzlBN/5Hu4vx
+8xf2spfGrr5r2vyjNDNHxgcKHTzR9byR7bo5o+EP1an5w9/YAUHCt34TvW3
jX9hfJ1WfJ043vyRNZwndPNHZv5784fWcJ68f/IcWWn8c+NjVOJjhN73/DX/
ZS3/pfff4v6G+Udb+UdDN/9pcKLQzX9bw3mK9rf47ckWvzX+TAsHCt38sbX8
sXF/zP9fy/8f39/8N1n+o/lLGjg86Gpo8p+z/THjV7U7WX6K8YNaODxp/4n8
9Jn6d+xfWP54o/zxrP/RL+HoeP+Du+P91/ggM+HooBv/oYbDg2755S0cHXTL
Lw8Oj/c/e/9H/y74I+J487e2B1j+o/krazg8cf6Ur9PC2UE3f027vz3/zH/S
wuFBN39bVh/Y/FuN++ML/MPQjc/VwFFBN/+a6ih283/zrwVHxfsX3JPVFv8z
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
9JiHNPytT4kekf0eovrlMdHDoo/90lIvW3B4k+gfo4cs+NXRG66nbmh/o9Xo
OXN/O9cXP1rl1t26i160bP+i6CVzf3L/xvWfonfdHv3rUg9b8H+OXva86Gff
tNTTFtzPZ8+/WT/cr/a5KXj4rYu7qh+D1+PBykqtU6Z+d6ein/vv6cfgmten
XZ61WuP37DxOFDz91f0YnP5KP0ZnCx59cvdLGSc+rfwP+qv7Mfi/pr9S97Y/
Ev3a4wT4B9Lf4B25f0c/26GbRUcLXnLDMg6Y3xT9dodu+w3px+B5/+8ZZx6k
8YP9oSt2/YP58Wnph66P05/cz8CjTy+6dPdv+iv9+Iz04/r4fxLfnjt2l4tf
y/7QdT9N40Ptuz/2Y3D66/nqx3X7uHWHLtn9f6/0173Uj8Gjf+/QvV+Qfgz+
qxkPnp9x4lnyz6a+2/KnpX+2/CmXn8U3K/vlp4WP/fPu8dXKuDD8Sn6f2f8a
ePwnFjP+E4uW/wR1mRZ/J/4ai5a/Rvwh+hl/iEXLHwJ/3Bl/kUXLX4Tn8Yx/
RvFdbvhnLGb8M7qWfwb9Y8Z/pbtl/5UxN7ahz1jM+JN0LX+S+Kv0M/4qi5a/
yg7lFtkfpG6f0/oS/es/Vu13WN14+1b/GVbh4WzT85Hn79z+V8KP8/Vdfm5f
Z118+X7+v/hX/Nze6dOrrwivAZ8k7//Q8K89P8zxrLP+/UX5K2f/6zu3//tM
+hc4+YnL+tcPJuPHLR/fWausO1y74fHdsHr76KPwIfP1eVXq0+9R/ZXv3yPr
q56/Lj+vXiXf2f7LO3f/rlhl/WXHhvfvhvWZ41//P3385Ja5vrxz93dY3+2W
7+9Ka//2fff76eHxS67fH6f+ynyP3y/t/2x/+UNTV6/fT8Z8hy/Hjxd/XnyG
wfFDxh/5blrfw2+4fn8b5//4FbNfvgecv8e/d+P67JO7B1Z1vrH/nBW/3b1y
XN/NcYLfO37NR8e/GR9g8JPi5/uC+PveOj7S4PEz7uo6+dj+zoqfNL6uB8Xn
F5ztuO7uP/n+Bd+Lz7COv/txjpvzAH9f/ITxF/730u/gx1y/X471A/yc8XfG
p1r3R+/X9/L2xd+a/YCn2ZbnS/IByvMhflKLC+MztTU+U63t+R2cerL8Kcr2
8Vfo5K9gflEnfwqt3z6ik39EOT/89uWv4PXfQf4Rpf2y/iV/iNL+46+xkL+G
jv8Rg/xJyv7j77GQv0fZPv4kg/xJyvbxn+jlPyF+zx07+U+U/cdfo5O/RsF5
3sr/pFzf+Ht08vco25MHIf+TgsffYiF/i4LHH2WQP0o5v/i7dPJ30fvnTxby
Lxmvb9av5F9S9s98RP4ujffb4i8yzu9n1v/SX+Rvc1bJ59geXRi49YE3xE+I
+seX41cE/r74EbG9/Wfwi6r3P/Jv8VsCx88JHL0WuPXXZ8WvCNz9B7+pev93
0/4P0PHdV8f3iE7b+/wHnX85vnPCCwXfEp0O+NnhB9THP/afG+LHVV//0X8O
Pypd33J++DHFX3awvyd5f7q+5frh9wT+9+r/uf69rv+i/v5D9f37le/P9Vno
+pT95/p0uj4jHr8vtZ9Bx9/r+Ef+w8z6WPzuCj/U9ZXUp4u/zbNVX4JviA/h
61W/Sn20wyfQ9ZXUfUq/adSHhy/JRxE89fHMr24/6R9fXdZ9evvUgac+T/1+
0j/2WNYdO/gbV6r+mPrxgM/gJ1R/OmhZ1+zxEXyy6pupjydX6VaT/rEcF59W
/CWeo/rSw8MrT11+0j/et6xrDrWPzljfTH26w+fxPNW3sv7Busfg9ZPUdXt8
EF3fXdbP/6/Sb7z+kfUJ1iWG96h+uqzrPZC67KS+m7pi6Tf/Q/VF9DCHyUcR
HP7jUOt7Cw4/lPqK+Q3yd5zUh3j+k3vi9f2GPqfsv6HvKDj6lwfU/N3S/pPn
VHTLznfCf/c3c/yujy15v7uW9z7zXxr66ILj91TnqIzzB3yJ/i79yvWx8Brg
PUz4DXPXB/+0rZW/wh20/cS/pZy/+XPOR4q+jXyZCT/a/GK3H/Ov3677x/ff
L9+/ru8/Mu2H+qf5K9bnbdH1NT9qi44//LTF11O/fa3qt8ynnIMHfnX0pPi4
nS1/RPhv+0efes2Sz1dw9JjoM92+z4qek7/z+I2e8q6VP9a0/W5rtF/ee+4W
/eYhyzpmwfeo9K6jDwU4figPij/Kl5UPtPwc1vdo1J/w+7nVC5b+P7+51IuV
7X+EHvWSpT51qYcf3z+G6EV3RD9q/UB064Uf4Hy/otfde6nfXeb9jN//4Wp+
96M+euSyf3jVP41+2f555pV7foIfxZb4U1y65HOW++/cd8+f0KM9Lfq0M5Z8
07L/uv2OOnG3v7/IvDZ69ILvGr438yy3v+eHT31w+NXWF+OHcFT8EcLnLzh1
XfJVw+cu+PXRwyTnY8Kvw0+mfi/k52fjS+ZDPOd/0fo1fkr4K5k/8knl4obv
XvBdlVt7qPrX6zV+nqjxk/kn+peXLvUwZf95/4N/2scvpNwf9MQHRV8cvXHZ
P34pfxz/FOebobfror/7+pIvPanvkGvP8wb8HOXynq72F91Lhz/CBUs9zGT8
hZ/g9kf/xTfgr5d6B9UX/rH4JsXPoxzf5uglnhf9hNuvc+NdH8HvCP8jr29S
z9o/+jm3P/QeN0X/8Z6lHqTg6xW/El3n2L6dS+z1kXumrrpn9B1P1/OB3PLH
Rz/0waWeqOA1f/S7/RFaP/ycco/tz4jeGf1z9NBle/jDFzT4w7XfDuPf2H6e
Fb8k1tmix2qsD0zXb24dv5zPRzf7dB3/H6U+94H4N10qf+tHhe+NP4/7X/18
v9+k/oxfGbox6+vxU6qf/2P7wU8ox5/6/nXqP+3530PyXn19/Iv2Vn4hfkv4
L8WPaZxfxa8I/yL7Lxwfvyn8p7KOXs7v3ql3nxz/qtsu/azK9gfP8Ee/Fb0u
vtNuH9SL8NFYqX5uWmyKHph118b63voBeU5dp/6FX9GW+BdFD1eO7wvR86Lv
/YGeD/eJHprnutsHvkPUbe6/9HMo53d19Nbhr0zeD/aIHhldicc3/A6L/+HS
T6B8/zF5LqIbP1j5dDdFb5x5Wu/52UHRc8d3po/eu+Dfih6a+dkD1f5eovn/
kZr/Hxs/j93j7xE/uIKjt48+a/L+iJ/QAfG9+Mul3rMcH9v9YfT9bh/o5dHP
v1vjd81fp+43tr9jKz0+OUXj84O6yaHxN5isX8Uv8NHRpR699PPQ9+8yHNR4
f+S4f5jn0N5af2I9pfZ3G99P8U3YM/4Fbl8/it/Ct+O/ED+GguNX8I74F+yp
8evOqW/g/7Hr0g9kbL+VPmMXPgs+px95knLtjcOLOzf+XMbNjzGOXyH+hcbR
DaadTt7/4H3hj+j5E/XXjIMTfIieDn2d9/+R6HnR9xr3+7v3n2bbXH8n1yXn
McHJ9cO/xvivx++Kupr73+Ez/Kg5/cD742cFz/hlml//VvzA8Adz/6v9Qpmf
3Kj7s2vxH3P/i69Mhz/u5qXfTNl/fDEYRyfj5474aTH//fd6f31K/Mg4TutD
8TPD38z63+Vnmz/Bdvi7xe+t4HP6LH7HH894dMfd7tHHGv9O/EKpnxrPuF10
rcbxw8Uf1zh+gpknTHCuZ+o0EzznxfdOvp+6Ztr5ZPtDK73wmLMG/sr4BZF7
b5x6+E3xjzKO3x/+fx/S/H9OX/M78YNgfcX9YzV+G/hvuP0fV+ldOb/x/THv
DR3+wH5/eFz0unlPHfx+enX0pvismZ+JPvzirPv5/RA/BvwZPqb3U/S06Gtf
q/dn/JBqX01+buK9cfhM/LH+u94feb5RF3B9gPa5V/wvff3jO1b8j+NHVrZn
ffaU+Gv6/uA3+eP4T/r5zZnsFn6Y+RUPZ10y/pFPUv0N3l3Gl6wjjPwdeFn4
d3r8ynvJgP/la/V+gh/pu+JPGr/Ssv+vVH6mKyvmn5EvuyP+KL6+qav0+AO7
vvLY8PLPT//w9UUPjj78farfcVzo113/Y/1hc67r21XfPjp+Gf8Q/4zfVP3t
9KzX1vr7sf53evTkfx19+WWqT+IHdkD8we6m+tiFlf733uU6g8/pZ58RPxvW
TY0zHp0W//WGP06T/5sDafIT7xU/H94PjeMH9ML4A3n/ee/X/GvE3xK/Oeqr
xhv+gwXH7xsdodvX8TP86zl9In7aec/qnqz3q3+K3zV1uF9S/Xv5uWP9q+F3
vkL9C7/xzCMWr9b84c/ix40P2i+pPvC8+KmfE3/1jec3dxyojyz5kCN/ck5f
ze+1//aI42e1Pf5Wk/py5SfF8+1/0Y/Fb4tcN+P4ddHOJvz4av6xz2T8xp9J
Pojj+aeucvv4Xxr/7fj55z2s203vX7S7zQ396iPjV8E62xe1/gWfpX7u83MT
fpQddeL36v08/ruF9/JhvZ/yXv/B+Fu+XO/Hc/p48gbiI9sdqfWfPFcW5yW/
4RN6vtR5DysrnebP5CGQj/Aa1cfgRfOces4y76JsTx5GcgUm7f/k8PsuiX/J
mVqfxK/piPg3uX7Fem9X8abG+7N1Zv0WP8ot8ad8u+pL3w6fh+PeR/WtOf+B
v6ja930nx7f7cl2xf338J5+t9cUHx2/0jPiPev2S9YtzGvrpj8SvKjzObrvq
w7tVfqBl/l62f2L8YPGH9fzsK6kL4y/m+nbeGxfJVRmeqvfHfG3hzzufas6f
wfqV61WfntN/XyFdd8uf5X/Xv6Hm2xeeccGXn1egf+kukv4FfTg6U+tL4e3V
+rWxfUoX2pm/ia601vWM+jV0o0X3LX4R+nF4DFeInxX+VdGZmn+FbpT3QPOL
/ia6UHSiLX04unDzo9B/t+oz6Dpb/uTU19B9u/5zfHSf7Pcw8fPQf6P7Nr+K
ug46VPP3HpLnN7pvP//Qj/P8v0L8K/TfrfnpHtF9sl/z/9Clhr810aeiO0WH
an4gulHWKc1v3BFdKDrRlj4cnan5fei/i+5b/Mbw94pu5DDx99CHozM1/86+
K5f8gv3fviv8Dr78XFmrt+PH+p5dik9Lvf9Jfn05P/u2uP9fpu0v0/bmhVwo
/8EV+bbg4wKOP8ulje29brZZ/sr2beF3cOaHlza2d111ki+iutG6/MPwX9Hx
9zu7/0v13uL8Ms9L7R/H7zq/sf1lf+CXav/2VbG/6cS3BT+X+vw6nV/Z/lI9
Vy+T/719W/hdxz/o+N0+m/5pPDc/IR03+Bd//rN1fel/sm39UWr/73/fz3+i
Vzh/fT/h6LfvIR13uX7LnzU+G/qIJo5+e7t03ODUA+H9XRUeoHHrvMHvFT03
uu7nROcNvhz3n77tzflc1sdeWfwB4VMcKZ02+HvzPDwln9YHzW1v3zN04uBZ
3+nf09g/v5+cz1dpe/K0fl91BnDyivE/2y11mJ3d/o16L3f+MfUWPh+m/fu9
3vWZe0fvje779tGBgy+P++GbtuRz+f2HFP/zk6IXe5N04OBXZb58Qz6/n3k0
OPPr6zTPBve89G6Zr4Iv9dufXd8/88/9pT+t+y/PBX5G/xP5F5Xvp7//bea9
7l/4tdCvj8x8GJx5Kb4n+KCU78+8d5fMe5+Dj0pw/FEuzrz3dpkPg/8481Lm
r/b/zrppd2bmvRdkPgzOfJZ1SnxSyv3JvBLfE3xQwD+UeSv6ys8ov4l553/L
vBMfFPAHad58WubT4PQ/fE/wQQF/R773wdkP823wZ2teyXwTHD8S+ufJmc+W
89e885WZj4Ljn0I//Q8b+7sX3xN8UMCL/i7z6ugdCs68lPmr8ymZz74v897o
fQrueS8+KeDMSy/MvBQfFHDmvT+9Kv5H+KgEv0/mvb+eee9zMx8GX36O/g77
Ve+B0/mn9d/ox1v+ZkdU+vOHNOaf6Mun+nX05S19c/Tfi5b+O/ruoaXvRn9+
j4a+O/WWvqVfZ7+8F1q/nP0PLX07+vOWvh39+Ix+e2jpt98V/fhTblm/Xd4L
rd/m95a+H/34jP59MaN/H1r69xz/oqV/R1/e0ofD12rp/+ETt/Tp6xf+/GeV
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
eTm+fVOfwrfiI/J/wJ+i9qUY7x/j4X+O78T1lV/S6F/x6tR38LEAz3jXMU/O
eFjwOX+HOX0k/gpeBwM/L/4MNQ/oEWV7/Bd4/uPDAL4S/wjWf/CRANe68Zrf
f7Je1eMrkfWsguPfwPs5Pg7g1AMfmPomPhCl/WV9hvrCruL34u+A76/9HS6b
0ZdSl7y+oU+b02fvnH+Dc+HG+zeHO1fY/tu/4P5XjKNHRZ96d+ULX63cX4/v
/yTc+RK/Fz0qOtUrlU9GbvDe0ZfeW/nB9k1s+A82cX5v1c+Mnyb89CqXo6wf
LXYaz/Om9Xyew7N+smjNL+fwOrek1Be7ncXJDUZHem/lB9NfVN/vdxZPXsDw
xvDb36h8wp3rX8zXRh0aOM+Hfav84ZG/ou1XvD39xzxn4eY/7/T2b6vfG7v6
eVvyezr4Sc7v4e/hCTmfh+du/Is6+xfBy9pa+diN/nl6bnfOzyGfO/lDnfOH
1mpeyuD3f+purnN7+y2N7dF3ozN1/o71pc53Eu9s0v9Y19uieRY4vLfkH3XO
PxIvrHM+FP2V3Cvn+8wdH/MJzzPA31/zDjvnR5V5SWP75DYND5CPEnj4geRS
DxvnO+05+DkNvk26bT/f0IXjY+R8kujdun1rn6QVcPW/Sf9c6ss/skodZF/1
/23Shb9X/hC8j90xuu2DpX+0Lhy9ODi89BdGF74vPknBL5Jue13+ROi78TFC
Lw4e3fDwUfkkgYdv0uFDZH+Etegq7DMEvk/63QvlgwRuXTk+RuB83+nRhT9E
61NvrdcNio8SOP3i9vIhAj8jug37DOn+dZdGl+33w49KV47evG7foy4cvTg4
+zstuvODVb8gv2d7dNv2J0K3YR8j3d8On6QL5X+UvMfhRdFtP0D64LOiq8DH
KPqKgqML38s+ScHn5pc7+3y95e0n+Br4tkovu7L2Cfmf1XrIqT9lrTed1jdq
PufI8wSv+RJT/2rtf+L/DF9n6SNzyarzN+b2v1tVT53679XrXdS5x/6JHnQ5
Dp66flr1vneT1jOn/o46/nUf/9z11/Gv+fjretuU/1nX66f5YfiyLo/vC+sv
lz+r7u8kn2Lu++v30ak/vr5/1d8/d3/Yf31/bmzdnzXfn9oXYeqP8G99f9xa
5aL/cOF89FdE71rXP8bjq3PNRx0s+G9ET0v9+mjlo18SvSt1D7ef46N3rd8P
x/kH/F1y0v3+8dboVdGxuv+hR2XdzOuXl1S56TdO3j/JLUcH+03x5/4yelz0
I+9Xvjp629XocFeVn/6wKrd8z8nz8ZtVLvmtuou0vntK9LLhZU/8FT5e5ZZ/
b2H+PLnqr4pO91XKV//DKjf9Dt1DlJ9O7jm8cPfv7dG71u+/4/VBT/t30dn+
neoP6F1r/uaYf06ueV0fGPOf0dNaZwse36LhJfExeZT8i+SLMtgfJR1tDZ+U
/TR/fVF8Rb4sHxPw+v3hl4dvy38DXxF8TO4qf5HbZH/xSelfKH+U+v3qyZm/
jfOLX83vvxGfEr8fHhXfD/uQgJ8Z34195JNSzj++IG+Uzwk4+XAfio+K/Vm4
HpvlU1LOP/vL/hf2T0mudHdlfFD8/oefyb3ic3KU/FXgtb1XPivg/B58kl+E
78jvyccEnPnnZfFJ8fsJf/978jGpt+f9evRBAZ97PuxXtf99u0dvXD8ZrGM1
jo4141O5/wcG/4foZL8enezG+x91rBvjtx38/KH/fiQ62SdHJwv+f9fHP/EH
0vEP5s+AWwdr/MPhfZ8mfRV+L2dFZ9tVfPIJ3nn9Rtdn4o+u6zNZn6uPf9TB
GreO1cdnnW0DH+r1yMn1m+jLanzUsTbaz5D209j/qGM1/p+jY83zu9V+urSf
cn6sB8efcrA/pXLNB9dnDqtzvyfjq3KrJ/Uz+rV1ruDK5Z7679e51ZP8auWa
TvrH3PkpF33SPzL+lvnVW/X835r9Wodbjj/bWWe7s+evXPhSBwO/os61mORv
sB56odZJwdmvdbjgrK+mbju4fnuIro/nR3PXd679zB3/9pw/75V+Ps61H/iQ
q/IBAU89aojvYPcG+V/DO4qvYKkDg+8Vv4+95AMCjt8HPiBnyJ+adhHfv+Fp
qu+gF/6L+Hi4voYfx/ny6QD/QPxCWvl1+H3gA/IU+aPjRxJfwN7+2PGfHH4p
PiSfFr8k9ayhlb8Zf8EhvoLdBfK/pv+k/tW7vvav8fuIr+WiV30z88fh+fEp
eZb0cfEN6c+QDwl4/DcH+4CAx/9ySH2y1CtL+0y/iO/k8CDVJ+GDxod+4j+P
34d9QOr9/6S/Ij4jl8t/fW79lfUf5q/OR6pzXab8geSX9NHp9s4vSb7GkHyN
wfkadW7mE3/h8T35jZ11uuDJF++TL947Xzzz+z75z4Pzn1V/WnP7TX4GvIfO
+RlcqY11uCUfdqqzDZ78jUXyNzrnb+yIXtY62oJHL2sdLXjyx7rkj3XOH0t+
UclPdH5R8l/65L8Mzn/Bv90+7uDhZ8PL7pwPN1dfDT+9t44XfG7+gC72Yulg
wZN/Sj7mpH2hp0Vna/0Pel94a87H47pyf5zPHn7+Yl06WXD0rtLBroAnf7D4
wLr9LT/PWo3v4sL1V3Lbw4tfOH8v+rCJzhf8rtHTUhd4hvpX8kl71kedTxr9
Q2cdL3jyyUt+lfPJ0eOi03U+YvLbFslv65zfFn74Yod8LOrrt7K2sU9G0Q8M
9qEAx08i+XPDxvlz1018MMDRR1NHPyk+FvX2l098NsAPiV/GC+SjAR7+++J8
+VCAJ99ucYB8JsCp6+2QDwY4fhXRDS+c/31hNT+996R9z9XfU59d3C0+Fodo
/E++bfGxcL7t3Pw1+fZ9dK2d8+3xs7DPBfjWGX6F1m8m/LnkK5X6svOVuC4b
63xH/6/9pNMFT75Sbx0xOHpgdMLPUP+rn+/7TOpjc++P6HnXpPMFjz66+EbZ
Xwl+IDpi5zOhB06+dud87fD7O3S8zs98WvS4B0unCx7++oB/sPP50PuiA3a+
Gfxd55SAo7fdLh1uOf/UQ6SzXQFHv2sdcN1+tq+i4/2y+hd6YnRZzp9Df3tT
dMTv0fNh7v04+XUd/nDOr0v+Jf6Mk/oRel3reMHDD+/QGTv/jufaD6UjBkfP
m/zX3vmv6HXzfBrupvaV/MmhzrGd5AsO1gmDwzfZJJ8GcPwWkl83OL8u+eg9
PhHOL4+/UH9NfB5+qPGZ+kcnHwrw2k9iZeWLml8kH3LYLp+Gcn7xWwgvvHM+
Hu8/yS+dvB/Gr7q3zwN48vXgjXfO14ufy3BH+UyA/wi/h0tqHwjw5JP3+EA4
n/whmX9fH5+HvTV+JV90wOfB+aK0myPlIwE+x2/dNXpGxhXj8Op+XTpwcH53
jjl48rdZ35zg5IaTq2Gc9+Pkc0+2R39Mjrlx9IzWOYKjZ3ygdI46v0455QWn
XW+scyz566WuYDz56oN1lODRP1O/mYzPrxc/0vnX6MGtwy/tI3ri+OIMH9T8
mtzren1j5/kX0UeV++vxOfoCdAWD8x1/FL3gt6UjBD81ej6e//bfQ88HD8L6
EPQd+IY7Xxs9n3V+9f3fsRqexuD8XnK1k386OP90jl9ufqrHZ+4rPgDGo2+n
PjiZ/2Xc1/rGiMfXeeIDUF+/O3f2AQCvc7P/3aT9ztWPqVueKx8A8Dn+C3p8
1uWNUzclB8fXD97iB+RzAY5e3zlu4OHT9QdKRwwef0D4D5P6vvhJK36/RO+M
DtrvF+iZ47vYn6H3V9f34Yn7/lmHDI6e+SjpnMHRG8cXsr9U79fojaVDXgFH
z4zO2fzdOf0EfiDnyicEHL+P6Io658PiL3JEfEg8v8hzvY+v0+T5zpngG2L/
1eIXsvfSR2Rv1efiH9Kjm72L+BXs1z4l4NHfDviIOD98jp8Xf7Z+f/lEgOP3
gA+E6yusvxwbnwpfv9Tthi4+E67fcVzHbuhjUfwh+6/HR8L6Id5LzpCPBDjr
6Vw31//wi/jj+Ej8V9UnPx2/CHwkzD9fr9YPi09Fad9z+p34l010quDoca0D
B+f3gxr8/+XnsLrHhjrV0v4761TBo9/v3iIdLDh6VOtUwe8QPSrvuY3jL+uf
xt8SPTbjrsfPl0h/4fkxevfLlZMJjp45vkzdrnr/iv9k0QUdrvo31xdfgser
f6FHJSf9Is0Pjo9eFB7af1F94HnRi6Ijdf/Hf4DcFeejz+m/rC8xjp7+UOns
wef4r/F3Kjp447zf7iWdPXg9v7jfZH45t34Of+K06Ow9PuGXsLt8FMDpf85R
BY8/beE/nq31L3zp63V1fop/YrdFOmxw1s+tkwbH1+Lvwyu5v95v4284oMM+
3e/XM/o+/El/+sjaB6Kcf55b8a3qXqPnT50HtLJytObP947fw8nxgbit6mfU
76ivfDA+EOD4SdhnAhx/4f3jQ3CN1i/jn9dRJ/pL1bdqfkXxOSj3D7+BR6dO
drTqS/Ch7GMAzrrOtoa+qn5/mPpzo6e2zho8/r3DraTjrq/fbTvrzMGfFb01
dVbXh8Vvn/iTxn9tsM4b/I/Cy/5AdOqXqr6NHv0J0qmD52vX0MG/Se+nc/rS
Of0ZevDLpRMv+Iz+FH0a/j13V34p+rZ6XjHeX/RrnGetY5vo0zp0auDWnR6h
fFL0a+jWrD+FL/Lu6NI2K79UuTTJtxz5efAp0K29UPmm6NPQpR2o/FLlxiyc
T/r+Olcl+Zijf7Nyfzrnjz5Hda3XKV/0XeF7kIPq/FP0bW/Je+WLlD+KPg1d
2iXKR4Xvg67tdOWfKldokj+KXoz8qdsrX/Sjda7MJP/UutIrlD/K85LvOU35
qMzXktszyT9VrlDRqdX3v+QidTuUTwqfC93aqvJNz6pzf7p/Vn7pfw4/4KHp
30cqn7Tkmka3tpfyTZn31Z/Wp6EbH3Vsvxhe9OEt/Xipf6ETN75fA4evqHwQ
zf9uXCjfojN+agNHl6H8jtI/mK8o36Jsz/9vbeCsxyq/oFwf+q3yTXZ6e+pv
ylcp29M/lQ/TeXvlfxTcvjvm7/i90PrPue3RlytfZaf3X+fDjTnE4PBhlU9T
cH5Xvs7CuPJjCo4+XPkxur+jb4vza+3r8mDhc/qDncsf/t/Xn6J/I18SHRz4
HpW+7ebJ+3mtj/vB5PqTJ3lUdG+eX9f6tj0n6x+1Pg7+1OgPhP7tTyv/jbH9
1fq2XSf+kKdV+jjWpx5R8FrfdmWPzq0+PtfPx/nltdG3PS66tgOjcwN/T/Rx
6OLM7/5qpW/7x5LHCF7r4+hHY/uo9W1fneS/1Po43r/H5yv6NnRt5mejjyO/
Ep0ceK1vu3Hyfl/r4/i70d+91r/9dIEODrzWt10+qa+jjyMf0u+n6N+uie7N
68ON5+Najf/C/a/g6L9r3fe4f/iH9X0dt4cfWvfLEYefJP/znd4//J+6X444
6+vKxyj7Z32uxd+d2z/rD633S9Zf6vu+88dH/Vn+ajt9/Dt3/dvHT32q7hfe
vn3/qF/I31Pnd7+hHpd2/vv/rfufuz9z19/PPXSm4Aekfz0m750vjU4VnPfP
/ar560MK/iLl2l+v+sRSD7Fp03Jesmnb8vNFm8C57+gw7Z+L/vQF+R50qODo
V3856yroWMHr96+Hd+hUwY9S7nx0mgVnPsL889nRsZbzjx5UOtFyfB+IXvKU
av45zl/g1UqHO55/9vvCWuc68l9y3aTzLfvnvF6W80SHCl77Rv0k7/tjfRO+
1H+KDvU90amCO/c+6ytle7aL72v3/0bHCl6/f/5yd3l0quDsl+/x+s3y/fy5
m5bX9bnblp/Hl/bF/B3d6oPEz9m5+eOYX3y5/FvFT5/oV6V/6OwPIH5q4amC
b675dRP9qviXk/U16at4zxh29vjmzk/rzwvP38QPmOgzpb/jPbZ8v/R7JU9z
Z89/7vpJv9bbv0DrD5P8IunvOnR44NLv8R5U8LnrM3d959rP3PHPnf9c+9m/
en7cc3hZo36BbhsdNzj6adqV+c/of8k/Jg/Z++f9Cp7TxvguRQfu/S+i6z4r
Ou/G8Ze84I33f9+iAzee+fXC+V01Tr7XWH+j7vNrWWciD7mBd+QtN65Pb39j
XZ8OHbhx3t+ic15sfPw/KXnIPr4vZ33lhui4G/gQvHX9yD9rfP91Jc+40X46
8pAb57dAx904v97rf2o/0dk/vuDoU/9b6tToVMHhV+DjRd49OOsd1KXQsYLv
iD6VOnLqxwUnz77UQdG5BqdfoFtFxwqOPpX6rfNVHiTeJXn14OhT5YNXru+H
om/FB/IzyodBn3pxxrHbRacKjr6VOjM6V3D0qRemjoxOFRx9K/V158tl3WIg
n35V+a1PQ9+a9n9ydK71/b2h/0Tt41f2f588v349z9nnRuda7m/0qfLRG9t/
9K27ZB3mOehcg6duuXhw6pboWMHRp55X+9wVPLy6gXz7C6JzBYe/TV0x6wtj
+5zRryY/Z6H8nILPvV+jP1Q+TDk+9IXKvyk4+XPKtynXj7zwNzXmP+gHlV9c
zp88UMZ3+3uTB6p80IKjP1R+TsHrvMySn1Nw9IeM7/bfWn5esa78yIInn6jU
nawfRz+ofLmRnxX9ofJ5Cv470Q8eXueXleNPPm+nfN6yPfpC5SuN/LjoC5V/
WPaPvlD5R2rfNy6U71Lw5B/0yj8o7Ud1gQm/Ov77g/z3S/uZm5/T7hh/0WGD
J/+5V/5zOT7ykGmf1kckX7VXvmr5/vjHL+QfX7afq+8kf3Oh/M0Jf5DriA4b
nLxk+c+X70c/rXy3gkd33Su/uOw/+TOd8mfG81vmp/TKTynXJ/7TvfIJCo4+
VflF5f4k/2eh/J/x+9OumJ+gYwVHn6r8ovL96FuVj1W2ZzxQvrra98j7dvsm
z512Rd57vf3lC+Ujle3JO1c+UsHRt9K+LtD4hD5V+bbj8yf1fOVLlf036ocr
9fZfLfeh1rmWfMWF8hULjr5V+eEN/tb0/Q59qvKzCp781l75rbo/K4PyYcr2
tR9T0e8XPPlng/LPCs6V4vqhQwRHv0j7QccIjv5Q+dNle/SLypcp29f61ZIv
U67vXH0A/aHyicv1Sz5Ref9Bx6jjXyi/tBw/vDTl2xQcfaLytwpOXuhanS9V
vh/9ovJzC44+Ufk/Bb+grgtM1u+TPyL/tvH9c259gu0OTvu0P//yc1infaCD
Bud8lM9dcPhgyhcp+Fz9qH6+lnyegqNfVr5zOX/0z7QPj2/Jv+qUD+vjXyif
pODom5VfVnD0y8rfKnjyiYt+FR00OPpm5d8UvOhT63yhcv7JP+yUf1i2R5+K
LpU88tK+Ui9R/mjZvrE+VdpXrdco+UVle/Spyi8quH2Pki9Vjo+8ceWPu77d
K5+sbI8+lXaBTrW0r9RdlI9Uji/5uL3yccv3o28tutboXMv20acqX658f/Kz
O+Vnj/d/pj543Ix+1bmQHr/QT9L/za9D/8j8Hx0kuHWTztdtrE+ugaOfrOtj
4/boI+nf6CTBkx+9UH50wdFPKp+p4OgflV881Md3YNFNevxBH6l8xYLnfFeU
D1hw9JPKPy948rl65XMVPL4p5b6bP8u4wOdzxL+Cr8X26JjBo7st+0enDE7e
KrjvD7pHcHTI4Mk3HZRvWvDka5f9O58Y/TK4+eu0O+XPlv0nf3ZQ/mzB87nO
/tExgydftnx/8mU7fX9Tv3pBdJHMD7cq3xh9JfNbdJbg66lv0n/M/22s76+B
o6+kf6GzBP9S9JG8P6GTBEdfia4SnSV4rT/5bm9/0Ln1F/STh+X9irxY8DqP
dWXF/Bn0legq0VmCo5/ElwcdJTh57OR/oyMG9311/jv6YvDzxd9FX1yvT4z1
d/TD4PSncv+jP1a+dsHn1r9q/ep1PTpkcPTFyj8v+0c/zPb2957jV4TPPCjf
vOx/Tr+KvrJPfQmdJTj6TPrHo6PTBEdfia5yEZ0lOHnGzC9OjE6zHN8yP2+d
eS3zDXDel6gvktcNjj6z6DJfstRpgsOrQ3fp8e3i6Cs/kfrfp6KzBL8m+kzW
9d8QnWZpP1W9a2Wt1mGO+l/lCxYc/TDXFz0wOPpf5k/ogMGjaxuU7zq5vowL
6HnB0f/C83B+LvUi6lM3LOtVZf/sj+uKThgcfbDyebX9hB9U2nftDznVr744
87rDG/zk5NuW/bT0l7xfosMEv0y6zY3zi69Y5/iZz4Cj30S36fdH9JnKfy44
eZ3KLy77J+8T3SZ5oODMl5QfWnD0v1xX6yd83Z8q/jb6ROW/Fhx9L9uj862v
35i7gk4YHP2v8rvL9tEll/7j+hD6YPCN5zejL9Tp1XN+Xr/K+bM+tFn5xeg7
eX9B5wn++MrvvOjXyv7Rd9b+3uP4gn7z8LzfkqcLzvmiy7xB/t+z/IroN9+W
989HRsdZzj/tgfFnc3S6ZXtdt8vE70efW6/Pj/gcfxHdmfLhy/Zz/JITquf3
T0reNTj8KuVzN/gtU/0q+k50neRNg7PeiC50NTrRun2WdcU1+8vHV2yB7pN6
Y739zT31Rbd/xnvGZ3S04KxHsH7wvehwwRv80ZV6/3fslJ9evn+v6G/R3b45
Olzwj0Rfi874BdHZgls3eq7WL+f4q+T5oiulngWOfpTnNzpScOtPLpS+BH3s
jqz/oJOt789Yd3T7RD/L+hU6WvAvRJ/K+zk6VfA3RE/xqdQxz4jOFXw5P/j0
OjyO3aNjLfd/Rr+KPvXS+vmo9rdn3k+n+piat7hn+TR+af7/0ga+suHPRB/L
+/3wi+LWwRm3D/Eviv+7P7rTlY/c/7M9n8Z5rvn5Nod/Jnj/kUu2v+OYfcpn
4/iKz9AvitsHzPjZMzjP0YP1/NxZvMzTND8zfmkDtw4d/PL6+Ce47t+Cz8b3
D+4fc7ju38Dnxu13z4Z+rJ1vqHzSYaX6meSzTepj6MEPDy/f/UP5RRP/FeU3
LZzfdEjFz3/Rts3h6YMrv2lwvojyp3rnTyl/qXP+knnvk/wp8eqdv2TevvOV
lF/UOb9I+VWd86uUT9U5n0r5TBN/UeVTLZxPpXymCX/fvH7ndyl/anC+hvKd
Ouc7KX9q4fwp5W9N/N+UPzU4f+pB4ecvP4/flt9L+0pHWOPT7XurdJXr0VuC
7/nzn3ev7/vzn23r+2n7uf2/XLpK9Jbgb856MfzAO0TPCX5h+FTMT46NnrPc
P+kq7yz+jXWbr4ueE/xPMm84iXlG9Jzgj40ukvw/9JLg35LuEj0mOLpJcqHJ
GwQfpPt8QvSg4Ogr3p3532ei5wSv9dWPSM7vUwr+UOki/yB6yXL/8750QXga
W6PHBH+1dJO/Hz0l+EXSfX4telDw+v3pjvE/aOmr9+zQi4JfFV3lldFV7qP6
APnutf/CeH3/NPNRcjYeEj0nOHmC12R9E71lvf/L4/t3XY+eE/yc1DuHvH/u
ET0neCN/u+D57zVw95853LwZr49yXa8576if/btw1fwK88ZuXeV53LTwuq/5
SeaNHqf913k821efXvm1z+//bdX7xPmrx1V+jzctXHfz+hu5XTn/9dtUfqyj
vwjHV/tlTo5/3cc/d/1P1brLMTr+o/Te6fqW10131fGfrrrCrpWf2OT+rvn+
zn1/nYd7/qrXR/X9a/7+uftzSvbP/fH+dX/WfX/m3n/s++H+o3z2if+R8tk7
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
f5M8nK7OZxzfXxr5NeX4G/ktZXv0eejy0OmBN/J3xvW/jfNryv4b+TPl/jXy
Z8r+G/k7Zf+N/JmCN/J5yvc38lsK3sjvKXgjn6dc/0Y+zWR9U/lEZf+N/JqC
N/JrCt7I3ynXp5G/U46/kb9Ttm/kDxX8AZU+77nb0OmBp9k3n0/KN57gc9tr
/aEzrvXV5vyt5jWMz7+5/YsfNFm/VX2A4y/7F39wcn5z+9f8bnJ8er+Y7H/u
+LQ++Asf/85d//bxq/43wefun/gtE1z178nxz33/v3X/c/dn7vrP6YP4+1b/
yfxp+M3w4tA5gGt9aeIfrfePiX5A9aeJPgh+xpbaB1Tbl/n14PkH+kiee+bX
dNFHoH9wPhTHPzSO//11ru3wfuVH1frvRxeeIbjWb/CBG9cfM9+4X+oy1j+g
j2Ae6HyoN+b6MC5b/4A+In83yY+auz+q/+CzU87/1Oq5sPdEH0T72dJoP+Qj
sO52mu4fz7W/y/e/Vd+v+t5wuNqP+F3M78rxzeVnKx9+cP6O8uG71ylfR/nk
/aryeZTfPjh/R/ntw+2Vr6N88mEv5fOgj3t3dHGblZ+D/xLX/04b5+OQzz58
VOsLymcfdig/R/n1RScH/tZqfnb7wesj6OPQxR0ofjb6OnJynI+j/Pfhn5Xf
o/z34Ujl59A/kl8/ON/H/KTTlN/zrujjyOFx/g76uqzPL16kfB30c+jmXqh8
HvRx6OKcv0Pdln57hfJ10j7xhR3OVz4P+h/6h/PXyFXj/cX5aqzXgH9O/CX0
P+zf/siboh8C/7Dy1Riv9qu2H/33To3ege2dn0Y9vuDKR4MvovMv3x9/OB3f
+H5P+9f5T9r/ftXxjf5t1C/Yv/PT0A89srr+Iz8L/Y+ur+7fPuHVlu0n7V/X
d9L+wc9RPkmuf6/rX44/+rPuEcG/oXy1XJ+Frk+5f7k+C12fgkd/Vq7/h5Wv
Rt1Wx1/wOX8o8YMm619z7w/iR/UvV76U+EGTfCrpg4rOAlz6jMH5UOJHdRcp
v0r8qN7rf+KHTfTl4pcNrl+LX71m/ZL4swvzT8W/GlxfFP+q+7Tyo8QfWzjf
SvyzSX6V+He912/Fv+uOUb6U9AvdXeRfJH7c4Hwp8UcH8y/Fbyr1AnDxuxbO
D7KvtvOBxG9aOF9I+rSF+fPSBxWdG7j4XQvnD4nfNeEPi982yScSP27h9it+
/+Ji5f/Mvd+KPzbJHxJ/bOH8H/HfJu1P/LlJ/pD4g5P8IL/fnaD5ufQzC+cL
id+3cH6Q+Mu984PEH5jwK7U+PnxJ+Wa0y9qHeLx/0t/1vyz/JOmf+rsqn2zu
/VbrX5vQEbn90S7PVr6a+D0TfrL0DcmDGMdH8de3hb8+6ofq9bGiAyrtt14f
m+SfNeorpX031nfL8YmfN1m/Fz+s26J8NOmD+iuUryZ+wIT/p/Xz/lzNT+b0
QeKfbOL3cv1qfevacdLPSF/Yf1f5U+LfDCdp/VD8m8H8ZPGzohMd+Yfivw3O
x5I+CH/3cv2l/1hYvyJ+T9FxgIvfU3Qgbl+t+oP4TRN9h/iTRecBLn3dpujr
yv0T/2qiDxL/avJ+Jf3DYP2G+Df9/ZV/Jf1zf43yi+bqv+IfDc5PWn4W/lG/
SflF4u91T1S+kviRRYcGLv1Yf6z03dIHDXdRPpH4Tf3pyk8Sv2mi/xU/a/if
ylcSv6t/mPKTxI/un6r8I+kv++gvy/binw3HKP9orj4lfUx3s/KRpP/OfRrX
L6W/HXZVfpn4G5P1Z/ErJvlmjfWB0v4a/NGyvfRzw4HyX5A+qnN+2Vz9V/yK
hfPNxK+Z5K+JPzR5/or/XXRA4OIfd85PE7+s6IDAxb8aJvlotT6o6ITArQ9y
vo78Cyb5WPIvGM5U/o78HYYr5S8rf4iSww3eWB9aA5c/BnmmZXv5I3Sblb8j
/4Z+VflA8n+AP1Fw+WOkPj/m98gfo3ul8nnkDzKwzgAu/4rh4+IXyL9i+Jry
eeQPMpymfB/p//tfU36Z9P/D4cqXsT7ht5SfJX+FwflA8pcYnC8jfwn8Gcvx
yV9gOFX5NvI/6A9Uvo38E/pjlV8jf4nB+TTyl5jwZ+Wv0cdfo+xf/g/9Rcqn
ob3z3uD8GflrFB0YuPh/E39u8eMn/CnpDwbn30kfu3C+XGN9dg1c/MHuauXP
iX8ZnfF4/OKXDvsqX036oOhPxvq+9CnRD43PV/kTTPyJGv6QBRd/t3c+nfSj
g/PtpE/onqX8ubl8Lenfe+cLiV/ZO79I/Mp15wuJ/zo430j83uH5yi+SPqs3
f1v6oO6pyh+SP8TwNeUXiR8+WP81t34u/e626HfL+7H8E1KnGNuf9PHdG5Tv
J/1I0bF4++hHJvl/0u9lHartn/e7yveTv8iE/yz9zfAp5Y9JfzPJ92vovwsu
f4rhLNX35T/QbZd+SPqlwflx0i8tnP/m9XWvP0uf152nfDf5twzOh5P+a3D+
m/Rfk3zFBn+jtM85fZD8Kyb6IPlXFB1M3T6Lv8biYcqPkj/HwvxM+ZfAryi4
/Esm+Uby/4n/2Pj8k7/I8PfKP5K/yLCv8o28vv8xre/Lv2GSHyb/hqLD8vVj
ncD6Kq3/dgcrX0n+HZ39L+Tf0V2v/CD5Iy2cPyR/jYX9QeSvMdE/y79kW/xL
yvg4l99h3Yv54dJ3FB0NuPS5685nkz50kr8mf6Cikyn3t9YHFR0MuPQzg/VJ
8ncYnN8mfUfRQfn8W/la0h+Tx1fwOf6Z/I8m+U/SP3WfVX1K+qBJfpP8K4pO
yuePbsb5cdIXFx2Occ7o1sqXk76sUZ8d/Vlb/kLoajbW/xf9+iTfTPrp7p7K
L2vw/1a8//9R55xN6lPont7q/LLgHPewcf5Z0Qc5X0v+Ztv4HXyOnyj9/3Cz
8rXkPzPYv2Uuf0v69kk+lvTtK7WOaeJv012o/Cz5ow0PVL6X/NEGdETg+Vr8
5yb3z/qgS6UPkr/NYH8e+dsM5qfjp+ZP4dy3Nd+/OXy/zHf3y7i5n8ZP1eUn
+uE5/IKatzjRp+CnzfW1/uqwmpc6yQ+C7ykf7LL/B9W8yPIJLt7k8EbhjfzF
fmfxRr59t7O4eKmd+Q1zeCN/utzfpwl/q3DxfsvnzuKNfMey/+3B4Xk6f4j6
kXy+y/4b+c/9zuJbq7pM8UEv35+O0uRP75v+Qt3C+bGN7dfq85usf5Xza/B/
u53dvsHvHsAb/OiyfYPfXLZv8JfL9W3wu8v+G/zlsv/G+onOf7I+MDk+8X9V
H57wx8v9a/Dfy/c3+OOdt98ys/16Y/sGP7ocX4MfLX7KhP9d9t/gd5ftG/zu
cv0a/PjJ+7f472X7jfsVP2P+cKv/wF90To/aR7ej8kUctz+z5o0N3l5128n2
4p1Mtp/bv+YVE/4Q+cOtfNS54+P52NU5xjt9/Dt3fdvHjx9WnVvs7dv358Ka
FzXB5/Y/t/3c9Z27flm/6e9RfY79k7yvev4xjs/HR/fMPNfjH7pe8jEeEr0v
+FujK/7TzH89f7pjrdse4FuDfzG65+S/9avRQ4NfEl119l+OE/ybta544q93
p+hquQ+un308uuYLsy7nfGt0u+FB9OSZgUsXPrwxenHwV9S688H8zl+rdd0T
/77/EN0x+W6e/6MrTz7e4pvyx5Wuefi76J3Bf6PWzQ9HR08Pfkp01fn+wfOn
F9e65zwPxvXL19e67uFV0XvX9/e+mh+O4/P26LY5b88fyfsjP4Y8QHCe7w+t
+sFkfjO8vmrnY/uGj7mWfvJm9Q/a/WnpB17/emzaNe38cWrf9Iu6n4z9g/ZI
Oz5f7Zd2STu9Tu3zTek3n0k/Mr+Udks7/lO1X/rVV6p+Nvav5Br2fdWPxv5z
atot7fgUtd/kDg6006vUPukPR6YfbVX/eXnaLf4PL1f7vTD9in62Vf3rm+k3
9KMb1X9o929NP3B9+tVp17TzV6t9k7tDP3mX+gfr95+u+sHY/j+Qdo2/wwfU
vqk3XV75G4z43Psxvx/UmL+v1rz0if9G7ke/f/7OuHgvk/2rbjvBVTebHP/V
WVdAF9U4v6GeZ4w4vK3t2Y/xFfFOjZ+SdWV0LZPtf/4zrO6R/RhHl4euzDh+
QW/J9xh/bLY7P/sxrrrltH6S/799/s646qoTnP+nbmkc3uYP8+l84T8Mb5R1
Oc8frFuxvhQ+6E3RZ7wnfFfw3695of2Hsx4BDm/y86lPw6cE3yO8VHgj5mf9
dniZd876zm5Z79H1HajPOx/7keGdw/P4YtZbwOfmv8vP7avwHr9c8YFvgk/R
/Tj8Cviq4NJdLN4XPhT4M8J7PSTrS37+H1/zVrsTtX51QNabPpj1IdaLwK+q
ecETf1nWk8hneW/Ws7R9Rzty+/lurdvp3632kQu5Ru6M2xfrFu9IO9lT7ePO
9bresOvG97/4b/n+o4+rx8mxfeJrvWfaodvfj3Jfv5377PtLu9o/7ewat6/c
96elHZyh+994Pyrt71jpTnao/dFuDk07cvs5K+3i0WknR6t91HWPXYY1tS/a
De3I7Yd1z7TD4S/Vfubqv/zuvwM/VLxU468MLwPfJuNsx36MbwovhPUf4/Am
4H8Yxy+P/Riv290TJzi8rvr9cMTPqnkfE3zX8DbxhWhc307fU3B0U7tnP8a/
E14J+mHj/P9N+Tvjvx7eC7wn46k7dfydcfQefP519I7g0k0Or5W/zVx95tbR
1eX5NDw9fOu6/Zy1ekD4+dfJX0q6vQE9H/jjat3n8PXwKcGvrnWlvfWl8Osv
znsBek5w8pzQN6F3An9+dKMHR3/n8Q3dIvxS+Kbg0sX2Hl9/p9ZN9h5/0GV+
JvzJ/x4+JfiTat3oZHwhz4r68pHit5InBv/zY+GDgn+u5s0Pz9D95b5xH33/
aFd/nHZm/yTua5f77PvbqN+V9mfdxxfVvu6Z+7pn7vPTdX+5b4/Pffyg7l+e
T/3X085eq/al3ImF7+8na95s5/a3Oe3qeWlnbl/i7U74R+Ql0E62qX2cU/OS
h9PVPrjv6Jcv0P2v19++2x+h9jO3fvi08PIPzqf59d+K7oF1W+fPPqDm/Q/o
Acr1mVlfadRv18A/Et0HdZLt8l/g96z79uhNwKVrGF4bvmu5ftH9/nX46fDV
wftaVzGZf/xZdBHRmQ3wTcB31LqO4Xqtn9Mv4Nd5fPhKrWsZ4CuAH5/rjv7i
v+j6v0TrV0dq/QneEJ/PCZ8IHF3TlvDX3h4+G/juL1jqMl8f/gF8BPDd5Ivl
+uuHq1zTH/XwocDhTb0r/GX4VODkZR4Q/cHdokcAf0t4W8wffP+eF17VOeEP
mV8DX+xy/FM1foj3Obl/y89hFX7v4yu+2E3mPQ9PDV8FnHW/Cxrr83Prhw9J
v70+/Xhv9V/6Bf3kePWPxvrIGji6ji3pR5eq//xR+u0H0o8vVf99VK2rHtx/
a17r/Sbvj+KlLMxPuXf65cnpp7dV/7Qvme/fs2peUO/+J15nf7r6xzHRFaKr
RW8IflN00T+KPu+3otcDvzq8U+qIZ8vfw7ok1/fhtW6JvhK+K/gX4guAfvMH
0XOC3ye82rp+Pl5/8V77+4cPW44vvN7doy+E7wv+rfCu8bXx9Z9b3zqo1hX0
6CHL/Znhp6CrRqd/pMYfxp3zMg59QuMPvKtbZRz8TY1/6KLwT7i7xifOBH2K
x0fGLfinnl/A27ocfqvGJ/EiJ+Mb4xb8fs8/4M0xTm3W+LSrdAudxreT024v
STs+U+0X3e8Raadun/SLlUuW/cT945O17rjokX196Sdv25i/2Lf44+hiacdP
Vvv9dq3rHfZR+z8n7Zp27uuLbpd2PGm/G6/froDP8ad2xHdgyKf597vWvhKL
Q+M3Af7wPD/eGP3Rk+TPy3rB5vz/27V+wJHuEX6px49/qn0Pul8KHxj8wfF1
OCP8xy/LP3iofScmz98dtW/DgJ8DuHRVnfOzXi/+zIniv8D3Jv/gAdFzgR8d
35d/iP7yN6PHBL9XdGPUZ3x9lp87Vr8a/vQr5E/+xOjW4J/CRwX/SK2bm9RH
nxJdGroqjw/n1Lq9yfhifp7z5WmP2xr8oKwbLu6WdniI2t8e8iX19YEX+6C0
E7cP/KJ+mnZ2O7Uv6WYm16f4cey9bEd7q/2gqz0q9/nZur/kbvOJnxD49dH1
hj8w4RfO8UPQFR8U/xr8bMDr+dt1k/Xxut9cXvyISvuMrhr/nZdGbw3ufuH+
Qf1wr7Rzn59405P2+xXpBuzPT7s+N+3c53dOnTsxmb/T7tFnuv1zX3bkPvn4
D6p9gzpf/wZ/p9w/1nd1n8rxv7/2PRpe5uuf+1a34/H+zfFXG/z+gv9WrSuY
4Pz/C/N3fn6y/sH62Aej5wCXLm3SPus8Dfr/qE8n7458vVdHjwJ+Qa27m1xf
tkOf+Rptz/dyHP7+OX6u+YN+/qMHRX9q/zT4uPXnqC/Y8+c/717f9+c/21b3
q3iG4/Hzaf0w/Fw+7d/rdX/718zh5rXb35h2D6+XdRLwhr6/4J7Xu37F+/IF
4tHu7Paum7n+xX63Nvb/Jm3/YG2/pnHT8zM/Vz0/mdve+pW/zXPY+z+1sX/P
Ky/Q9ua1e/0Tfi+fVzbyj+DtXi7cvHbz2+hf9KsHSH8M/g71Q/A5/u7dxYv8
lfwOXvMf9xz8/vYw8cZa/Eh4kfbH3kO8Lvgo5fpW/Mn7ljop+LXijSUfphz/
V8XLgq8FXvMnWb8b/Xc+Lt4WPEhweGcZhyf8SPPG4JOB17kn3yp8NfCa/7hr
4UGC1/zJH0zaT81/vLKHBwle8yepf4zze3hjR4U3Bg8SvOZP/nQBjxK85j9e
XnI0wWv+5E8Knwwc3thrwhuDJwle8x9vLHWc+v7eV8+v8flT5wLdSD+c1K/z
M3m+eN3f44N4KWv134/rm2zv+1f/fu76+6u/n9/evG+vzz5e791+/pt37vlR
/byjPjL69+n4V338c9fPdVkfv+ed7n9zx6/3jjXnQ5tX5Ps39/1+r/H+566/
ru+ary/j6UMzvsLT1fFn/rFLB88XHL7ryfk7eLzg8HPJ4YKnW+//ESV3nvG6
xkdeOzll4OaNMx6C4xfA+Mp4W/af8dQ5ZOAnZzz/s5znZRnv6/vzvZ554daM
9+A8L3h+wPMFvyrj3XblZIGTt1X87TLegsPPdU4bOP0HXu9LM96DM57/IOP7
TzLel/PL8+Lj2Q/PE3D4uYyvf5DxFvy0jMfMb07OeA3+toznf57xnZwvcPi5
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
fDLdvpRfXnC1j978NNoF7eoF4p818u0L3shv7+rjH/1P7yr+XCPfvRxfI9+9
bG/e7LHitzXy58v9O0K82cPFX6O+c7Z8Lt1+lF/dGT8g//9E8VN5L1J+9WT/
yoee4M+QD7Nx/ucZ4s+ad3ql+GPg8FQb/NQB/2LXdxv52ZP9027OFr+2ka89
2b/ytSfbK/97giv/e7J/5ceX7eE9RWfQHyv+UyM/umzfyFcu2z80fJzvhLdz
oNbHG/nLHl97++yBwxvBf+xi8aMa+dLl+J8TXsmN4XH9i/hbjfzpsn0jf7ps
38jXLts38rP1/j/Jzy74CeGd/Cf58IE38tXH+lfuX/FPFP90Lj/v/NwvPu8v
fuPDcv9Xc99vFn/rh+K1XSP+j3lz5vccId6b+Uf4Cr4z9+1L4h8dlvv/49z3
b3+65hc9MfeP+3aM+EO/mvv/DfnQ+f4Wfa34RfjN4UP3VPGHlp/D+im575tU
/+H+fjj39e/FL2rkUxecunvLv7SRX13we4hXZH7wxryhsf828rnL+R8WXlJy
dQtfCbyR3122b+R3l+0b+eTT+1fnjxe8kT9e8IPFWzK/mOezfWzB8XPeRz7P
vn/K/y343cXb/pr4X+Ztm18mXvmK+V9cf677ueKfNfKRy/c38o/L9o188cn9
Uf512X8jf7q0D+7fbvLRBGdd+2O5L+aXMS7CAz9E/G/zQg9Q+7wkvFN42OZf
fz7bfSy8Ua/vwsu2zzY4Z7Kxz/eYz55c9pLTDg5f9Hr5aPv6D/LpBl/OW565
afl5XD6fWeqT8FK/LJ/tev8jL9X878vEWz9N/F1474+RzzH4mnjt5gc38sEn
17fmOf0v+akb53cXnOvPdX+L+LuN/PZyfI389NK+Lqqu/zO3XZT74OsrH+YV
cPwSV8M7O1D8sxPCVzq+wY807/GV4qfB67qdfFDB8cUiZ9r+lqlPrj4k6yof
1/rL/cWb2iz+WvxoF18Mb2pd/Le/Da+Jcejt4re9TLypM8Vf4/rSPk7V+j/X
5+W5LuaHmnd6gvhh5g3aP4zry3U1fw5e31Plo1hf3/b6Fe2T62b+2cvE6zO/
DN7YKbmuHj9OzvV7S66b62P7hDcLj/Y24s/O5SNzvexDC36UeGfm35rXdrX4
tbSve4TXtq/er+E94395G/Fv0eWdLR9YcNZXzpPPLPgzcn6PynltET92jj9p
3rD5e0dtyEvmZ2wf8JLvKX7fZfX5Tfh7yX8bbpfr8lTx8zh/zvs88fvoN1eE
V3yF+MXwOr8vH2RweKMPDG/U/N+63v6z+ZH4w/A+vyEfZPDl/P1x25bru4/b
tNzfc8vz0bzSjfVTIy/5geK3mvds/irHXx/3eP84Po4rv5fnx31yftS1v2Z+
q3jP5sd+ILxJ1l0/q/XXOX/Ut23IKxyP/zXiLX5uQ/7kyFs0/3KOX/m72T/7
fY/4kazbL38/f31X8R/N+zR/ku99nnxgfXz8//PF3zRv8nPiT9of1fzLOX7l
sr75/eh3x0/wRv5Yt7P4L33h3nve7Xm7d/d++JMu/8lzbjXw6fOXz8tO4/Fb
J/e55xO8kZ9V8H8S/lrhjXygncYb+RqLncUb+XvDzuLi7y/MXzR+mvDUD8Iv
+2nPJ3gj32Kn8cPucZvvveJB/9zv/eAfP+tZj/tef+98gsM/PSbt7I1qX/dK
e6Kd7a32RXvEt+DN2p729Oet9dm0p8zD8IHz+uTQWt89QutGR6p9/Je0t/PT
Dl+n9sf2Wxrb025b62N/n/b0w7SzL6p90V621Pmh5fhPFO/EuPOZvq79n5T2
9Ea1M3DaU/T18Bm9/lHa6bu0fe5bf6u0s7eqfdGeaGf/Xu2rkV+x0+Mfv/vv
wBv5kwVv5EcWvJEPWfBGfmbBG/mQBW/kL/r8nL9Z8EY+Y8Eb+ZwFb+QPF5zt
5ONS8Eb+ZMEb+bQFb+RTFryRn1nwRj5mwRv5oQVv5IOO379xPsYA3si/Lngj
P6zgjXyegjf0lQVv5E8WvJEPUs6vkZ9R8EZ+Ydl/I1+j4I38u7L/uXznRr6X
6vuTfJHy/Y184II38kd0/JP8kTL+NfJVyvaN/JSCN/JTxvFx43yhsj18IPnw
FbyRP1fwXOg12qnrA438nHL/GvmkZftGforbj/MtCt7Ityx4I/+iHF8jP7Fc
30Y+eNl/I/+t7L+R/1G235i3zk8zH6Rs38gHKe2vkd9Stm/kmxS8kW9Srk8j
f23c/8z7Ab//RWN+tiJemvFV8QYn2//8Z1jdo/aZHNuXeGfG8efcv/bxLDjb
nV37PBbcvEDj5o0bN2/QuHl3Lf7iQfX3jN+f7eRzWfALw5s5sPbRLDj+mufX
Pp0Fx39UPqIFh5e5vfYpLXgjv7O0v0Y+Z8Hn8qMb+ZyT9qN8y7L/Rv5wwRv5
lwVv5Nd24L8vXv6Hl3zncnyNfNTS/xv5n2X/dxavetcl37rsv5EPWvBGPmj5
/kZ+aTn/Rn5pwRv5ruX7G/mtZftG/mHZvpH/XbZv5B8WvJEfWPC5/OhGvmDZ
vpE/XK4v/s7ycS3n1+AflPvfyFfU9iOv/iy1v0b+Ytl/I3+xHH8jP7KcfyMf
cpz/bJxP2qj/FH+dcvxz9adGvmDZvpG/V7Zv5H+X7TdeNx75G48Mnx8e5JLH
Oc7PGvmCBW/kC5bja+QLlvvTyE8s+2/kI2r+PclHLHgjH7bgjXzN8v3wReGP
PkPXt5E/P9b/ct/4/Osln7zgjXz6gpu3vaxPjvl31n3RH8FvHb7u52sfzHL9
vytdTvQ6ZXt40/i+xge24E8Sr9n3Fz9JfCa9/mHeuMeH3xEv2/d3+XnW6gHh
P18n/frjxKuPz2fB8cf8evqp67+N/ELV/9r5zo18RX//Yv/0w2vU/xr5iwVv
5C+W69/Ilyzf38iPLPtv5EeO9fWN85XL9o382bI97f6M2ge44I18t4I38qXH
8WXj/LuCoyuKj/8QH+zx/DbOtxufnxv7X4z11Y3zIQveyCcs+2/kB47ruzP5
zo183J1ev/iceP/P0PjBuHFTxpH3aPxg3PrjjGP/VeMXegzGmW0aXziTY+sc
jYKfI168n/+MK4wzHl82Z1x6Xu3DXXDz+j0/YFzpMs54fLEuw/lbXxFvyu0X
vRu5EO9V+2zkN06ej/SD09X+G/mKBW/kl6p+frn4TWP7zvvvcESdb1m2b+SP
a//t/Oanha93cO3jWtoX/qbRWQ/haxWcdet3RLe551LPOc7PtL5xvdY3OBL5
MBYc/9b9ap/J8v2nh+/21+G/hQ9Xtu/Fy3P/x9+W+mp8bsv+yVW8X3jdzqdE
r4rv0d10/sfPrP+gV/9hnYNTcPJRyDGIXrTgV0lX7Ou3/Ny+So7CMidxHB+s
205OQ8GfET0puS2+fuRFKEeibI+eGH2hx4+59dt753qcnHZ4W7U/8fbWfP7w
IvE1vVTt41HiRbp91fOD+03OH92GfI7L/h+SdnV92tneal/k3Tw69/lo3d9G
fm3BG/m15fvn8psb+cFl/w3/r3L+1n3EZ7d8fyO/vux/bv2ddq0coLJ/2i25
Imeo/R4r3fcOtX/a9aF1TlE5P+pv5Ka4/eb9YdizzokqeCP/txx/Iz+7bD+X
39zgB43rr7nuu9c+sGX/X5duw/dvjv/QyI8uOP7H+B4bPyf/z9/5+dnILy/H
38gvH89fuinzpz4p3U30OGX7Rv52wfHrRb/zA23P98oHu3z/HL9jbn39mOjV
5ONdcPhC8DpuH54HOHwQPo/ZWN+X/MH7dq8SflL4HG8Sz6Pe/7iucIrO3+sO
1u8znz6yoR9e8m0evm1LPpf7P2TTzm5v3tJV0q+67nSjcPwYfr/hL3JVnmc3
5PP70g/Mbb+8Lk/f9OZ8Lu/HKws/kufldQ19AvyQ7eKJgL83/e2UBr8489vF
exr4vcIHgRfynPBEwHO/+/gG9btJ/0V7bunDjpvhj8g/eLB/sPIhctz8TPLP
BuefyX96sD5I+UWD84u0/j+Yfy3/4c7+w/JX7szP9rqr+dFe13U+yly+q/IX
yF8uONux7ml+uPzne+tL5M882J9Z+WKD/VnkGzvpP/JvXpgfLn/qwfoD+Uv3
9peW//tEf0l7hTfn/B/zlpy/pPyjzvpx5YepnU/yjzrnHyk/qHN+kHlTXj9Q
vlDnfCHlT3XOn1J+Z+f8zo15S/xM8pM669PyWfzbnT+lfKXO+nLl93XO7zNv
yfND5UN11t8rP6tz+1I+Vud8LOXPDNaPKj9xcH7i0v/t0+vcp92lb1T+2eD8
M/mPd/YfN6/I+gbpLwbrL+RP3NmfWPlKk/Ut5ZcOzi81L8n6Qfk3D9Z/KN+i
c76F/JsHt1/G248edc15R13zyfUvyV9K/uaD/c3l77ywv7N5TSdKP6X8lMH+
APKn7u1PbV6I+QHKb+qtv57LR1d+U+/8puVnyT/qrT9WvtMk/8frwtYnKx+t
dz6a111ZjwX3uq7rr8qH6pwPpfyshfXnyocarN/2urP92ZQPtbD+WvlXvfXt
yv8aPL9WvtVkfUr5X73zv+beD5TfO9ifbGVDXhE/k/zXwf5W/CW482vNS7L/
lfKDB+cHKx974k9pXpH9y8wL2tg/cuQ1eXxUPu7gfFzznpyfrPzfwfm/yvcd
nO+r/OPB+cfmJTnfWPmivf27lA8zOB9G+Sq981WUD9M7H0b5KpP1I/Oa7A+l
/O/B+d/KR1vY/0D5M4PzZxhv4uPeOR9K+TOd82cYzxjf3H6Ur9M7X0f5NIuJ
f0CdL9Y7X0z5Ob3zc8QfKTwS8B0z/BHlr07qA8qPHZwfq/zV3vmryu/t7X93
3IbrcuP6t/J7O/vPKZ93Yf855c8Ozp9VfvVgf1Hl6w7O11U+7cL+bMrXHexv
t/ws+cO984eVr9vbX075w73zh5VP01t/at6Q83eUHzo4P7QL7yA+n4P9aZ2r
4vcz5fMM1t+a92D9rfKFBucLmdewsT9PyRfqnS+kfL/e+X6cF/fH+UHKPxuc
f6Z8i975Fso37e3/pnyRUm8F97qw/SGU79E730P53r39U5X/U/JgwMVvKHpS
cOXP9PYHUL4g/IsJv4Hrb32s8tl657OZF+d8nt+zrlP5t8oX6p0vZN6c69/K
Fxqsz1Y+/GD/XPFzevNTzJuz/lr5SoP9IZRPOcDTAd+YN8fPJL+vn+T3zfBH
aG/wFj4lf2nlfy7sH6P8nH6Sn/Pz9/8z1rlu1mcrn6p3PpV5O9ZHw2+A1+Dx
R/mXE/825fP0zucxb8f+8OblfUf+7cq3XjjfWvnMg/OZlW/dOd+a68vz/Rj5
cyt/erC/p/KbF/avVP704Pxp8/bsf6p86d750srnnrRvr9u6/go/4i7hRdhf
Hn4DvIaz5L/+A/Ei7O/PkbCue6z86b1ubP91+A/wHuxfv4fWdY+Vf/8ztW58
iPzh4T9wf/1+pvzgzvnBylfunK+s/ODJ+g++6nfN9be/uvKRJ/nXy8+SP7yw
/5Tykyf+XcqPnqxfmFex8fr5yKtwfvQcf0T5ZIPzyeDVwLuw/7rW3dfM7/C6
vv0zlF832F/I6+7OJxb/ovfzU/mug/NdlY/bOR9X+b8L5/9uzMviZ5L/29lf
TPnTC+dPK9+3d76v8o875x/P8UfMa3F+o/LbJv4j5s3Y/0n50IPzoeWf0ts/
5Vvizbj9f0m8rKcp38C8r6vk3894WPNexvvHeMT72WblP5ArwPN3s/IFzPva
Q/kQc/wR5XsOzvfcmDcxHr/yO3vndypfuXe+so/L72fK7144v1v5xgvnGyu/
vHd+ufIre/uH5UTLvNn+r3P8EfNCJvnu+Xue/85/jr/Y0PIXs3+D/aO5nvI/
LffP61Yb+2/uMrTyE6hbzfiHDS3/MNaNWv76rHu1/NPLuv4t+6t1M/5qA1ek
4a82tPzVkq+z3srXSb7J0Mo3ib9m1/LXXNO6mNfv48c3/Ndb9j8cWv5+8Eta
/m1HaF3K6+vxl+tb/nK0x5Z/+UXidXj91LwR+7/SPlv5HZfV7a/l79a1/N2S
7zC08h3gnTT9+9P+Zvzvhhn/u2HG/25o+d89R7wN5zvhX9nK12FdtuXvGn/S
ruVPal6H/TfNG7G/JO2z5a9n3ofXTxlfW/5/jJ8z+QHdTH5AN+N/37X8783L
ML9L/WeSrwE+4//fzfj/dzP+/92M/3/Xyl8Db+Vfgc/kL3T8TyN/oZvJX+ha
+QvgM/kTXSt/gnX1W/Y3b/tr1etWTf/uvuXfjT9qK19nq9blnJ8Sf/N+xt98
mPE372b8zYeWv7nXtRr5ekMr3wz+xox//GLGP75v+cfDh275o7Pu9du3nE/R
t/INCv+y4e8+t/5O+5jxF+9b/uKDeBVev+UvW/k6tI8Z//V+xn99mPFf71r+
67uLV+H8RdpXK/8Ov4AZf/uSm93wt+9b/va817b822kfrfySI8TrcP4F7afl
P29eRCM/bGjlh8FLmMmfG2by54aZ/LTSLhv5acNMftowk5823HL+KPzAaf6j
eRuN/LphJr9umMmvG2by64aZ/L6hld/ndT37rx4xs/6+rnV1r/+xbjXjL1x8
he3fS/6x/HPXwONv27f8bZOv2LfyFfGdn/H/X7T86+O/vpjxX+9b/uLMX1v+
tuQrt/J10JO28lmoN7T8eZPv1rfy3ezv6fwu7lfLHzr+y33Lf/k1Wte1//Fp
1Xrh1J/4r7Tu63xX7l8rv+Gi6v5P8wdepnVf++ezrtzyh/e6stffko/Ut/KR
lp/Daitfh/G95a98hngt5rfM+asWXs0t5w8OrfxB1tXk47EGzrpfKz83+Xvd
TL7jYibfcZjJdxxa+Y5v1bqe+TPX1uturfzLvpV/WfLDGvmMXP+ZfL9+Jt9v
aOX7mVfk/Oya9zTNL+b6z+QndjP5icNMfuLQyk9k/t3KD+T6z+RL9q18SfOa
nH/IuDjj3z/M+Pf3Lf9+eEutfO3kG29r5RtzJq18HXgVrXwT8zac32Hehse/
5Nf1rfy6+IoNrfyzWk85zS/YId5VI19gaOULfLy6ftN8cvPGzG/huDb2ySn5
MH0rH4br38o/oX238gnClx1a+X/Jj+tb+XFc31a+QvIPhlb+AX4Jr73l/Pah
lZ+NX8VMvtNkHRmc/O9Wvg7riq38GK5vK18h+YkTHT148veGVv4e40crH+Ll
Wtd2vr39yZ0vPscv4Pq28pvur3Vv5w+Rz9zK1/G6utdnWXdt5Usmn3Axk09Y
1tW9Pnsf8U7MP1n2yxdsW36euInfwe8m3oX5L1qXXTtO/JXk2w/26QBnfr9d
PiDgnO+dsi57jPgrl9W8lMn7LdeHXPmDxW+5Z84PnoX5JW/K9ag/TyzPj/eL
d3Oo1re5PsfJxwGc+VMrv17n1x2s9W363atzXe6i9ety/jnvg7X+Tb+Zyb/r
ZvLvFq38u9oPYZr/lnzZrpUvm1zSRSuflPNr5dddJl5PI1+ua+XLcfytfDXz
epx/m/zUrpWfyvG38uHwi2jlt9m/wvlkG6+7j8f/Q63rO7+V9clWvlryvRat
fC/238r3tW+e+QFcn1Y+Gf2nlY8L3spXhVfQyk+e86+Y0/+vbD/lPf8y/HCx
iz7B63oX733j/RG+sjH+vX7xrBc98aD/r7bzC7X8qu74iQ0xmkKRplCYqonj
H7CV1FpISw85v0BjW5C0tC99kvqQSdDShz6Iipgz4x8oVRBrSWamMaUQOs5M
yNWUUuHi2Q+R2hex1f5BaBor4jgTdGpDWkkxTXP2Wr/sz9rfrH3uSQ8DZ+5d
d+0/a/9b+7v+7Lc8u5rq90tV/hN/+w+//JPP/IbjcsTnMrrp//a+CPUfo58R
9B3bH+jb7y8fXnjH7176wF8/s7Lvlv71pf3+POjWnuOvfPhjf/qzT69eV78V
/XifLvt3OpHPtn/XVrk+ZeON+fXy8uxnvv+Fw69eM13z4Pa77d9i3R/nqz5f
bB5x/gj+tdE/XH//7ToPPtIf/4lyGC1/X377Peep0dvxXiwuYvxtvM/Wejn+
Wf02H05jnoyOT9Y+k8d9Qj42X+7FPBqWb51P19R5xvmV7R/2v2x8FP9g+cn8
vqX223CxXdt3Y1nVcvZs/3rX9m/H/9i03Z9uCHTB7+0zvou1HNKz8jP+TL6Z
/P746Stf+YNf+dHGvr/73z9/7E8uzvjdvvPj0k+98z13fvB3/Fyq7S2t/A6W
n7vh+79UPv3DzZd+/dE3f/KW+X5w4sKpW6//j+tn++H2Z6ff/d5/vfPvFv+5
Of3Wdzz9lpP/s/mFN3zhff/+e7P/m2jfOqF7+7P2Xbnl1r//8d++vWzH6VjY
395W24N2hv2t7ksbrv/jCf1ND73izgt/cc30it984BcffNNTm49vx9HLfzfk
dzfk91s/eP+5csvL6vx4dvPI+pV/9V/vmvGPj9X+PFnH8Q6MH8YljI8LXKyv
M3XcTD4cv4z/83Vc7DePYXwOKv3C+f/7fGNJ+olar40Tx0fUv8b4bWycxPko
+W3e2Dzi/HlDLf+nRfnX1XG3ecDxr/rExsaZ45uN3+j6t2/aX+33n/nKm3/t
6g9/omzX0YwfQT8I98dMf9hxfa9V+7fyf9W03Y9n/LWl317afTjQbZ8O7bd+
Kf36ga18piofrx/63fQRIZ/a/roPXXH5Yv2WO5pzwO8PE9uJ+SH1k3o+Vbnc
UNpz7OrqE8/Px+/ZuVIGzxc1fvjw/L22mL5u9Mu1vk/U843r49Vv++Qdf/n+
H9Tvl5Wf2X47f9b/TH6md54d0p9j+7k+uX9n9z8XqNg/67xz/kewPrkvXcD8
b9sf9zdbF+Avu/G/yvk/21+f3j7K95t1fMwP6yTGx9Yd+u/lV/3Fy5+wfmzd
oX0uP5v3WAdT2/6nNqfq970Y/3Y/WSy4vkxeB0I/Odfyr8+D/6CeB9ADvP0v
354vrifaOWN0m9+nxfy2+KxH67wyeRv9DPhPgz/Tbx+/55//8XUnfqxs19fV
zfY8vo7lF7QT8jd/QV+HTrd941IdN+4f1hI1f+t+Ul5T9xnuLxl/ht+Y3M4K
ena+Ur/m/gL5LCgf6FeH1K9sXtk84/w68fznnw4fqvP0s5ifNu+ur/OQ88/a
Ve9R4fy5v/brU4P4F+fHQZ23Jrf+/L26sXnI+SfuXwuOTzvuM52/Z/uz9d3u
B4tFvce4/IFvrIlvZPW39zlbPzeq+tesH/wL8mfzb/tdllYPy38j8B/iR4a3
3d7icLN9tc63ug+s6j3L6XfjXO6f77p9du84W+8d9R7kdLs/m5zU+j3xovVn
+Ks+f+v6XKr12f79Yi36f2j9/zz7//zna4e/Wvt3CuPfti/qR5V/qfjr/sF7
stdv+/Grm+/ZP+Pmev+6Wdy/MvzG9oO6P9Tx8byiqw/V8Xyo6jWXq74D/mJ8
Vo7RM/zb5gVwgJm/zjvgFM7P/YPjZ+WfEOXbvAUOVIxu7X2twDesvyZHyk/g
Yy5/+3uTI+VX70tu/7sC+Wf2AeovpGfysd+/W6xf0xe/29xjvqf2z7D/1nO3
2P5Wz2OMz7OrigsU0q3cdv95wfrc4tGGS5dqDwnlY391/fqdlz763L8vHv7L
Hz3w3L+/WZ5s9qG4v/B+g/tVwB/s/vxR2ElG+bP6P4R71+MoP+MH/if2l2dW
7blsn5z/+K1/+Ny/ry3vfPKx5/49vvygsL+o8rP223l5CnYOo9+PdfNpyPcM
5H+W8n8QdrVqB2nr1/iA0N8DvqP4R/EHnO+8P/L8dvkI/NH5xfk+3P+Mzvv9
eXE/x/nt7RP2OacL/cbpN2HeHge/0L+c/vt9/cvbL+4fzg+BiPl9dPlO0Pvb
e2zUr/v1+713vQL+wBr3xEdD+8/jXFX4g6qfehHxU+z/h9z/s/pR/prlZ/In
rkD50u5k+r7Rzd5u+ueVut6dv65n2oEgP28e5Wfr7THoYaP8tDvRvpKVb+tR
2c/r+XKozpeHYRd7su43o+2v+NOGerzRXw+98Vj/fud2LdsP1PjehfHN1gfP
t/B+MHAX9o+4oOGFRge+bveMrH3r0fa3cr+24qNz/Czw8cnwLKMDX1/xfM36
n8mPfjtKP7P2r9F+ju8JMb6fa/HJQLdylP5neWSo/4FeKn1i+UcdvxZXv7Lh
/YW4u+Hxgu52LiGfDfEv4u6830H/Lt8W/Te7leHpRsf+OtX91emZ/cPuG/C/
8flJu5StR6Mb/q7u94Lu42c/m/50AP3pOuCaXD+mt+D+5v23eWXj8ijsN1xf
p5P1RTrOzzXPT+Kehoca3ey+j7Q4qo/PAh/S4V8Rxtfms/K/aMcjni+Gt5xr
cQDFH9qX7W+0+5Je5eN2J9LN/tTaQUL7S21/kG9m/6Ddh/4BmX5AuxDxtS0+
963Dc3V9/DnuF1v6o0vgOE7P2m/4Pu6XTse+Luzbs93I5rPR763z3fCJ26Af
wn9q1bfvEbec5WfnqcIf27+P8zejZ/6vo/6/JrcnsH+P3U91/7Pz7aYE37B+
Gy5J+yfnpfCPcRyj73/7VfP/CuXfA1yP9jPiqvQvMnzA9vEV/KuIG9I/Jzuf
TD6t3Ga6wH/WRu/j9sH/ELjgeP37li/ml/Pbz8q/3PB/ZZ+1da3sj/V+M1mc
30XcT2/C/eRm3E+IaxOf9ri+ek5dhP8DcW3i43X/Xar9t5WX3F98fdG+m43v
9vuJQ7PLvL3r/6n198q/VPyZ/cPkcra1A3j7X4995Rjwpwxf4LjZeLT8s14e
zh/Y/Xg/p12P+INYP4tRftoVLwG/4PnK85d2CZ5/2fo9gN2B/gHZ/e8e9I/3
O+6f3J8n2EXMDuL1b/OvL6seMHF/dvtHtXu4HaTShf8Z8R/pfy7s9wFfpR/0
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
AfOfe/kif/pmlF+87+B0kV/f6YaHq/z92fkNu0kR8XOcH/P4t/FzIb7Jhrf1
o5j3N8TPrRg/h/jBmJ840Q9F/h7X70V+Ii8/iw8Q+YecX+RHw/0h5KcS8ovr
A/lz1ftuu65fp1Muwv4g+VP9es/2UW6Mv7G/VPsT7lVSfzwQ6xfxDQvGNyC+
MOgXWf8QvxL8k8fkl91P9P4L/CXov8K/ZO7/jvdH8uP9uzX1q8x/VuRHdn7h
X+N04V/D+yXxH+e3c0HFhwj/H6dbf/p+cNL/b1j+wv/A6cI/3vdP4d87GV3k
b3a68L8gfkz/CucX/j/sH/1XnF/4l4T11bcjSP9Fhd8E+Yv4ngn122fN/u3I
vyC/iH9R9p/An9FF/E3Yf45avojPUP4Lwf8B9oPwPjbeZyr9+N7g3+P1C/+z
0vLr94WEf9OmbV/w33b+ff1nRXzSLJ9+/n3aHxifw/nF+Byni/gil5+IH3J+
ET80qfr5vruIn1q19Yf34bx88b63tz/L35iVz3GjfMT7sk7Pztes/AU+Yn+S
+7/dX/iOnuj/gv0X8TFz+/rxL84v4l/C/Gxx+tm+K+J/0D+NT4v3DybWr+Qr
3mdwunifQY2v2n8lXfhXuvyEf6/zZ/6pwn/U+UV8zNSWP8cn0L6W3U+Ef6zz
j8anIT5ntj/14yPC/LNvtk/4V+86vk4mPc3v1I9v2rV+xkf4+hDxJzO9H//l
5Y/avxQ+378XRfu8ohMXVfkrk/yNR66fuGg/v2HgX4zSYZ9V+Rml/MX72up+
OrF/wr8h4/f2C/8Hb5/w3wB+H+zfzi/8M5xf+A9uRvnF+3fBPo38ES4/+P+t
1PvsKr8Q5Cfy58x6Me1D8G8I+Sfg/xXyC1IvVvZ5lT8DeSGCfN6I+cn5leHP
4n1Dp1u/VX6h7ffXPb8b90fxPqOXfw7jTnxKvB/sdPE+a5j/rdyk/SDI3/S5
JD9UaX8v979Q/0tcfqBn80vkF5/x4wSfH+tfoHv9yN8c8OEdyw/9h3/NSr0P
l+SfY/70qa0/5If38kV+bi9f5H93unifxOni/QfVfpX/bVL538bm57X+e9pP
iPvTPoL3M0J+t9HxV+fbEfWHUL7Kn5bh8/vO38w/C/Mn5I+lXVHh+yr/UCY/
nP8hP26Gz2f+KSJ+yeUv4i/8fBL+b/P41ffb8P4e+h/837x84Z/p5Qv/Qi9f
+P+5/DL/+6x/Qv7DdN7fRX46/6xJh18a/YshvxB/Df/cEL+J+KHgnwj/2yC/
jP5zff+rqeWf84fxfUHxfpz3X9jPAr6t4vNbu2KMTxf2UeKPfi9n/KjNJ4Uf
CP8Trz/b/8T7X84v9q/h8jO6OJ+y8hejdKH/E/+fjF+9/2klcn3tq3/Rb6Kf
/+Po/RfxM14+/WZE/ha+j+H84n0X58/6J94Pgf6p318R71OhftcPVf6UovKn
4H2ZUD/eBwz+hxk/3lcL+VGy+WXjl+TvIP9ilE7/d9pn8D5eOB/2rZ9+G8zv
gftTyL+WyR/vz4b41Kx9wJdCfjlxvq0pX97zFP0uQaef9q506tGkI74l0BU+
LuIngv1b2T/6dvVZ/pQP7Uci/4HTRXy/062mvp+bjP+f+fv5C5wu8hO4/ER+
Ah8/kb/By+e+SfsU7AsT7QvwX5hE/gsvXthfN3if2OsHPr8U9gFZPvxbAr6V
8Wd0rh9hn5b4s4hfh304xN8H+zH9UI2O+3HwPxD5B1aqfbRv2+/xvrjXL+Kf
nH8s/jnEj3n5Ir4r9J9+km35Wv+xlqj13bZ39/ljBOX/v2ABO5Yv4he9/Rk+
k8XHifj/neePan/2foPIjzAsHxG/eFT5B3p2vmX2GZFfIpSv9AO8XxHux8K/
1On9fqX+904X/tf7lr8wuojvUftv4KffCO//WfwJ8kdWP4wX3A/b/DYT70fb
b88fMzF/DPLfFOa/Qf6fgM8jv03wn2jxsxkn9v4l+qH9Zd8OJvFH5xf4P/DB
gD97+QL/9f4J+/LUlq/tL+3PMb4c9tfw/mzfL2wun35pzN+C8znED4v7Txmt
3zsm1h/w10ngH0eOj7L/IT/acPnZ/STrX1a+uL8N7y+Iry+Mr6ffDu+no/lN
dhxfpyN/QPBvyviz+9lY/RrfFfabaZQO/6ud+a35wJmG6Zeb/J4/Cvov4zK5
P2d0vD87cf8V8c+h/4ou4qND/23ESBf26UC/S9DZbzG+Mj+tiF+X/Rf5D9L5
gfgep2fxbyL+ivOD+ImXL+KrnS7iW4f7h/cDA36B9+3C/R3vewb9H3l5Qnwz
8iqF+AKTh7q/2PjI/b8ffxjGNzm/ZPmmFyj//rR9DT3bfzJ+1f4QX5+db15+
tr5FfKjTRX6CCeVT/x7uv8hfMCx/kd+gJPJx+Qr/UG8/4ovC/rPr+UX+Uf9/
W6f0L4Z/+YrrG/Ftk4hv832L6xN+pRPXN+XD+Kts/0J8WbgfW/9bvnn8OK85
/5ifTLz/7HSFDyj/lDMYf+LriE8I+DH8qxV+um7nR7SPqfwSGX9Gx/sjAh/w
9zHC/RjvywT9l/OK/lnITx7iq05i3lJ/b/sV9+ds/sAvdmL7EZ8S5g/84jL9
TI5P3w62c/xOxMdbv2AZv5y1T9Ez/ThbX2i/wu9S/VntP/vaN4X/31HLX/Tp
wb+a9j+pHwM3WnP+w/499f0rgn9i6J/KX9PmN7kh4E8Zv/DPc37h/xr8QzL/
YJXfTsRXTG37gn/7juOfy3fR/eT+j8K/nvip1A/3nb8i/sDrF/61Xr+In3G6
tau/T+ftE/ENxeiZfpitP94beX5iX5/YPsP1kN/X+Xlv5PkJ/46QnxP+lWH9
wX863E/75+rc/oyO/SHY14R/Shhf7iOj4895T/1z3/Un8MOwv3Kf3rN+pwv8
0ctnv+m/L/yrnG74M+wrTs/al53/wr91Stov6cL/Zlp0P/n7umy3uh8k+s+k
/F/Gzgc/3yDnsL+H/Qv+CRKfsW/SOa9fav0xi/8Av7L/Sno2fpl+Mlq+mp/9
ftsnpwv/uWH8JNufxf4I+QT/UKffhnsR7aNZ/zL/v4xf+FcO15+dL+L8msjf
yj2Wr+jCvpiNr/ML/9Yd54fev+1/il/EF3j9Qr8obF+/nlF8RLdf2Ifp38H4
DZQf/JNpX0vXt+xfP/7Dy/9f4bPYmQ==
   "], $CellContext`vertices0$$ = CompressedData["
1:eJxTTMoPSmViYGDgAWIWBhj4YL/GJ+JF1bbX9lD+fpg4Kg1Xvx+HPhz6Efbg
MH8/DnPQ1GOYQ7a7cdlDpjvIDg8AW3lNxA==
   "], $CellContext`l0$$ = 1, $CellContext`V100$$ = 
   0.043752329739829225`, $CellContext`L$$ = 
   11.427962875879341`, $CellContext`relativeOn$$ = 
   False, $CellContext`infty$$ = False, $CellContext`opacity$$ = 
   1, $CellContext`boxed$$ = 
   True, $CellContext`planeChoice$$, $CellContext`n1$$ = 
   1, $CellContext`n2$$ = 0, $CellContext`n3$$ = 0, $CellContext`cutOn$$ = 
   False, $CellContext`drawCutPlane$$ = False, $CellContext`cutPosition$$ = 
   0.1, $CellContext`previewNum$$ = 15, $CellContext`Num$$ = 
   100, $CellContext`tMin$$ = 0.0001, $CellContext`t$$ = 
   80, $CellContext`\[Alpha]1$$ = 3.2, $CellContext`\[Beta]1$$ = 
   2.1, $CellContext`\[CapitalDelta]100posz$$ = 
   0, $CellContext`\[CapitalDelta]100posx$$ = 
   0, $CellContext`\[CapitalDelta]100negx$$ = 
   0, $CellContext`\[CapitalDelta]100posy$$ = 
   0, $CellContext`\[CapitalDelta]100negy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]posz$$ = 
   0, $CellContext`\[CapitalDelta]\[Alpha]z$$ = 
   0, $CellContext`\[CapitalDelta]\[Alpha]negyposx$$ = 
   0, $CellContext`\[CapitalDelta]\[Alpha]negynegx$$ = 
   0, $CellContext`\[CapitalDelta]\[Alpha]negxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]posy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negx$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negz$$ = 
   0, $CellContext`\[CapitalDelta]\[Alpha]posxposy$$ = 
   0, $CellContext`\[Gamma]1$$ = 
   4, $CellContext`\[CapitalDelta]\[Beta]posx$$ = 0, $CellContext`mult100$$ = 
   1, $CellContext`mult\[Alpha]$$ = 1, $CellContext`mult\[Beta]$$ = 
   1, $CellContext`mult\[Gamma]$$ = 1, $CellContext`ds$$ = {
   1, 1, 1, 1, 1, 1, 0.5, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
     2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2}, $CellContext`ds1$$ = CompressedData["
1:eJxTTMoPSmVkYGDwYoCBD/bE0oxg+oG9nPEE1+WVv+C0LJj+hMGH0TCb6vRc
bKfJfLVHp89Y16fNW/CNRPoZBj219bMh+/LXGPS9spbtdZXfMWi1DFHbb96f
iaZxmUOe+Y8x6NqZops6v7/FoE/ctfoQqPIVg0YPZ0I0LnNINV/N5UCMyaIX
GDQARhINkQ==
   "], $CellContext`tiltAngles$$ = CompressedData["
1:eJxTTMoPymNiYGDwAmIQPQpGATUBAL3xAgE=
   "], $CellContext`normals$$ = CompressedData["
1:eJx1kGEKgDAIha2xg3SdfnaEDlD3Z4xqMOnjoQ/E6dOnczvv41rNbP+s2I/n
g7+XaRFnCbfARi6KnwnlyDNH6IwoNpltosn9VdfrqMOabJeSeFqf2up5A3K8
icfa6zn+d7y5B3VKwLNHb1+Eo56jJ5471cTT2qxXz3+R4wyPtddzeh/uQZ0a
8OzR+1ThqOdoiR94Ad3pjOg=
   "], $CellContext`tiltedNormals$$ = CompressedData["
1:eJx1kGEKgDAIha2xg3SdfnaEDlD3Z4xqMOnjoQ/E6dOnczvv41rNbP+s2I/n
g7+XaRFnCbfARi6KnwnlyDNH6IwoNpltosn9VdfrqMOabJeSeFqf2up5A3K8
icfa6zn+d7y5B3VKwLNHb1+Eo56jJ5471cTT2qxXz3+R4wyPtddzeh/uQZ0a
8OzR+1ThqOdoiR94Ad3pjOg=
   "], $CellContext`calcTilt$$ = Hold[
    If[
     Not[$CellContext`infty$$], $CellContext`allNormals$$ = 
      Join[$CellContext`tiltedNormals$$, 
        Complement[$CellContext`normals$$, $CellContext`tiltedNormals$$, 
         SameTest -> (Chop[
            Norm[# - #2]] == 0& )]]; $CellContext`ds1$$ = 
      Join[$CellContext`ds$$, 
        Table[
        20000000000, {$CellContext`i, 1, Length[$CellContext`allNormals$$] - 
          Length[$CellContext`normals$$]}]]; $CellContext`pts0$$ = 
      MapThread[#2 (#/
         Norm[#])& , {$CellContext`allNormals$$, $CellContext`ds1$$}]; \
$CellContext`planes0$$ = MapThread[Append[-#, 
         Dot[#, #2]]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; \
$CellContext`nodes0$$ = Union[
        Map[Append[#, 1]& , 
         Quiet[
          Cases[
           Map[LinearSolve[
             (If[Det[#] != 0, #, 0 #]& )[
              Map[Most, #]], -Map[Last, #]]& , 
            Subsets[$CellContext`planes0$$, {3}]], 
           Blank[List]]]]]; $CellContext`vertices0$$ = DeleteDuplicates[
        Select[$CellContext`nodes0$$, Chop[
           Min[
            Dot[$CellContext`planes0$$, #]]] >= 0& ], Chop[
          Norm[# - #2]] == 0& ]; $CellContext`pts0$$ = Table[
        Most[
         Part[$CellContext`vertices0$$, 
          Part[
           Ordering[
            Dot[$CellContext`vertices0$$, 
             Part[$CellContext`planes0$$, $CellContext`i]], 1], 
           1]]], {$CellContext`i, 1, 
         Length[$CellContext`planes0$$]}]; $CellContext`ds1$$ = 
      MapThread[
       Dot[#, #2]/
        Norm[#]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; 
     Null, $CellContext`tiltedNormals$$ = $CellContext`normals$$; \
$CellContext`allNormals$$ = $CellContext`normals$$; $CellContext`ds1$$ = \
$CellContext`ds$$; Null]], $CellContext`calcSection$$ = 
   Hold[$CellContext`timePolygon2D$$ = {}; $CellContext`n$$ = 
     Normalize[$CellContext`n$$]; If[
      And[
      Part[$CellContext`n$$, 1] != 0, Part[$CellContext`n$$, 2] != 0, 
       Part[$CellContext`n$$, 3] != 0], $CellContext`projX$$ = 
      Normalize[{0, 0, 1} - 
        Dot[{0, 0, 1}, $CellContext`n$$] $CellContext`n$$], 
      If[
       Or[Abs[
          Part[$CellContext`n$$, 1]] == 1, Part[$CellContext`n$$, 3] != 
        0], $CellContext`projX$$ = 
        Normalize[{0, 1, 0} - 
          Dot[{0, 1, 0}, $CellContext`n$$] $CellContext`n$$]; 
       Null, $CellContext`projX$$ = 
        Normalize[{1, 0, 0} - 
          Dot[{1, 0, 0}, $CellContext`n$$] $CellContext`n$$]; Null]]; If[Total[
        Cross[$CellContext`n$$, $CellContext`projX$$]] < 
      0, $CellContext`projY$$ = 
      Cross[$CellContext`projX$$, $CellContext`n$$], $CellContext`projY$$ = 
      Cross[$CellContext`n$$, $CellContext`projX$$]]; \
$CellContext`timeGrid1$$ = 
     Range[$CellContext`tMin$$, $CellContext`t$$, ($CellContext`t$$ - \
$CellContext`tMin$$)/
       ControlActive[$CellContext`previewNum$$, $CellContext`Num$$]]; \
$CellContext`textX$$ = 1; $CellContext`textY$$ = 
     1; $CellContext`timeStepLines$$ = Append[
       Range[$CellContext`tMin$$, $CellContext`t$$, $CellContext`timeStep$$], \
$CellContext`t$$]; $CellContext`timingTest$$ = {}; 
    If[$CellContext`constantVelocity$$, 
      Module[{$CellContext`i$, $CellContext`poly$}, $CellContext`polygons$$ = \
{}; $CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
         Length[$CellContext`timeGrid1$$]; $CellContext`polygons2D$$ = {}; \
$CellContext`Llist$$ = {}; $CellContext`timingTest$$ = {}; While[
          
          And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ >= 
           1], $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
             $CellContext`pts1[False, $CellContext`L$$, 
              
              Part[$CellContext`timeGrid1$$, $CellContext`i$], \
$CellContext`allNormals$$], 
             If[$CellContext`cutPosition$$ == 0, 
               0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
          AppendTo[$CellContext`polygons2D$$, 
            ($CellContext`polygon3D[
             Map[If[
                Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                And[
                Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                 0], {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
              Part[
               #["vertices"], 
               #["face"]]], 
             #["colors"]]& )[$CellContext`poly$]]; 
          AppendTo[$CellContext`polygons$$, 
            ($CellContext`polygon3D[
             Map[$CellContext`verticeTransform2$$[
               $CellContext`verticeTransform1$$[#]]& , If[
                Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                #["vertices"], 
                #["face"]]], 
             #["colors"]]& )[$CellContext`poly$]]; Decrement[$CellContext`i$]; 
          Null]; If[
         Last[$CellContext`polygons$$] == {}, 
          AppendTo[$CellContext`timeStepLines$$, 
            
            Part[$CellContext`timeGrid1$$, $CellContext`i$ + 
             2]]; $CellContext`timeStepLines$$ = Sort[
             
             Select[$CellContext`timeStepLines$$, # >= 
              Part[$CellContext`timeGrid1$$, $CellContext`i$ + 2]& ]]; Null]; 
        Null]; Module[{$CellContext`i$, $CellContext`poly$}, \
$CellContext`timeStepLines2D$$ = {}; $CellContext`timeStepLines3D$$ = {}; \
$CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
         Length[$CellContext`timeStepLines$$] - 
          1; $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
           $CellContext`pts1[False, $CellContext`L$$, 
            
            Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
             1], $CellContext`allNormals$$], 
           If[$CellContext`cutPosition$$ == 0, 
             0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
        AppendTo[$CellContext`timeStepLines2D$$, 
          ($CellContext`polygon3D[
           Map[If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
              And[
              Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
               0], {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
            Part[
             #["vertices"], 
             #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; 
        AppendTo[$CellContext`timeStepLines3D$$, 
          ($CellContext`polygon3D[
           Map[$CellContext`verticeTransform2$$[
             $CellContext`verticeTransform1$$[#]]& , If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
              #["vertices"], 
              #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; While[
          
          And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ > 
           1], $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
             $CellContext`pts1[False, $CellContext`L$$, 
              
              Part[$CellContext`timeStepLines$$, $CellContext`i$], \
$CellContext`allNormals$$], 
             If[$CellContext`cutPosition$$ == 0, 
               0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
          AppendTo[$CellContext`timeStepLines2D$$, 
            ($CellContext`polygon[
             Map[If[
                Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                And[
                Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                 0], {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
              Part[
               #["vertices"], 
               #["face"]]], 
             ConstantArray[0, 
              Length[
               #["colors"]]]]& )[$CellContext`poly$]]; 
          AppendTo[$CellContext`timeStepLines3D$$, 
             ($CellContext`polygon[
              Map[$CellContext`verticeTransform2$$[
                $CellContext`verticeTransform1$$[#]]& , If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                 #["vertices"], 
                 #["face"]]], 
              ConstantArray[0, 
               Length[
                #["colors"]]]]& )[$CellContext`poly$]] 
           Decrement[$CellContext`i$]; 
          
          Null]; $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
           $CellContext`pts1[False, $CellContext`L$$, 
            Part[$CellContext`timeStepLines$$, 1], $CellContext`allNormals$$],
            If[$CellContext`cutPosition$$ == 0, 
             0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
        AppendTo[$CellContext`timeStepLines2D$$, 
          ($CellContext`polygon3D[
           Map[If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
              And[
              Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
               0], {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
            Part[
             #["vertices"], 
             #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; 
        AppendTo[$CellContext`timeStepLines3D$$, 
          ($CellContext`polygon3D[
           Map[$CellContext`verticeTransform2$$[
             $CellContext`verticeTransform1$$[#]]& , If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
              #["vertices"], 
              #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]]; Null, 
      Module[{$CellContext`i$, $CellContext`poly$, \
$CellContext`tempVelocity$, $CellContext`tempL$}, $CellContext`polygons$$ = \
{}; $CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
         Length[$CellContext`timeGrid1$$]; $CellContext`polygons2D$$ = {}; \
$CellContext`Llist$$ = {}; $CellContext`timingTest$$ = {}; While[
           And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ >= 1], 
           Quiet[$CellContext`tempVelocity$ = 
             NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                 Part[$CellContext`timeGrid1$$, $CellContext`i$]}]/
              Part[$CellContext`timeGrid1$$, $CellContext`i$]]; \
$CellContext`tempL$ = $CellContext`l0$$/(
             2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
              $CellContext`pts1[False, $CellContext`tempL$, 
               
               Part[$CellContext`timeGrid1$$, $CellContext`i$], \
$CellContext`allNormals$$], 
              If[$CellContext`cutPosition$$ == 0, 
                0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
           AppendTo[$CellContext`polygons2D$$, 
             ($CellContext`polygon3D[
              Map[If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                 And[
                 Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                  0], {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
               Part[
                #["vertices"], 
                #["face"]]], 
              #["colors"]]& )[$CellContext`poly$]]; 
           AppendTo[$CellContext`polygons$$, 
              ($CellContext`polygon3D[
               Map[$CellContext`verticeTransform2$$[
                 $CellContext`verticeTransform1$$[#]]& , If[
                  Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                  1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                  #["vertices"], 
                  #["face"]]], 
               #["colors"]]& )[$CellContext`poly$]] 
            Decrement[$CellContext`i$]; Null] 
         If[Last[$CellContext`polygons$$] == {}, 
           AppendTo[$CellContext`timeStepLines$$, 
             
             Part[$CellContext`timeGrid1$$, $CellContext`i$ + 
              2]]; $CellContext`timeStepLines$$ = Sort[
              
              Select[$CellContext`timeStepLines$$, # >= 
               Part[$CellContext`timeGrid1$$, $CellContext`i$ + 2]& ]]; Null]; 
        Null]; Module[{$CellContext`i$, $CellContext`poly$, \
$CellContext`tempVelocity$, $CellContext`tempL$}, \
$CellContext`timeStepLines2D$$ = {}; $CellContext`timeStepLines3D$$ = {}; \
$CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
         Length[$CellContext`timeStepLines$$] - 1; 
        Quiet[$CellContext`tempVelocity$ = 
          NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
              Part[$CellContext`timeStepLines$$, $CellContext`i$ + 1]}]/
           Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
            1]]; $CellContext`tempL$ = $CellContext`l0$$/(
          2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
           $CellContext`pts1[False, $CellContext`tempL$, 
            
            Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
             1], $CellContext`allNormals$$], 
           If[$CellContext`cutPosition$$ == 0, 
             0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
        AppendTo[$CellContext`timeStepLines2D$$, 
          ($CellContext`polygon3D[
           Map[If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
              And[
              Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
               0], {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
            Part[
             #["vertices"], 
             #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; 
        AppendTo[$CellContext`timeStepLines3D$$, 
          ($CellContext`polygon3D[
           Map[$CellContext`verticeTransform2$$[
             $CellContext`verticeTransform1$$[#]]& , If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
              #["vertices"], 
              #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; While[
          And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ > 1], 
          Quiet[$CellContext`tempVelocity$ = 
            NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                Part[$CellContext`timeStepLines$$, $CellContext`i$]}]/
             Part[$CellContext`timeStepLines$$, $CellContext`i$]]; \
$CellContext`tempL$ = $CellContext`l0$$/(
            2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
             $CellContext`pts1[False, $CellContext`tempL$, 
              
              Part[$CellContext`timeStepLines$$, $CellContext`i$], \
$CellContext`allNormals$$], 
             If[$CellContext`cutPosition$$ == 0, 
               0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
          AppendTo[$CellContext`timeStepLines2D$$, 
            ($CellContext`polygon[
             Map[If[
                Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                And[
                Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                 0], {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                 
                 Dot[# - 
                  Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
              Part[
               #["vertices"], 
               #["face"]]], 
             ConstantArray[0, 
              Length[
               #["colors"]]]]& )[$CellContext`poly$]]; 
          AppendTo[$CellContext`timeStepLines3D$$, 
            ($CellContext`polygon[
             Map[$CellContext`verticeTransform2$$[
               $CellContext`verticeTransform1$$[#]]& , If[
                Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                #["vertices"], 
                #["face"]]], 
             ConstantArray[0, 
              Length[
               #["colors"]]]]& )[$CellContext`poly$]]; 
          Decrement[$CellContext`i$]; Null]; 
        Quiet[$CellContext`tempVelocity$ = 
          NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
              Part[$CellContext`timeStepLines$$, 1]}]/
           Part[$CellContext`timeStepLines$$, 
            1]]; $CellContext`tempL$ = $CellContext`l0$$/(
          2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
           $CellContext`pts1[False, $CellContext`tempL$, 
            Part[$CellContext`timeStepLines$$, 1], $CellContext`allNormals$$],
            If[$CellContext`cutPosition$$ == 0, 
             0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
        AppendTo[$CellContext`timeStepLines2D$$, 
          ($CellContext`polygon3D[
           Map[If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
              And[
              Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
               0], {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
               
               Dot[# - 
                Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
            Part[
             #["vertices"], 
             #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]; 
        AppendTo[$CellContext`timeStepLines3D$$, 
          ($CellContext`polygon3D[
           Map[$CellContext`verticeTransform2$$[
             $CellContext`verticeTransform1$$[#]]& , If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
              #["vertices"], 
              #["face"]]], 
           ConstantArray[0, 
            Length[
             #["colors"]]]]& )[$CellContext`poly$]]]; 
      Null]; $CellContext`textX$$ = Max[
       Part[
        Part[
         Part[$CellContext`timeStepLines2D$$, 1], 1], All, 
        1]]; $CellContext`textY$$ = Max[
       Part[
        Part[
         Part[$CellContext`timeStepLines2D$$, 1], 1], All, 
        2]]; $CellContext`timePolygonColor$$ = Which[
       Or[Sort[
          Abs[$CellContext`n$$]] == {0, 0, 1}, 
        RegionMember[
         ConvexHullRegion[{{
            Part[$CellContext`ds$$, 3], 
            Part[$CellContext`ds$$, 5], 0.}, {
            Part[$CellContext`ds$$, 3], -Part[$CellContext`ds$$, 5], 0.}, {-
            Part[$CellContext`ds$$, 3], 
            Part[$CellContext`ds$$, 5], 0.}, {-Part[$CellContext`ds$$, 3], -
            Part[$CellContext`ds$$, 5], 0.}, {
            Part[$CellContext`ds$$, 3], 
            Part[$CellContext`ds$$, 5], 
            Part[$CellContext`ds$$, 2]}, {
            Part[$CellContext`ds$$, 3], -Part[$CellContext`ds$$, 5], 
            Part[$CellContext`ds$$, 2]}, {-Part[$CellContext`ds$$, 3], 
            Part[$CellContext`ds$$, 5], 
            Part[$CellContext`ds$$, 2]}, {-Part[$CellContext`ds$$, 3], -
            Part[$CellContext`ds$$, 5], 
            Part[$CellContext`ds$$, 2]}}], Part[
           Part[
            Last[$CellContext`timeStepLines3D$$], 1], 1] - {0.01, 0.01, 0}]], 
       Darker[
        GrayLevel[0.7], 0], Sort[
         Abs[$CellContext`n$$]] == Normalize[{0, 1, 1}], 
       Darker[
        Lighter[Magenta, 0.4], 0], Sort[
         Abs[$CellContext`n$$]] == Normalize[{1, 1, 1}], 
       Darker[
        Blend[{Yellow, Green}, 0.7], 
        0]]; $CellContext`timePolygon2D$$ = {$CellContext`timePolygonColor$$, 
       Polygon[
        Part[
         Last[$CellContext`timeStepLines2D$$], 
         1]]}; $CellContext`timePolygon3D$$ = \
{$CellContext`timePolygonColor$$, 
       Polygon[
        Part[
         Last[$CellContext`timeStepLines3D$$], 1]]}; 
    Null], $CellContext`calcCutOff$$ = Hold[If[
      Not[$CellContext`individualGrowthFactors$$], $CellContext`f00neg1$$ = 
       1 + $CellContext`\[CapitalDelta]100negz$$; $CellContext`f00pos1$$ = 
       1 + $CellContext`\[CapitalDelta]100posz$$; $CellContext`fpos100$$ = 
       1 + $CellContext`\[CapitalDelta]100posx$$; $CellContext`fneg100$$ = 
       1 + $CellContext`\[CapitalDelta]100negx$$; $CellContext`f0pos10$$ = 
       1 + $CellContext`\[CapitalDelta]100posy$$; $CellContext`f0neg10$$ = 
       1 + $CellContext`\[CapitalDelta]100negy$$; \
$CellContext`fpos1pos1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]posxposy$$); \
$CellContext`fneg1pos1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negxposy$$); \
$CellContext`fpos1neg1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negyposx$$); \
$CellContext`fneg1neg1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negynegx$$); \
$CellContext`fpos1pos1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]posxposy$$); \
$CellContext`fneg1pos1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]negxposy$$); \
$CellContext`fpos1neg1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]negyposx$$); \
$CellContext`fneg1neg1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
         1 + $CellContext`\[CapitalDelta]\[Alpha]negynegx$$); \
$CellContext`f0pos1pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posy$$) 
        1; $CellContext`fpos10pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posx$$) 
        1; $CellContext`fpos1pos10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Beta]posxposy$$); \
$CellContext`f0neg1pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negy$$) 
        1; $CellContext`fpos10neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posx$$) 
        1; $CellContext`fpos1neg10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Beta]negyposx$$); \
$CellContext`f0pos1neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posy$$) 
        1; $CellContext`fneg10pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negx$$) 
        1; $CellContext`fneg1pos10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Beta]negxposy$$); \
$CellContext`f0neg1neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negy$$) 
        1; $CellContext`fneg10neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
         1 + $CellContext`\[CapitalDelta]\[Beta]negx$$) 
        1; $CellContext`fneg1neg10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Beta]negynegx$$); \
$CellContext`fpos1pos1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Gamma]posxposy$$); \
$CellContext`fpos1pos3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$); \
$CellContext`fpos3pos1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$); \
$CellContext`fpos1pos1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxposy$$); \
$CellContext`fpos1neg3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$); \
$CellContext`fneg3pos1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$); \
$CellContext`fpos1neg1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$); \
$CellContext`fpos1neg3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$); \
$CellContext`fneg1pos1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxposy$$); \
$CellContext`fneg1neg3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$); \
$CellContext`fneg3pos1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$); \
$CellContext`fneg3neg1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$); \
$CellContext`fpos1neg1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$); \
$CellContext`fpos1pos3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$); \
$CellContext`fneg1pos1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Gamma]negxposy$$); \
$CellContext`fneg1pos3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$); \
$CellContext`fpos3pos1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$); \
$CellContext`fpos3neg1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$); \
$CellContext`fneg1neg1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$); \
$CellContext`fneg1pos3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$); \
$CellContext`fpos3neg1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$); \
$CellContext`fneg1neg1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$); \
$CellContext`fneg1neg3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$); \
$CellContext`fneg3neg1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$); \
$CellContext`fpos1pos1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Delta]posxposy$$); \
$CellContext`fpos1pos5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$); \
$CellContext`fpos5pos1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$); \
$CellContext`fpos1pos1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxposy$$); \
$CellContext`fpos1neg5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$); \
$CellContext`fneg5pos1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg5xposy$$); \
$CellContext`fpos1neg1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxnegy$$); \
$CellContext`fpos1neg5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$); \
$CellContext`fneg1pos1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxposy$$); \
$CellContext`fneg1neg5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$); \
$CellContext`fneg5pos1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg5xposy$$); \
$CellContext`fneg5neg1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$); \
$CellContext`fpos1neg1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Delta]posxnegy$$); \
$CellContext`fpos1pos5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$); \
$CellContext`fneg1pos1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Delta]negxposy$$); \
$CellContext`fneg1pos5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxpos5y$$); \
$CellContext`fpos5pos1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$); \
$CellContext`fpos5neg1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$); \
$CellContext`fneg1neg1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
        1 (1 + $CellContext`\[CapitalDelta]\[Delta]negxnegy$$); \
$CellContext`fneg1pos5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxpos5y$$); \
$CellContext`fpos5neg1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$); \
$CellContext`fneg1neg1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxnegy$$); \
$CellContext`fneg1neg5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$); \
$CellContext`fneg5neg1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
         1 + $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$); \
$CellContext`factorList$$ = {$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$}; 
      Null, {$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$} = $CellContext`factorList$$; 
      Null]; $CellContext`timePolygon2D$$ = {}; $CellContext`timePolygon3D$$ = \
{}; $CellContext`verticeTransform1$$ = RotationTransform[
       If[$CellContext`transformAxisSystem$$, (-Pi)/4, 0], {0, 0, 
       1}]; $CellContext`verticeTransform2$$ = RotationTransform[
       If[$CellContext`transformAxisSystem$$, -ArcTan[
          Sqrt[2]], 0], {0, 1, 0}]; 
    If[$CellContext`constantVelocity$$, $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 10^(-3), 
      Quiet[$CellContext`V100$$ = 
       NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
           If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
        If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]]; 
    Quiet[$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$)]; 
    Quiet[$CellContext`velocityPlot$$ = 
       Plot[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 
         10^(-3), {$CellContext`x, 0, $CellContext`t$$}, 
         AxesLabel -> {"time (hr)", "Growth Velocity (mm/hr)"}]; 
      Null]; $CellContext`timeStepLines3D$$ = {}; $CellContext`pts$$ = \
$CellContext`pts1[$CellContext`infty$$, $CellContext`L$$, $CellContext`t$$, \
$CellContext`allNormals$$]; $CellContext`p$$ = \
$CellContext`polyhedron[$CellContext`allNormals$$, $CellContext`pts$$]; \
$CellContext`vertices$$ = Map[$CellContext`verticeTransform2$$[
        $CellContext`verticeTransform1$$[#]]& , 
       $CellContext`p$$["vertices"]]; $CellContext`faces$$ = $CellContext`p$$[
      "faces"]; $CellContext`v$$ = 
     Length[$CellContext`vertices$$]; $CellContext`f$$ = Count[
       $CellContext`p$$["faces"], 
       Except[{}]]; $CellContext`e$$ = $CellContext`v$$ + $CellContext`f$$ - 
      2; $CellContext`downP$$ = \
$CellContext`polyhedron[$CellContext`allNormals$$, 
       Map[$CellContext`param1[#, 
          $CellContext`d[#], $CellContext`infty$$, $CellContext`L$$, \
$CellContext`t$$] #& , $CellContext`allNormals$$]]; \
$CellContext`calcVertices$$ = $CellContext`downP$$[
      "vertices"]; $CellContext`calcFaces$$ = $CellContext`downP$$[
      "faces"]; $CellContext`rotatedVertices2D$$ = 
     Map[RotationTransform[
       45 Degree][#]& , (1/(2 $CellContext`L$$)) $CellContext`l0$$ 
       Part[$CellContext`vertices$$, All, 
         Span[1, 2]]]; $CellContext`rotatedVertices3D$$ = 
     Map[RotationTransform[
       45 Degree, {0, 0, 1}][#]& , (1/(
        2 $CellContext`L$$)) $CellContext`l0$$ $CellContext`vertices$$]; \
$CellContext`CalcrotatedVertices2D$$ = 
     Map[RotationTransform[
       45 Degree][#]& , (1/(2 $CellContext`L$$)) $CellContext`l0$$ 
       Part[$CellContext`calcVertices$$, All, 
         Span[1, 2]]]; $CellContext`CalcrotatedVertices3D$$ = 
     Map[RotationTransform[
       45 Degree, {0, 0, 1}][#]& , (1/(
        2 $CellContext`L$$)) $CellContext`l0$$ $CellContext`calcVertices$$]; \
$CellContext`polyGraphics$$ = Graphics3D[{
        Specularity[0.5, 6], 
        GraphicsComplex[If[
           Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
           1, $CellContext`l0$$] 
         If[$CellContext`infty$$, 1, 1/(
           2 $CellContext`L$$)] $CellContext`vertices$$, {
          Opacity[
           Dynamic[$CellContext`opacity$$]], 
          Table[
           If[Part[$CellContext`faces$$, $CellContext`i] != {}, {
             Block[{$CellContext`k = Total[
                 Map[Abs, 
                  Part[$CellContext`allNormals$$, $CellContext`i]]]}, 
              Switch[
               Part[
                Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
               Darker[
                GrayLevel[0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 1]]]], 2, 
               Darker[
                Lighter[Magenta, 0.4], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 2]]]], 3, 
               Darker[
                Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 3]]]], 5, 
               Darker[Blue, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 5]]]], 7, 
               Darker[Yellow, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 7]]]]]], {
              EdgeForm[
               Thickness[Medium]], 
              Polygon[
               
               Part[$CellContext`faces$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
            Length[$CellContext`allNormals$$]}], 
          PointSize[0.015], Red, 
          Opacity[1], 
          Dynamic[
           If[$CellContext`hideVertices$$, {}, 
            Point[
             Range[$CellContext`v$$]]]]}]}, Axes -> True, 
       AxesLabel -> {"x", "y", "z"}]; $CellContext`volume$$ = Volume[
       ConvexHullRegion[(1/(
         2 $CellContext`L$$)) $CellContext`l0$$ $CellContext`vertices$$]]; \
$CellContext`maxHeight$$ = 
     Max[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
       Part[$CellContext`vertices$$, All, 3]]; $CellContext`largestwidth$$ = 
     Max[
        Part[$CellContext`rotatedVertices2D$$, All, 1]] - Min[
       Part[$CellContext`rotatedVertices2D$$, All, 
        1]]; $CellContext`largestlength$$ = Max[
        Part[$CellContext`rotatedVertices2D$$, All, 2]] - Min[
       Part[$CellContext`rotatedVertices2D$$, All, 
        2]]; $CellContext`bottomWidth$$ = 
     If[Part[$CellContext`faces$$, 14] != {}, Max[
         Part[
          Map[
          RotationTransform[
           45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
             Part[$CellContext`vertices$$, 
              Part[$CellContext`faces$$, 14]], All, 
             Span[1, 2]]], All, 1]] - Min[
        Part[
         Map[
         RotationTransform[
          45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
            Part[$CellContext`vertices$$, 
             Part[$CellContext`faces$$, 14]], All, 
            Span[1, 2]]], All, 1]], 0]; $CellContext`bottomLength$$ = 
     If[Part[$CellContext`faces$$, 14] != {}, Max[
         Part[
          Map[
          RotationTransform[
           45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
             Part[$CellContext`vertices$$, 
              Part[$CellContext`faces$$, 14]], All, 
             Span[1, 2]]], All, 2]] - Min[
        Part[
         Map[
         RotationTransform[
          45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
            Part[$CellContext`vertices$$, 
             Part[$CellContext`faces$$, 14]], All, 
            Span[1, 2]]], All, 2]], 0]; $CellContext`topWidth$$ = 
     If[Part[$CellContext`faces$$, 7] != {}, Max[
         Part[
          Map[
          RotationTransform[
           45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
             Part[$CellContext`vertices$$, 
              Part[$CellContext`faces$$, 7]], All, 
             Span[1, 2]]], All, 1]] - Min[
        Part[
         Map[
         RotationTransform[
          45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
            Part[$CellContext`vertices$$, 
             Part[$CellContext`faces$$, 7]], All, 
            Span[1, 2]]], All, 1]], 0]; $CellContext`topLength$$ = 
     If[Part[$CellContext`faces$$, 7] != {}, Max[
         Part[
          Map[
          RotationTransform[
           45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
             Part[$CellContext`vertices$$, 
              Part[$CellContext`faces$$, 7]], All, 
             Span[1, 2]]], All, 2]] - Min[
        Part[
         Map[
         RotationTransform[
          45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
            Part[$CellContext`vertices$$, 
             Part[$CellContext`faces$$, 7]], All, 
            Span[1, 2]]], All, 2]], 
       0]; $CellContext`averageGrowthFactors$$ = {{
       "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", $CellContext`f00pos1$$}, {
       "\!\(\*SubscriptBox[\(f\), \({11} 5\)]\)", \
($CellContext`fpos1pos1pos5$$ + $CellContext`fpos1neg1pos5$$ + \
$CellContext`fneg1pos1pos5$$ + $CellContext`fneg1neg1pos5$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({11} 3\)]\)", \
($CellContext`fpos1pos1pos3$$ + $CellContext`fpos1neg1pos3$$ + \
$CellContext`fneg1pos1pos3$$ + $CellContext`fneg1neg1pos3$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({10} 1\)]\)", ($CellContext`fpos10pos1$$ + \
$CellContext`fneg10pos1$$ + $CellContext`f0pos1pos1$$ + \
$CellContext`f0neg1pos1$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({11} 1\)]\)", \
($CellContext`fpos1pos1pos1$$ + $CellContext`fpos1neg1pos1$$ + \
$CellContext`fneg1pos1pos1$$ + $CellContext`fneg1neg1pos1$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({31} 1\)]\)", \
($CellContext`fpos3pos1pos1$$ + $CellContext`fpos3neg1pos1$$ + \
$CellContext`fneg3pos1pos1$$ + $CellContext`fneg3neg1pos1$$ + \
$CellContext`fpos1pos3pos1$$ + $CellContext`fpos1neg3pos1$$ + \
$CellContext`fneg1pos3pos1$$ + $CellContext`fneg1neg3pos1$$)/8}, {
       "\!\(\*SubscriptBox[\(f\), \({51} 1\)]\)", \
($CellContext`fpos5pos1pos1$$ + $CellContext`fpos5neg1pos1$$ + \
$CellContext`fneg5pos1pos1$$ + $CellContext`fneg5neg1pos1$$ + \
$CellContext`fpos1pos5pos1$$ + $CellContext`fpos1neg5pos1$$ + \
$CellContext`fneg1pos5pos1$$ + $CellContext`fneg1neg5pos1$$)/8}, {
       "\!\(\*SubscriptBox[\(f\), \({10} 0\)]\)", ($CellContext`fpos100$$ + \
$CellContext`fneg100$$ + $CellContext`f0pos10$$ + $CellContext`f0neg10$$)/
        4}, {"\!\(\*SubscriptBox[\(f\), \({11} 0\)]\)", \
($CellContext`fpos1pos10$$ + $CellContext`fpos1neg10$$ + \
$CellContext`fneg1pos10$$ + $CellContext`fneg1neg10$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({51} \*OverscriptBox[\(1\), \(_\)]\)]\)", \
($CellContext`fpos5pos1neg1$$ + $CellContext`fpos5neg1neg1$$ + \
$CellContext`fneg5pos1neg1$$ + $CellContext`fneg5neg1neg1$$ + \
$CellContext`fpos1pos5neg1$$ + $CellContext`fpos1neg5neg1$$ + \
$CellContext`fneg1pos5neg1$$ + $CellContext`fneg1neg5neg1$$)/8}, {
       "\!\(\*SubscriptBox[\(f\), \({31} \*OverscriptBox[\(1\), \(_\)]\)]\)", \
($CellContext`fpos3pos1neg1$$ + $CellContext`fpos3neg1neg1$$ + \
$CellContext`fneg3pos1neg1$$ + $CellContext`fneg3neg1neg1$$ + \
$CellContext`fpos1pos3neg1$$ + $CellContext`fpos1neg3neg1$$ + \
$CellContext`fneg1pos3neg1$$ + $CellContext`fneg1neg3neg1$$)/8}, {
       "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(1\), \(_\)]\)]\)", \
($CellContext`fpos1pos1neg1$$ + $CellContext`fpos1neg1neg1$$ + \
$CellContext`fneg1pos1neg1$$ + $CellContext`fneg1neg1neg1$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({10} \*OverscriptBox[\(1\), \(_\)]\)]\)", \
($CellContext`fpos10neg1$$ + $CellContext`fneg10neg1$$ + \
$CellContext`f0pos1neg1$$ + $CellContext`f0neg1neg1$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(3\), \(_\)]\)]\)", \
($CellContext`fpos1pos1neg3$$ + $CellContext`fpos1neg1neg3$$ + \
$CellContext`fneg1pos1neg3$$ + $CellContext`fneg1neg1neg3$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(5\), \(_\)]\)]\)", \
($CellContext`fpos1pos1neg5$$ + $CellContext`fpos1neg1neg5$$ + \
$CellContext`fneg1pos1neg5$$ + $CellContext`fneg1neg1neg5$$)/4}, {
       "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \(_\)])\)]\)", \
$CellContext`f00neg1$$}}; $CellContext`faceArea$$ = {}; 
    For[$CellContext`i = 1, $CellContext`i <= Length[$CellContext`faces$$], 
      Increment[$CellContext`i], 
      If[True, 
       AppendTo[$CellContext`faceArea$$, 
        ToString[
         If[Part[$CellContext`faces$$, $CellContext`i] == {}, 0, 
          ToString[
           Area[
            
            Polygon[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`vertices$$, 
               
               Part[$CellContext`faces$$, $CellContext`i]]]]]]]]]]; \
$CellContext`velocities$$ = {{
       "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \(-z\)]\)) ", 
        ToString[$CellContext`f00neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((001)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \(+z\)]\))  ", 
        ToString[$CellContext`f00pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((100)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \({100} + x\)]\)) ", 
        ToString[$CellContext`fpos100$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 00)\)]\) = \
(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - x\)]\))  ", 
        ToString[$CellContext`fneg100$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((010)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \({100} + y\)]\)) ", 
        ToString[$CellContext`f0pos10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \(_\)] 0)\)]\) \
= (1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - y\)]\))  ", 
        ToString[$CellContext`f0neg10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\)) ", 
        ToString[$CellContext`fpos1pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(+x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos1pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+y\)]\))  ", 
        ToString[$CellContext`f0pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+x\)]\))  ", 
        ToString[$CellContext`fpos10pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(+x\), \(+y\))\)]\)) ", 
        ToString[$CellContext`fpos1pos10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\))  ", 
        ToString[$CellContext`f0neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+x\)]\))  ", 
        ToString[$CellContext`fpos10neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 0)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(+x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+y\)]\))  ", 
        ToString[$CellContext`f0pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  ", 
        ToString[$CellContext`fneg10pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ \
0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\))  ", 
        ToString[$CellContext`f0neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  ", 
        ToString[$CellContext`fneg10neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \
\(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg10$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((113)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos1pos1pos3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((131)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", 
        ToString[$CellContext`fpos1pos3pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((311)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos3pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos1pos1neg3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] 1)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) y)\)]\))  ", 
        ToString[$CellContext`fpos1neg3pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] 11)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg3pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1neg3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) \
y)\)]\))  ", 
        ToString[$CellContext`fpos1neg3neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1neg3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) \
y)\)]\))  ", 
        ToString[$CellContext`fneg1neg3pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\
\))\)]\))  ", 
        ToString[$CellContext`fneg3pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\
\))\)]\))  ", 
        ToString[$CellContext`fneg3neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 3)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1pos3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", 
        ToString[$CellContext`fpos1pos3neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 13)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1pos3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 31)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) y)\)]\))  ", 
        ToString[$CellContext`fneg1pos3pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos3pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos3neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 3)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1pos3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 3 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) \
y)\)]\))  ", 
        ToString[$CellContext`fneg1pos3neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\
\))\)]\))  ", 
        ToString[$CellContext`fpos3neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1neg3$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) y)\)]\))  ", 
        ToString[$CellContext`fneg1neg3neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\))\)]\))  ", 
        ToString[$CellContext`fneg3neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((115)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos1pos1pos5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((151)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
        ToString[$CellContext`fpos1pos5pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((511)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos5pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos1pos1neg5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] 1)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) y)\)]\))  ", 
        ToString[$CellContext`fpos1neg5pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] 11)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg5pos1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1neg5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) \
y)\)]\))  ", 
        ToString[$CellContext`fpos1neg5neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1neg5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) \
y)\)]\))  ", 
        ToString[$CellContext`fneg1neg5pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\
\))\)]\))  ", 
        ToString[$CellContext`fneg5pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\
\))\)]\))  ", 
        ToString[$CellContext`fneg5neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 5)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos1neg1pos5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
        ToString[$CellContext`fpos1pos5neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 15)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(+y\))\)]\))  ", 
        ToString[$CellContext`fneg1pos1pos5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 51)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) y)\)]\))  ", 
        ToString[$CellContext`fneg1pos5pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
        ToString[$CellContext`fpos5pos1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) \
= \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\))\)]\))  ", 
        ToString[$CellContext`fpos5neg1pos1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 5)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1pos5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 5 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) \
y)\)]\))  ", 
        ToString[$CellContext`fneg1pos5neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\
\))\)]\))  ", 
        ToString[$CellContext`fpos5neg1neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-y\))\)]\))  ", 
        ToString[$CellContext`fneg1neg1neg5$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) y)\)]\))  ", 
        ToString[$CellContext`fneg1neg5neg1$$]}, {
       "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\))\)]\))  ", 
        ToString[$CellContext`fneg5neg1neg1$$]}}; $CellContext`cutFactors$$ = \
{{"", "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
        "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
        "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
        "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
        "\!\(\*SubscriptBox[\(L\), \({111}\)]\)", 
        "\!\(\*SubscriptBox[\(L\), \({11 \*OverscriptBox[\(1\), \
\(_\)]}\)]\)"}, {"(1 0 0)", 
        Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
         Part[$CellContext`vertices$$, All, 1]], 
        Max[
         Part[
          
          Select[($CellContext`l0$$/(
            2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 1] == 
           Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 1]]& ], All, 3]], "(1 1 0)", 
        Max[
         Part[$CellContext`rotatedVertices2D$$, All, 2]], 
        Mean[
         Part[
          Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Max[
             Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 3]], 
        "(1 1 1)", 
        If[Part[$CellContext`faces$$, 7] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 7]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`vertices$$, 
            Flatten[
             Position[$CellContext`rotatedVertices3D$$, 
              Part[
               Select[$CellContext`rotatedVertices3D$$, And[Part[#, 2] == Max[
                   Part[$CellContext`rotatedVertices2D$$, All, 2]], 
                 Part[#, 3] == Max[
                   Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 
                    3]]]& ], 1]]]]]], 
        If[Part[$CellContext`calcFaces$$, 11] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 11]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`calcVertices$$, 
            Flatten[
             Position[$CellContext`CalcrotatedVertices3D$$, 
              Part[
               
               Select[$CellContext`CalcrotatedVertices3D$$, And[
                Part[#, 2] == Max[
                   Part[$CellContext`CalcrotatedVertices2D$$, All, 2]], 
                 Part[#, 3] == Min[
                   Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 2] == 
                    Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {
       "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 0 0)", 
        Abs[
         Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
          Part[$CellContext`vertices$$, All, 1]]], 
        Max[
         Part[
          
          Select[($CellContext`l0$$/(
            2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 1] == 
           Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 1]]& ], All, 3]], 
        "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 0)", 
        Abs[
         Min[
          Part[$CellContext`rotatedVertices2D$$, All, 1]]], 
        Mean[
         Part[
          Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Min[
             Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 3]], 
        "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 1)", 
        If[Part[$CellContext`faces$$, 8] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 8]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`vertices$$, 
            Flatten[
             Position[$CellContext`rotatedVertices3D$$, 
              Part[
               Select[$CellContext`rotatedVertices3D$$, And[Part[#, 1] == Min[
                   Part[$CellContext`rotatedVertices2D$$, All, 1]], 
                 Part[#, 3] == Max[
                   Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 
                    3]]]& ], 1]]]]]], 
        If[Part[$CellContext`calcFaces$$, 12] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 12]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`calcVertices$$, 
            Flatten[
             Position[$CellContext`CalcrotatedVertices3D$$, 
              Part[
               
               Select[$CellContext`CalcrotatedVertices3D$$, And[
                Part[#, 1] == Min[
                   Part[$CellContext`CalcrotatedVertices2D$$, All, 1]], 
                 Part[#, 3] == Min[
                   Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 1] == 
                    Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {"(0 1 0)", 
        Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
         Part[$CellContext`vertices$$, All, 2]], 
        Max[
         Part[
          
          Select[($CellContext`l0$$/(
            2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 2] == 
           Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 2]]& ], All, 3]], 
        "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 
        Max[
         Part[$CellContext`rotatedVertices2D$$, All, 1]], 
        Mean[
         Part[
          Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Max[
             Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 3]], 
        "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 1)", 
        If[Part[$CellContext`faces$$, 9] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 9]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`vertices$$, 
            Flatten[
             Position[$CellContext`rotatedVertices3D$$, 
              Part[
               Select[$CellContext`rotatedVertices3D$$, And[Part[#, 1] == Max[
                   Part[$CellContext`rotatedVertices2D$$, All, 1]], 
                 Part[#, 3] == Max[
                   Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 
                    3]]]& ], 1]]]]]], 
        If[Part[$CellContext`calcFaces$$, 13] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 13]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`calcVertices$$, 
            Flatten[
             Position[$CellContext`CalcrotatedVertices3D$$, 
              Part[
               
               Select[$CellContext`CalcrotatedVertices3D$$, And[
                Part[#, 1] == Max[
                   Part[$CellContext`CalcrotatedVertices2D$$, All, 1]], 
                 Part[#, 3] == Min[
                   Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 1] == 
                    Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {
       "(0 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 
        Abs[
         Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
          Part[$CellContext`vertices$$, All, 2]]], 
        Max[
         Part[
          
          Select[($CellContext`l0$$/(
            2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 2] == 
           Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 2]]& ], All, 3]], 
        "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 0)", 
        Abs[
         Min[
          Part[$CellContext`rotatedVertices2D$$, All, 2]]], 
        Mean[
         Part[
          Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Min[
             Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 3]], 
        "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 1)", 
        If[Part[$CellContext`faces$$, 10] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 10]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`vertices$$, 
            Flatten[
             Position[$CellContext`rotatedVertices3D$$, 
              Part[
               Select[$CellContext`rotatedVertices3D$$, And[Part[#, 2] == Min[
                   Part[$CellContext`rotatedVertices2D$$, All, 2]], 
                 Part[#, 3] == Max[
                   Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 
                    3]]]& ], 1]]]]]], 
        If[Part[$CellContext`calcFaces$$, 14] != {}, 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`pts$$, 14]], 
         Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`calcVertices$$, 
            Flatten[
             Position[$CellContext`CalcrotatedVertices3D$$, 
              Part[
               
               Select[$CellContext`CalcrotatedVertices3D$$, And[
                Part[#, 2] == Min[
                   Part[$CellContext`CalcrotatedVertices2D$$, All, 2]], 
                 Part[#, 3] == Min[
                   Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 2] == 
                    Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]]& ], 
                    All, 3]]]& ], 1]]]]]]}}; $CellContext`type$$ = StringJoin[
       Map["(" <> StringJoin[
          Map[ToString, #]] <> ")"& , 
        DeleteDuplicates[
         Map[Sort[#, Greater]& , 
          Map[Abs, 
           Map[Part[
             Nearest[$CellContext`normals$$, #], 1]& , 
            Extract[$CellContext`allNormals$$, 
             Rest[
              Position[$CellContext`faces$$, 
               Except[{}], 1]]]]]]]]]; $CellContext`info$$ = 
     ToString[$CellContext`f$$] <> " Faces, " <> ToString[$CellContext`e$$] <> 
      " Edges, " <> ToString[$CellContext`v$$] <> " Vertices."; 
    Null], $CellContext`calcCutOn$$ = Hold[
   ReleaseHold[$CellContext`calcCutOff$$]; 
    Quiet[$CellContext`velocityPlot$$ = 
       Plot[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 
         10^(-3), {$CellContext`x, 0, $CellContext`t$$}, 
         AxesLabel -> {"time (hr)", "Growth Velocity (mm/hr)"}]; 
      Null]; $CellContext`normals1$$ = 
     Append[$CellContext`allNormals$$, $CellContext`n$$]; $CellContext`p1$$ = \
$CellContext`polyhedron[$CellContext`normals1$$, 
       Append[
        $CellContext`pts1[
        False, $CellContext`L$$, $CellContext`t$$, \
$CellContext`allNormals$$], $CellContext`cutPosition$$ 
        2 $CellContext`L$$ $CellContext`n$$]]; $CellContext`vertices1$$ = If[
        Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
        1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) 
      Map[$CellContext`verticeTransform2$$[
         $CellContext`verticeTransform1$$[#]]& , 
        $CellContext`p1$$[
        "vertices"]]; $CellContext`faces1$$ = $CellContext`p1$$[
      "faces"]; $CellContext`v1$$ = 
     Length[$CellContext`vertices1$$]; $CellContext`f1$$ = Count[
       $CellContext`p1$$["faces"], 
       Except[{}]]; $CellContext`e1$$ = $CellContext`v1$$ + $CellContext`f1$$ - 
      2; $CellContext`type$$ = StringJoin[
       Map["(" <> StringJoin[
          Map[ToString, #]] <> ")"& , 
        DeleteDuplicates[
         Map[Sort[#, Greater]& , 
          Map[Abs, 
           Map[Part[
             Nearest[$CellContext`normals$$, #], 1]& , 
            Extract[$CellContext`allNormals$$, 
             Rest[
              Position[$CellContext`faces$$, 
               Except[{}], 1]]]]]]]]]; $CellContext`info$$ = 
     ToString[$CellContext`f1$$] <> " Faces, " <> ToString[$CellContext`e1$$] <> 
      " Edges, " <> ToString[$CellContext`v1$$] <> 
      " Vertices."; $CellContext`polyGraphics$$ = Graphics3D[{
        Specularity[0.5, 6], 
        GraphicsComplex[$CellContext`vertices1$$, {
          Dynamic[
           Opacity[$CellContext`opacity$$]], 
          Dynamic[
           Table[
            If[Part[$CellContext`faces1$$, $CellContext`i] != {}, {
              Block[{$CellContext`k = Total[
                  Map[Abs, 
                   Part[$CellContext`normals1$$, $CellContext`i]]]}, 
               Switch[
                Part[
                 Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
                Darker[
                 GrayLevel[0.7], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 1]]]], 2, 
                Darker[
                 Lighter[Magenta, 0.4], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 2]]]], 3, 
                Darker[
                 Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 3]]]], 5, 
                Darker[Blue, 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 5]]]], 7, 
                Darker[Yellow, 0.5 Abs[
                   Sign[
                    Chop[$CellContext`k - 7]]]]]], {
               EdgeForm[
                Thickness[Medium]], 
               Polygon[
                
                Part[$CellContext`faces1$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
             Length[
              
              If[$CellContext`drawCutPlane$$, $CellContext`normals1$$, \
$CellContext`allNormals$$]]}]], 
          PointSize[0.015], Red, 
          Opacity[1], 
          Dynamic[
           If[$CellContext`hideVertices$$, {}, 
            Point[
             Range[$CellContext`v$$]]]]}]}, Axes -> True, 
       AxesLabel -> {"x", "y", "z"}]; 
    ReleaseHold[$CellContext`calcSection$$]], $CellContext`printOn$$ = 
   False, $CellContext`exportCurrentState$$ = 
   "1:eJxTTMoPSotjYGAoZgESPpnFJZmMQEbR/\
rJtk7akLbMvZgXy3BJzilMRLLAKsPqQotLUYmGQuGtCQU5iXqpzRn5mcqqKiqGhQZoXsqlpzMg8T5A\
JBlCSCUjqGuJRACKxyRsiq0KThxiKRwGS0XjkkY3B6QJDrC5E0opdAUQGWRl2E/\
CoQHYD1mBEcQTOgDZEtQqvMwjEFiF3EopNIiMDnwWEvUkoPRAKSuyewIhwvL4gbAcRkUFMujTGKW+\
MMyiNiYpLqDOwWwCRwh1QhK1A9ipeO4hM+ehmoJhP2KG4bTEmnDKRFOCLD8I+\
wWYCsuEEoxRn7sDrC8xkh9cRhC0htqTBH2lExAme0gBBmuKUN8UZoKak5BHsFkCkcAc4YSuQPYnXDi\
LzCLoZKOYTdihuW0zxpS6MPIIvPojLIzg8QlyU4kwzeH2BmUfwOoKwJcTmEfyRRkScYFMCbuRlMsAI\
bO3AolkzQWCnfSY/SFkKkCjSdZZ5/\
chMyj4zAMSDKOB0KDp7BgQYHDJZUEwlhmDEJFCblthUIIgiBjB4YJ8J8iVuggGv7CiBTqDGATSUP9i\
TxmCExk2RnPEE1+WVv5AYsmDGJ2wicAYDFBTV6bnYTpP5ao+Fcca6Pm3egm9kMZ5hY0xt/\
WzIvvw1Nsa9spbtdZXfsTHUMkRtv3l/JpGBx0BK7HqMjVE7U3RT5/\
e32Bgn7lp9CFT5io2BGSnEMPAYSJ5dai4HYkwWvcDCQOuGMjGgF7ew7uGozKjMqMyozKjMqMyoDA1l\
kAaSGRiQexb4OwLFAgzgcebk0pIox4rMYvAgM5JgJDbBCLggpI+CzXBNDmALcppzd87z3x/ti27/\
rMva80XGAclZoI4NuD9DWscFP8FKZfNABLS/ddMe0TP7DwSZoGAHAODOCeg=", \
$CellContext`exportInitialState$$ = 
   "1:eJxTTMoPShNhYGAoZgESPpnFJZmMMF5IUWlqmheGHE6iiAEMHthnMoGEcBIMeGVHCXQCNQ7S\
mJB5nqCAN4CQozKjMqMyozKjMqMyozK0lClmBZJuiTnFqQhWGjOy6kyQOkhLB0QUzZoJAjvtM1NAPF\
1nmdePzKTsEbozA0Di+8u2TdqStsweqpzToejsGRBgcMgEGQwxFJUAAOmAT5w=", \
$CellContext`stateString$$, $CellContext`dsCurrent$$ = {
   0, 0.043752329739829225` $CellContext`param1[{0, 0, 1}, 1., False, 3.2, 
      2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.043752329739829225` $CellContext`param1[{1, 0, 0}, 1., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.043752329739829225` $CellContext`param1[{-1, 0, 0}, 1., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.043752329739829225` $CellContext`param1[{0, 1, 0}, 1., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.043752329739829225` $CellContext`param1[{0, -1, 0}, 1., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{1, 1, 1}, 0.8660254037844388, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{-1, 1, 1}, 2.8660254037844393`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{1, -1, 1}, 2.8660254037844393`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{-1, -1, 1}, 2., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{1, 1, -1}, 2.8660254037844393`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{-1, 1, -1}, 2., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{1, -1, -1}, 2., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.07578125805889101 $CellContext`param1[{-1, -1, -1}, 0., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{0, 1, 1}, 1.8660254037844388`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{1, 0, 1}, 1.8660254037844388`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{1, 1, 0}, 1.8660254037844388`, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{0, -1, 1}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{1, 0, -1}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{1, -1, 0}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{0, 1, -1}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{-1, 0, 1}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{-1, 1, 0}, 2., False, 3.2, 2.1, 4,
       1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{0, -1, -1}, 1., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{-1, 0, -1}, 1., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.0618751381034862 $CellContext`param1[{-1, -1, 0}, 1., False, 3.2, 2.1, 
      4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, 1, 3}, 2.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, 3, 1}, 2.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{3, 1, 1}, 2.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, 1, -3}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, -3, 1}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-3, 1, 1}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, -1, -3}, 4., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, -3, -1}, 4., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, 1, -3}, 4., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, -3, 1}, 4., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-3, 1, -1}, 4., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-3, -1, 1}, 4., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, -1, 3}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{1, 3, -1}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, 1, 3}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, 3, 1}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{3, 1, -1}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{3, -1, 1}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, -1, 3}, 4., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, 3, -1}, 4., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{3, -1, -1}, 4., False, 3.2, 2.1,
       4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, -1, -3}, 2., False, 3.2, 
      2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-1, -3, -1}, 2., False, 3.2, 
      2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.14511006145092142` $CellContext`param1[{-3, -1, -1}, 2., False, 3.2, 
      2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, 1, 5}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, 5, 1}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{5, 1, 1}, 4.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, 1, -5}, 6.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, -5, 1}, 6.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-5, 1, 1}, 6.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, -1, -5}, 6.000000000000001, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, -5, -1}, 6.000000000000001, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, 1, -5}, 6.000000000000001, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, -5, 1}, 6.000000000000001, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-5, 1, -1}, 6.000000000000001, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-5, -1, 1}, 6.000000000000001, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, -1, 5}, 6.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{1, 5, -1}, 6.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, 1, 5}, 6.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, 5, 1}, 6.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{5, 1, -1}, 6.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{5, -1, 1}, 6.866025403784439, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, -1, 5}, 6.000000000000001, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, 5, -1}, 6.000000000000001, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{5, -1, -1}, 6.000000000000001, 
      False, 3.2, 2.1, 4, 1, 1, 1, 1, 11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, -1, -5}, 
      3.9999999999999996`, False, 3.2, 2.1, 4, 1, 1, 1, 1, 
      11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-1, -5, -1}, 
      3.9999999999999996`, False, 3.2, 2.1, 4, 1, 1, 1, 1, 
      11.427962875879341`, 80], 
    0.22734377417667304` $CellContext`param1[{-5, -1, -1}, 
      3.9999999999999996`, False, 3.2, 2.1, 4, 1, 1, 1, 1, 
      11.427962875879341`, 80]}, $CellContext`faceArea$$ = {
   "0", "0.214502", "0.357566", "0", "0", "0", "16.8091", "4.84282", 
    "5.24317", "7.46805", "4.91298", "7.92529", "7.65785", "15.6606", 
    "0.614955", "0", "0.418052", "0", "0", "0.635537", "0", "0", "0.818244", 
    "0", "0", "0", "0.16171", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
    "0", "0", "0.107514", "0", "0.128892", "0", "0.050239", "0.136629", "0", 
    "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
    "0"}, $CellContext`volume$$ = 43.737702416722, $CellContext`showArea$$ = 
   False, $CellContext`hideVertices$$ = True, $CellContext`maxHeight$$ = 
   2.2321430413460805`, $CellContext`intersectionHeight$$, \
$CellContext`largestlength$$ = 
   5.654504908596643, $CellContext`largestwidth$$ = 
   5.617222932013985, $CellContext`bottomWidth$$ = 
   5.227817362336337, $CellContext`bottomLength$$ = 
   5.227817362336336, $CellContext`topWidth$$ = 
   4.859785235982067, $CellContext`topLength$$ = 
   5.093368571422268, $CellContext`growDown$$ = 
   False, $CellContext`showVelocity$$ = 
   False, $CellContext`velocities$$ = {{
    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \(_\)])\)]\) = (1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\), \(-z\)]\)) ", "1"}, {
    "\!\(\*SubscriptBox[\(f\), \((001)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \(+z\)]\))  ", "0.55"}, {
    "\!\(\*SubscriptBox[\(f\), \((100)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \({100} + x\)]\)) ", "0.68"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 00)\)]\) = (1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - x\)]\))  ", "1"}, {
    "\!\(\*SubscriptBox[\(f\), \((010)\)]\) = (1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \({100} + y\)]\)) ", "1"}, {
    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \(_\)] 0)\)]\) = \
(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - y\)]\))  ", "1"}, {
    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\)) ", "0.494872"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(-x\), \(+y\))\)]\))  ", "0.247436"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(+x\), \(-y\))\)]\))  ", "0.197949"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(-y\))\)]\))  ", "0.0494872"}, {
    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\))  ", 
     "0.45"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(+y\))\)]\))  ", "0.247436"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \
\(-y\))\)]\))  ", "0.197949"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(-y\))\)]\))  ", 
     "0.0494872"}, {
    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+y\)]\))  ", "0.435578"}, {
    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+x\)]\))  ", "0.435578"}, {
    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(+x\), \(+y\))\)]\)) ", "0.565685"}, {
    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(-y\)]\))  ", "0.435578"}, {
    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+x\)]\))  ", "0.565685"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 0)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(+x\), \(-y\))\)]\))  ", "0.30547"}, {
    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+y\)]\))  ", "0.565685"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(-x\)]\))  ", "0.435578"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ 0)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(-x\), \(+y\))\)]\))  ", "0.362039"}, {
    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\))  ", "0.565685"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  ", "0.565685"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \
\(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \
\(-y\))\)]\))  ", "0.565685"}, {
    "\!\(\*SubscriptBox[\(f\), \((113)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", "0.582"}, {
    "\!\(\*SubscriptBox[\(f\), \((131)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((311)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", "0.7"}, {
    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) y)\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] 11)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\))\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \
\(-y\))\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) \
y)\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(+y\))\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) \
y)\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\
\))\)]\))  ", "0.5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\
\))\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 3)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-y\))\)]\))  ", "0.41"}, {
    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 13)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+y\))\)]\))  ", "0.43"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 31)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) y)\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", "0.63"}, {
    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\))\)]\))  ", "0.48"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 3)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(-y\))\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 3 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) \
y)\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\
\))\)]\))  ", "0.7"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-y\))\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) y)\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\))\)]\))  ", "0.737028"}, {
    "\!\(\*SubscriptBox[\(f\), \((115)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((151)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((511)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) y)\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] 11)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \
\(-y\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) \
y)\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(+y\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) \
y)\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\
\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\
\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 5)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(-y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 15)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 51)\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) y)\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \(_\)])\)]\) = \!\
\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 5)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(-y\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 5 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) \
y)\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\
\))\)]\))  ", "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) y)\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}, {
    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\))\)]\))  ", 
     "3 Sqrt[3]\n---------\n    5"}}, $CellContext`areaAndVelocityString$$, \
$CellContext`showAreaAndVelocities$$ = 
   False, $CellContext`polygons2D$$, $CellContext`cutZAxis$$, \
$CellContext`cutYAxis$$, $CellContext`cutXAxis$$, $CellContext`timeStep$$ = 
   15, $CellContext`timeStepLines$$, $CellContext`timeStepLines3D$$ = {}, \
$CellContext`timeStepLines2D$$, $CellContext`timingTest$$, $CellContext`\
\[CapitalDelta]\[Beta]posxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negyposx$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Beta]negynegx$$ = 
   0, $CellContext`Llist$$, $CellContext`velocityA$$ = 
   2089, $CellContext`velocityB$$ = 1.124, $CellContext`velocityC$$ = 
   7.239, $CellContext`velocityPlot$$ = Graphics[
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Line[CompressedData["
1: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
dVGHTULbvPHCx48Esj3WKKSwSPgHjQLuXw==
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 80}, {0.013758771123132701`, 
          0.12537599056966447`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0.013758771123132733`}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"], {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.013758771123132733`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
     Axes -> {True, True}, AxesLabel -> {
       HoldForm["time (hr)"], 
       HoldForm["Growth Velocity (mm/hr)"]}, 
     AxesOrigin -> {0, 0.013758771123132701`}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 80}, {0.013758771123132701`, 0.12537599056966447`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, 
     Ticks -> {Automatic, Automatic}}], $CellContext`ShowVelocityPlot$$ = 
   False, $CellContext`textX$$, $CellContext`textY$$, \
$CellContext`constantVelocity$$ = 
   False, $CellContext`constantVelocityValue$$ = 
   100, $CellContext`projX$$, $CellContext`projY$$, \
$CellContext`timePolygon2D$$ = {}, $CellContext`timePolygon3D$$ = {}, \
$CellContext`timePolygonColor$$, $CellContext`exportShape$$ = 
   Hold[$CellContext`ExportCrystal$$ = Graphics3D[{
        Specularity[0.5, 6], 
        GraphicsComplex[If[
           Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
           1, $CellContext`l0$$] 
         If[$CellContext`infty$$, 1, 1/(
           2 $CellContext`L$$)] $CellContext`vertices$$, {
          Opacity[
           Dynamic[$CellContext`opacity$$]], 
          Table[
           If[Part[$CellContext`faces$$, $CellContext`i] != {}, {
             Block[{$CellContext`k = Total[
                 Map[Abs, 
                  Part[$CellContext`allNormals$$, $CellContext`i]]]}, 
              Switch[
               Part[
                Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
               Darker[
                GrayLevel[0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 1]]]], 2, 
               Darker[
                Lighter[Magenta, 0.4], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 2]]]], 3, 
               Darker[
                Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 3]]]], 5, 
               Darker[Blue, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 5]]]], 7, 
               Darker[Yellow, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 7]]]]]], {
              EdgeForm[
               Thickness[Medium]], 
              Polygon[
               
               Part[$CellContext`faces$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
            Length[$CellContext`allNormals$$]}], 
          PointSize[0.015], Red, 
          Opacity[1], 
          Dynamic[
           If[$CellContext`hideVertices$$, {}, 
            Point[
             Range[$CellContext`v$$]]]]}]}, Axes -> True, 
       AxesLabel -> {"x", "y", "z"}]; 
    Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
      ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
      ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
      ToString[$CellContext`\[Gamma]1$$] <> " " <> $CellContext`cadFileName$$ <> 
      ".stl", $CellContext`ExportCrystal$$]; 
    Null], $CellContext`parameterConfigFileName$$, \
$CellContext`cadFileName$$, $CellContext`exportConfig$$ = Hold[
    Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
     ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
     ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
     ToString[$CellContext`\[Gamma]1$$] <> 
     " " <> $CellContext`parameterConfigFileName$$ <> 
     ".txt", $CellContext`exportCurrentState$$]], \
$CellContext`exportCutFileName$$, $CellContext`saveDirectory$$ = 
   "C:\\Users\\alims\\OneDrive\\Documents", $CellContext`ExportCrystal$$, \
$CellContext`exportCutImage$$ = Hold[
    Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
     ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
     ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
     ToString[$CellContext`\[Gamma]1$$] <> 
     " " <> $CellContext`exportCutFileName$$ <> ".jpeg", 
     Graphics[{$CellContext`polygons2D$$, $CellContext`timePolygon2D$$, 
       Thickness[0.002], $CellContext`timeStepLines2D$$, 
       Text["Time of first appearance = " <> ToString[
          NumberForm[
           If[Min[$CellContext`timeStepLines$$] == $CellContext`tMin$$, 0, 
            Min[$CellContext`timeStepLines$$]], {10, 2}]] <> 
        " hrs\nTime of growth completion = " <> ToString[
          NumberForm[$CellContext`t$$, {10, 2}]] <> " hrs\nTime Intervals = " <> 
        ToString[
          NumberForm[$CellContext`timeStep$$, {10, 2}]] <> " hrs/step" <> 
        "\n\[Alpha] = " <> ToString[$CellContext`\[Alpha]1$$] <> 
        ", \[Beta] = " <> ToString[$CellContext`\[Beta]1$$] <> 
        "\n\[Gamma] = " <> ToString[$CellContext`\[Gamma]1$$] <> 
        "\nCut Plane: " <> StringReplace[
          
          ToString[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}], {
          "-1" -> "\!\(\*OverscriptBox[\(1\), \(_\)]\)", "{" -> "(", "}" -> 
           ")", "," -> " "}] <> "\nCut Distance " <> 
        ToString[$CellContext`cutPosition$$], {$CellContext`textX$$, \
$CellContext`textY$$ + 1}]}, Axes -> True, 
      AxesLabel -> {"(mm)", "(mm)"}]]], $CellContext`cutFactors$$ = {{
    "", "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
     "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
     "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
     "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
     "\!\(\*SubscriptBox[\(L\), \({111}\)]\)", 
     "\!\(\*SubscriptBox[\(L\), \({11 \*OverscriptBox[\(1\), \(_\)]}\)]\)"}, {
    "(1 0 0)", 3.4869441906016725`, -0.17321430413460825`, "(1 1 0)", 
     3.1688277001350222`, 2.158249806545498, "(1 1 1)", 2.23214304134608, 
     3.229784409013104}, {
    "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 0 0)", 2.133145688527926, 
     2.0497025989261957`, "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 0)", 
     2.6356851961410346`, -0.17321430413460787`, 
     "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 1)", 2.520772059052292, 
     2.0207720590522915`}, {
    "(0 1 0)", 2.681416390732492, 2.23214304134608, 
     "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 2.9815377358729505`, 
     1.9545372980846725`, "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 1)", 
     2.347557754917684, 1.8475577549176836`}, {
    "(0 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 2.483415948801337, 
     1.9711262030903567`, 
     "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 0)", 2.48567720846162, -0.17321430413460795`, 
     "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 1)", 1.3279148425138594`, 
     0.173214304134608}}, $CellContext`rotatedVertices2D$$ = CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAATim2QMdU8b/KbpysuO/+v+MHg+ib
ZQDApRCZOJDy7r/K9++2VU7wv0I91iJH6f2/P94/R8bE/7+arQwlreXsv6aK
59xexwZAIvM2MOla5z81JLhmalsDQK2gZrWFueu/ONRjXX6+B0Bc70SSC1Lm
P8htNOeJUgRAbqRYU2PC7L9CUeR2b73kvyWDExR48/6/q+ju8RarAEBmx0XE
aT3zv1iaalyXXd0/Xht8+3tFCUAAbIW5oYbwv98QskPlEgZATjQoPwTU8b+4
rOAANGwFQKx4CTh4GQDA9KSKKwqT5b/5YsmY9agGQMAuADnlIOk/1hpN1Oku
7L/LLBz0LvT9v8XNhRiuz/+/5th5i+t36L8U0b8e4hUFwNIG4PCZX+c/5LM3
KkoiAsAlEPqYDbDkvzSYFXON1gPAVV2+WlH/9D/af5YgPU31v/KGKZCXrwNA
K8RbNa0CAcBEUYrFmTHgv2HtuGO8kuI/twp2u6riA8CFdeDDEVjqv6TKSJ1k
4ADASHO+u8sI8z8pToPNV5QCwGJNV90zGAJA2HQWnBMB9L9JadS5XYMBQMOF
Ty3n7wVAfGSF81wY4z8Y6VVWwlkJQGe/BcqvvARApS8eHZW2AkDm6dp0MNoH
QMJii4UMWew/sjCj8zu9BkATRlB+dortP7bXuttm4gHAT95ziZ7n+D88Sk8+
M2P2P6/iOgwk5wDA27ifnmfFA0DmnYUZrKbwv8ZfFpg=
   "], $CellContext`rotatedVertices3D$$ = CompressedData["
1:eJw9z3lIk3EcBvB3m5tpBpYHs8xsKmimGWppab8fpmmCZ5m3ksdE8SA0UzQj
xgSVQMzyyGmWSuWWYrTm+XvxbiJSLBPPNd3m8ppuduvyj+394/nnw8PD93s6
KSc8lYxhGOMglIMEO/Dh2M1tJMxu4Aq29lFoqLxQmIrBZX3W6rNUDG81rvOo
3NkkXPhzix8RrEQ+3tMMf8Ue+vKQR/HKJEGwCPxHhzWonmdkx5OuE95WLp9P
GKNBhuqCiyJGDpj11VNZcyTobitgZsRSIO858z27ew2lad1DlBxfMqAP47Z8
qw6HywDD4AmHcweD41lu8rJwPZjdEnUjeXAd2WjdJ2wlP6d/BdmxTEwLVPtI
t9++urlt3o5B5pjfcLq3ivCo+oy4mvgFkHCi+G+RnwHUOZbJ7m4uVaIl466r
0mM0woPd7IGeaBsJuGLMLZNKOLfAwKPAAsPVLeWOho+lxP7vpI+1u69oEHfG
PKXWCuLf6eNBIoXzOpo4a6l2Vu8R/ZFJNv3tlAbJZgor1u6tEm76CVlJzKj4
Z5pYWZcoB42VPVKJ4yhaeXfxTCCDjNsZ/6k90rmCbELJsRNFe8Ct1iz30TQF
j4gfiAnTqMELbX/2wVNr76BdtFPqUFnTQYEsfc+aU3sYdByOdeeRSbhvWPlI
3Xkx0vntDUFyX5UEfDDM730joeDN2h32XfHQ0ajvqEUYwEkRY3iZsVO4p+U+
CMgd6J04pAIOwazJyGoy3qrtJwVFLrjSyXAmz7zBhKRGS//sm3vLNOB6uqg7
nkWCQ+wQJ/kWFXK1/eIUtiqOvgzoiohbg9EGsKnzfiHdlwTTEFXY0acHW89Z
nXzCJxN9mWI2z2VWHw4mVbCNotdBb+I32bifBnS5vFRd7qdBk2uhJfnlG0C3
w//aM8eUkPCQxdyyRvkvoPvLKzDkimvyD9AhuWRkK8fw11qfEzQ1po1QoIzD
tuC2KdG89v7/W2yfog==
   "], $CellContext`calcVertices$$ = CompressedData["
1:eJxTTMoPSmViYGBQAmJmIJ7mZOSaecfAgSFeq2r5dJYDz56drTm+LcDB49Da
uHMvRA54pM94u7zZ2AEmbnNCpPlgqrEDQ0bP0STLxfth4g7h7udutbEe+PCm
SpuB1wyuvq4hXSwxINjh9NuPx47ctnGIniq5+cR+wwP1UPGGD8r3M00YHQ5s
eb7+7itFuPpu72cd/TGWDrPMVT/+tTOFq//tVKTU0PV1f8ODBenPbog6vPid
Y9Una+2wYLJW6TI3pgNVEdcbko/4O8TyHJ3cYRLksBgqnlHN/tboiqHDhUCW
k0/KzRyOXDsqM4c71KEiaOm5Kx5GBxo0FogWvGE+ABNfIOjzpXyTlAPDPEZJ
8RaeAxKnVz25dyzEYcLha9X8SxXh4hdm/tm1mtXaQaw27amoVYCDxcQWfjm9
YAeWDM5/d97aws3PePz8v+x8M3i4+frvOf6/MMBBARpuEhx+K2LcLB1g4hu+
ycY1rvQ6IPxEQ6h8jrnD1Nnmn2VvmzkEXZlxcPF1Lbh4Wn9wunqiP1x9ws7j
d2rXODhckFw03chWy6GhWvxIYJH8gYAEw8Zbm4MxxGPy3zdu0baFm2Ohu9vs
gJ6Jg5N0+oelnzwOTIHaCxP3cFq3xDVfCR7OFoen6fkk2MHVa3Dv+KYcrOkQ
Bw1/eUVnxutnZeHic85sWBD8ztyhybp8wx8PJ4fQNXLr3l0LOAATF9xxK41h
XYiDiMe/2k2mpgdEEw44KU5ycChrlqvhirGGq28umhnZdCHIoRwqXrR86vXP
tpYHWqDilx9tveqdYg83p78kr4uJ1/NAI9TeCdD4FYGaf0rm05FVE9wPXNBT
MJvaJuMwq7tes+1pkEO87uylf/cKwcUBcLd0og==
   "], $CellContext`downP$$ = $CellContext`result$185265, \
$CellContext`calcFaces$$ = {{}, {1, 3, 4, 2}, {5, 7, 8, 6}, {}, {}, {}, {5, 
    15, 11, 12, 13, 14, 17, 16, 9, 10, 6}, {18, 20, 21, 22, 19}, {9, 24, 23, 
    25, 26, 10}, {1, 24, 23, 18, 19, 2}, {27, 29, 30, 31, 28}, {11, 28, 27, 
    32, 12}, {7, 30, 29, 33, 34, 8}, {18, 23, 25, 33, 29, 27, 32, 20}, {13, 
    21, 22, 14}, {}, {11, 28, 31, 15}, {}, {}, {25, 33, 34, 26}, {}, {}, {12, 
    32, 20, 21, 13}, {}, {}, {}, {3, 16, 17, 
    4}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {1, 24, 9, 16, 3}, {}, {2,
     19, 22, 14, 17, 4}, {}, {5, 15, 31, 30, 7}, {6, 10, 26, 34, 
    8}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
$CellContext`CalcrotatedVertices2D$$ = CompressedData["
1:eJxTTMoPSmViYGBQAmIQ3TX7tPAC28f29TNKlxzzvGOf07owt6Puxf4GKL8V
Kl975s+T6VqP7TOh8jA+x6ONmR++fLcvsTQJz3HmcvDd02S7fhqTg25el5/p
cmaH2xonswU3/LTnmqZx7XYqp8O2+L599iXMDkdO1Z1dcpLJQahTfJ+y9Fv7
sNsVZ7WnvrD3geq/JxDtaFjK6FDg3anp0/Nv/zI5y7XhqVwONjYn87uKWQ8o
dZgEfTZngfOffbux/8Z6ZocJ+g+OP3V/t99MSp5D3vK5/aOmKak5mt/tl0P1
s+yOl96T98z+z+sJbzZHP7N/sMS0dMn61/th/CXbHigu4WI+INPxxLQ+6+1+
X2ellAMhn/Zvnb5ZSFH3ij3Mvn2FTv+eHnu83xrK727Zvt+/n9EBpv7m8r/s
0ySe2k9IZn+nHcHoIAc1D+Zf1V9OHZLbrto37A7W47zH7JCksdmEK/jxfhh/
jWBXwHVdBodDwoeWzmC7ub/O/+btnZ/+2h8o4lwxW/IvPDxCvr3jXff0mD1M
Pmm36aTNW7/bc0PDW2eVyJPd277ao4efwQSlzMunbu2vg9r3RMnxT9em23D7
M7br1Xn0MDoAALY0B/o=
   "], $CellContext`CalcrotatedVertices3D$$ = CompressedData["
1:eJxTTMoPSmViYGBQAmJmIO6afVp4ge1j+/oZpUuOed6xX1J4V2VOGrtDTuvC
3I66F/sb0MRboeprz/x5Ml3rMVw8E6oeXZzj0cbMD1++25dYmoTnOHM5/LXn
frbo5ov9vnuabNdPY3LQzevyM13O7CBQstL3i+hN+9saJ7MFN/y055qmce12
KqcDR9a71n/73u7fFt+3z76E2eHIqbqzS04yObyxPyZdNe2cvVCn+D5l6bf2
YbcrzmpPfWF/dobwip82bA4+UPPvCUQ7GpYyOux75slo8e2FfYF3p6ZPz7/9
y+Qs14ancjnI3Dvt3Dzz5X4bm5P5XcWsB5Q6TII+m7M4aFjN+JO44ZI9TPzZ
txv7b6xndmCO3bbeYssN+wn6D44/dX+330xKnkPe8rm94GGXTvYdbA6Pmqak
5mh+t1+OZj7L7njpPXnP7P+8nvBmc/Qz++DeVq4ANnaHB0tMS5esf70fXXzJ
tgeKS7iYD8h0PDGtz3q7/z8YvLf3dVZKORDyaf/W6ZuFFHWv2L9b9O9a43dW
B5g79xU6/Xt67PH+xfo8rzzjHtlbQ8W7W7bv9+9ndICJw8y5ufwv+zSJp3Bz
JiSzv9OOYHSQg9r7D2ovLJxVfzl1SG67Cg/nht3Bepz3mB2SNDabcAU/3s/2
k21Jwa6H9jDxNYJdAdd1GRxg4oeEDy2dwXZzf53/zds7P/21V16clrtgMvuB
A0WcK2ZL/oXHS+e+LbK/N77dH/LtHe+6p8fs0dUn7TadtHnrd3tuaDqJdl7T
O3v1x/06q0Se7N721R7dHFj4GExQyrx86tZ+WWj81kHd+UTJ8U/Xptv7vZcv
6hD5cRnu/oztenUePYwOMHEAEleWcQ==
   "], $CellContext`\[CapitalDelta]\[Gamma]3z$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]pos1z$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]neg1z$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]posxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]negxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]pos1z$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]neg1z$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]5z$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]neg5xposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]negxpos5y$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]posxnegy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]posxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]negxposy$$ = 
   0, $CellContext`\[CapitalDelta]\[Delta]negxnegy$$ = 
   0, $CellContext`\[Delta]1$$ = 5, $CellContext`\[CapitalDelta]100negz$$ = 
   0, $CellContext`plateThickness$$ = 0.4, $CellContext`cutLoss$$ = 
   0.1, $CellContext`beginningCutPosition$$ = -1, \
$CellContext`endCutPosition$$ = 1, $CellContext`verticeTransform1$$ = 
   TransformationFunction[{{
     2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {-2^Rational[-1, 2], 2^
      Rational[-1, 2], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
     1}}], $CellContext`verticeTransform2$$ = 
   TransformationFunction[{{
     3^Rational[-1, 2], 0, -Rational[2, 3]^Rational[1, 2], 0}, {0, 1, 0, 0}, {
     Rational[2, 3]^Rational[1, 2], 0, 3^Rational[-1, 2], 0}, {0, 0, 0, 
     1}}], $CellContext`transformAxisSystem$$ = True, $CellContext`f00neg1$$ =
    1, $CellContext`f00pos1$$ = 0.55, $CellContext`fpos100$$ = 
   0.6799999999999999, $CellContext`fneg100$$ = 1, $CellContext`f0pos10$$ = 
   1, $CellContext`f0neg10$$ = 1, $CellContext`fpos1pos1pos1$$ = 
   0.49487165930539345`, $CellContext`fneg1pos1pos1$$ = 
   0.24743582965269673`, $CellContext`fpos1neg1pos1$$ = 
   0.1979486637221574, $CellContext`fneg1neg1pos1$$ = 
   0.04948716593053933, $CellContext`fpos1pos1neg1$$ = 
   0.45, $CellContext`fneg1pos1neg1$$ = 
   0.24743582965269673`, $CellContext`fpos1neg1neg1$$ = 
   0.1979486637221574, $CellContext`fneg1neg1neg1$$ = 
   0.04948716593053933, $CellContext`f0pos1pos1$$ = 
   0.43557777721091334`, $CellContext`fpos10pos1$$ = 
   0.43557777721091334`, $CellContext`fpos1pos10$$ = 
   0.5656854249492381, $CellContext`f0neg1pos1$$ = 
   0.43557777721091334`, $CellContext`fpos10neg1$$ = 
   0.5656854249492381, $CellContext`fpos1neg10$$ = 
   0.3054701294725886, $CellContext`f0pos1neg1$$ = 
   0.5656854249492381, $CellContext`fneg10pos1$$ = 
   0.43557777721091334`, $CellContext`fneg1pos10$$ = 
   0.3620386719675124, $CellContext`f0neg1neg1$$ = 
   0.5656854249492381, $CellContext`fneg10neg1$$ = 
   0.5656854249492381, $CellContext`fneg1neg10$$ = 
   0.5656854249492381, $CellContext`fpos1pos1pos3$$ = 
   0.582, $CellContext`fpos1pos3pos1$$ = 
   0.7370277311900888, $CellContext`fpos3pos1pos1$$ = 
   0.7, $CellContext`fpos1pos1neg3$$ = 
   0.7370277311900888, $CellContext`fpos1neg3pos1$$ = 
   0.7370277311900888, $CellContext`fneg3pos1pos1$$ = 
   0.7370277311900888, $CellContext`fpos1neg1neg3$$ = 
   0.7370277311900888, $CellContext`fpos1neg3neg1$$ = 
   0.7370277311900888, $CellContext`fneg1pos1neg3$$ = 
   0.7370277311900888, $CellContext`fneg1neg3pos1$$ = 
   0.7370277311900888, $CellContext`fneg3pos1neg1$$ = 
   0.5, $CellContext`fneg3neg1pos1$$ = 
   0.7370277311900888, $CellContext`fpos1neg1pos3$$ = 
   0.41, $CellContext`fpos1pos3neg1$$ = 
   0.7370277311900888, $CellContext`fneg1pos1pos3$$ = 
   0.43, $CellContext`fneg1pos3pos1$$ = 
   0.7370277311900888, $CellContext`fpos3pos1neg1$$ = 
   0.63, $CellContext`fpos3neg1pos1$$ = 0.48, $CellContext`fneg1neg1pos3$$ = 
   0.7370277311900888, $CellContext`fneg1pos3neg1$$ = 
   0.7370277311900888, $CellContext`fpos3neg1neg1$$ = 
   0.7, $CellContext`fneg1neg1neg3$$ = 
   0.7370277311900888, $CellContext`fneg1neg3neg1$$ = 
   0.7370277311900888, $CellContext`fneg3neg1neg1$$ = 
   0.7370277311900888, $CellContext`fpos1pos1pos5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1pos5pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos5pos1pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1pos1neg5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1neg5pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg5pos1pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1neg1neg5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1neg5neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1pos1neg5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1neg5pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg5pos1neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg5neg1pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1neg1pos5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos1pos5neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1pos1pos5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1pos5pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos5pos1neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos5neg1pos1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1neg1pos5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1pos5neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fpos5neg1neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1neg1neg5$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg1neg5neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`fneg5neg1neg1$$ = Rational[3, 5] 
   3^Rational[1, 2], $CellContext`individualGrowthFactors$$ = 
   True, $CellContext`factorSelection$$ = 
   "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \(_\)])\)]\)", \
$CellContext`factorList$$ = {
   1, 0.55, 0.6799999999999999, 1, 1, 1, 0.49487165930539345`, 
    0.24743582965269673`, 0.1979486637221574, 0.04948716593053933, 0.45, 
    0.24743582965269673`, 0.1979486637221574, 0.04948716593053933, 
    0.43557777721091334`, 0.43557777721091334`, 0.5656854249492381, 
    0.43557777721091334`, 0.5656854249492381, 0.3054701294725886, 
    0.5656854249492381, 0.43557777721091334`, 0.3620386719675124, 
    0.5656854249492381, 0.5656854249492381, 0.5656854249492381, 0.582, 
    0.7370277311900888, 0.7, 0.7370277311900888, 0.7370277311900888, 
    0.7370277311900888, 0.7370277311900888, 0.7370277311900888, 
    0.7370277311900888, 0.7370277311900888, 0.5, 0.7370277311900888, 0.41, 
    0.7370277311900888, 0.43, 0.7370277311900888, 0.63, 0.48, 
    0.7370277311900888, 0.7370277311900888, 0.7, 0.7370277311900888, 
    0.7370277311900888, 0.7370277311900888, Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 3^Rational[1, 2], Rational[3, 5] 3^Rational[1, 2], 
    Rational[3, 5] 
    3^Rational[1, 2]}, $CellContext`exportIndividualParameters$$ = Hold[
    Export[$CellContext`saveDirectory$$ <> 
     "Individual Parameter Config " <> $CellContext`parameterConfigFileName$$ <> 
     ".txt", 
     Compress[{$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$}]]], $CellContext`exportPlateCuts$$, \
$CellContext`plateCutsName$$, $CellContext`averageGrowthFactors$$ = {{
    "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 0.55}, {
    "\!\(\*SubscriptBox[\(f\), \({11} 5\)]\)", Rational[3, 5] 
     3^Rational[1, 2]}, {
    "\!\(\*SubscriptBox[\(f\), \({11} 3\)]\)", 0.5397569327975222}, {
    "\!\(\*SubscriptBox[\(f\), \({10} 1\)]\)", 0.43557777721091334`}, {
    "\!\(\*SubscriptBox[\(f\), \({11} 1\)]\)", 0.24743582965269673`}, {
    "\!\(\*SubscriptBox[\(f\), \({31} 1\)]\)", 0.7002707983925666}, {
    "\!\(\*SubscriptBox[\(f\), \({51} 1\)]\)", Rational[3, 5] 
     3^Rational[1, 2]}, {
    "\!\(\*SubscriptBox[\(f\), \({10} 0\)]\)", 0.9199999999999999}, {
    "\!\(\*SubscriptBox[\(f\), \({11} 0\)]\)", 0.4497199128346443}, {
    "\!\(\*SubscriptBox[\(f\), \({51} \*OverscriptBox[\(1\), \(_\)]\)]\)", 
     Rational[3, 5] 3^Rational[1, 2]}, {
    "\!\(\*SubscriptBox[\(f\), \({31} \*OverscriptBox[\(1\), \(_\)]\)]\)", 
     0.6893923319938056}, {
    "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(1\), \(_\)]\)]\)", 
     0.23621791482634835`}, {
    "\!\(\*SubscriptBox[\(f\), \({10} \*OverscriptBox[\(1\), \(_\)]\)]\)", 
     0.5656854249492381}, {
    "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(3\), \(_\)]\)]\)", 
     0.7370277311900888}, {
    "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(5\), \(_\)]\)]\)", 
     Rational[3, 5] 3^Rational[1, 2]}, {
    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
     1}}}, 
   TagBox[GridBox[{
      {
       TemplateBox[{
         PanelBox[
          TagBox[
           GridBox[{{"\"Transform Axis System\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{$CellContext`transformAxisSystem$$, {
                   True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Draw a box with axes\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`boxed$$, True}, {
                   True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Hide vertices\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`hideVertices$$, True}, {
                   True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Show Area and Velocities\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`showAreaAndVelocities$$, 
                    True}, {True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Opacity\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`opacity$$], 
                    Dynamic[$CellContext`opacity$$], {0, 1}, Medium, Small, 
                    Automatic, True, Automatic, False, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {147.546, {5., 8.}}], DynamicUpdating -> 
                  True], DynamicModuleValues :> {}], BaselinePosition -> 
                Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`opacity$$], {0, 1}, {}]]}, {
              TagBox[
               DynamicModuleBox[{Typeset`var$$ = True}, 
                InterpretationBox[
                 StyleBox[
                  PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"Initial shape\"", StripOnInput -> False, FontSize -> 
                    Medium, FontWeight -> Bold]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"Initial shape\"", StripOnInput -> False, FontSize -> 
                    Medium, FontWeight -> Bold]}, {"", 
                    PaneBox[
                    TagBox[
                    
                    GridBox[{{
                    "\"Reference size \\!\\(\\*SubscriptBox[\\(l\\), \\(0\\)]\
\\) (mm)\"", 
                    TagBox[
                    PaneBox[
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                    Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                    Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`l0$$, ($CellContext`l0$$ = #; \
$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$))& ], 
                    
                    Dynamic[$CellContext`l0$$, ($CellContext`l0$$ = #; \
$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$))& ], {0.1, 10}, 
                    Medium, Small, 
                    Dynamic[
                    Not[$CellContext`infty$$]], True, Automatic, True, True, 
                    True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                    ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                    DynamicUpdating -> True], DynamicModuleValues :> {}], 
                    BaselinePosition -> Baseline, ImageMargins -> 0], 
                    Manipulate`InterpretManipulator[
                    
                    Dynamic[$CellContext`l0$$, ($CellContext`l0$$ = #; \
$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$))& ], {0.1, 10}, {
                    Enabled -> Dynamic[
                    Not[$CellContext`infty$$]], Appearance -> "Labeled"}]]}, {
                    "\"Initial Height (factor)\"", 
                    TagBox[
                    PaneBox[
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                    Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                    Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "Manipulator06"][
                    Dynamic[
                    Part[$CellContext`ds$$, 7], (
                    Part[$CellContext`ds$$, 7] = #; 
                    ReleaseHold[$CellContext`calcTilt$$]; Null)& ], 
                    Dynamic[
                    Part[$CellContext`ds$$, 7], (
                    Part[$CellContext`ds$$, 7] = #; 
                    ReleaseHold[$CellContext`calcTilt$$]; Null)& ], {0.01, 1},
                     Medium, Small, Automatic, False, Automatic, True, True, 
                    True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                    ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                    DynamicUpdating -> True], DynamicModuleValues :> {}], 
                    BaselinePosition -> Baseline, ImageMargins -> 0], 
                    Manipulate`InterpretManipulator[
                    Dynamic[
                    Part[$CellContext`ds$$, 7], (
                    Part[$CellContext`ds$$, 7] = #; 
                    ReleaseHold[$CellContext`calcTilt$$]; Null)& ], {
                    0.01, 1}, {
                    Appearance -> "Labeled", ContinuousAction -> False}]]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                   Dynamic[
                    TrueQ[Typeset`var$$]], Alignment -> Automatic, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                   ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                  False], 
                 OpenerView[{
                   Style["Initial shape", Bold, Medium], 
                   
                   Grid[{{"Reference size \!\(\*SubscriptBox[\(l\), \(0\)]\) \
(mm)", 
                    Manipulator[
                    
                    Dynamic[$CellContext`l0$$, ($CellContext`l0$$ = #; \
$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$))& ], {0.1, 10}, 
                    Enabled -> Dynamic[
                    Not[$CellContext`infty$$]], Appearance -> "Labeled"]}, {
                    "Initial Height (factor)", 
                    Manipulator[
                    Dynamic[
                    Part[$CellContext`ds$$, 7], (
                    Part[$CellContext`ds$$, 7] = #; 
                    ReleaseHold[$CellContext`calcTilt$$]; Null)& ], {0.01, 1},
                     Appearance -> "Labeled", ContinuousAction -> False]}}]}, 
                  True]], DynamicModuleValues :> {}], Setting[#, {0}]& ], 
              "\[SpanFromLeft]"}, {
              StyleBox[
              "\"Cut settings\"", StripOnInput -> False, FontSize -> Medium, 
               FontWeight -> Bold], ""}, {"\"Cut at time t\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{$CellContext`cutOn$$, {False, True}}, 
                  Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"cut normal \\!\\(\\*SubscriptBox[\\(n\\), \\(x\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`n1$$, ($CellContext`n1$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], 
                    
                    Dynamic[$CellContext`n1$$, ($CellContext`n1$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], {-1, 1, 1}, Medium, Small, Automatic, True, 
                    Automatic, True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`n1$$, ($CellContext`n1$$ = 
                  Round[#]; $CellContext`n$$ = 
                  Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                  Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                 Null)& ], {-1, 1, 1}, {Appearance -> "Labeled"}]]}, {
             "\"cut normal \\!\\(\\*SubscriptBox[\\(n\\), \\(y\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`n2$$, ($CellContext`n2$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], 
                    
                    Dynamic[$CellContext`n2$$, ($CellContext`n2$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], {-1, 1, 1}, Medium, Small, Automatic, True, 
                    Automatic, True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`n2$$, ($CellContext`n2$$ = 
                  Round[#]; $CellContext`n$$ = 
                  Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                  Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                 Null)& ], {-1, 1, 1}, {Appearance -> "Labeled"}]]}, {
             "\"cut normal \\!\\(\\*SubscriptBox[\\(n\\), \\(z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`n3$$, ($CellContext`n3$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], 
                    
                    Dynamic[$CellContext`n3$$, ($CellContext`n3$$ = 
                    Round[#]; $CellContext`n$$ = 
                    Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                    Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                    Null)& ], {-1, 1, 1}, Medium, Small, Automatic, True, 
                    Automatic, True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`n3$$, ($CellContext`n3$$ = 
                  Round[#]; $CellContext`n$$ = 
                  Normalize[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}]; $CellContext`normals1$$ = 
                  Append[$CellContext`allNormals$$, $CellContext`n$$]; 
                 Null)& ], {-1, 1, 1}, {Appearance -> "Labeled"}]]}, {
             "\"Cut plane distance from 0\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`cutPosition$$], 
                    Dynamic[$CellContext`cutPosition$$], 
                    
                    Dynamic[{(-(
                    Sqrt[3] $CellContext`V100$$/$CellContext`l0$$)) \
($CellContext`t$$ + $CellContext`l0$$/(2 $CellContext`V100$$)), (
                    Sqrt[3] $CellContext`V100$$/$CellContext`l0$$) \
($CellContext`t$$ + $CellContext`l0$$/(2 $CellContext`V100$$))}], Medium, 
                    Small, Automatic, True, Automatic, True, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`cutPosition$$], 
                
                Dynamic[{(-(
                    Sqrt[3] $CellContext`V100$$/$CellContext`l0$$)) \
($CellContext`t$$ + $CellContext`l0$$/(2 $CellContext`V100$$)), (
                   Sqrt[3] $CellContext`V100$$/$CellContext`l0$$) \
($CellContext`t$$ + $CellContext`l0$$/(2 $CellContext`V100$$))}], {
                Appearance -> "Labeled"}]]}, {"\"Preview quality\"", 
              InterpretationBox[
               StyleBox[
                GridBox[{{
                   SliderBox[
                    Dynamic[$CellContext`previewNum$$], {10, 300, 1}, 
                    Appearance -> Automatic, DefaultBaseStyle -> 
                    "LabeledSlider"], 
                   InputFieldBox[
                    Dynamic[$CellContext`previewNum$$], Appearance -> 
                    "Frameless", ContinuousAction -> True, DefaultBaseStyle -> 
                    "LabeledSlider", FieldSize -> {{5, 10}, {1, 2}}, 
                    ImageMargins -> 0]}}, AutoDelete -> False, 
                 BaselinePosition -> {{1, 1}, Axis}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], Deployed -> True, StripOnInput -> False, 
                FontFamily :> CurrentValue["ControlsFontFamily"]], 
               LabeledSlider[
                Dynamic[$CellContext`previewNum$$], {10, 300, 1}]]}, {
             "\"Number of steps\"", 
              InterpretationBox[
               StyleBox[
                GridBox[{{
                   SliderBox[
                    Dynamic[$CellContext`Num$$], {10, 1000, 1}, Appearance -> 
                    Automatic, ContinuousAction -> False, DefaultBaseStyle -> 
                    "LabeledSlider"], 
                   InputFieldBox[
                    Dynamic[$CellContext`Num$$], Appearance -> "Frameless", 
                    ContinuousAction -> False, DefaultBaseStyle -> 
                    "LabeledSlider", FieldSize -> {{5, 10}, {1, 2}}, 
                    ImageMargins -> 0]}}, AutoDelete -> False, 
                 BaselinePosition -> {{1, 1}, Axis}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], Deployed -> True, StripOnInput -> False, 
                FontFamily :> CurrentValue["ControlsFontFamily"]], 
               LabeledSlider[
                Dynamic[$CellContext`Num$$], {10, 1000, 1}, ContinuousAction -> 
                False]]}, {"\"tMin for section\"", 
              InterpretationBox[
               StyleBox[
                GridBox[{{
                   SliderBox[
                    Dynamic[
                    BoxForm`RemapVariable[$CellContext`tMin$$, {0.0001, 
                    Min[0.01, $CellContext`t$$ - 0.01]}], 
                    BoxForm`RemapValue[#, $CellContext`tMin$$, {0.0001, 
                    Min[0.01, $CellContext`t$$ - 0.01]}]& ], {0., 1.}, 
                    Appearance -> Automatic, DefaultBaseStyle -> 
                    "LabeledSlider"], 
                   InputFieldBox[
                    Dynamic[$CellContext`tMin$$], Appearance -> "Frameless", 
                    ContinuousAction -> True, DefaultBaseStyle -> 
                    "LabeledSlider", FieldSize -> {{5, 10}, {1, 2}}, 
                    ImageMargins -> 0]}}, AutoDelete -> False, 
                 BaselinePosition -> {{1, 1}, Axis}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], Deployed -> True, StripOnInput -> False, 
                FontFamily :> CurrentValue["ControlsFontFamily"]], 
               LabeledSlider[
                Dynamic[
                 BoxForm`RemapVariable[$CellContext`tMin$$, {0.0001, 
                   Min[0.01, $CellContext`t$$ - 0.01]}], 
                 BoxForm`RemapValue[#, $CellContext`tMin$$, {0.0001, 
                   Min[0.01, $CellContext`t$$ - 0.01]}]& ], {0., 1.}]]}, {
             "\"Time Step (hrs)\"", 
              InterpretationBox[
               StyleBox[
                GridBox[{{
                   SliderBox[
                    Dynamic[$CellContext`timeStep$$], {
                    Dynamic[$CellContext`t$$/100], 
                    Dynamic[$CellContext`t$$], 
                    Dynamic[$CellContext`t$$/1000]}, Appearance -> Automatic, 
                    DefaultBaseStyle -> "LabeledSlider"], 
                   InputFieldBox[
                    Dynamic[$CellContext`timeStep$$], Appearance -> 
                    "Frameless", ContinuousAction -> True, DefaultBaseStyle -> 
                    "LabeledSlider", FieldSize -> {{5, 10}, {1, 2}}, 
                    ImageMargins -> 0]}}, AutoDelete -> False, 
                 BaselinePosition -> {{1, 1}, Axis}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], Deployed -> True, StripOnInput -> False, 
                FontFamily :> CurrentValue["ControlsFontFamily"]], 
               LabeledSlider[
                Dynamic[$CellContext`timeStep$$], {
                 Dynamic[$CellContext`t$$/100], 
                 Dynamic[$CellContext`t$$], 
                 Dynamic[$CellContext`t$$/1000]}]]}, {
              StyleBox[
              "\"Growth settings\"", StripOnInput -> False, FontSize -> 
               Medium, FontWeight -> Bold], ""}, {
             "\"Calculate Equilibrium Shape\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{$CellContext`infty$$, {True, False}}, 
                  Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Time of growth (hrs)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = 1, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`t$$, ($CellContext`t$$ = #; 
                    If[$CellContext`constantVelocity$$, $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 10^(-3), 
                    
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                    
                    Dynamic[$CellContext`t$$, ($CellContext`t$$ = #; 
                    If[$CellContext`constantVelocity$$, $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 10^(-3), 
                    
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                    Dynamic[{
                    If[$CellContext`cutOn$$, $CellContext`tMin$$ + 0.01, 0], 
                    1000}], Medium, Small, 
                    Dynamic[
                    Not[$CellContext`infty$$]], True, Automatic, True, True, 
                    True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`t$$, ($CellContext`t$$ = #; 
                 If[$CellContext`constantVelocity$$, $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 10^(-3), 
                   
                   Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]]; 
                 Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                Dynamic[{
                  If[$CellContext`cutOn$$, $CellContext`tMin$$ + 0.01, 0], 
                  1000}], {
                Appearance -> "Labeled", AnimationRate -> 1, Enabled -> 
                 Dynamic[
                   Not[$CellContext`infty$$]]}]]}, {
             "\"Allow (\\!\\(\\*OverscriptBox[\\(1\\), \\(_\\)]\\) \
\\!\\(\\*OverscriptBox[\\(1\\), \\(_\\)]\\) \\!\\(\\*OverscriptBox[\\(1\\), \
\\(_\\)]\\)) growth\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{$CellContext`growDown$$, {True, False}}, 
                  Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
              StyleBox[
              "\"Constant Velocity\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"Enable Constant Velocity\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`constantVelocity$$, 
                    False}, {True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Constant Growth Velocity (\[Micro]m/hr)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`constantVelocityValue$$, \
($CellContext`constantVelocityValue$$ = #; $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 
                    10^(-3); $CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$); Null)& ], 
                    
                    Dynamic[$CellContext`constantVelocityValue$$, \
($CellContext`constantVelocityValue$$ = #; $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 
                    10^(-3); $CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$); Null)& ], {0.1, 1000}, Medium, 
                    Small, 
                    Dynamic[$CellContext`constantVelocity$$], True, Automatic,
                     True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`constantVelocityValue$$, \
($CellContext`constantVelocityValue$$ = #; $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 
                   10^(-3); $CellContext`L$$ = $CellContext`l0$$/(
                   2 $CellContext`V100$$); Null)& ], {0.1, 1000}, {
                Appearance -> "Labeled", Enabled -> 
                 Dynamic[$CellContext`constantVelocity$$]}]]}, {
              StyleBox[
              "\"Time Dependent Velocity:\\n v(t) = \
\\!\\(\\*FractionBox[\\(\\(A\\)\\(\\\\ \\)\\), SuperscriptBox[\\((C + t)\\), \
\\(B\\)]]\\) (\[Micro]m/hr)\"", StripOnInput -> False, FontSize -> Small, 
               FontWeight -> Bold], ""}, {"\"Show Velocity Plot\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`ShowVelocityPlot$$, 
                    False}, {True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Velocity A Coefficient\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`velocityA$$, \
($CellContext`velocityA$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                    
                    Dynamic[$CellContext`velocityA$$, \
($CellContext`velocityA$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {0, 5000}, Medium, Small, 
                    Dynamic[
                    Not[$CellContext`constantVelocity$$]], True, Automatic, 
                    True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`velocityA$$, ($CellContext`velocityA$$ = \
#; Quiet[$CellContext`V100$$ = 
                   NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                 Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {0, 5000}, {
                Appearance -> "Labeled", Enabled -> Dynamic[
                   Not[$CellContext`constantVelocity$$]]}]]}, {
             "\"Velocity B Coefficient\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`velocityB$$, \
($CellContext`velocityB$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                    
                    Dynamic[$CellContext`velocityB$$, \
($CellContext`velocityB$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {-1, 10}, Medium, Small, 
                    Dynamic[
                    Not[$CellContext`constantVelocity$$]], True, Automatic, 
                    True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`velocityB$$, ($CellContext`velocityB$$ = \
#; Quiet[$CellContext`V100$$ = 
                   NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                 Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {-1, 10}, {
                Appearance -> "Labeled", Enabled -> Dynamic[
                   Not[$CellContext`constantVelocity$$]]}]]}, {
             "\"Velocity C Coefficient\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    
                    Dynamic[$CellContext`velocityC$$, \
($CellContext`velocityC$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], 
                    
                    Dynamic[$CellContext`velocityC$$, \
($CellContext`velocityC$$ = #; 
                    Quiet[$CellContext`V100$$ = 
                    NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                    Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {0.0001, 5000}, Medium, 
                    Small, 
                    Dynamic[
                    Not[$CellContext`constantVelocity$$]], True, Automatic, 
                    True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`velocityC$$, ($CellContext`velocityC$$ = \
#; Quiet[$CellContext`V100$$ = 
                   NIntegrate[($CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$) 
                    10^(-3), {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]; 
                 Quiet[$CellContext`L$$ = $CellContext`l0$$/(
                    2 $CellContext`V100$$)])& ], {0.0001, 5000}, {
                Appearance -> "Labeled", Enabled -> Dynamic[
                   Not[$CellContext`constantVelocity$$]]}]]}, {
              TagBox[
               DynamicModuleBox[{Typeset`var$$ = True}, 
                InterpretationBox[
                 StyleBox[
                  PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"Individual Growth Parameters\"", StripOnInput -> False,
                     FontSize -> Medium, FontWeight -> Bold]}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"Individual Growth Parameters\"", StripOnInput -> False,
                     FontSize -> Medium, FontWeight -> Bold]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{"\"Enable Individual Growth Factors\"", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    
                    Manipulate`Control[{$CellContext`individualGrowthFactors$$\
, {True, False}}, Automatic], StandardForm], 
                    ImageSizeCache -> {
                    9.6, {2.6102539062499996`, 6.98974609375}}], 
                    "Control"]}, {"\"Selected Parameter\"", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    
                    Manipulate`Control[{{$CellContext`factorSelection$$, 
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)"}, {
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}}, 
                    Automatic, 
                    Enabled -> $CellContext`individualGrowthFactors$$], 
                    StandardForm], 
                    ImageSizeCache -> {
                    39.6667868164062, {12.549999999999272`, 12.55}}], 
                    "Control"]}, {"\"Parameter Value\"", 
                    TagBox[
                    PaneBox[
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                    Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                    Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "Manipulator06"][
                    Dynamic[
                    Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]], (Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]] = #; 
                    ReleaseHold[$CellContext`calcCutOff$$])& ], 
                    Dynamic[
                    Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]], (Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]] = #; 
                    ReleaseHold[$CellContext`calcCutOff$$])& ], {0, 4}, 
                    Medium, Small, 
                    Dynamic[$CellContext`individualGrowthFactors$$], False, 
                    Automatic, True, True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                    ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                    DynamicUpdating -> True], DynamicModuleValues :> {}], 
                    BaselinePosition -> Baseline, ImageMargins -> 0], 
                    Manipulate`InterpretManipulator[
                    Dynamic[
                    Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]], (Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]] = #; 
                    ReleaseHold[$CellContext`calcCutOff$$])& ], {0, 4}, {
                    Appearance -> "Labeled", ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`individualGrowthFactors$$]}]]}, {
                    ButtonBox[
                    "\"Export Individual Growth Factor Configuration\"", 
                    Appearance -> Automatic, ButtonFunction :> 
                    ReleaseHold[$CellContext`exportIndividualParameters$$], 
                    Evaluator -> Automatic, Method -> "Preemptive"], ""}, {
                    ButtonBox[
                    "\"Upload Individual Growth Factor Configuration\"", 
                    Appearance -> Automatic, 
                    ButtonFunction :> ($CellContext`factorList$$ = Uncompress[
                    Import[
                    SystemDialogInput["FileOpen", ".txt"]]]; 
                    ReleaseHold[$CellContext`calcCutOff$$]), Evaluator -> 
                    Automatic, Method -> "Queued"], ""}}, AutoDelete -> False,
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                   Dynamic[
                    TrueQ[Typeset`var$$]], Alignment -> Automatic, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                   ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                  False], 
                 OpenerView[{
                   Style["Individual Growth Parameters", Bold, Medium], 
                   Grid[{{"Enable Individual Growth Factors", 
                    
                    Control[{$CellContext`individualGrowthFactors$$, {
                    True, False}}]}, {"Selected Parameter", 
                    
                    Control[{{$CellContext`factorSelection$$, 
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)"}, {
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, 
                    Enabled -> $CellContext`individualGrowthFactors$$}]}, {
                    "Parameter Value", 
                    Manipulator[
                    Dynamic[
                    Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]], (Part[$CellContext`factorList$$, 
                    Part[
                    
                    Position[{
                    "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((100)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 00)\)]\)", "\!\(\*SubscriptBox[\(f\), \((010)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 0\\ \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((113)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((131)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((311)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 13)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 31)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 3)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 3 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((115)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((151)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((511)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 11)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 1 \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] 1 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 1)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \
\(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 15)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 51)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] 5)\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] 5 \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \
\(_\)] \*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)", 
                    "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \
\(_\)] \*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\)"}, \
$CellContext`factorSelection$$], 1, 1]] = #; 
                    ReleaseHold[$CellContext`calcCutOff$$])& ], {0, 4}, 
                    Appearance -> "Labeled", ContinuousAction -> False, 
                    Enabled -> 
                    Dynamic[$CellContext`individualGrowthFactors$$]]}, {
                    Button["Export Individual Growth Factor Configuration", 
                    ReleaseHold[$CellContext`exportIndividualParameters$$]]}, {
                    Button[
                    "Upload Individual Growth Factor Configuration", \
$CellContext`factorList$$ = Uncompress[
                    Import[
                    SystemDialogInput["FileOpen", ".txt"]]]; 
                    ReleaseHold[$CellContext`calcCutOff$$], Method -> 
                    "Queued"]}}]}, False]], DynamicModuleValues :> {}], 
               Setting[#, {0}]& ], "\[SpanFromLeft]"}, {
              StyleBox[
              "\"General parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {"\"\[Alpha]\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[Alpha]1$$], 
                    Dynamic[$CellContext`\[Alpha]1$$], {0.1, 10}, Medium, 
                    Small, Automatic, True, Automatic, True, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[Alpha]1$$], {0.1, 10}, {
                Appearance -> "Labeled"}]]}, {"\"\[Beta]\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[Beta]1$$], 
                    Dynamic[$CellContext`\[Beta]1$$], {0.1, 10}, Medium, 
                    Small, Automatic, True, Automatic, True, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[Beta]1$$], {0.1, 10}, {
                Appearance -> "Labeled"}]]}, {"\"\[Gamma]\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[Gamma]1$$], 
                    Dynamic[$CellContext`\[Gamma]1$$], {0.1, 10}, Medium, 
                    Small, Automatic, True, Automatic, True, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[Gamma]1$$], {0.1, 10}, {
                Appearance -> "Labeled"}]]}, {"\"\[Delta]\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[Delta]1$$], 
                    Dynamic[$CellContext`\[Delta]1$$], {0.1, 10}, Medium, 
                    Small, Automatic, True, Automatic, True, True, True, All, 
                    False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[Delta]1$$], {0.1, 10}, {
                Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"{1 0 0} parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\(+z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100posz$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100posz$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100posz$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\(-z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100negz$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100negz$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100negz$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\({100} + x\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100posx$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100posx$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100posx$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\({100} + y\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100posy$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100posy$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100posy$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\({100} - x\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100negx$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100negx$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100negx$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\({100} - y\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]100negy$$], 
                    Dynamic[$CellContext`\[CapitalDelta]100negy$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]100negy$$], {-0.9, 0.9}, {
                Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"{1 1 1} parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Alpha]\\), \
\\(-z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]z$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]z$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Alpha]z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Alpha]\\), \
\\((\\(+x\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]posxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]posxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Alpha]posxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Alpha]\\), \
\\((\\(+x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negyposx$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negyposx$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negyposx$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Alpha]\\), \\((\\(+\
\\(-x\\)\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Alpha]\\), \
\\((\\(-x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negynegx$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negynegx$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Alpha]negynegx$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"{1 1 0} parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(+z\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posz$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posz$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]posz$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(-z\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negz$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negz$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negz$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\((\\(+x\
\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]posxposy$$], {-0.9,
                 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\((\\(+x\
\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negyposx$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negyposx$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negyposx$$], {-0.9,
                 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\((\\(-x\
\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negxposy$$], {-0.9,
                 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\((\\(-x\
\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negynegx$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negynegx$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negynegx$$], {-0.9,
                 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(+x\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posx$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posx$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]posx$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(+y\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posy$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]posy$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]posy$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(-x\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negx$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negx$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negx$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Beta]\\), \\(-y\\)]\
\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negy$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Beta]negy$$], {-0.9,
                     0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Beta]negy$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"{1 1 3} parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \\(\\(-3\
\\) z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]3z$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]3z$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]3z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \\(\\(+1\
\\) z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos1z$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos1z$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos1z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\[CapitalDelta]\[Gamma]\\!\\(\\*SubscriptBox[\\(-\\), \\(1  z\
\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg1z$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg1z$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg1z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(+x\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(+x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-x\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\(\\((\\(+3\\) x, \\(+y\\))\\)\\(,\\)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(+3\\) x, \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(+x\\), \\(-3\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(+x\\), \\(+3\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-3\\) x, \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-3\\) x, \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-x\\), \\(-3\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Gamma]\\), \
\\((\\(-x\\), \\(+3\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"{1 1 5} parameters\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \\(\\(-5\
\\) z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]5z$$], 
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]5z$$], {-0.9, 
                    0.9}, Medium, Small, Automatic, True, Automatic, True, 
                    True, True, All, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]5z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \\(\\(+1\
\\) z\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos1z$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos1z$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos1z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\[CapitalDelta]\[Delta]\\!\\(\\*SubscriptBox[\\(-\\), \\(1  z\
\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg1z$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg1z$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg1z$$], {-0.9, 
                0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(+x\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(+x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-x\\), \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-x\\), \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\(\\((\\(+5\\) x, \\(+y\\))\\)\\(,\\)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(+5\\) x, \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(+x\\), \\(-5\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxneg5y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxneg5y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxneg5y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(+x\\), \\(+5\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxpos5y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxpos5y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]posxpos5y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-5\\) x, \\(+y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-5\\) x, \\(-y\\))\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-x\\), \\(-5\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxneg5y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxneg5y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxneg5y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
             "\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Delta]\\), \
\\((\\(-x\\), \\(+5\\) y)\\)]\\)\"", 
              TagBox[
               PaneBox[
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`paused$$ = Automatic, 
                  Typeset`running$$ = False, Typeset`index$$ = Automatic, 
                  Typeset`rate$$ = Automatic, Typeset`dir$$ = Forward}, 
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$], 
                    
                    Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$], \
{-0.9, 0.9}, Medium, Small, Automatic, True, Automatic, True, True, True, All,
                     False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]], 
                   ImageSizeCache -> {165.67184374999997`, {5., 8.}}], 
                  DynamicUpdating -> True], DynamicModuleValues :> {}], 
                BaselinePosition -> Baseline, ImageMargins -> 0], 
               Manipulate`InterpretManipulator[
                
                Dynamic[$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$], \
{-0.9, 0.9}, {Appearance -> "Labeled"}]]}, {
              StyleBox[
              "\"Export Options\"", StripOnInput -> False, FontSize -> Medium,
                FontWeight -> Bold], ""}, {
              ButtonBox[
              "\"Choose Save Directory\"", Appearance -> Automatic, 
               ButtonFunction :> ($CellContext`saveDirectory$$ = 
                SystemDialogInput["Directory"]), Evaluator -> Automatic, 
               Method -> "Queued"], ""}, {
              StyleBox[
              "\"Export Crystal Shape\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {"\"CAD File Name\"", 
              InputFieldBox[
               Dynamic[$CellContext`cadFileName$$], String]}, {
              ButtonBox[
              "\"Export Shape\"", Appearance -> Automatic, ButtonFunction :> 
               ReleaseHold[$CellContext`exportShape$$], Evaluator -> 
               Automatic, Method -> "Preemptive"], ""}, {
              StyleBox[
              "\"Cut\"", StripOnInput -> False, FontSize -> Small, FontWeight -> 
               Bold], ""}, {"\"Cut Image File Name\"", 
              InputFieldBox[
               Dynamic[$CellContext`exportCutFileName$$], String]}, {
              ButtonBox[
              "\"Export Cut Image\"", Appearance -> Automatic, ButtonFunction :> 
               ReleaseHold[$CellContext`exportCutImage$$], Evaluator -> 
               Automatic, Method -> "Preemptive"], ""}, {
              StyleBox[
              "\"Plate Cuts\"", StripOnInput -> False, FontSize -> Small, 
               FontWeight -> Bold], ""}, {"\"Plate Cuts File Name\"", 
              InputFieldBox[
               Dynamic[$CellContext`plateCutsName$$], String]}, {
              ButtonBox[
              "\"Export Plate Cuts Image\"", Appearance -> Automatic, 
               ButtonFunction :> ReleaseHold[$CellContext`exportPlateCuts$$], 
               Evaluator -> Automatic, Method -> "Preemptive"], ""}, {
              StyleBox[
              "\"Parameter Settings\"", StripOnInput -> False, FontSize -> 
               Small, FontWeight -> Bold], ""}, {
             "\"Parameter Config File Name\"", 
              InputFieldBox[
               Dynamic[$CellContext`parameterConfigFileName$$], String]}, {
              ButtonBox[
              "\"Export Parameter Configuration\"", Appearance -> Automatic, 
               ButtonFunction :> ReleaseHold[$CellContext`exportConfig$$], 
               Evaluator -> Automatic, Method -> "Preemptive"], ""}, {
              ButtonBox[
              "\"Upload Config File\"", Appearance -> Automatic, 
               ButtonFunction :> ({$CellContext`l0$$, $CellContext`V100$$, \
$CellContext`relativeOn$$, $CellContext`infty$$, $CellContext`opacity$$, \
$CellContext`boxed$$, $CellContext`planeChoice$$, $CellContext`normals$$, \
$CellContext`n$$, $CellContext`cutOn$$, $CellContext`drawCutPlane$$, \
$CellContext`cutPosition$$, $CellContext`previewNum$$, $CellContext`Num$$, \
$CellContext`tMin$$, $CellContext`t$$, $CellContext`\[Alpha]1$$, \
$CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, $CellContext`\
\[CapitalDelta]100posz$$, $CellContext`\[CapitalDelta]100posx$$, \
$CellContext`\[CapitalDelta]100posy$$, \
$CellContext`\[CapitalDelta]\[Alpha]z$$, \
$CellContext`\[CapitalDelta]\[Beta]posz$$, \
$CellContext`\[CapitalDelta]\[Beta]negz$$, \
$CellContext`\[CapitalDelta]\[Beta]posy$$, $CellContext`\[CapitalDelta]\
\[Alpha]posxposy$$, $CellContext`\[CapitalDelta]\[Alpha]negyposx$$, \
$CellContext`mult100$$, $CellContext`mult\[Alpha]$$, \
$CellContext`mult\[Beta]$$, $CellContext`mult\[Gamma]$$, $CellContext`ds$$, \
$CellContext`ds1$$, $CellContext`tiltAngles$$, $CellContext`growDown$$, \
$CellContext`\[CapitalDelta]\[Beta]posx$$, $CellContext`showVelocity$$, \
$CellContext`\[CapitalDelta]100negx$$, $CellContext`\[CapitalDelta]100negy$$, \
$CellContext`\[CapitalDelta]\[Alpha]negxposy$$, $CellContext`\[CapitalDelta]\
\[Alpha]negynegx$$, $CellContext`\[CapitalDelta]\[Beta]negx$$, $CellContext`\
\[CapitalDelta]\[Beta]negy$$, $CellContext`cutZAxis$$, \
$CellContext`cutYAxis$$, $CellContext`cutXAxis$$, $CellContext`timeStep$$, \
$CellContext`\[CapitalDelta]\[Beta]posxposy$$, $CellContext`\[CapitalDelta]\
\[Beta]negyposx$$, $CellContext`\[CapitalDelta]\[Beta]negxposy$$, \
$CellContext`\[CapitalDelta]\[Beta]negynegx$$, $CellContext`velocityA$$, \
$CellContext`velocityB$$, $CellContext`velocityC$$, \
$CellContext`constantVelocity$$, $CellContext`constantVelocityValue$$, \
$CellContext`t$$, $CellContext`\[CapitalDelta]\[Gamma]3z$$, $CellContext`\
\[CapitalDelta]\[Gamma]pos1z$$, $CellContext`\[CapitalDelta]\[Gamma]neg1z$$, \
$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]pos3xnegy$$, $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]neg3xposy$$, $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxpos3y$$, $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxposy$$, $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$, \
$CellContext`\[Delta]1$$, $CellContext`\[CapitalDelta]\[Delta]5z$$, \
$CellContext`\[CapitalDelta]\[Delta]pos1z$$, $CellContext`\[CapitalDelta]\
\[Delta]neg1z$$, $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$, \
$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$, $CellContext`\[CapitalDelta]\
\[Delta]posxneg5y$$, $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$, \
$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$, $CellContext`\[CapitalDelta]\
\[Delta]neg5xnegy$$, $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$, \
$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$, $CellContext`\[CapitalDelta]\
\[Delta]posxnegy$$, $CellContext`\[CapitalDelta]\[Delta]posxposy$$, \
$CellContext`\[CapitalDelta]\[Delta]negxposy$$, $CellContext`\[CapitalDelta]\
\[Delta]negxnegy$$, $CellContext`\[CapitalDelta]100negz$$, \
$CellContext`plateThickness$$, $CellContext`cutLoss$$, \
$CellContext`beginningCutPosition$$, $CellContext`endCutPosition$$} = 
                Uncompress[
                  Import[
                   SystemDialogInput["FileOpen", ".txt"]]]), Evaluator -> 
               Automatic, Method -> "Queued"], ""}, {
             "\"Print Parameter Configuration\"", 
              TagBox[
               DynamicBox[
                ToBoxes[
                 
                 Manipulate`Control[{{$CellContext`printOn$$, False}, {
                   True, False}}, Automatic], StandardForm], 
                ImageSizeCache -> {
                 9.6, {2.6102539062499996`, 6.98974609375}}], "Control"]}, {
             "\"Insert Saved Parameter Configugration\"", 
              InputFieldBox[
               Dynamic[$CellContext`stateString$$], String]}, {
              ButtonBox[
              "\"Apply Settings\"", Appearance -> Automatic, 
               ButtonFunction :> ({$CellContext`l0$$, $CellContext`V100$$, \
$CellContext`relativeOn$$, $CellContext`infty$$, $CellContext`opacity$$, \
$CellContext`boxed$$, $CellContext`planeChoice$$, $CellContext`normals$$, \
$CellContext`n$$, $CellContext`cutOn$$, $CellContext`drawCutPlane$$, \
$CellContext`cutPosition$$, $CellContext`previewNum$$, $CellContext`Num$$, \
$CellContext`tMin$$, $CellContext`t$$, $CellContext`\[Alpha]1$$, \
$CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, $CellContext`\
\[CapitalDelta]100posz$$, $CellContext`\[CapitalDelta]100posx$$, \
$CellContext`\[CapitalDelta]100posy$$, \
$CellContext`\[CapitalDelta]\[Alpha]z$$, \
$CellContext`\[CapitalDelta]\[Beta]posz$$, \
$CellContext`\[CapitalDelta]\[Beta]negz$$, \
$CellContext`\[CapitalDelta]\[Beta]posy$$, $CellContext`\[CapitalDelta]\
\[Alpha]posxposy$$, $CellContext`\[CapitalDelta]\[Alpha]negyposx$$, \
$CellContext`mult100$$, $CellContext`mult\[Alpha]$$, \
$CellContext`mult\[Beta]$$, $CellContext`mult\[Gamma]$$, $CellContext`ds$$, \
$CellContext`ds1$$, $CellContext`tiltAngles$$, $CellContext`growDown$$, \
$CellContext`\[CapitalDelta]\[Beta]posx$$, $CellContext`showVelocity$$, \
$CellContext`\[CapitalDelta]100negx$$, $CellContext`\[CapitalDelta]100negy$$, \
$CellContext`\[CapitalDelta]\[Alpha]negxposy$$, $CellContext`\[CapitalDelta]\
\[Alpha]negynegx$$, $CellContext`\[CapitalDelta]\[Beta]negx$$, $CellContext`\
\[CapitalDelta]\[Beta]negy$$, $CellContext`cutZAxis$$, \
$CellContext`cutYAxis$$, $CellContext`cutXAxis$$, $CellContext`timeStep$$, \
$CellContext`\[CapitalDelta]\[Beta]posxposy$$, $CellContext`\[CapitalDelta]\
\[Beta]negyposx$$, $CellContext`\[CapitalDelta]\[Beta]negxposy$$, \
$CellContext`\[CapitalDelta]\[Beta]negynegx$$, $CellContext`velocityA$$, \
$CellContext`velocityB$$, $CellContext`velocityC$$, \
$CellContext`constantVelocity$$, $CellContext`constantVelocityValue$$, \
$CellContext`t$$, $CellContext`\[CapitalDelta]\[Gamma]3z$$, $CellContext`\
\[CapitalDelta]\[Gamma]pos1z$$, $CellContext`\[CapitalDelta]\[Gamma]neg1z$$, \
$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]pos3xnegy$$, $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]neg3xposy$$, $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxpos3y$$, $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxposy$$, $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$, \
$CellContext`\[Delta]1$$, $CellContext`\[CapitalDelta]\[Delta]5z$$, \
$CellContext`\[CapitalDelta]\[Delta]pos1z$$, $CellContext`\[CapitalDelta]\
\[Delta]neg1z$$, $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$, \
$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$, $CellContext`\[CapitalDelta]\
\[Delta]posxneg5y$$, $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$, \
$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$, $CellContext`\[CapitalDelta]\
\[Delta]neg5xnegy$$, $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$, \
$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$, $CellContext`\[CapitalDelta]\
\[Delta]posxnegy$$, $CellContext`\[CapitalDelta]\[Delta]posxposy$$, \
$CellContext`\[CapitalDelta]\[Delta]negxposy$$, $CellContext`\[CapitalDelta]\
\[Delta]negxnegy$$, $CellContext`\[CapitalDelta]100negz$$, \
$CellContext`plateThickness$$, $CellContext`cutLoss$$, \
$CellContext`beginningCutPosition$$, $CellContext`endCutPosition$$} = 
                 Uncompress[$CellContext`stateString$$]; 
                ReleaseHold[$CellContext`calcTilt$$]), Evaluator -> Automatic,
                Method -> "Preemptive"], ""}}, AutoDelete -> False, 
            GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
         DynamicBox[
          ToBoxes[If[
             Not[$CellContext`cutOn$$], 
             ReleaseHold[$CellContext`calcCutOff$$]; $CellContext`polygons$$ = \
{}; Null, $CellContext`infty$$ = False; ReleaseHold[$CellContext`calcCutOn$$]; 
             Null]; $CellContext`dsCurrent$$ = Prepend[
              Map[
              Norm[#] ($CellContext`V100$$/$CellContext`l0$$) \
$CellContext`param1[#, 
                 $CellContext`d[#], $CellContext`infty$$, $CellContext`\
\[Alpha]1$$, $CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, \
$CellContext`mult100$$, $CellContext`mult\[Alpha]$$, \
$CellContext`mult\[Beta]$$, $CellContext`mult\[Gamma]$$, $CellContext`L$$, \
$CellContext`t$$]& , 
               Rest[$CellContext`normals$$]], 
              0]; $CellContext`exportCurrentState$$ = 
            Compress[{$CellContext`l0$$, $CellContext`V100$$, \
$CellContext`relativeOn$$, $CellContext`infty$$, $CellContext`opacity$$, \
$CellContext`boxed$$, $CellContext`planeChoice$$, $CellContext`normals$$, \
$CellContext`n$$, $CellContext`cutOn$$, $CellContext`drawCutPlane$$, \
$CellContext`cutPosition$$, $CellContext`previewNum$$, $CellContext`Num$$, \
$CellContext`tMin$$, $CellContext`t$$, $CellContext`\[Alpha]1$$, \
$CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, $CellContext`\
\[CapitalDelta]100posz$$, $CellContext`\[CapitalDelta]100posx$$, \
$CellContext`\[CapitalDelta]100posy$$, \
$CellContext`\[CapitalDelta]\[Alpha]z$$, \
$CellContext`\[CapitalDelta]\[Beta]posz$$, \
$CellContext`\[CapitalDelta]\[Beta]negz$$, \
$CellContext`\[CapitalDelta]\[Beta]posy$$, $CellContext`\[CapitalDelta]\
\[Alpha]posxposy$$, $CellContext`\[CapitalDelta]\[Alpha]negyposx$$, \
$CellContext`mult100$$, $CellContext`mult\[Alpha]$$, \
$CellContext`mult\[Beta]$$, $CellContext`mult\[Gamma]$$, $CellContext`ds$$, \
$CellContext`ds1$$, $CellContext`tiltAngles$$, $CellContext`growDown$$, \
$CellContext`\[CapitalDelta]\[Beta]posx$$, $CellContext`showVelocity$$, \
$CellContext`\[CapitalDelta]100negx$$, $CellContext`\[CapitalDelta]100negy$$, \
$CellContext`\[CapitalDelta]\[Alpha]negxposy$$, $CellContext`\[CapitalDelta]\
\[Alpha]negynegx$$, $CellContext`\[CapitalDelta]\[Beta]negx$$, $CellContext`\
\[CapitalDelta]\[Beta]negy$$, $CellContext`cutZAxis$$, \
$CellContext`cutYAxis$$, $CellContext`cutXAxis$$, $CellContext`timeStep$$, \
$CellContext`\[CapitalDelta]\[Beta]posxposy$$, $CellContext`\[CapitalDelta]\
\[Beta]negyposx$$, $CellContext`\[CapitalDelta]\[Beta]negxposy$$, \
$CellContext`\[CapitalDelta]\[Beta]negynegx$$, $CellContext`velocityA$$, \
$CellContext`velocityB$$, $CellContext`velocityC$$, \
$CellContext`constantVelocity$$, $CellContext`constantVelocityValue$$, \
$CellContext`t$$, $CellContext`\[CapitalDelta]\[Gamma]3z$$, $CellContext`\
\[CapitalDelta]\[Gamma]pos1z$$, $CellContext`\[CapitalDelta]\[Gamma]neg1z$$, \
$CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]pos3xnegy$$, $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]neg3xposy$$, $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxpos3y$$, $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$, \
$CellContext`\[CapitalDelta]\[Gamma]posxposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxposy$$, $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$, \
$CellContext`\[Delta]1$$, $CellContext`\[CapitalDelta]\[Delta]5z$$, \
$CellContext`\[CapitalDelta]\[Delta]pos1z$$, $CellContext`\[CapitalDelta]\
\[Delta]neg1z$$, $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$, \
$CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$, $CellContext`\[CapitalDelta]\
\[Delta]posxneg5y$$, $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$, \
$CellContext`\[CapitalDelta]\[Delta]neg5xposy$$, $CellContext`\[CapitalDelta]\
\[Delta]neg5xnegy$$, $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$, \
$CellContext`\[CapitalDelta]\[Delta]negxpos5y$$, $CellContext`\[CapitalDelta]\
\[Delta]posxnegy$$, $CellContext`\[CapitalDelta]\[Delta]posxposy$$, \
$CellContext`\[CapitalDelta]\[Delta]negxposy$$, $CellContext`\[CapitalDelta]\
\[Delta]negxnegy$$, $CellContext`\[CapitalDelta]100negz$$, \
$CellContext`plateThickness$$, $CellContext`cutLoss$$, \
$CellContext`beginningCutPosition$$, $CellContext`endCutPosition$$}]; \
$CellContext`exportInitialState$$ = 
            Compress[{$CellContext`l0$$, $CellContext`boxed$$, \
$CellContext`ds$$, $CellContext`tiltAngles$$, $CellContext`cutOn$$, \
$CellContext`drawCutPlane$$, $CellContext`n$$, $CellContext`cutPosition$$, \
$CellContext`Num$$, $CellContext`tMin$$, $CellContext`infty$$, \
$CellContext`t$$, $CellContext`V100$$, $CellContext`\[Alpha]1$$, \
$CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, $CellContext`mult100$$, \
$CellContext`mult\[Alpha]$$, $CellContext`mult\[Beta]$$, $CellContext`mult\
\[Gamma]$$}]; Grid[{{
               Dynamic[
                Show[$CellContext`polyGraphics$$, 
                 Graphics3D[$CellContext`polygons$$], 
                 Graphics3D[{
                   Thickness[0.003], $CellContext`timeStepLines3D$$}], 
                 Graphics3D[$CellContext`timePolygon3D$$], Boxed -> 
                 Dynamic[$CellContext`boxed$$], Axes -> 
                 Dynamic[$CellContext`boxed$$], ImageSize -> 500, Lighting -> 
                 "Neutral"]], "", ""}, {
               Dynamic[
                If[$CellContext`cutOn$$, 
                 Show[
                  
                  Graphics[{$CellContext`polygons2D$$, \
$CellContext`timePolygon2D$$, 
                    Thickness[0.002], $CellContext`timeStepLines2D$$, 
                    Text["Time of first appearance = " <> ToString[
                    NumberForm[
                    If[
                    Min[$CellContext`timeStepLines$$] == $CellContext`tMin$$, 
                    0, 
                    Min[$CellContext`timeStepLines$$]], {10, 2}]] <> 
                    " hrs\nTime of growth completion = " <> ToString[
                    NumberForm[$CellContext`t$$, {10, 2}]] <> 
                    " hrs\nTime Intervals = " <> ToString[
                    NumberForm[$CellContext`timeStep$$, {10, 2}]] <> 
                    " hrs/step" <> "\n\[Alpha] = " <> 
                    ToString[$CellContext`\[Alpha]1$$] <> ", \[Beta] = " <> 
                    ToString[$CellContext`\[Beta]1$$] <> "\n\[Gamma] = " <> 
                    ToString[$CellContext`\[Gamma]1$$] <> "\nCut Plane: " <> 
                    StringReplace[
                    
                    ToString[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}], {
                    "-1" -> "\!\(\*OverscriptBox[\(1\), \(_\)]\)", "{" -> "(",
                     "}" -> ")", "," -> " "}] <> "\nCut Distance " <> 
                    ToString[$CellContext`cutPosition$$], \
{$CellContext`textX$$, $CellContext`textY$$ + 1}]}, Axes -> True, 
                   AxesLabel -> {"(mm)", "(mm)"}], Boxed -> 
                  Dynamic[$CellContext`boxed$$], Axes -> 
                  Dynamic[$CellContext`boxed$$], ImageSize -> 500], ""]]}, {
               Dynamic[
                If[$CellContext`ShowVelocityPlot$$, 
                 Show[$CellContext`velocityPlot$$, ImageSize -> 500], ""]]}, {
               Dynamic[
               If[$CellContext`infty$$, "", 
                  If[$CellContext`constantVelocity$$, "Constant Velocity = " <> 
                    ToString[
                    NumberForm[$CellContext`V100$$ 10^3, {10, 2}]], 
                    "Average Growth Velocity = " <> ToString[
                    NumberForm[
                    
                    If[$CellContext`t$$ == 
                    0, $CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`t$$)^$CellContext`velocityB$$, 
                    Quiet[
                    NIntegrate[$CellContext`velocityA$$/($CellContext`\
velocityC$$ + $CellContext`x)^$CellContext`velocityB$$, {$CellContext`x, 0, 
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
                    If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]], {
                    10, 2}]]] <> " (\[Micro]m/hr)\n"] <> 
                If[$CellContext`infty$$, "The steady-state shape.\nType: ", 
                  If[
                   Not[$CellContext`relativeOn$$], "Type: ", 
                   "Sizes are relative to \!\(\*SubscriptBox[\(l\), \(0\)]\).\
\nType: "]] <> $CellContext`type$$ <> "\n" <> $CellContext`info$$ <> "\n" <> 
                If[$CellContext`infty$$, "", "Volume = " <> ToString[
                    NumberForm[$CellContext`volume$$, {10, 2}]] <> 
                  " \!\(\*SuperscriptBox[\(mm\), \(3\)]\), Crystal Mass = " <> 
                  ToString[
                    NumberForm[$CellContext`volume$$ (3.5/1000), {10, 2}]] <> 
                  " g (" <> ToString[
                    
                    NumberForm[($CellContext`volume$$ (3.5/1000)) 5, {10, 
                    1}]] <> " ct)\nDiamond Height:" <> ToString[
                    NumberForm[$CellContext`maxHeight$$, {10, 2}]] <> " mm\n" <> 
                  "Largest Rectangle Dimensions: " <> ToString[
                    NumberForm[$CellContext`largestlength$$, {10, 2}]] <> 
                  " mm x " <> ToString[
                    NumberForm[$CellContext`largestwidth$$, {10, 2}]] <> 
                  " mm\n" <> "Bottom Facet Dimensions: " <> ToString[
                    NumberForm[$CellContext`bottomLength$$, {10, 2}]] <> 
                  " mm x " <> ToString[
                    NumberForm[$CellContext`bottomWidth$$, {10, 2}]] <> 
                  " mm\n" <> "Top Facet Dimensions: " <> ToString[
                    NumberForm[$CellContext`topLength$$, {10, 2}]] <> 
                  " mm x " <> ToString[
                    NumberForm[$CellContext`topWidth$$, {10, 2}]] <> " mm\n"],
                 ""]}}], StandardForm], 
          ImageSizeCache -> {
           365.28, {238.57745016179936`, 242.5898037615228}}, 
          SynchronousUpdating -> False, 
          TrackedSymbols :> {$CellContext`l0$$, $CellContext`V100$$, \
$CellContext`relativeOn$$, $CellContext`infty$$, $CellContext`opacity$$, \
$CellContext`boxed$$, $CellContext`planeChoice$$, $CellContext`normals$$, \
$CellContext`n$$, $CellContext`cutOn$$, $CellContext`drawCutPlane$$, \
$CellContext`cutPosition$$, $CellContext`previewNum$$, $CellContext`Num$$, \
$CellContext`tMin$$, $CellContext`t$$, $CellContext`\[Alpha]1$$, \
$CellContext`\[Beta]1$$, $CellContext`\[Gamma]1$$, $CellContext`\
\[CapitalDelta]100posz$$, $CellContext`\[CapitalDelta]100posx$$, \
$CellContext`\[CapitalDelta]100posy$$, \
$CellContext`\[CapitalDelta]\[Alpha]z$$, \
$CellContext`\[CapitalDelta]\[Beta]posz$$, \
$CellContext`\[CapitalDelta]\[Beta]negz$$, \
$CellContext`\[CapitalDelta]\[Beta]posy$$, $CellContext`\[CapitalDelta]\
\[Alpha]posxposy$$, $CellContext`\[CapitalDelta]\[Alpha]negyposx$$, \
$CellContext`mult100$$, $CellContext`mult\[Alpha]$$, \
$CellContext`mult\[Beta]$$, $CellContext`mult\[Gamma]$$, $CellContext`ds$$, \
$CellContext`ds1$$, $CellContext`tiltAngles$$, $CellContext`growDown$$, \
$CellContext`\[CapitalDelta]\[Beta]posx$$, $CellContext`showVelocity$$, \
$CellContext`\[CapitalDelta]100negx$$, $CellContext`\[CapitalDelta]100negy$$, \
$CellContext`\[CapitalDelta]\[Alpha]negxposy$$, $CellContext`\[CapitalDelta]\
\[Alpha]negynegx$$, $CellContext`\[CapitalDelta]\[Beta]negx$$, $CellContext`\
\[CapitalDelta]\[Beta]negy$$, $CellContext`cutZAxis$$, \
$CellContext`cutYAxis$$, $CellContext`cutXAxis$$, $CellContext`timeStep$$, \
$CellContext`\[CapitalDelta]\[Beta]posxposy$$, $CellContext`\[CapitalDelta]\
\[Beta]negyposx$$, $CellContext`\[CapitalDelta]\[Beta]negxposy$$, \
$CellContext`\[CapitalDelta]\[Beta]negynegx$$, $CellContext`velocityA$$, \
$CellContext`velocityB$$, $CellContext`velocityC$$, \
$CellContext`constantVelocity$$, $CellContext`constantVelocityValue$$, \
$CellContext`\[CapitalDelta]\[Gamma]3z$$, \
$CellContext`\[CapitalDelta]\[Gamma]pos1z$$, $CellContext`\[CapitalDelta]\
\[Gamma]neg1z$$, $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$, \
$CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$, $CellContext`\[CapitalDelta]\
\[Gamma]posxneg3y$$, $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$, \
$CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]neg3xnegy$$, $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$, \
$CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$, $CellContext`\[CapitalDelta]\
\[Gamma]posxnegy$$, $CellContext`\[CapitalDelta]\[Gamma]posxposy$$, \
$CellContext`\[CapitalDelta]\[Gamma]negxposy$$, $CellContext`\[CapitalDelta]\
\[Gamma]negxnegy$$, $CellContext`\[Delta]1$$, $CellContext`\[CapitalDelta]\
\[Delta]5z$$, $CellContext`\[CapitalDelta]\[Delta]neg1z$$, $CellContext`\
\[CapitalDelta]\[Delta]pos1z$$, \
$CellContext`\[CapitalDelta]\[Delta]pos5xposy$$, $CellContext`\[CapitalDelta]\
\[Delta]pos5xnegy$$, $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$, \
$CellContext`\[CapitalDelta]\[Delta]posxpos5y$$, $CellContext`\[CapitalDelta]\
\[Delta]neg5xposy$$, $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$, \
$CellContext`\[CapitalDelta]\[Delta]negxneg5y$$, $CellContext`\[CapitalDelta]\
\[Delta]negxpos5y$$, $CellContext`\[CapitalDelta]\[Delta]posxnegy$$, \
$CellContext`\[CapitalDelta]\[Delta]posxposy$$, $CellContext`\[CapitalDelta]\
\[Delta]negxposy$$, $CellContext`\[CapitalDelta]\[Delta]negxnegy$$, \
$CellContext`\[CapitalDelta]100negz$$, $CellContext`transformAxisSystem$$, \
$CellContext`factorList$$, $CellContext`individualGrowthFactors$$}]},
        "RowDefault"]},
      {
       DynamicBox[ToBoxes[
         If[$CellContext`printOn$$, 
          "Saved Parameter Settings: \n" <> $CellContext`exportCurrentState$$,
           ""], StandardForm],
        ImageSizeCache->{0., {0., 4.461132906004787}}]},
      {
       DynamicBox[ToBoxes[
         If[$CellContext`showAreaAndVelocities$$, 
          Grid[
           Prepend[
            MapThread[
            Append[#, #2]& , {$CellContext`velocities$$, \
$CellContext`faceArea$$}], {
            "Velocity Factor Definitions", "Factor Value", 
             "Area (\!\(\*SuperscriptBox[\(mm\), \(2\)]\))"}], Alignment -> 
           Left, Frame -> All, Spacings -> {2, 1}], ""], StandardForm],
        ImageSizeCache->{0., {0., 4.461132906004787}}]},
      {
       DynamicBox[ToBoxes[
         Grid[
          
          Prepend[$CellContext`averageGrowthFactors$$, {
           "Growth Factors indices", "Average Value"}], Alignment -> Left, 
          Frame -> All, Spacings -> {2, 1}], StandardForm],
        ImageSizeCache->{
         212.21280632019045`, {171.47164136409887`, 175.4839949638223}}]},
      {
       DynamicBox[ToBoxes[
         Grid[$CellContext`cutFactors$$, Alignment -> Left, Frame -> All, 
          Spacings -> {2, 1}], StandardForm],
        ImageSizeCache->{
         512.6688222885132, {45.5314529603906, 49.54380656011403}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   DynamicModuleValues:>{},
   Initialization:>($CellContext`saveDirectory$$ = 
     Directory[]; $CellContext`testPlanesParallel = 
     Compile[{{$CellContext`planes, 
         Blank[Real], 3}}, 
       Map[Append[#, 1]& , 
        Cases[
         Map[LinearSolve[
           (If[Det[#] != 0, #, 0 #]& )[
            Map[Most, #]], -Map[Last, #]]& , $CellContext`planes], 
         Blank[List]]], RuntimeAttributes -> {Listable}, RuntimeOptions -> 
       "Speed", Parallelization -> True]; $CellContext`verticeTransform1$$ = 
     RotationTransform[
       If[$CellContext`transformAxisSystem$$, (-Pi)/4, 0], {0, 0, 
       1}]; $CellContext`verticeTransform2$$ = RotationTransform[
       If[$CellContext`transformAxisSystem$$, -ArcTan[
          Sqrt[2]], 0], {0, 1, 0}]; $CellContext`normals$$ = CompressedData["
1:eJx1kGEKgDAIha2xg3SdfnaEDlD3Z4xqMOnjoQ/E6dOnczvv41rNbP+s2I/n
g7+XaRFnCbfARi6KnwnlyDNH6IwoNpltosn9VdfrqMOabJeSeFqf2up5A3K8
icfa6zn+d7y5B3VKwLNHb1+Eo56jJ5471cTT2qxXz3+R4wyPtddzeh/uQZ0a
8OzR+1ThqOdoiR94Ad3pjOg=
      "]; $CellContext`tiltAngles$$ = 
     0 Map[Rest, $CellContext`normals$$]; $CellContext`tiltedNormals$$ = \
$CellContext`normals$$; $CellContext`allNormals$$ = $CellContext`normals$$; \
$CellContext`n$$ = {$CellContext`n1$$, $CellContext`n2$$, $CellContext`n3$$}; \
$CellContext`normals1$$ = 
     Append[$CellContext`allNormals$$, $CellContext`n$$]; $CellContext`ds$$ = \
{1, 1, 1, 1, 1, 1, 0.5, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
       2, 2}; $CellContext`ds1$$ = $CellContext`ds$$; $CellContext`pts0$$ = 
     MapThread[#2 (#/
        Norm[#])& , {$CellContext`allNormals$$, $CellContext`ds1$$}]; \
$CellContext`planes0$$ = MapThread[Append[-#, 
        Dot[#, #2]]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; 
    Quiet[$CellContext`nodes0$$ = $CellContext`testPlanesParallel[
        Subsets[$CellContext`planes0$$, {3}]]]; $CellContext`vertices0$$ = 
     DeleteDuplicates[
       Select[$CellContext`nodes0$$, Chop[
          Min[
           Dot[$CellContext`planes0$$, #]]] >= 0& ], Chop[
         Norm[# - #2]] == 0& ]; $CellContext`pts0$$ = Table[
       Most[
        Part[
         Select[$CellContext`vertices0$$, Dot[#, 
            Part[$CellContext`planes0$$, $CellContext`i]] == Min[
            Dot[$CellContext`vertices0$$, 
             Part[$CellContext`planes0$$, $CellContext`i]]]& , 1], 
         1]], {$CellContext`i, 1, 
        Length[$CellContext`planes0$$]}]; $CellContext`ds1$$ = 
     MapThread[
      Dot[#, #2]/
       Norm[#]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; \
$CellContext`d[
       Pattern[$CellContext`n$, 
        Blank[]]] := Norm[$CellContext`n$] Part[$CellContext`ds1$$, 
        Part[
         Position[
          Join[$CellContext`tiltedNormals$$, 
           
           Complement[$CellContext`normals$$, $CellContext`tiltedNormals$$]], \
$CellContext`n$], 1, 1]]; $CellContext`polyhedron[
       Pattern[$CellContext`normals, 
        Blank[]], 
       Pattern[$CellContext`pts, 
        Blank[]]] := 
     Module[{$CellContext`planes, $CellContext`relevantPlanes, \
$CellContext`nodes, $CellContext`vertices, $CellContext`incidence, \
$CellContext`adjacency, $CellContext`faceNodes, $CellContext`faceGraphs, \
$CellContext`orderings, $CellContext`faces, $CellContext`result}, \
$CellContext`planes = MapThread[Append[-#, 
           
           Dot[#, #2]]& , {$CellContext`normals, $CellContext`pts}]; \
$CellContext`planes = DeleteDuplicates[$CellContext`planes, Chop[
            Norm[# - #2]] == 0& ]; 
       Quiet[$CellContext`nodes = $CellContext`testPlanesParallel[
           Subsets[$CellContext`planes, {3}]]]; $CellContext`vertices = 
        DeleteDuplicates[
          Select[$CellContext`nodes, Chop[
             Min[
              Dot[$CellContext`planes, #]]] >= 0& ], Chop[
            Norm[# - #2]] == 0& ]; $CellContext`incidence = SparseArray[
          Outer[Boole[Chop[
              Dot[#, #2]] == 0]& , $CellContext`vertices, $CellContext`planes,
            1]]; $CellContext`adjacency = Map[Boole[# >= 2]& , 
          Dot[$CellContext`incidence, 
           Transpose[$CellContext`incidence]], {2}]; $CellContext`faceNodes = 
        Map[Flatten[
           Position[
            Normal[#], 1]]& , 
          Transpose[$CellContext`incidence]]; $CellContext`faceGraphs = 
        Map[SimpleGraph[
           AdjacencyGraph[
            
            Part[$CellContext`adjacency, #, #]]]& , $CellContext`faceNodes]; \
$CellContext`orderings = Map[Map[First, 
           (If[# != {}, 
            First[#], {}]& )[
            
            FindEulerianCycle[#, 
             1]]]& , $CellContext`faceGraphs]; $CellContext`faces = 
        MapThread[
         Part, {$CellContext`faceNodes, $CellContext`orderings}]; \
$CellContext`result["vertices"] = 
        Map[Most, $CellContext`vertices]; $CellContext`result[
         "faces"] = $CellContext`faces; $CellContext`result]; \
$CellContext`param0[
       Pattern[$CellContext`n$, 
        Blank[]]] := Module[{$CellContext`k$ = Part[
          Nearest[$CellContext`normals$$, $CellContext`n$, 1], 1]}, 
       If[Chop[
          Norm[$CellContext`n$ - $CellContext`k$]] == 0, 
        Which[
         And[Sort[
            Map[Abs, $CellContext`k$]] == {0, 0, 1}, Part[$CellContext`k$, 3] == 
          1], 1/$CellContext`f00pos1$$, 
         And[Sort[
            Map[Abs, $CellContext`k$]] == {0, 0, 1}, 
          Part[$CellContext`k$, 3] == -1], 1/$CellContext`f00neg1$$, 
         And[Sort[
            Map[Abs, $CellContext`k$]] == {0, 0, 1}, Part[$CellContext`k$, 3] == 
          0, Part[$CellContext`k$, 1] == 1], 1/$CellContext`fpos100$$, 
         And[Sort[
            Map[Abs, $CellContext`k$]] == {0, 0, 1}, Part[$CellContext`k$, 3] == 
          0, Part[$CellContext`k$, 1] == -1], 1/$CellContext`fneg100$$, 
         And[Sort[
            Map[Abs, $CellContext`k$]] == {0, 0, 1}, Part[$CellContext`k$, 3] == 
          0, Part[$CellContext`k$, 2] == 1], 1/$CellContext`f0pos10$$, 
         And[Sort[
            Map[Abs, $CellContext`k$]] == {0, 0, 1}, Part[$CellContext`k$, 3] == 
          0, Part[$CellContext`k$, 2] == -1], 
         1/$CellContext`f0neg10$$, $CellContext`n$ == {0, 1, 1}, 
         Sqrt[2]/$CellContext`f0pos1pos1$$, $CellContext`n$ == {1, 0, 1}, 
         Sqrt[2]/$CellContext`fpos10pos1$$, $CellContext`n$ == {1, 1, 0}, 
         Sqrt[2]/$CellContext`fpos1pos10$$, $CellContext`n$ == {0, -1, 1}, 
         Sqrt[2]/$CellContext`f0neg1pos1$$, $CellContext`n$ == {1, 0, -1}, 
         Sqrt[2]/$CellContext`fpos10neg1$$, $CellContext`n$ == {1, -1, 0}, 
         Sqrt[2]/$CellContext`fpos1neg10$$, $CellContext`n$ == {0, 1, -1}, 
         Sqrt[2]/$CellContext`f0pos1neg1$$, $CellContext`n$ == {-1, 0, 1}, 
         Sqrt[2]/$CellContext`fneg10pos1$$, $CellContext`n$ == {-1, 1, 0}, 
         Sqrt[2]/$CellContext`fneg1pos10$$, $CellContext`n$ == {0, -1, -1}, 
         Sqrt[2]/$CellContext`f0neg1neg1$$, $CellContext`n$ == {-1, 0, -1}, 
         Sqrt[2]/$CellContext`fneg10neg1$$, $CellContext`n$ == {-1, -1, 0}, 
         Sqrt[2]/$CellContext`fneg1neg10$$, $CellContext`n$ == {1, 1, 1}, 
         Sqrt[3]/$CellContext`fpos1pos1pos1$$, $CellContext`n$ == {-1, 1, 1}, 
         Sqrt[3]/$CellContext`fneg1pos1pos1$$, $CellContext`n$ == {-1, -1, 1},
          Sqrt[3]/$CellContext`fneg1neg1pos1$$, $CellContext`n$ == {1, -1, 1},
          Sqrt[3]/$CellContext`fpos1neg1pos1$$, $CellContext`n$ == {1, 1, -1},
          Sqrt[3]/$CellContext`fpos1pos1neg1$$, $CellContext`n$ == {-1, 
          1, -1}, Sqrt[
          3]/$CellContext`fneg1pos1neg1$$, $CellContext`n$ == {-1, -1, -1}, 
         Sqrt[3]/$CellContext`fneg1neg1neg1$$, $CellContext`n$ == {1, -1, -1},
          Sqrt[3]/$CellContext`fpos1neg1neg1$$, $CellContext`n$ == {1, 1, 3}, 
         Sqrt[11]/$CellContext`fpos1pos1pos3$$, $CellContext`n$ == {1, 3, 1}, 
         Sqrt[11]/$CellContext`fpos1pos3pos1$$, $CellContext`n$ == {3, 1, 1}, 
         Sqrt[11]/$CellContext`fpos3pos1pos1$$, $CellContext`n$ == {1, 1, -3},
          Sqrt[11]/$CellContext`fpos1pos1pos3$$, $CellContext`n$ == {1, -3, 
          1}, Sqrt[11]/$CellContext`fpos1neg3pos1$$, $CellContext`n$ == {-3, 
          1, 1}, Sqrt[11]/$CellContext`fneg3pos1pos1$$, $CellContext`n$ == {
          1, -1, -3}, 
         Sqrt[11]/$CellContext`fpos1neg1neg3$$, $CellContext`n$ == {
          1, -3, -1}, 
         Sqrt[11]/$CellContext`fpos1neg3neg1$$, $CellContext`n$ == {-1, 
          1, -3}, Sqrt[
          11]/$CellContext`fneg1pos1neg3$$, $CellContext`n$ == {-1, -3, 1}, 
         Sqrt[11]/$CellContext`fneg1neg3pos1$$, $CellContext`n$ == {-3, 
          1, -1}, Sqrt[
          11]/$CellContext`fneg3pos1neg1$$, $CellContext`n$ == {-3, -1, 1}, 
         Sqrt[11]/$CellContext`fneg3neg1pos1$$, $CellContext`n$ == {1, -1, 3},
          Sqrt[11]/$CellContext`fpos1neg1pos3$$, $CellContext`n$ == {1, 
          3, -1}, Sqrt[
          11]/$CellContext`fpos1pos3neg1$$, $CellContext`n$ == {-1, 1, 3}, 
         Sqrt[11]/$CellContext`fneg1pos1pos3$$, $CellContext`n$ == {-1, 3, 1},
          Sqrt[11]/$CellContext`fneg1pos3pos1$$, $CellContext`n$ == {3, 
          1, -1}, Sqrt[11]/$CellContext`fpos3pos1neg1$$, $CellContext`n$ == {
          3, -1, 1}, 
         Sqrt[11]/$CellContext`fpos3neg1pos1$$, $CellContext`n$ == {-1, -1, 
          3}, Sqrt[11]/$CellContext`fneg1neg1pos3$$, $CellContext`n$ == {-1, 
          3, -1}, Sqrt[11]/$CellContext`fneg1pos3neg1$$, $CellContext`n$ == {
          3, -1, -1}, 
         Sqrt[11]/$CellContext`fpos3neg1neg1$$, $CellContext`n$ == {-1, -1, \
-3}, Sqrt[11]/$CellContext`fneg1neg1neg3$$, $CellContext`n$ == {-1, -3, -1}, 
         Sqrt[11]/$CellContext`fneg1neg3neg1$$, $CellContext`n$ == {-3, -1, \
-1}, Sqrt[11]/$CellContext`fneg3neg1neg1$$, $CellContext`n$ == {1, 1, 5}, 
         Sqrt[27]/$CellContext`fpos1pos1pos5$$, $CellContext`n$ == {1, 5, 1}, 
         Sqrt[27]/$CellContext`fpos1pos5pos1$$, $CellContext`n$ == {5, 1, 1}, 
         Sqrt[27]/$CellContext`fpos5pos1pos1$$, $CellContext`n$ == {1, 1, -5},
          Sqrt[27]/$CellContext`fpos1pos1pos5$$, $CellContext`n$ == {1, -5, 
          1}, Sqrt[27]/$CellContext`fpos1neg5pos1$$, $CellContext`n$ == {-5, 
          1, 1}, Sqrt[27]/$CellContext`fneg5pos1pos1$$, $CellContext`n$ == {
          1, -1, -5}, 
         Sqrt[27]/$CellContext`fpos1neg1neg5$$, $CellContext`n$ == {
          1, -5, -1}, 
         Sqrt[27]/$CellContext`fpos1neg5neg1$$, $CellContext`n$ == {-1, 
          1, -5}, Sqrt[
          27]/$CellContext`fneg1pos1neg5$$, $CellContext`n$ == {-1, -5, 1}, 
         Sqrt[27]/$CellContext`fneg1neg5pos1$$, $CellContext`n$ == {-5, 
          1, -1}, Sqrt[
          27]/$CellContext`fneg5pos1neg1$$, $CellContext`n$ == {-5, -1, 1}, 
         Sqrt[27]/$CellContext`fneg5neg1pos1$$, $CellContext`n$ == {1, -1, 5},
          Sqrt[27]/$CellContext`fpos1neg1pos5$$, $CellContext`n$ == {1, 
          5, -1}, Sqrt[
          27]/$CellContext`fpos1pos5neg1$$, $CellContext`n$ == {-1, 1, 5}, 
         Sqrt[27]/$CellContext`fneg1pos1pos5$$, $CellContext`n$ == {-1, 5, 1},
          Sqrt[27]/$CellContext`fneg1pos5pos1$$, $CellContext`n$ == {5, 
          1, -1}, Sqrt[27]/$CellContext`fpos5pos1neg1$$, $CellContext`n$ == {
          5, -1, 1}, 
         Sqrt[27]/$CellContext`fpos5neg1pos1$$, $CellContext`n$ == {-1, -1, 
          5}, Sqrt[27]/$CellContext`fneg1neg1pos5$$, $CellContext`n$ == {-1, 
          5, -1}, Sqrt[27]/$CellContext`fneg1pos5neg1$$, $CellContext`n$ == {
          5, -1, -1}, 
         Sqrt[27]/$CellContext`fpos5neg1neg1$$, $CellContext`n$ == {-1, -1, \
-5}, Sqrt[27]/$CellContext`fneg1neg1neg5$$, $CellContext`n$ == {-1, -5, -1}, 
         Sqrt[27]/$CellContext`fneg1neg5neg1$$, $CellContext`n$ == {-5, -1, \
-1}, Sqrt[27]/$CellContext`fneg5neg1neg1$$, Sort[
           Map[Abs, $CellContext`n$]] == {1, 1, 3}, $CellContext`\[Gamma]1$$], 
        Which[Sort[
           Map[Abs, $CellContext`k$]] == {0, 0, 1}, 1/$CellContext`mult100$$, 
         Sort[
           Map[Abs, $CellContext`k$]] == {0, 1, 
          1}, $CellContext`\[Beta]1$$/$CellContext`mult\[Beta]$$, Sort[
           Map[Abs, $CellContext`k$]] == {1, 1, 
          1}, $CellContext`\[Alpha]1$$/$CellContext`mult\[Alpha]$$, Sort[
           Map[Abs, $CellContext`k$]] == {1, 1, 
          3}, $CellContext`\[Gamma]1$$/$CellContext`mult\[Gamma]$$]]]; \
$CellContext`param1[
       Pattern[$CellContext`n, 
        Blank[]], 
       Pattern[$CellContext`d0, 
        Blank[]], 
       Pattern[$CellContext`infty, 
        Blank[]], 
       Pattern[$CellContext`L, 
        Blank[]], 
       Pattern[$CellContext`t, 
        Blank[]]] := 
     If[$CellContext`infty, 1/$CellContext`param0[$CellContext`n], 
       2 $CellContext`L $CellContext`d0/
        Norm[$CellContext`n]^2 + \
$CellContext`t/$CellContext`param0[$CellContext`n]]; $CellContext`pts1[
       Pattern[$CellContext`infty, 
        Blank[]], 
       Pattern[$CellContext`L, 
        Blank[]], 
       Pattern[$CellContext`t, 
        Blank[]], 
       Pattern[$CellContext`normals, 
        Blank[]]] := 
     Module[{$CellContext`result}, $CellContext`result = 
        Map[$CellContext`param1[#, 
            $CellContext`d[#], $CellContext`infty, $CellContext`L, \
$CellContext`t] #& , $CellContext`normals]; 
       Part[$CellContext`result, 14] == {0, 0, 
         0}; $CellContext`result]; $CellContext`polyhedron2[
       Pattern[$CellContext`normals, 
        Blank[]], 
       Pattern[$CellContext`pts, 
        Blank[]], 
       Pattern[$CellContext`c, 
        Blank[]]] := 
     Module[{$CellContext`n, $CellContext`p, $CellContext`planes, \
$CellContext`nodes, $CellContext`vertices, $CellContext`incidence, \
$CellContext`adjacency, $CellContext`faceNodes, $CellContext`faceGraph, \
$CellContext`ordering, $CellContext`face, $CellContext`result, \
$CellContext`edges, $CellContext`colors}, $CellContext`p = 
        Part[$CellContext`pts, 1, 1]; $CellContext`n = 
        Last[$CellContext`normals]; $CellContext`planes = MapThread[Append[-#, 
           Dot[#, #2]]& , {$CellContext`normals, 
           Append[$CellContext`pts, $CellContext`c $CellContext`n]}]; 
       If[$CellContext`c == $CellContext`p, $CellContext`planes = 
         Drop[$CellContext`planes, -1]]; 
       Quiet[$CellContext`nodes = Map[Append[#, 1]& , 
           Cases[
            Map[LinearSolve[
              (If[Det[#] != 0, #, 0 #]& )[
               Map[Most, #]], -Map[Last, #]]& , 
             Map[Append[#, 
               Last[$CellContext`planes]]& , 
              Subsets[
               Most[$CellContext`planes], {2}]]], 
            Blank[List]]]]; $CellContext`vertices = DeleteDuplicates[
          Select[$CellContext`nodes, Chop[
             Min[
              Dot[$CellContext`planes, #]]] >= 0& ], Chop[
            Norm[# - #2]] == 0& ]; 
       If[$CellContext`vertices != {}, $CellContext`incidence = SparseArray[
            Outer[Boole[Chop[
                Dot[#, #2]] == 
              0]& , $CellContext`vertices, $CellContext`planes, 
             1]]; $CellContext`adjacency = Map[Boole[# >= 2]& , 
            Dot[$CellContext`incidence, 
             Transpose[$CellContext`incidence]], {2}]; $CellContext`faceNodes = 
          Map[Flatten[
             Position[
              Normal[#], 1]]& , 
            Transpose[$CellContext`incidence]]; $CellContext`faceGraph = (
           SimpleGraph[
            AdjacencyGraph[
             Part[$CellContext`adjacency, #, #]]]& )[
            Last[$CellContext`faceNodes]]; $CellContext`ordering = (Map[First, 
            (If[# != {}, 
             First[#], {}]& )[
             
             FindEulerianCycle[#, 
              1]]]& )[$CellContext`faceGraph]; $CellContext`face = Part[
            
            Last[$CellContext`faceNodes], $CellContext`ordering]; \
$CellContext`edges = Transpose[
            ({#, 
             RotateLeft[#]}& )[
             Range[
              Length[$CellContext`face]]]]; $CellContext`colors = Map[Total, 
            Map[Map[Abs, 
              Extract[$CellContext`normals, 
               Flatten[
                Position[
                 Most[$CellContext`faceNodes], 
                 Alternatives[{
                   BlankNullSequence[], 
                   Part[$CellContext`face, 
                    Part[$CellContext`edges, #, 1]], 
                   Part[$CellContext`face, 
                    Part[$CellContext`edges, #, 2]], 
                   BlankNullSequence[]}, {
                   BlankNullSequence[], 
                   Part[$CellContext`face, 
                    Part[$CellContext`edges, #, 2]], 
                   Part[$CellContext`face, 
                    Part[$CellContext`edges, #, 1]], 
                   BlankNullSequence[]}], 1, 1]]]]& , 
             Range[
              Length[$CellContext`edges]]]]; $CellContext`result["vertices"] = 
          Map[Most, $CellContext`vertices]; $CellContext`result[
           "face"] = $CellContext`face; $CellContext`result[
           "colors"] = $CellContext`colors; 
         Null, $CellContext`result["vertices"] = {}; $CellContext`result[
           "face"] = {}; $CellContext`result["colors"] = {}; 
         Null]; $CellContext`result]; $CellContext`polygon[
       Pattern[$CellContext`vertices, 
        Blank[]], 
       Pattern[$CellContext`colors, 
        Blank[]]] := 
     Module[{$CellContext`edges, $CellContext`angle, $CellContext`k}, 
       If[$CellContext`vertices != {}, $CellContext`edges = Transpose[
           ({#, 
            RotateLeft[#]}& )[
            Range[
             Length[$CellContext`vertices]]]]; 
        GraphicsComplex[$CellContext`vertices, 
          Join[
           Map[{$CellContext`k = Part[$CellContext`colors, #]; Switch[
               Part[
                Nearest[{0, 1, 2, 3, 5}, $CellContext`k, 1], 1], 0, Black, 1, 
               Darker[
                GrayLevel[0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 1]]]], 2, 
               Darker[
                Lighter[Magenta, 0.4], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 2]]]], 3, 
               Darker[
                Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 3]]]], 5, 
               Darker[Blue, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 5]]]], 7, 
               Darker[Yellow, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 7]]]]], Dashed, 
             Line[
              Part[$CellContext`edges, #]]}& , 
            Range[
             Length[$CellContext`vertices]]]]], {}]]; $CellContext`polygon3D[
       Pattern[$CellContext`vertices, 
        Blank[]], 
       Pattern[$CellContext`colors, 
        Blank[]]] := 
     Module[{$CellContext`edges, $CellContext`angle, $CellContext`k}, 
       If[$CellContext`vertices != {}, $CellContext`edges = Transpose[
           ({#, 
            RotateLeft[#]}& )[
            Range[
             Length[$CellContext`vertices]]]]; 
        GraphicsComplex[$CellContext`vertices, 
          Join[
           Map[{$CellContext`k = Part[$CellContext`colors, #]; Switch[
               Part[
                Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 0, Black, 1, 
               Darker[
                GrayLevel[0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 1]]]], 2, 
               Darker[
                Lighter[Magenta, 0.4], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 2]]]], 3, 
               Darker[
                Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 3]]]], 5, 
               Darker[Blue, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 5]]]], 7, 
               Darker[Yellow, 0.5 Abs[
                  Sign[
                   Chop[$CellContext`k - 7]]]]], 
             Line[
              Part[$CellContext`edges, #]]}& , 
            Range[
             
             Length[$CellContext`vertices]]]]], {}]]; \
$CellContext`exportCutImage$$ = Hold[
       Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
        ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
        ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
        ToString[$CellContext`\[Gamma]1$$] <> 
        " " <> $CellContext`exportCutFileName$$ <> ".jpeg", 
        Graphics[{$CellContext`polygons2D$$, $CellContext`timePolygon2D$$, 
          Thickness[0.002], $CellContext`timeStepLines2D$$, 
          Text["Time of first appearance = " <> ToString[
             NumberForm[
              If[Min[$CellContext`timeStepLines$$] == $CellContext`tMin$$, 0, 
               Min[$CellContext`timeStepLines$$]], {10, 2}]] <> 
           " hrs\nTime of growth completion = " <> ToString[
             NumberForm[$CellContext`t$$, {10, 2}]] <> 
           " hrs\nTime Intervals = " <> ToString[
             NumberForm[$CellContext`timeStep$$, {10, 2}]] <> " hrs/step" <> 
           "\n\[Alpha] = " <> ToString[$CellContext`\[Alpha]1$$] <> 
           ", \[Beta] = " <> ToString[$CellContext`\[Beta]1$$] <> 
           "\n\[Gamma] = " <> ToString[$CellContext`\[Gamma]1$$] <> 
           "\nCut Plane: " <> StringReplace[
             
             ToString[{$CellContext`n1$$, $CellContext`n2$$, \
$CellContext`n3$$}], {
             "-1" -> "\!\(\*OverscriptBox[\(1\), \(_\)]\)", "{" -> "(", "}" -> 
              ")", "," -> " "}] <> "\nCut Distance " <> 
           ToString[$CellContext`cutPosition$$], {$CellContext`textX$$, \
$CellContext`textY$$ + 1}]}, Axes -> True, 
         AxesLabel -> {"(mm)", "(mm)"}]]]; $CellContext`exportShape$$ = 
     Hold[$CellContext`ExportCrystal$$ = Graphics3D[{
           Specularity[0.5, 6], 
           GraphicsComplex[If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] 
            If[$CellContext`infty$$, 1, 1/(
              2 $CellContext`L$$)] $CellContext`vertices$$, {
             Opacity[
              Dynamic[$CellContext`opacity$$]], 
             Table[
              If[Part[$CellContext`faces$$, $CellContext`i] != {}, {
                Block[{$CellContext`k = Total[
                    Map[Abs, 
                    Part[$CellContext`allNormals$$, $CellContext`i]]]}, 
                 Switch[
                  Part[
                   Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
                  Darker[
                   GrayLevel[0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 1]]]], 2, 
                  Darker[
                   Lighter[Magenta, 0.4], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 2]]]], 3, 
                  Darker[
                   Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 3]]]], 5, 
                  Darker[Blue, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 5]]]], 7, 
                  Darker[Yellow, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 7]]]]]], {
                 EdgeForm[
                  Thickness[Medium]], 
                 Polygon[
                  
                  Part[$CellContext`faces$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
               Length[$CellContext`allNormals$$]}], 
             PointSize[0.015], Red, 
             Opacity[1], 
             Dynamic[
              If[$CellContext`hideVertices$$, {}, 
               Point[
                Range[$CellContext`v$$]]]]}]}, Axes -> True, 
          AxesLabel -> {"x", "y", "z"}]; 
       Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
         ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
         ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
         ToString[$CellContext`\[Gamma]1$$] <> 
         " " <> $CellContext`cadFileName$$ <> 
         ".stl", $CellContext`ExportCrystal$$]; 
       Null]; $CellContext`exportIndividualParameters$$ = Hold[
       Export[$CellContext`saveDirectory$$ <> 
        "Individual Parameter Config " <> \
$CellContext`parameterConfigFileName$$ <> ".txt", 
        Compress[{$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$}]]]; $CellContext`exportConfig$$ = Hold[
       Export[$CellContext`saveDirectory$$ <> "\[Alpha]=" <> 
        ToString[$CellContext`\[Alpha]1$$] <> " \[Beta] =" <> 
        ToString[$CellContext`\[Beta]1$$] <> " \[Gamma]=" <> 
        ToString[$CellContext`\[Gamma]1$$] <> 
        " " <> $CellContext`parameterConfigFileName$$ <> 
        ".txt", $CellContext`exportCurrentState$$]]; $CellContext`calcTilt$$ = 
     Hold[
       If[
        Not[$CellContext`infty$$], $CellContext`allNormals$$ = 
         Join[$CellContext`tiltedNormals$$, 
           
           Complement[$CellContext`normals$$, $CellContext`tiltedNormals$$, 
            SameTest -> (Chop[
               Norm[# - #2]] == 0& )]]; $CellContext`ds1$$ = 
         Join[$CellContext`ds$$, 
           Table[
           20000000000, {$CellContext`i, 1, Length[$CellContext`allNormals$$] - 
             Length[$CellContext`normals$$]}]]; $CellContext`pts0$$ = 
         MapThread[#2 (#/
            Norm[#])& , {$CellContext`allNormals$$, $CellContext`ds1$$}]; \
$CellContext`planes0$$ = MapThread[Append[-#, 
            
            Dot[#, #2]]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; \
$CellContext`nodes0$$ = Union[
           Map[Append[#, 1]& , 
            Quiet[
             Cases[
              Map[LinearSolve[
                (If[Det[#] != 0, #, 0 #]& )[
                 Map[Most, #]], -Map[Last, #]]& , 
               Subsets[$CellContext`planes0$$, {3}]], 
              Blank[List]]]]]; $CellContext`vertices0$$ = DeleteDuplicates[
           Select[$CellContext`nodes0$$, Chop[
              Min[
               Dot[$CellContext`planes0$$, #]]] >= 0& ], Chop[
             Norm[# - #2]] == 0& ]; $CellContext`pts0$$ = Table[
           Most[
            Part[$CellContext`vertices0$$, 
             Part[
              Ordering[
               Dot[$CellContext`vertices0$$, 
                Part[$CellContext`planes0$$, $CellContext`i]], 1], 
              1]]], {$CellContext`i, 1, 
            Length[$CellContext`planes0$$]}]; $CellContext`ds1$$ = 
         MapThread[
          Dot[#, #2]/
           Norm[#]& , {$CellContext`allNormals$$, $CellContext`pts0$$}]; 
        Null, $CellContext`tiltedNormals$$ = $CellContext`normals$$; \
$CellContext`allNormals$$ = $CellContext`normals$$; $CellContext`ds1$$ = \
$CellContext`ds$$; Null]]; $CellContext`calcCutOff$$ = Hold[If[
         Not[$CellContext`individualGrowthFactors$$], $CellContext`f00neg1$$ = 
          1 + $CellContext`\[CapitalDelta]100negz$$; $CellContext`f00pos1$$ = 
          1 + $CellContext`\[CapitalDelta]100posz$$; $CellContext`fpos100$$ = 
          1 + $CellContext`\[CapitalDelta]100posx$$; $CellContext`fneg100$$ = 
          1 + $CellContext`\[CapitalDelta]100negx$$; $CellContext`f0pos10$$ = 
          1 + $CellContext`\[CapitalDelta]100posy$$; $CellContext`f0neg10$$ = 
          1 + $CellContext`\[CapitalDelta]100negy$$; \
$CellContext`fpos1pos1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Alpha]posxposy$$); \
$CellContext`fneg1pos1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negxposy$$); \
$CellContext`fpos1neg1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negyposx$$); \
$CellContext`fneg1neg1pos1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Alpha]negynegx$$); \
$CellContext`fpos1pos1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
            1 + $CellContext`\[CapitalDelta]\[Alpha]posxposy$$); \
$CellContext`fneg1pos1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
            1 + $CellContext`\[CapitalDelta]\[Alpha]negxposy$$); \
$CellContext`fpos1neg1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
            1 + $CellContext`\[CapitalDelta]\[Alpha]negyposx$$); \
$CellContext`fneg1neg1neg1$$ = (Sqrt[3]/$CellContext`\[Alpha]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Alpha]z$$) (
            1 + $CellContext`\[CapitalDelta]\[Alpha]negynegx$$); \
$CellContext`f0pos1pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]posy$$) 
           1; $CellContext`fpos10pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]posx$$) 
           1; $CellContext`fpos1pos10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Beta]posxposy$$); \
$CellContext`f0neg1pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]negy$$) 
           1; $CellContext`fpos10neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]posx$$) 
           1; $CellContext`fpos1neg10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Beta]negyposx$$); \
$CellContext`f0pos1neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]posy$$) 
           1; $CellContext`fneg10pos1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]posz$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]negx$$) 
           1; $CellContext`fneg1pos10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Beta]negxposy$$); \
$CellContext`f0neg1neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]negy$$) 
           1; $CellContext`fneg10neg1$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]negz$$) (
            1 + $CellContext`\[CapitalDelta]\[Beta]negx$$) 
           1; $CellContext`fneg1neg10$$ = (Sqrt[2]/$CellContext`\[Beta]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Beta]negynegx$$); \
$CellContext`fpos1pos1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Gamma]posxposy$$); \
$CellContext`fpos1pos3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$); \
$CellContext`fpos3pos1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$); \
$CellContext`fpos1pos1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]posxposy$$); \
$CellContext`fpos1neg3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$); \
$CellContext`fneg3pos1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$); \
$CellContext`fpos1neg1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$); \
$CellContext`fpos1neg3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]posxneg3y$$); \
$CellContext`fneg1pos1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]negxposy$$); \
$CellContext`fneg1neg3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$); \
$CellContext`fneg3pos1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xposy$$); \
$CellContext`fneg3neg1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$); \
$CellContext`fpos1neg1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Gamma]posxnegy$$); \
$CellContext`fpos1pos3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]posxpos3y$$); \
$CellContext`fneg1pos1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Gamma]negxposy$$); \
$CellContext`fneg1pos3pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$); \
$CellContext`fpos3pos1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xposy$$); \
$CellContext`fpos3neg1pos1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$); \
$CellContext`fneg1neg1pos3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$); \
$CellContext`fneg1pos3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]negxpos3y$$); \
$CellContext`fpos3neg1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]pos3xnegy$$); \
$CellContext`fneg1neg1neg3$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]3z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]negxnegy$$); \
$CellContext`fneg1neg3neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]negxneg3y$$); \
$CellContext`fneg3neg1neg1$$ = (Sqrt[11]/$CellContext`\[Gamma]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Gamma]neg3xnegy$$); \
$CellContext`fpos1pos1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Delta]posxposy$$); \
$CellContext`fpos1pos5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
            
            1 + $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$); \
$CellContext`fpos5pos1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$); \
$CellContext`fpos1pos1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]posxposy$$); \
$CellContext`fpos1neg5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$); \
$CellContext`fneg5pos1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg5xposy$$); \
$CellContext`fpos1neg1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]posxnegy$$); \
$CellContext`fpos1neg5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]posxneg5y$$); \
$CellContext`fneg1pos1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]negxposy$$); \
$CellContext`fneg1neg5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$); \
$CellContext`fneg5pos1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg5xposy$$); \
$CellContext`fneg5neg1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$); \
$CellContext`fpos1neg1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Delta]posxnegy$$); \
$CellContext`fpos1pos5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]posxpos5y$$); \
$CellContext`fneg1pos1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Delta]negxposy$$); \
$CellContext`fneg1pos5pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]negxpos5y$$); \
$CellContext`fpos5pos1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos5xposy$$); \
$CellContext`fpos5neg1pos1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$); \
$CellContext`fneg1neg1pos5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) 
           1 (1 + $CellContext`\[CapitalDelta]\[Delta]negxnegy$$); \
$CellContext`fneg1pos5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]negxpos5y$$); \
$CellContext`fpos5neg1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]pos5xnegy$$); \
$CellContext`fneg1neg1neg5$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]5z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]negxnegy$$); \
$CellContext`fneg1neg5neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]negxneg5y$$); \
$CellContext`fneg5neg1neg1$$ = (Sqrt[27]/$CellContext`\[Delta]1$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg1z$$) (
            1 + $CellContext`\[CapitalDelta]\[Delta]neg5xnegy$$); \
$CellContext`factorList$$ = {$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$}; 
         Null, {$CellContext`f00neg1$$, $CellContext`f00pos1$$, \
$CellContext`fpos100$$, $CellContext`fneg100$$, $CellContext`f0pos10$$, \
$CellContext`f0neg10$$, $CellContext`fpos1pos1pos1$$, \
$CellContext`fneg1pos1pos1$$, $CellContext`fpos1neg1pos1$$, \
$CellContext`fneg1neg1pos1$$, $CellContext`fpos1pos1neg1$$, \
$CellContext`fneg1pos1neg1$$, $CellContext`fpos1neg1neg1$$, \
$CellContext`fneg1neg1neg1$$, $CellContext`f0pos1pos1$$, \
$CellContext`fpos10pos1$$, $CellContext`fpos1pos10$$, \
$CellContext`f0neg1pos1$$, $CellContext`fpos10neg1$$, \
$CellContext`fpos1neg10$$, $CellContext`f0pos1neg1$$, \
$CellContext`fneg10pos1$$, $CellContext`fneg1pos10$$, \
$CellContext`f0neg1neg1$$, $CellContext`fneg10neg1$$, \
$CellContext`fneg1neg10$$, $CellContext`fpos1pos1pos3$$, \
$CellContext`fpos1pos3pos1$$, $CellContext`fpos3pos1pos1$$, \
$CellContext`fpos1pos1neg3$$, $CellContext`fpos1neg3pos1$$, \
$CellContext`fneg3pos1pos1$$, $CellContext`fpos1neg1neg3$$, \
$CellContext`fpos1neg3neg1$$, $CellContext`fneg1pos1neg3$$, \
$CellContext`fneg1neg3pos1$$, $CellContext`fneg3pos1neg1$$, \
$CellContext`fneg3neg1pos1$$, $CellContext`fpos1neg1pos3$$, \
$CellContext`fpos1pos3neg1$$, $CellContext`fneg1pos1pos3$$, \
$CellContext`fneg1pos3pos1$$, $CellContext`fpos3pos1neg1$$, \
$CellContext`fpos3neg1pos1$$, $CellContext`fneg1neg1pos3$$, \
$CellContext`fneg1pos3neg1$$, $CellContext`fpos3neg1neg1$$, \
$CellContext`fneg1neg1neg3$$, $CellContext`fneg1neg3neg1$$, \
$CellContext`fneg3neg1neg1$$, $CellContext`fpos1pos1pos5$$, \
$CellContext`fpos1pos5pos1$$, $CellContext`fpos5pos1pos1$$, \
$CellContext`fpos1pos1neg5$$, $CellContext`fpos1neg5pos1$$, \
$CellContext`fneg5pos1pos1$$, $CellContext`fpos1neg1neg5$$, \
$CellContext`fpos1neg5neg1$$, $CellContext`fneg1pos1neg5$$, \
$CellContext`fneg1neg5pos1$$, $CellContext`fneg5pos1neg1$$, \
$CellContext`fneg5neg1pos1$$, $CellContext`fpos1neg1pos5$$, \
$CellContext`fpos1pos5neg1$$, $CellContext`fneg1pos1pos5$$, \
$CellContext`fneg1pos5pos1$$, $CellContext`fpos5pos1neg1$$, \
$CellContext`fpos5neg1pos1$$, $CellContext`fneg1neg1pos5$$, \
$CellContext`fneg1pos5neg1$$, $CellContext`fpos5neg1neg1$$, \
$CellContext`fneg1neg1neg5$$, $CellContext`fneg1neg5neg1$$, \
$CellContext`fneg5neg1neg1$$} = $CellContext`factorList$$; 
         Null]; $CellContext`timePolygon2D$$ = {}; \
$CellContext`timePolygon3D$$ = {}; $CellContext`verticeTransform1$$ = 
        RotationTransform[
          If[$CellContext`transformAxisSystem$$, (-Pi)/4, 0], {0, 0, 
          1}]; $CellContext`verticeTransform2$$ = RotationTransform[
          If[$CellContext`transformAxisSystem$$, -ArcTan[
             Sqrt[2]], 0], {0, 1, 0}]; 
       If[$CellContext`constantVelocity$$, $CellContext`V100$$ = \
$CellContext`constantVelocityValue$$ 10^(-3), 
         Quiet[$CellContext`V100$$ = 
          NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
              If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]}]/
           If[$CellContext`t$$ == 0, 0.0001, $CellContext`t$$]]]; 
       Quiet[$CellContext`L$$ = $CellContext`l0$$/(2 $CellContext`V100$$)]; 
       Quiet[$CellContext`velocityPlot$$ = 
          Plot[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 
            10^(-3), {$CellContext`x, 0, $CellContext`t$$}, 
            AxesLabel -> {"time (hr)", "Growth Velocity (mm/hr)"}]; 
         Null]; $CellContext`timeStepLines3D$$ = {}; $CellContext`pts$$ = \
$CellContext`pts1[$CellContext`infty$$, $CellContext`L$$, $CellContext`t$$, \
$CellContext`allNormals$$]; $CellContext`p$$ = \
$CellContext`polyhedron[$CellContext`allNormals$$, $CellContext`pts$$]; \
$CellContext`vertices$$ = Map[$CellContext`verticeTransform2$$[
           $CellContext`verticeTransform1$$[#]]& , 
          $CellContext`p$$[
          "vertices"]]; $CellContext`faces$$ = $CellContext`p$$[
         "faces"]; $CellContext`v$$ = 
        Length[$CellContext`vertices$$]; $CellContext`f$$ = Count[
          $CellContext`p$$["faces"], 
          Except[{}]]; $CellContext`e$$ = $CellContext`v$$ + $CellContext`f$$ - 
         2; $CellContext`downP$$ = \
$CellContext`polyhedron[$CellContext`allNormals$$, 
          Map[$CellContext`param1[#, 
             $CellContext`d[#], $CellContext`infty$$, $CellContext`L$$, \
$CellContext`t$$] #& , $CellContext`allNormals$$]]; \
$CellContext`calcVertices$$ = $CellContext`downP$$[
         "vertices"]; $CellContext`calcFaces$$ = $CellContext`downP$$[
         "faces"]; $CellContext`rotatedVertices2D$$ = 
        Map[RotationTransform[
          45 Degree][#]& , (1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`vertices$$, All, 
            Span[1, 2]]]; $CellContext`rotatedVertices3D$$ = 
        Map[RotationTransform[
          45 Degree, {0, 0, 1}][#]& , (1/(
           2 $CellContext`L$$)) $CellContext`l0$$ $CellContext`vertices$$]; \
$CellContext`CalcrotatedVertices2D$$ = 
        Map[RotationTransform[
          45 Degree][#]& , (1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`calcVertices$$, All, 
            Span[1, 2]]]; $CellContext`CalcrotatedVertices3D$$ = 
        Map[RotationTransform[
          45 Degree, {0, 0, 1}][#]& , (1/(
           2 $CellContext`L$$)) $CellContext`l0$$ \
$CellContext`calcVertices$$]; $CellContext`polyGraphics$$ = Graphics3D[{
           Specularity[0.5, 6], 
           GraphicsComplex[If[
              Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
              1, $CellContext`l0$$] 
            If[$CellContext`infty$$, 1, 1/(
              2 $CellContext`L$$)] $CellContext`vertices$$, {
             Opacity[
              Dynamic[$CellContext`opacity$$]], 
             Table[
              If[Part[$CellContext`faces$$, $CellContext`i] != {}, {
                Block[{$CellContext`k = Total[
                    Map[Abs, 
                    Part[$CellContext`allNormals$$, $CellContext`i]]]}, 
                 Switch[
                  Part[
                   Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
                  Darker[
                   GrayLevel[0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 1]]]], 2, 
                  Darker[
                   Lighter[Magenta, 0.4], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 2]]]], 3, 
                  Darker[
                   Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 3]]]], 5, 
                  Darker[Blue, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 5]]]], 7, 
                  Darker[Yellow, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 7]]]]]], {
                 EdgeForm[
                  Thickness[Medium]], 
                 Polygon[
                  
                  Part[$CellContext`faces$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
               Length[$CellContext`allNormals$$]}], 
             PointSize[0.015], Red, 
             Opacity[1], 
             Dynamic[
              If[$CellContext`hideVertices$$, {}, 
               Point[
                Range[$CellContext`v$$]]]]}]}, Axes -> True, 
          AxesLabel -> {"x", "y", "z"}]; $CellContext`volume$$ = Volume[
          
          ConvexHullRegion[(1/(
            2 $CellContext`L$$)) $CellContext`l0$$ $CellContext`vertices$$]]; \
$CellContext`maxHeight$$ = 
        Max[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
          Part[$CellContext`vertices$$, All, 3]]; $CellContext`largestwidth$$ = 
        Max[
           Part[$CellContext`rotatedVertices2D$$, All, 1]] - Min[
          
          Part[$CellContext`rotatedVertices2D$$, All, 
           1]]; $CellContext`largestlength$$ = Max[
           Part[$CellContext`rotatedVertices2D$$, All, 2]] - Min[
          
          Part[$CellContext`rotatedVertices2D$$, All, 
           2]]; $CellContext`bottomWidth$$ = 
        If[Part[$CellContext`faces$$, 14] != {}, Max[
            Part[
             Map[
             RotationTransform[
              45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                Part[$CellContext`vertices$$, 
                 Part[$CellContext`faces$$, 14]], All, 
                Span[1, 2]]], All, 1]] - Min[
           Part[
            Map[
            RotationTransform[
             45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
               Part[$CellContext`vertices$$, 
                Part[$CellContext`faces$$, 14]], All, 
               Span[1, 2]]], All, 1]], 0]; $CellContext`bottomLength$$ = 
        If[Part[$CellContext`faces$$, 14] != {}, Max[
            Part[
             Map[
             RotationTransform[
              45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                Part[$CellContext`vertices$$, 
                 Part[$CellContext`faces$$, 14]], All, 
                Span[1, 2]]], All, 2]] - Min[
           Part[
            Map[
            RotationTransform[
             45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
               Part[$CellContext`vertices$$, 
                Part[$CellContext`faces$$, 14]], All, 
               Span[1, 2]]], All, 2]], 0]; $CellContext`topWidth$$ = 
        If[Part[$CellContext`faces$$, 7] != {}, Max[
            Part[
             Map[
             RotationTransform[
              45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                Part[$CellContext`vertices$$, 
                 Part[$CellContext`faces$$, 7]], All, 
                Span[1, 2]]], All, 1]] - Min[
           Part[
            Map[
            RotationTransform[
             45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
               Part[$CellContext`vertices$$, 
                Part[$CellContext`faces$$, 7]], All, 
               Span[1, 2]]], All, 1]], 0]; $CellContext`topLength$$ = 
        If[Part[$CellContext`faces$$, 7] != {}, Max[
            Part[
             Map[
             RotationTransform[
              45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
                Part[$CellContext`vertices$$, 
                 Part[$CellContext`faces$$, 7]], All, 
                Span[1, 2]]], All, 2]] - Min[
           Part[
            Map[
            RotationTransform[
             45 Degree][#]& , ($CellContext`l0$$/(2 $CellContext`L$$)) Part[
               Part[$CellContext`vertices$$, 
                Part[$CellContext`faces$$, 7]], All, 
               Span[1, 2]]], All, 2]], 
          0]; $CellContext`averageGrowthFactors$$ = {{
          "\!\(\*SubscriptBox[\(f\), \((001)\)]\)", $CellContext`f00pos1$$}, {
          "\!\(\*SubscriptBox[\(f\), \({11} 5\)]\)", \
($CellContext`fpos1pos1pos5$$ + $CellContext`fpos1neg1pos5$$ + \
$CellContext`fneg1pos1pos5$$ + $CellContext`fneg1neg1pos5$$)/4}, {
          "\!\(\*SubscriptBox[\(f\), \({11} 3\)]\)", \
($CellContext`fpos1pos1pos3$$ + $CellContext`fpos1neg1pos3$$ + \
$CellContext`fneg1pos1pos3$$ + $CellContext`fneg1neg1pos3$$)/4}, {
          "\!\(\*SubscriptBox[\(f\), \({10} 1\)]\)", \
($CellContext`fpos10pos1$$ + $CellContext`fneg10pos1$$ + \
$CellContext`f0pos1pos1$$ + $CellContext`f0neg1pos1$$)/4}, {
          "\!\(\*SubscriptBox[\(f\), \({11} 1\)]\)", \
($CellContext`fpos1pos1pos1$$ + $CellContext`fpos1neg1pos1$$ + \
$CellContext`fneg1pos1pos1$$ + $CellContext`fneg1neg1pos1$$)/4}, {
          "\!\(\*SubscriptBox[\(f\), \({31} 1\)]\)", \
($CellContext`fpos3pos1pos1$$ + $CellContext`fpos3neg1pos1$$ + \
$CellContext`fneg3pos1pos1$$ + $CellContext`fneg3neg1pos1$$ + \
$CellContext`fpos1pos3pos1$$ + $CellContext`fpos1neg3pos1$$ + \
$CellContext`fneg1pos3pos1$$ + $CellContext`fneg1neg3pos1$$)/8}, {
          "\!\(\*SubscriptBox[\(f\), \({51} 1\)]\)", \
($CellContext`fpos5pos1pos1$$ + $CellContext`fpos5neg1pos1$$ + \
$CellContext`fneg5pos1pos1$$ + $CellContext`fneg5neg1pos1$$ + \
$CellContext`fpos1pos5pos1$$ + $CellContext`fpos1neg5pos1$$ + \
$CellContext`fneg1pos5pos1$$ + $CellContext`fneg1neg5pos1$$)/8}, {
          "\!\(\*SubscriptBox[\(f\), \({10} 0\)]\)", ($CellContext`fpos100$$ + \
$CellContext`fneg100$$ + $CellContext`f0pos10$$ + $CellContext`f0neg10$$)/
           4}, {"\!\(\*SubscriptBox[\(f\), \({11} 0\)]\)", \
($CellContext`fpos1pos10$$ + $CellContext`fpos1neg10$$ + \
$CellContext`fneg1pos10$$ + $CellContext`fneg1neg10$$)/4}, {
          "\!\(\*SubscriptBox[\(f\), \({51} \*OverscriptBox[\(1\), \
\(_\)]\)]\)", ($CellContext`fpos5pos1neg1$$ + $CellContext`fpos5neg1neg1$$ + \
$CellContext`fneg5pos1neg1$$ + $CellContext`fneg5neg1neg1$$ + \
$CellContext`fpos1pos5neg1$$ + $CellContext`fpos1neg5neg1$$ + \
$CellContext`fneg1pos5neg1$$ + $CellContext`fneg1neg5neg1$$)/8}, {
          "\!\(\*SubscriptBox[\(f\), \({31} \*OverscriptBox[\(1\), \
\(_\)]\)]\)", ($CellContext`fpos3pos1neg1$$ + $CellContext`fpos3neg1neg1$$ + \
$CellContext`fneg3pos1neg1$$ + $CellContext`fneg3neg1neg1$$ + \
$CellContext`fpos1pos3neg1$$ + $CellContext`fpos1neg3neg1$$ + \
$CellContext`fneg1pos3neg1$$ + $CellContext`fneg1neg3neg1$$)/8}, {
          "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(1\), \
\(_\)]\)]\)", ($CellContext`fpos1pos1neg1$$ + $CellContext`fpos1neg1neg1$$ + \
$CellContext`fneg1pos1neg1$$ + $CellContext`fneg1neg1neg1$$)/4}, {
          "\!\(\*SubscriptBox[\(f\), \({10} \*OverscriptBox[\(1\), \
\(_\)]\)]\)", ($CellContext`fpos10neg1$$ + $CellContext`fneg10neg1$$ + \
$CellContext`f0pos1neg1$$ + $CellContext`f0neg1neg1$$)/4}, {
          "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(3\), \
\(_\)]\)]\)", ($CellContext`fpos1pos1neg3$$ + $CellContext`fpos1neg1neg3$$ + \
$CellContext`fneg1pos1neg3$$ + $CellContext`fneg1neg1neg3$$)/4}, {
          "\!\(\*SubscriptBox[\(f\), \({11} \*OverscriptBox[\(5\), \
\(_\)]\)]\)", ($CellContext`fpos1pos1neg5$$ + $CellContext`fpos1neg1neg5$$ + \
$CellContext`fneg1pos1neg5$$ + $CellContext`fneg1neg1neg5$$)/4}, {
          "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\)", $CellContext`f00neg1$$}}; $CellContext`faceArea$$ = {}; 
       For[$CellContext`i = 1, $CellContext`i <= Length[$CellContext`faces$$], 
         Increment[$CellContext`i], 
         If[True, 
          AppendTo[$CellContext`faceArea$$, 
           ToString[
            If[Part[$CellContext`faces$$, $CellContext`i] == {}, 0, 
             ToString[
              Area[
               
               Polygon[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
                Part[$CellContext`vertices$$, 
                  
                  Part[$CellContext`faces$$, $CellContext`i]]]]]]]]]]; \
$CellContext`velocities$$ = {{
          "\!\(\*SubscriptBox[\(f\), \((00 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = (1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \(-z\)]\)) ", 
           ToString[$CellContext`f00neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((001)\)]\) = (1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\), \(+z\)]\))  ", 
           ToString[$CellContext`f00pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((100)\)]\) = (1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} + x\)]\)) ", 
           ToString[$CellContext`fpos100$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
00)\)]\) = (1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - x\)]\))  ", 
           ToString[$CellContext`fneg100$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((010)\)]\) = (1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} + y\)]\)) ", 
           ToString[$CellContext`f0pos10$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((0 \*OverscriptBox[\(1\), \(_\)] 0)\)]\
\) = (1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\), \({100} - y\)]\))  ", 
           ToString[$CellContext`f0neg10$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\)) ", 
           ToString[$CellContext`fpos1pos1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(+y\))\)]\))  ", 
           ToString[$CellContext`fneg1pos1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 1)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \(-y\))\)]\))  ", 
           ToString[$CellContext`fpos1neg1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(-y\))\)]\))  ", 
           ToString[$CellContext`fneg1neg1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1\\ 1 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \(+y\))\)]\))  ", 
           ToString[$CellContext`fpos1pos1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \
\(+y\))\)]\))  ", 
           ToString[$CellContext`fneg1pos1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(3\)], \(\
\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \
\(-z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(+x\), \
\(-y\))\)]\))  ", 
           ToString[$CellContext`fpos1neg1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(3\)], \(\[Alpha]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Alpha]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Alpha]\), \((\(-x\), \(-y\))\)]\))  ", 
           ToString[$CellContext`fneg1neg1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((0\\ 1\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+y\)]\))  ", 
           ToString[$CellContext`f0pos1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1\\ 0\\ 1)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\
\[Beta]\), \(+x\)]\))  ", 
           ToString[$CellContext`fpos10pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1\\ 1\\ 0)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Beta]\), \((\(+x\), \(+y\))\)]\)) ", 
           ToString[$CellContext`fpos1pos10$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\))  ", 
           ToString[$CellContext`f0neg1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1\\ 0 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+x\)]\))  ", 
           ToString[$CellContext`fpos10neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 0)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\
\(\[CapitalDelta]\[Beta]\), \((\(+x\), \(-y\))\)]\))  ", 
           ToString[$CellContext`fpos1neg10$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((0\\ 1 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+y\)]\))  ", 
           ToString[$CellContext`f0pos1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ \
1)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(+z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  ", 
           ToString[$CellContext`fneg10pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1\\ \
0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\[Beta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \(+y\))\)]\))  ", 
           ToString[$CellContext`fneg1pos10$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((0\\ \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-y\)]\))  ", 
           ToString[$CellContext`f0neg1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 0\\ \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \(\
\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-z\)]\))(1 \
+ \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \(-x\)]\))  ", 
           ToString[$CellContext`fneg10neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)]\\ 0)\)]\) = \!\(\*FractionBox[SqrtBox[\(2\)], \
\(\[Beta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Beta]\), \((\(-x\), \
\(-y\))\)]\))  ", 
           ToString[$CellContext`fneg1neg10$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((113)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", 
           ToString[$CellContext`fpos1pos1pos3$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((131)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", 
           ToString[$CellContext`fpos1pos3pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((311)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", 
           ToString[$CellContext`fpos3pos1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(3\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+y\))\)]\))  ", 
           ToString[$CellContext`fpos1pos1neg3$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] 1)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) y)\)]\))  ", 
           ToString[$CellContext`fpos1neg3pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
11)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\))\)]\))  ", 
           ToString[$CellContext`fneg3pos1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \
\(-y\))\)]\))  ", 
           ToString[$CellContext`fpos1neg1neg3$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-3\) \
y)\)]\))  ", 
           ToString[$CellContext`fpos1neg3neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(3\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-3\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(+y\))\)]\))  ", 
           ToString[$CellContext`fneg1pos1neg3$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) \
y)\)]\))  ", 
           ToString[$CellContext`fneg1neg3pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(+y\
\))\)]\))  ", 
           ToString[$CellContext`fneg3pos1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\
\))\)]\))  ", 
           ToString[$CellContext`fneg3neg1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 3)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(-y\))\)]\))  ", 
           ToString[$CellContext`fpos1neg1pos3$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((13 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+x\), \(+3\) y)\)]\))  ", 
           ToString[$CellContext`fpos1pos3neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
13)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+y\))\)]\))  ", 
           ToString[$CellContext`fneg1pos1pos3$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
31)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) y)\)]\))  ", 
           ToString[$CellContext`fneg1pos3pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((31 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(+y\))\)]\))  ", 
           ToString[$CellContext`fpos3pos1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] 1)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\))\)]\))  ", 
           ToString[$CellContext`fpos3neg1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 3)\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \
\(-y\))\)]\))  ", 
           ToString[$CellContext`fneg1neg1pos3$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 3 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(-x\), \(+3\) \
y)\)]\))  ", 
           ToString[$CellContext`fneg1pos3neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((3 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(11\)], \(\
\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Gamma]\), \((\(+3\) x, \(-y\
\))\)]\))  ", 
           ToString[$CellContext`fpos3neg1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(3\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-3\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-y\))\)]\))  ", 
           ToString[$CellContext`fneg1neg1neg3$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(3\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-x\), \(-3\) y)\)]\))  ", 
           ToString[$CellContext`fneg1neg3neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(3\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(11\)], \(\[Gamma]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Gamma]\), \((\(-3\) x, \(-y\))\)]\))  ", 
           ToString[$CellContext`fneg3neg1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((115)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
           ToString[$CellContext`fpos1pos1pos5$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((151)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
           ToString[$CellContext`fpos1pos5pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((511)\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
           ToString[$CellContext`fpos5pos1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((11 \*OverscriptBox[\(5\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(+y\))\)]\))  ", 
           ToString[$CellContext`fpos1pos1neg5$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] 1)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) y)\)]\))  ", 
           ToString[$CellContext`fpos1neg5pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
11)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\))\)]\))  ", 
           ToString[$CellContext`fneg5pos1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \
\(-y\))\)]\))  ", 
           ToString[$CellContext`fpos1neg1neg5$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-5\) \
y)\)]\))  ", 
           ToString[$CellContext`fpos1neg5neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 1 \
\*OverscriptBox[\(5\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-5\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(+y\))\)]\))  ", 
           ToString[$CellContext`fneg1pos1neg5$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) \
y)\)]\))  ", 
           ToString[$CellContext`fneg1neg5pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] 1 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(+y\
\))\)]\))  ", 
           ToString[$CellContext`fneg5pos1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 1)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\
\))\)]\))  ", 
           ToString[$CellContext`fneg5neg1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((1 \*OverscriptBox[\(1\), \(_\)] 5)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(-y\))\)]\))  ", 
           ToString[$CellContext`fpos1neg1pos5$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((15 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+x\), \(+5\) y)\)]\))  ", 
           ToString[$CellContext`fpos1pos5neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
15)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+y\))\)]\))  ", 
           ToString[$CellContext`fneg1pos1pos5$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
51)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) y)\)]\))  ", 
           ToString[$CellContext`fneg1pos5pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((51 \*OverscriptBox[\(1\), \
\(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(+y\))\)]\))  ", 
           ToString[$CellContext`fpos5pos1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] 1)\)]\
\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(+1\) z\)]\))(1 + \
\!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\))\)]\))  ", 
           ToString[$CellContext`fpos5neg1pos1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] 5)\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \
\(-y\))\)]\))  ", 
           ToString[$CellContext`fneg1neg1pos5$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] 5 \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(-x\), \(+5\) \
y)\)]\))  ", 
           ToString[$CellContext`fneg1pos5neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((5 \*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)])\)]\) = \!\(\*FractionBox[SqrtBox[\(27\)], \(\
\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \(\(-1\) \
z\)]\))(1 + \!\(\*SubscriptBox[\(\[CapitalDelta]\[Delta]\), \((\(+5\) x, \(-y\
\))\)]\))  ", 
           ToString[$CellContext`fpos5neg1neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(5\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-5\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-y\))\)]\))  ", 
           ToString[$CellContext`fneg1neg1neg5$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(1\), \(_\)] \
\*OverscriptBox[\(5\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-x\), \(-5\) y)\)]\))  ", 
           ToString[$CellContext`fneg1neg5neg1$$]}, {
          "\!\(\*SubscriptBox[\(f\), \((\*OverscriptBox[\(5\), \(_\)] \
\*OverscriptBox[\(1\), \(_\)] \*OverscriptBox[\(1\), \(_\)])\)]\) = \
\!\(\*FractionBox[SqrtBox[\(27\)], \(\[Delta]\)]\)(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \(\(-1\) z\)]\))(1 + \!\(\*SubscriptBox[\(\
\[CapitalDelta]\[Delta]\), \((\(-5\) x, \(-y\))\)]\))  ", 
           
           ToString[$CellContext`fneg5neg1neg1$$]}}; \
$CellContext`cutFactors$$ = {{
          "", "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
           "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
           "\!\(\*SubscriptBox[\(L\), \(max\)]\)", 
           "\!\(\*SubscriptBox[\(H\), \(Max\)]\)", "", 
           "\!\(\*SubscriptBox[\(L\), \({111}\)]\)", 
           "\!\(\*SubscriptBox[\(L\), \({11 \*OverscriptBox[\(1\), \(_\)]}\)]\
\)"}, {"(1 0 0)", 
           
           Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
            Part[$CellContext`vertices$$, All, 1]], 
           Max[
            Part[
             
             Select[($CellContext`l0$$/(
               2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 1] == 
              Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
                Part[$CellContext`vertices$$, All, 1]]& ], All, 3]], 
           "(1 1 0)", 
           Max[
            Part[$CellContext`rotatedVertices2D$$, All, 2]], 
           Mean[
            Part[
             Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Max[
                Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 3]], 
           "(1 1 1)", 
           If[Part[$CellContext`faces$$, 7] != {}, 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`pts$$, 7]], 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`vertices$$, 
               Flatten[
                Position[$CellContext`rotatedVertices3D$$, 
                 Part[
                  
                  Select[$CellContext`rotatedVertices3D$$, And[
                   Part[#, 2] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]], 
                    Part[#, 3] == Max[
                    Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 
                    3]]]& ], 1]]]]]], 
           If[Part[$CellContext`calcFaces$$, 11] != {}, 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`pts$$, 11]], 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`calcVertices$$, 
               Flatten[
                Position[$CellContext`CalcrotatedVertices3D$$, 
                 Part[
                  
                  Select[$CellContext`CalcrotatedVertices3D$$, And[
                   Part[#, 2] == Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]], 
                    Part[#, 3] == Min[
                    Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 2] == 
                    Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {
          "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 0 0)", 
           Abs[
            
            Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 1]]], 
           Max[
            Part[
             
             Select[($CellContext`l0$$/(
               2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 1] == 
              Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
                Part[$CellContext`vertices$$, All, 1]]& ], All, 3]], 
           "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 0)", 
           Abs[
            Min[
             Part[$CellContext`rotatedVertices2D$$, All, 1]]], 
           Mean[
            Part[
             Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Min[
                Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 3]], 
           "(\!\(\*OverscriptBox[\(1\), \(_\)]\) 1 1)", 
           If[Part[$CellContext`faces$$, 8] != {}, 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`pts$$, 8]], 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`vertices$$, 
               Flatten[
                Position[$CellContext`rotatedVertices3D$$, 
                 Part[
                  
                  Select[$CellContext`rotatedVertices3D$$, And[
                   Part[#, 1] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]], 
                    Part[#, 3] == Max[
                    Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 
                    3]]]& ], 1]]]]]], 
           If[Part[$CellContext`calcFaces$$, 12] != {}, 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`pts$$, 12]], 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`calcVertices$$, 
               Flatten[
                Position[$CellContext`CalcrotatedVertices3D$$, 
                 Part[
                  
                  Select[$CellContext`CalcrotatedVertices3D$$, And[
                   Part[#, 1] == Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]], 
                    Part[#, 3] == Min[
                    Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 1] == 
                    Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {"(0 1 0)", 
           
           Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
            Part[$CellContext`vertices$$, All, 2]], 
           Max[
            Part[
             
             Select[($CellContext`l0$$/(
               2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 2] == 
              Max[($CellContext`l0$$/(2 $CellContext`L$$)) 
                Part[$CellContext`vertices$$, All, 2]]& ], All, 3]], 
           "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 
           Max[
            Part[$CellContext`rotatedVertices2D$$, All, 1]], 
           Mean[
            Part[
             Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Max[
                Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 3]], 
           "(1 \!\(\*OverscriptBox[\(1\), \(_\)]\) 1)", 
           If[Part[$CellContext`faces$$, 9] != {}, 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`pts$$, 9]], 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`vertices$$, 
               Flatten[
                Position[$CellContext`rotatedVertices3D$$, 
                 Part[
                  
                  Select[$CellContext`rotatedVertices3D$$, And[
                   Part[#, 1] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]], 
                    Part[#, 3] == Max[
                    Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 1] == Max[
                    Part[$CellContext`rotatedVertices2D$$, All, 1]]& ], All, 
                    3]]]& ], 1]]]]]], 
           If[Part[$CellContext`calcFaces$$, 13] != {}, 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`pts$$, 13]], 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`calcVertices$$, 
               Flatten[
                Position[$CellContext`CalcrotatedVertices3D$$, 
                 Part[
                  
                  Select[$CellContext`CalcrotatedVertices3D$$, And[
                   Part[#, 1] == Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]], 
                    Part[#, 3] == Min[
                    Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 1] == 
                    Max[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 1]]& ], 
                    All, 3]]]& ], 1]]]]]]}, {
          "(0 \!\(\*OverscriptBox[\(1\), \(_\)]\) 0)", 
           Abs[
            
            Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
             Part[$CellContext`vertices$$, All, 2]]], 
           Max[
            Part[
             
             Select[($CellContext`l0$$/(
               2 $CellContext`L$$)) $CellContext`vertices$$, Part[#, 2] == 
              Min[($CellContext`l0$$/(2 $CellContext`L$$)) 
                Part[$CellContext`vertices$$, All, 2]]& ], All, 3]], 
           "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 0)", 
           Abs[
            Min[
             Part[$CellContext`rotatedVertices2D$$, All, 2]]], 
           Mean[
            Part[
             Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Min[
                Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 3]], 
           "(\!\(\*OverscriptBox[\(1\), \(_\)]\) \!\(\*OverscriptBox[\(1\), \
\(_\)]\) 1)", 
           If[Part[$CellContext`faces$$, 10] != {}, 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`pts$$, 10]], 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`vertices$$, 
               Flatten[
                Position[$CellContext`rotatedVertices3D$$, 
                 Part[
                  
                  Select[$CellContext`rotatedVertices3D$$, And[
                   Part[#, 2] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]], 
                    Part[#, 3] == Max[
                    Part[
                    Select[$CellContext`rotatedVertices3D$$, Part[#, 2] == Min[
                    Part[$CellContext`rotatedVertices2D$$, All, 2]]& ], All, 
                    3]]]& ], 1]]]]]], 
           If[Part[$CellContext`calcFaces$$, 14] != {}, 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`pts$$, 14]], 
            
            Norm[(1/(2 $CellContext`L$$)) $CellContext`l0$$ 
             Part[$CellContext`calcVertices$$, 
               Flatten[
                Position[$CellContext`CalcrotatedVertices3D$$, 
                 Part[
                  
                  Select[$CellContext`CalcrotatedVertices3D$$, And[
                   Part[#, 2] == Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]], 
                    Part[#, 3] == Min[
                    Part[
                    
                    Select[$CellContext`CalcrotatedVertices3D$$, Part[#, 2] == 
                    Min[
                    Part[$CellContext`CalcrotatedVertices2D$$, All, 2]]& ], 
                    All, 3]]]& ], 1]]]]]]}}; $CellContext`type$$ = StringJoin[
          Map["(" <> StringJoin[
             Map[ToString, #]] <> ")"& , 
           DeleteDuplicates[
            Map[Sort[#, Greater]& , 
             Map[Abs, 
              Map[Part[
                Nearest[$CellContext`normals$$, #], 1]& , 
               Extract[$CellContext`allNormals$$, 
                Rest[
                 Position[$CellContext`faces$$, 
                  Except[{}], 1]]]]]]]]]; $CellContext`info$$ = 
        ToString[$CellContext`f$$] <> " Faces, " <> 
         ToString[$CellContext`e$$] <> " Edges, " <> 
         ToString[$CellContext`v$$] <> " Vertices."; 
       Null]; $CellContext`calcSection$$ = 
     Hold[$CellContext`timePolygon2D$$ = {}; $CellContext`n$$ = 
        Normalize[$CellContext`n$$]; If[
         And[
         Part[$CellContext`n$$, 1] != 0, Part[$CellContext`n$$, 2] != 0, 
          Part[$CellContext`n$$, 3] != 0], $CellContext`projX$$ = 
         Normalize[{0, 0, 1} - 
           Dot[{0, 0, 1}, $CellContext`n$$] $CellContext`n$$], 
         If[
          Or[Abs[
             Part[$CellContext`n$$, 1]] == 1, Part[$CellContext`n$$, 3] != 
           0], $CellContext`projX$$ = 
           Normalize[{0, 1, 0} - 
             Dot[{0, 1, 0}, $CellContext`n$$] $CellContext`n$$]; 
          Null, $CellContext`projX$$ = 
           Normalize[{1, 0, 0} - 
             Dot[{1, 0, 0}, $CellContext`n$$] $CellContext`n$$]; Null]]; 
       If[Total[
           Cross[$CellContext`n$$, $CellContext`projX$$]] < 
         0, $CellContext`projY$$ = 
         Cross[$CellContext`projX$$, $CellContext`n$$], $CellContext`projY$$ = 
         Cross[$CellContext`n$$, $CellContext`projX$$]]; \
$CellContext`timeGrid1$$ = 
        Range[$CellContext`tMin$$, $CellContext`t$$, ($CellContext`t$$ - \
$CellContext`tMin$$)/
          ControlActive[$CellContext`previewNum$$, $CellContext`Num$$]]; \
$CellContext`textX$$ = 1; $CellContext`textY$$ = 
        1; $CellContext`timeStepLines$$ = Append[
          
          Range[$CellContext`tMin$$, $CellContext`t$$, \
$CellContext`timeStep$$], $CellContext`t$$]; $CellContext`timingTest$$ = {}; 
       If[$CellContext`constantVelocity$$, 
         Module[{$CellContext`i$, $CellContext`poly$}, \
$CellContext`polygons$$ = {}; $CellContext`poly$["vertices"] = {
             0}; $CellContext`i$ = 
            Length[$CellContext`timeGrid1$$]; $CellContext`polygons2D$$ = {}; \
$CellContext`Llist$$ = {}; $CellContext`timingTest$$ = {}; While[
             
             And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ >= 
              1], $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
                $CellContext`pts1[False, $CellContext`L$$, 
                 
                 Part[$CellContext`timeGrid1$$, $CellContext`i$], \
$CellContext`allNormals$$], 
                If[$CellContext`cutPosition$$ == 0, 
                  0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
             AppendTo[$CellContext`polygons2D$$, 
               ($CellContext`polygon3D[
                Map[If[
                   Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                   1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                   And[
                   Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                    0], {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                 Part[
                  #["vertices"], 
                  #["face"]]], 
                #["colors"]]& )[$CellContext`poly$]]; 
             AppendTo[$CellContext`polygons$$, 
               ($CellContext`polygon3D[
                Map[$CellContext`verticeTransform2$$[
                  $CellContext`verticeTransform1$$[#]]& , If[
                   Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                   1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                   #["vertices"], 
                   #["face"]]], 
                #["colors"]]& )[$CellContext`poly$]]; 
             Decrement[$CellContext`i$]; Null]; 
           If[Last[$CellContext`polygons$$] == {}, 
             AppendTo[$CellContext`timeStepLines$$, 
               
               Part[$CellContext`timeGrid1$$, $CellContext`i$ + 
                2]]; $CellContext`timeStepLines$$ = Sort[
                
                Select[$CellContext`timeStepLines$$, # >= 
                 Part[$CellContext`timeGrid1$$, $CellContext`i$ + 2]& ]]; 
             Null]; Null]; 
         Module[{$CellContext`i$, $CellContext`poly$}, \
$CellContext`timeStepLines2D$$ = {}; $CellContext`timeStepLines3D$$ = {}; \
$CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
            Length[$CellContext`timeStepLines$$] - 
             1; $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
              $CellContext`pts1[False, $CellContext`L$$, 
               
               Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
                1], $CellContext`allNormals$$], 
              If[$CellContext`cutPosition$$ == 0, 
                0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
           AppendTo[$CellContext`timeStepLines2D$$, 
             ($CellContext`polygon3D[
              Map[If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                 And[
                 Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                  0], {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
               Part[
                #["vertices"], 
                #["face"]]], 
              ConstantArray[0, 
               Length[
                #["colors"]]]]& )[$CellContext`poly$]]; 
           AppendTo[$CellContext`timeStepLines3D$$, 
             ($CellContext`polygon3D[
              Map[$CellContext`verticeTransform2$$[
                $CellContext`verticeTransform1$$[#]]& , If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                 #["vertices"], 
                 #["face"]]], 
              ConstantArray[0, 
               Length[
                #["colors"]]]]& )[$CellContext`poly$]]; While[
             
             And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ > 
              1], $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
                $CellContext`pts1[False, $CellContext`L$$, 
                 
                 Part[$CellContext`timeStepLines$$, $CellContext`i$], \
$CellContext`allNormals$$], 
                If[$CellContext`cutPosition$$ == 0, 
                  0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
             AppendTo[$CellContext`timeStepLines2D$$, 
               ($CellContext`polygon[
                Map[If[
                   Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                   1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                   And[
                   Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                    0], {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                 Part[
                  #["vertices"], 
                  #["face"]]], 
                ConstantArray[0, 
                 Length[
                  #["colors"]]]]& )[$CellContext`poly$]]; 
             AppendTo[$CellContext`timeStepLines3D$$, 
                ($CellContext`polygon[
                 Map[$CellContext`verticeTransform2$$[
                   $CellContext`verticeTransform1$$[#]]& , If[
                    Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                    1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                    #["vertices"], 
                    #["face"]]], 
                 ConstantArray[0, 
                  Length[
                   #["colors"]]]]& )[$CellContext`poly$]] 
              Decrement[$CellContext`i$]; 
             Null]; $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
              $CellContext`pts1[False, $CellContext`L$$, 
               
               Part[$CellContext`timeStepLines$$, 
                1], $CellContext`allNormals$$], 
              If[$CellContext`cutPosition$$ == 0, 
                0.0001, $CellContext`cutPosition$$] 2 $CellContext`L$$]; 
           AppendTo[$CellContext`timeStepLines2D$$, 
             ($CellContext`polygon3D[
              Map[If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) If[
                 And[
                 Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                  0], {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
               Part[
                #["vertices"], 
                #["face"]]], 
              ConstantArray[0, 
               Length[
                #["colors"]]]]& )[$CellContext`poly$]]; 
           AppendTo[$CellContext`timeStepLines3D$$, 
             ($CellContext`polygon3D[
              Map[$CellContext`verticeTransform2$$[
                $CellContext`verticeTransform1$$[#]]& , If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) Part[
                 #["vertices"], 
                 #["face"]]], 
              ConstantArray[0, 
               Length[
                #["colors"]]]]& )[$CellContext`poly$]]]; Null, 
         Module[{$CellContext`i$, $CellContext`poly$, \
$CellContext`tempVelocity$, $CellContext`tempL$}, $CellContext`polygons$$ = \
{}; $CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
            Length[$CellContext`timeGrid1$$]; $CellContext`polygons2D$$ = {}; \
$CellContext`Llist$$ = {}; $CellContext`timingTest$$ = {}; While[
              And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ >= 1],
               Quiet[$CellContext`tempVelocity$ = 
                NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$\
 + $CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                    Part[$CellContext`timeGrid1$$, $CellContext`i$]}]/
                 Part[$CellContext`timeGrid1$$, $CellContext`i$]]; \
$CellContext`tempL$ = $CellContext`l0$$/(
                2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
                 $CellContext`pts1[False, $CellContext`tempL$, 
                  
                  Part[$CellContext`timeGrid1$$, $CellContext`i$], \
$CellContext`allNormals$$], 
                 If[$CellContext`cutPosition$$ == 0, 
                   0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
              AppendTo[$CellContext`polygons2D$$, 
                ($CellContext`polygon3D[
                 Map[If[
                    Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                    1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                    And[
                    Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                    0], {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                  Part[
                   #["vertices"], 
                   #["face"]]], 
                 #["colors"]]& )[$CellContext`poly$]]; 
              AppendTo[$CellContext`polygons$$, 
                 ($CellContext`polygon3D[
                  Map[$CellContext`verticeTransform2$$[
                    $CellContext`verticeTransform1$$[#]]& , If[
                    Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                    1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                    #["vertices"], 
                    #["face"]]], 
                  #["colors"]]& )[$CellContext`poly$]] 
               Decrement[$CellContext`i$]; Null] 
            If[Last[$CellContext`polygons$$] == {}, 
              AppendTo[$CellContext`timeStepLines$$, 
                
                Part[$CellContext`timeGrid1$$, $CellContext`i$ + 
                 2]]; $CellContext`timeStepLines$$ = Sort[
                 
                 Select[$CellContext`timeStepLines$$, # >= 
                  Part[$CellContext`timeGrid1$$, $CellContext`i$ + 2]& ]]; 
              Null]; Null]; 
         Module[{$CellContext`i$, $CellContext`poly$, \
$CellContext`tempVelocity$, $CellContext`tempL$}, \
$CellContext`timeStepLines2D$$ = {}; $CellContext`timeStepLines3D$$ = {}; \
$CellContext`poly$["vertices"] = {0}; $CellContext`i$ = 
            Length[$CellContext`timeStepLines$$] - 1; 
           Quiet[$CellContext`tempVelocity$ = 
             NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                 Part[$CellContext`timeStepLines$$, $CellContext`i$ + 1]}]/
              Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
               1]]; $CellContext`tempL$ = $CellContext`l0$$/(
             2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
              $CellContext`pts1[False, $CellContext`tempL$, 
               
               Part[$CellContext`timeStepLines$$, $CellContext`i$ + 
                1], $CellContext`allNormals$$], 
              If[$CellContext`cutPosition$$ == 0, 
                0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
           AppendTo[$CellContext`timeStepLines2D$$, 
             ($CellContext`polygon3D[
              Map[If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                 And[
                 Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                  0], {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
               Part[
                #["vertices"], 
                #["face"]]], 
              ConstantArray[0, 
               Length[
                #["colors"]]]]& )[$CellContext`poly$]]; 
           AppendTo[$CellContext`timeStepLines3D$$, 
             ($CellContext`polygon3D[
              Map[$CellContext`verticeTransform2$$[
                $CellContext`verticeTransform1$$[#]]& , If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                 #["vertices"], 
                 #["face"]]], 
              ConstantArray[0, 
               Length[
                #["colors"]]]]& )[$CellContext`poly$]]; While[
             And[$CellContext`poly$["vertices"] != {}, $CellContext`i$ > 1], 
             Quiet[$CellContext`tempVelocity$ = 
               NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                   Part[$CellContext`timeStepLines$$, $CellContext`i$]}]/
                Part[$CellContext`timeStepLines$$, $CellContext`i$]]; \
$CellContext`tempL$ = $CellContext`l0$$/(
               2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
                $CellContext`pts1[False, $CellContext`tempL$, 
                 
                 Part[$CellContext`timeStepLines$$, $CellContext`i$], \
$CellContext`allNormals$$], 
                If[$CellContext`cutPosition$$ == 0, 
                  0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
             AppendTo[$CellContext`timeStepLines2D$$, 
               ($CellContext`polygon[
                Map[If[
                   Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                   1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                   And[
                   Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                    0], {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                    
                    Dot[# - 
                    Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
                 Part[
                  #["vertices"], 
                  #["face"]]], 
                ConstantArray[0, 
                 Length[
                  #["colors"]]]]& )[$CellContext`poly$]]; 
             AppendTo[$CellContext`timeStepLines3D$$, 
               ($CellContext`polygon[
                Map[$CellContext`verticeTransform2$$[
                  $CellContext`verticeTransform1$$[#]]& , If[
                   Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                   1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                   #["vertices"], 
                   #["face"]]], 
                ConstantArray[0, 
                 Length[
                  #["colors"]]]]& )[$CellContext`poly$]]; 
             Decrement[$CellContext`i$]; Null]; 
           Quiet[$CellContext`tempVelocity$ = 
             NIntegrate[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 10^(-3), {$CellContext`x, 0, 
                 Part[$CellContext`timeStepLines$$, 1]}]/
              Part[$CellContext`timeStepLines$$, 
               1]]; $CellContext`tempL$ = $CellContext`l0$$/(
             2 $CellContext`tempVelocity$); $CellContext`poly$ = \
$CellContext`polyhedron2[$CellContext`normals1$$, 
              $CellContext`pts1[False, $CellContext`tempL$, 
               
               Part[$CellContext`timeStepLines$$, 
                1], $CellContext`allNormals$$], 
              If[$CellContext`cutPosition$$ == 0, 
                0.0001, $CellContext`cutPosition$$] 2 $CellContext`tempL$]; 
           AppendTo[$CellContext`timeStepLines2D$$, 
             ($CellContext`polygon3D[
              Map[If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) If[
                 And[
                 Part[$CellContext`n$$, 3] != 0, Part[$CellContext`n$$, 2] != 
                  0], {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$]}, {
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projX$$], 
                  
                  Dot[# - 
                   Dot[#, $CellContext`n$$] $CellContext`n$$, \
$CellContext`projY$$]}]& , 
               Part[
                #["vertices"], 
                #["face"]]], 
              ConstantArray[0, 
               Length[
                #["colors"]]]]& )[$CellContext`poly$]]; 
           AppendTo[$CellContext`timeStepLines3D$$, 
             ($CellContext`polygon3D[
              Map[$CellContext`verticeTransform2$$[
                $CellContext`verticeTransform1$$[#]]& , If[
                 Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
                 1, $CellContext`l0$$] (1/(2 $CellContext`tempL$)) Part[
                 #["vertices"], 
                 #["face"]]], 
              ConstantArray[0, 
               Length[
                #["colors"]]]]& )[$CellContext`poly$]]]; 
         Null]; $CellContext`textX$$ = Max[
          Part[
           Part[
            Part[$CellContext`timeStepLines2D$$, 1], 1], All, 
           1]]; $CellContext`textY$$ = Max[
          Part[
           Part[
            Part[$CellContext`timeStepLines2D$$, 1], 1], All, 
           2]]; $CellContext`timePolygonColor$$ = Which[
          Or[Sort[
             Abs[$CellContext`n$$]] == {0, 0, 1}, 
           RegionMember[
            ConvexHullRegion[{{
               Part[$CellContext`ds$$, 3], 
               Part[$CellContext`ds$$, 5], 0.}, {
               Part[$CellContext`ds$$, 3], -Part[$CellContext`ds$$, 5], 
               0.}, {-Part[$CellContext`ds$$, 3], 
               Part[$CellContext`ds$$, 5], 0.}, {-
               Part[$CellContext`ds$$, 3], -Part[$CellContext`ds$$, 5], 0.}, {
               Part[$CellContext`ds$$, 3], 
               Part[$CellContext`ds$$, 5], 
               Part[$CellContext`ds$$, 2]}, {
               Part[$CellContext`ds$$, 3], -Part[$CellContext`ds$$, 5], 
               Part[$CellContext`ds$$, 2]}, {-Part[$CellContext`ds$$, 3], 
               Part[$CellContext`ds$$, 5], 
               Part[$CellContext`ds$$, 2]}, {-Part[$CellContext`ds$$, 3], -
               Part[$CellContext`ds$$, 5], 
               Part[$CellContext`ds$$, 2]}}], Part[
              Part[
               Last[$CellContext`timeStepLines3D$$], 1], 1] - {
            0.01, 0.01, 0}]], 
          Darker[
           GrayLevel[0.7], 0], Sort[
            Abs[$CellContext`n$$]] == Normalize[{0, 1, 1}], 
          Darker[
           Lighter[Magenta, 0.4], 0], Sort[
            Abs[$CellContext`n$$]] == Normalize[{1, 1, 1}], 
          Darker[
           Blend[{Yellow, Green}, 0.7], 
           0]]; $CellContext`timePolygon2D$$ = \
{$CellContext`timePolygonColor$$, 
          Polygon[
           Part[
            Last[$CellContext`timeStepLines2D$$], 
            1]]}; $CellContext`timePolygon3D$$ = \
{$CellContext`timePolygonColor$$, 
          Polygon[
           Part[
            Last[$CellContext`timeStepLines3D$$], 1]]}; 
       Null]; $CellContext`calcCutOn$$ = 
     Hold[ReleaseHold[$CellContext`calcCutOff$$]; 
       Quiet[$CellContext`velocityPlot$$ = 
          Plot[($CellContext`velocityA$$/($CellContext`velocityC$$ + \
$CellContext`x)^$CellContext`velocityB$$) 
            10^(-3), {$CellContext`x, 0, $CellContext`t$$}, 
            AxesLabel -> {"time (hr)", "Growth Velocity (mm/hr)"}]; 
         Null]; $CellContext`normals1$$ = 
        Append[$CellContext`allNormals$$, $CellContext`n$$]; \
$CellContext`p1$$ = $CellContext`polyhedron[$CellContext`normals1$$, 
          Append[
           $CellContext`pts1[
           False, $CellContext`L$$, $CellContext`t$$, \
$CellContext`allNormals$$], $CellContext`cutPosition$$ 
           2 $CellContext`L$$ $CellContext`n$$]]; $CellContext`vertices1$$ = 
        If[
           Or[$CellContext`relativeOn$$, $CellContext`infty$$], 
           1, $CellContext`l0$$] (1/(2 $CellContext`L$$)) 
         Map[$CellContext`verticeTransform2$$[
            $CellContext`verticeTransform1$$[#]]& , 
           $CellContext`p1$$[
           "vertices"]]; $CellContext`faces1$$ = $CellContext`p1$$[
         "faces"]; $CellContext`v1$$ = 
        Length[$CellContext`vertices1$$]; $CellContext`f1$$ = Count[
          $CellContext`p1$$["faces"], 
          
          Except[{}]]; $CellContext`e1$$ = $CellContext`v1$$ + \
$CellContext`f1$$ - 2; $CellContext`type$$ = StringJoin[
          Map["(" <> StringJoin[
             Map[ToString, #]] <> ")"& , 
           DeleteDuplicates[
            Map[Sort[#, Greater]& , 
             Map[Abs, 
              Map[Part[
                Nearest[$CellContext`normals$$, #], 1]& , 
               Extract[$CellContext`allNormals$$, 
                Rest[
                 Position[$CellContext`faces$$, 
                  Except[{}], 1]]]]]]]]]; $CellContext`info$$ = 
        ToString[$CellContext`f1$$] <> " Faces, " <> 
         ToString[$CellContext`e1$$] <> " Edges, " <> 
         ToString[$CellContext`v1$$] <> 
         " Vertices."; $CellContext`polyGraphics$$ = Graphics3D[{
           Specularity[0.5, 6], 
           GraphicsComplex[$CellContext`vertices1$$, {
             Dynamic[
              Opacity[$CellContext`opacity$$]], 
             Dynamic[
              Table[
               If[Part[$CellContext`faces1$$, $CellContext`i] != {}, {
                 Block[{$CellContext`k = Total[
                    Map[Abs, 
                    Part[$CellContext`normals1$$, $CellContext`i]]]}, 
                  Switch[
                   Part[
                    Nearest[{1, 2, 3, 5, 7}, $CellContext`k, 1], 1], 1, 
                   Darker[
                    GrayLevel[0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 1]]]], 2, 
                   Darker[
                    Lighter[Magenta, 0.4], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 2]]]], 3, 
                   Darker[
                    Blend[{Yellow, Green}, 0.7], 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 3]]]], 5, 
                   Darker[Blue, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 5]]]], 7, 
                   Darker[Yellow, 0.5 Abs[
                    Sign[
                    Chop[$CellContext`k - 7]]]]]], {
                  EdgeForm[
                   Thickness[Medium]], 
                  Polygon[
                   
                   Part[$CellContext`faces1$$, $CellContext`i]]}}, {}], \
{$CellContext`i, 1, 
                Length[
                 
                 If[$CellContext`drawCutPlane$$, $CellContext`normals1$$, \
$CellContext`allNormals$$]]}]], 
             PointSize[0.015], Red, 
             Opacity[1], 
             Dynamic[
              If[$CellContext`hideVertices$$, {}, 
               Point[
                Range[$CellContext`v$$]]]]}]}, Axes -> True, 
          AxesLabel -> {"x", "y", "z"}]; 
       ReleaseHold[$CellContext`calcSection$$]]; Null)],
  StripOnInput->False,
  DynamicUpdating->True,
  DynamicEvaluationTimeout->DirectedInfinity[1]]], "Output",
 CellChangeTimes->{{3.920742056429075*^9, 3.9207420999554005`*^9}},
 CellLabel->"Out[1]=",ExpressionUUID->"4e9692a7-619a-46fc-a5b0-a3f025188df6"]
},
WindowSize->{1152, 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
Magnification:>0.7 Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6735a22b-7e08-4cc1-8738-f2fd3dc7bcb6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[1488, 33, 1051328, 18405, 2221, "Output",ExpressionUUID->"4e9692a7-619a-46fc-a5b0-a3f025188df6"]
}
]
*)

(* End of internal cache information *)

(* NotebookSignature 1vTHTT#n2fz91Awmc#sKxGLM *)
